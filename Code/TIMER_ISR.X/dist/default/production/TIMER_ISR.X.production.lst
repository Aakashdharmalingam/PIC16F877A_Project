

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 24 12:26:37 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16LF877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0001                     _TMR0           set	1
   175     0006                     _PORTB          set	6
   176     0030                     _RB0            set	48
   177     005A                     _TMR0IF         set	90
   178     005F                     _GIE            set	95
   179     005D                     _TMR0IE         set	93
   180     0081                     _OPTION_REG     set	129
   181     0086                     _TRISB          set	134
   182                           
   183                           	psect	cinit
   184     000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187     000F                     __initialization:
   188     000F                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191     000F                     __end_of__initialization:
   192     000F  0183               	clrf	3
   193     0010  120A  118A  2825   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196     0070                     __pcstackCOMMON:
   197     0070                     ?_main:
   198     0070                     ?_ISR:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_ISR:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	2
   207     0072                     ??_main:
   208                           
   209                           	psect	maintext
   210     0025                     __pmaintext:	
   211                           ; 1 bytes @ 0x2
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 28 in file "newmain.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  a               2    0        int 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0
   234 ;;      Totals:         0       0       0       0       0
   235 ;;Total ram usage:        0 bytes
   236 ;; Hardware stack levels required when called: 1
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244     0025                     _main:	
   245                           ;psect for function _main
   246                           
   247     0025                     l574:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg+status,2]
   250                           
   251                           
   252                           ;newmain.c: 30:     TRISB=0;
   253     0025  1683               	bsf	3,5	;RP0=1, select bank1
   254     0026  1303               	bcf	3,6	;RP1=0, select bank1
   255     0027  0186               	clrf	6	;volatile
   256                           
   257                           ;newmain.c: 32:     PORTB=0;
   258     0028  1283               	bcf	3,5	;RP0=0, select bank0
   259     0029  1303               	bcf	3,6	;RP1=0, select bank0
   260     002A  0186               	clrf	6	;volatile
   261     002B                     l576:
   262                           
   263                           ;newmain.c: 33:     TMR0IE=1;
   264     002B  168B               	bsf	11,5	;volatile
   265     002C                     l578:
   266                           
   267                           ;newmain.c: 34:     GIE=1;
   268     002C  178B               	bsf	11,7	;volatile
   269     002D                     l580:
   270                           
   271                           ;newmain.c: 35:     OPTION_REG=0x07;
   272     002D  3007               	movlw	7
   273     002E  1683               	bsf	3,5	;RP0=1, select bank1
   274     002F  1303               	bcf	3,6	;RP1=0, select bank1
   275     0030  0081               	movwf	1	;volatile
   276     0031                     l582:
   277     0031  2831               	goto	l582
   278     0032  120A  118A  280C   	ljmp	start
   279     0035                     __end_of_main:
   280                           
   281                           	psect	text1
   282     0013                     __ptext1:	
   283 ;; *************** function _ISR *****************
   284 ;; Defined at:
   285 ;;		line 41 in file "newmain.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		Interrupt level 1
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312     0013                     _ISR:	
   313                           ;psect for function _ISR
   314                           
   315     0013                     i1l584:
   316                           
   317                           ;newmain.c: 43:     if(TMR0IF==1)
   318     0013  1D0B               	btfss	11,2	;volatile
   319     0014  2816               	goto	u1_21
   320     0015  2817               	goto	u1_20
   321     0016                     u1_21:
   322     0016  281E               	goto	i1l30
   323     0017                     u1_20:
   324     0017                     i1l586:
   325                           
   326                           ;newmain.c: 44:     {;newmain.c: 45:         RB0=RB0^1;
   327     0017  3001               	movlw	1
   328     0018  1283               	bcf	3,5	;RP0=0, select bank0
   329     0019  1303               	bcf	3,6	;RP1=0, select bank0
   330     001A  0686               	xorwf	6,f
   331     001B                     i1l588:
   332                           
   333                           ;newmain.c: 46:         TMR0=158;
   334     001B  309E               	movlw	158
   335     001C  0081               	movwf	1	;volatile
   336     001D                     i1l590:
   337                           
   338                           ;newmain.c: 47:         TMR0IF=0;
   339     001D  110B               	bcf	11,2	;volatile
   340     001E                     i1l30:
   341     001E  0871               	movf	??_ISR+1,w
   342     001F  008A               	movwf	10
   343     0020  0E70               	swapf	??_ISR,w
   344     0021  0083               	movwf	3
   345     0022  0EFE               	swapf	btemp,f
   346     0023  0E7E               	swapf	btemp,w
   347     0024  0009               	retfie
   348     0025                     __end_of_ISR:
   349     0002                     ___latbits      equ	2
   350     007E                     btemp           set	126	;btemp
   351     007E                     wtemp0          set	126
   352                           
   353                           	psect	intentry
   354     0004                     __pintentry:	
   355                           ;incstack = 0
   356                           ; Regs used in _ISR: [wreg]
   357                           
   358     0004                     interrupt_function:
   359     007E                     saved_w         set	btemp
   360     0004  00FE               	movwf	btemp
   361     0005  0E03               	swapf	3,w
   362     0006  00F0               	movwf	??_ISR
   363     0007  080A               	movf	10,w
   364     0008  00F1               	movwf	??_ISR+1
   365     0009  120A  118A  2813   	ljmp	_ISR
   366                           
   367                           	psect	config
   368                           
   369                           ;Config register CONFIG @ 0x2007
   370                           ;	Oscillator Selection bits
   371                           ;	FOSC = HS, HS oscillator
   372                           ;	Watchdog Timer Enable bit
   373                           ;	WDTE = OFF, WDT disabled
   374                           ;	Power-up Timer Enable bit
   375                           ;	PWRTE = OFF, PWRT disabled
   376                           ;	Brown-out Reset Enable bit
   377                           ;	BOREN = OFF, BOR disabled
   378                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   379                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   380                           ;	Data EEPROM Memory Code Protection bit
   381                           ;	CPD = OFF, Data EEPROM code protection off
   382                           ;	Flash Program Memory Write Enable bits
   383                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   384                           ;	In-Circuit Debugger Mode bit
   385                           ;	DEBUG = 0x1, unprogrammed default
   386                           ;	Flash Program Memory Code Protection bit
   387                           ;	CP = OFF, Code protection off
   388     2007                     	org	8199
   389     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 24 12:26:37 2024

                    l580 002D                      l582 0031                      l574 0025  
                    l576 002B                      l578 002C                      _GIE 005F  
                    _RB0 0030                      _ISR 0013                     ?_ISR 0070  
                   i1l30 001E                     _TMR0 0001                     u1_20 0017  
                   u1_21 0016                     _main 0025                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l590 001D                    i1l584 0013                    i1l586 0017  
                  i1l588 001B                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0035                   ??_main 0072  
                 _TMR0IE 005D                   _TMR0IF 005A                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 0025  
             __pintentry 0004                  __ptext1 0013     end_of_initialization 000F  
    start_initialization 000F              __end_of_ISR 0025                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000               _OPTION_REG 0081  
