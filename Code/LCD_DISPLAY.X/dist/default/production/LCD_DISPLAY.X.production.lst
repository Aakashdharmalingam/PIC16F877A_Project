

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 12 17:13:26 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177                           
   178                           	psect	idataBANK0
   179     073B                     __pidataBANK0:
   180                           
   181                           ;initializer for main@F1331
   182     073B  3448               	retlw	72
   183     073C  3465               	retlw	101
   184     073D  346C               	retlw	108
   185     073E  346C               	retlw	108
   186     073F  346F               	retlw	111
   187     0740  345F               	retlw	95
   188     0741  345F               	retlw	95
   189     0742  3457               	retlw	87
   190     0743  3465               	retlw	101
   191     0744  346C               	retlw	108
   192     0745  3463               	retlw	99
   193     0746  346F               	retlw	111
   194     0747  346D               	retlw	109
   195     0748  3465               	retlw	101
   196     0749  345F               	retlw	95
   197     074A  345F               	retlw	95
   198     074B  3443               	retlw	67
   199     074C  346C               	retlw	108
   200     074D  3461               	retlw	97
   201     074E  3473               	retlw	115
   202     074F  3473               	retlw	115
   203     0750  3400               	retlw	0
   204     0007                     _PORTC          set	7
   205     0006                     _PORTB          set	6
   206     0034                     _RB4            set	52
   207     0032                     _RB2            set	50
   208     0087                     _TRISC          set	135
   209     0086                     _TRISB          set	134
   210                           
   211                           	psect	cinit
   212     07EE                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07EE                     __initialization:
   216                           
   217                           ; Initialize objects allocated to BANK0
   218     07EE  1383               	bcf	3,7	;select IRP bank0
   219     07EF  304E               	movlw	low (__pdataBANK0+22)
   220     07F0  00FD               	movwf	btemp+-1
   221     07F1  3007               	movlw	high __pidataBANK0
   222     07F2  00FE               	movwf	btemp
   223     07F3  303B               	movlw	low __pidataBANK0
   224     07F4  00FF               	movwf	btemp+1
   225     07F5  3038               	movlw	low __pdataBANK0
   226     07F6  0084               	movwf	4
   227     07F7  120A  118A  272C  120A  118A  	fcall	init_ram0
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	dataBANK0
   236     0038                     __pdataBANK0:
   237     0038                     main@F1331:
   238     0038                     	ds	22
   239                           
   240                           	psect	inittext
   241     0728                     init_fetch0:	
   242                           ;	Called with low address in FSR and high address in W
   243                           
   244     0728  087E               	movf	btemp,w
   245     0729  008A               	movwf	10
   246     072A  087F               	movf	btemp+1,w
   247     072B  0082               	movwf	2
   248     072C                     init_ram0:	
   249                           ;Called with:
   250                           ;	high address of idata address in btemp 
   251                           ;	low address of idata address in btemp+1 
   252                           ;	low address of data in FSR
   253                           ;	high address + 1 of data in btemp-1
   254                           
   255     072C  120A  118A  2728  120A  118A  	fcall	init_fetch0
   256     0731  0080               	movwf	0
   257     0732  0A84               	incf	4,f
   258     0733  0804               	movf	4,w
   259     0734  067D               	xorwf	btemp+-1,w
   260     0735  1903               	btfsc	3,2
   261     0736  3400               	retlw	0
   262     0737  0AFF               	incf	btemp+1,f
   263     0738  1903               	btfsc	3,2
   264     0739  0AFE               	incf	btemp,f
   265     073A  2F2C               	goto	init_ram0
   266                           
   267                           	psect	cstackCOMMON
   268     0070                     __pcstackCOMMON:
   269     0070                     ?_display:
   270     0070                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     display@RS:	
   274                           ; 1 bytes @ 0x0
   275                           
   276                           
   277                           ; 2 bytes @ 0x0
   278     0070                     	ds	2
   279     0072                     display@DC:
   280                           
   281                           ; 2 bytes @ 0x2
   282     0072                     	ds	2
   283     0074                     ??_display:
   284                           
   285                           ; 1 bytes @ 0x4
   286     0074                     	ds	2
   287     0076                     ??_main:
   288                           
   289                           ; 1 bytes @ 0x6
   290     0076                     	ds	4
   291                           
   292                           	psect	cstackBANK0
   293     0020                     __pcstackBANK0:
   294     0020                     main@name:
   295                           
   296                           ; 22 bytes @ 0x0
   297     0020                     	ds	22
   298     0036                     main@i:
   299                           
   300                           ; 2 bytes @ 0x16
   301     0036                     	ds	2
   302                           
   303                           	psect	maintext
   304     0774                     __pmaintext:	
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 19 in file "newmain.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  name           22    0[BANK0 ] unsigned char [22]
   315 ;;  i               2   22[BANK0 ] int 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0      24       0       0       0
   327 ;;      Temps:          4       0       0       0       0
   328 ;;      Totals:         4      24       0       0       0
   329 ;;Total ram usage:       28 bytes
   330 ;; Hardware stack levels required when called: 1
   331 ;; This function calls:
   332 ;;		_display
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338     0774                     _main:	
   339                           ;psect for function _main
   340                           
   341     0774                     l612:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   344                           
   345                           
   346                           ;newmain.c: 21:     TRISB=TRISC=0;
   347     0774  1683               	bsf	3,5	;RP0=1, select bank1
   348     0775  1303               	bcf	3,6	;RP1=0, select bank1
   349     0776  0187               	clrf	7	;volatile
   350     0777  0186               	clrf	6	;volatile
   351                           
   352                           ;newmain.c: 22:     PORTB=PORTC=0;
   353     0778  1283               	bcf	3,5	;RP0=0, select bank0
   354     0779  1303               	bcf	3,6	;RP1=0, select bank0
   355     077A  0187               	clrf	7	;volatile
   356     077B  0186               	clrf	6	;volatile
   357     077C                     l614:
   358                           
   359                           ;newmain.c: 23:     char name[]={"Hello__Welcome__Class"};
   360     077C  3038               	movlw	main@F1331& (0+255)
   361     077D  0084               	movwf	4
   362     077E  3020               	movlw	low main@name
   363     077F  00F6               	movwf	??_main
   364     0780  3016               	movlw	22
   365     0781  00F7               	movwf	??_main+1
   366     0782                     u70:
   367     0782  1383               	bcf	3,7	;select IRP bank0
   368     0783  0800               	movf	0,w
   369     0784  00F8               	movwf	??_main+2
   370     0785  0A04               	incf	4,w
   371     0786  00F9               	movwf	??_main+3
   372     0787  0876               	movf	??_main,w
   373     0788  0084               	movwf	4
   374     0789  0878               	movf	??_main+2,w
   375     078A  0080               	movwf	0
   376     078B  0A04               	incf	4,w
   377     078C  00F6               	movwf	??_main
   378     078D  0879               	movf	??_main+3,w
   379     078E  0084               	movwf	4
   380     078F  0BF7               	decfsz	??_main+1,f
   381     0790  2F82               	goto	u70
   382     0791                     l616:
   383                           
   384                           ;newmain.c: 24:     int i;;newmain.c: 25:     display(0,0x0e);
   385     0791  3000               	movlw	0
   386     0792  00F0               	movwf	display@RS
   387     0793  00F1               	movwf	display@RS+1
   388     0794  300E               	movlw	14
   389     0795  00F2               	movwf	display@DC
   390     0796  3000               	movlw	0
   391     0797  00F3               	movwf	display@DC+1
   392     0798  120A  118A  2751  120A  118A  	fcall	_display
   393     079D                     l618:
   394                           
   395                           ;newmain.c: 26:     display(0, 0x38);
   396     079D  3000               	movlw	0
   397     079E  00F0               	movwf	display@RS
   398     079F  00F1               	movwf	display@RS+1
   399     07A0  3038               	movlw	56
   400     07A1  00F2               	movwf	display@DC
   401     07A2  3000               	movlw	0
   402     07A3  00F3               	movwf	display@DC+1
   403     07A4  120A  118A  2751  120A  118A  	fcall	_display
   404     07A9                     l620:
   405                           
   406                           ;newmain.c: 28:     display(0, 0x1c);
   407     07A9  3000               	movlw	0
   408     07AA  00F0               	movwf	display@RS
   409     07AB  00F1               	movwf	display@RS+1
   410     07AC  301C               	movlw	28
   411     07AD  00F2               	movwf	display@DC
   412     07AE  3000               	movlw	0
   413     07AF  00F3               	movwf	display@DC+1
   414     07B0  120A  118A  2751  120A  118A  	fcall	_display
   415     07B5                     l622:
   416                           
   417                           ;newmain.c: 29:     display(0, 0x14);
   418     07B5  3000               	movlw	0
   419     07B6  00F0               	movwf	display@RS
   420     07B7  00F1               	movwf	display@RS+1
   421     07B8  3014               	movlw	20
   422     07B9  00F2               	movwf	display@DC
   423     07BA  3000               	movlw	0
   424     07BB  00F3               	movwf	display@DC+1
   425     07BC  120A  118A  2751  120A  118A  	fcall	_display
   426     07C1                     l624:
   427                           
   428                           ;newmain.c: 30:     for(i=0;name[i]!='\0';i++)
   429     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   430     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   431     07C3  01B6               	clrf	main@i
   432     07C4  01B7               	clrf	main@i+1
   433     07C5  2FE1               	goto	l630
   434     07C6                     l626:
   435                           
   436                           ;newmain.c: 31:         display(1, name[i]);
   437     07C6  3001               	movlw	1
   438     07C7  00F0               	movwf	display@RS
   439     07C8  3000               	movlw	0
   440     07C9  00F1               	movwf	display@RS+1
   441     07CA  0836               	movf	main@i,w
   442     07CB  3E20               	addlw	(low (main@name| 0))& (0+255)
   443     07CC  0084               	movwf	4
   444     07CD  0800               	movf	0,w
   445     07CE  00F6               	movwf	??_main
   446     07CF  01F7               	clrf	??_main+1
   447     07D0  0876               	movf	??_main,w
   448     07D1  00F2               	movwf	display@DC
   449     07D2  0877               	movf	??_main+1,w
   450     07D3  00F3               	movwf	display@DC+1
   451     07D4  120A  118A  2751  120A  118A  	fcall	_display
   452     07D9                     l628:
   453     07D9  3001               	movlw	1
   454     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   455     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   456     07DC  07B6               	addwf	main@i,f
   457     07DD  1803               	skipnc
   458     07DE  0AB7               	incf	main@i+1,f
   459     07DF  3000               	movlw	0
   460     07E0  07B7               	addwf	main@i+1,f
   461     07E1                     l630:
   462     07E1  0836               	movf	main@i,w
   463     07E2  3E20               	addlw	(low (main@name| 0))& (0+255)
   464     07E3  0084               	movwf	4
   465     07E4  1383               	bcf	3,7	;select IRP bank0
   466     07E5  0800               	movf	0,w
   467     07E6  1D03               	btfss	3,2
   468     07E7  2FE9               	goto	u81
   469     07E8  2FEA               	goto	u80
   470     07E9                     u81:
   471     07E9  2FC6               	goto	l626
   472     07EA                     u80:
   473     07EA                     l26:	
   474                           ;newmain.c: 33:     while(1)
   475                           
   476     07EA  2FEA               	goto	l26
   477     07EB  120A  118A  2800   	ljmp	start
   478     07EE                     __end_of_main:
   479                           
   480                           	psect	text1
   481     0751                     __ptext1:	
   482 ;; *************** function _display *****************
   483 ;; Defined at:
   484 ;;		line 41 in file "newmain.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  RS              2    0[COMMON] int 
   487 ;;  DC              2    2[COMMON] int 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         4       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          2       0       0       0       0
   502 ;;      Totals:         6       0       0       0       0
   503 ;;Total ram usage:        6 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     0751                     _display:	
   513                           ;psect for function _display
   514                           
   515     0751                     l604:	
   516                           ;incstack = 0
   517                           ; Regs used in _display: [wreg]
   518                           
   519                           
   520                           ;newmain.c: 41: void display(int RS, int DC);newmain.c: 42: {;newmain.c: 43:     RB2=RS;
   521     0751  1870               	btfsc	display@RS,0
   522     0752  2F54               	goto	u51
   523     0753  2F58               	goto	u50
   524     0754                     u51:
   525     0754  1283               	bcf	3,5	;RP0=0, select bank0
   526     0755  1303               	bcf	3,6	;RP1=0, select bank0
   527     0756  1506               	bsf	6,2	;volatile
   528     0757  2F5B               	goto	u64
   529     0758                     u50:
   530     0758  1283               	bcf	3,5	;RP0=0, select bank0
   531     0759  1303               	bcf	3,6	;RP1=0, select bank0
   532     075A  1106               	bcf	6,2	;volatile
   533     075B                     u64:
   534     075B                     l606:
   535                           
   536                           ;newmain.c: 44:     PORTC=DC;
   537     075B  0872               	movf	display@DC,w
   538     075C  0087               	movwf	7	;volatile
   539     075D                     l608:
   540                           
   541                           ;newmain.c: 45:     RB4=1;
   542     075D  1606               	bsf	6,4	;volatile
   543                           
   544                           ;newmain.c: 46:     _delay((unsigned long)((10)*(10000000/4000.0)));
   545     075E  3021               	movlw	33
   546     075F  00F5               	movwf	??_display+1
   547     0760  3076               	movlw	118
   548     0761  00F4               	movwf	??_display
   549     0762                     u97:
   550     0762  0BF4               	decfsz	??_display,f
   551     0763  2F62               	goto	u97
   552     0764  0BF5               	decfsz	??_display+1,f
   553     0765  2F62               	goto	u97
   554     0766  0000               	nop
   555     0767                     l610:
   556                           
   557                           ;newmain.c: 47:     RB4=0;
   558     0767  1283               	bcf	3,5	;RP0=0, select bank0
   559     0768  1303               	bcf	3,6	;RP1=0, select bank0
   560     0769  1206               	bcf	6,4	;volatile
   561                           
   562                           ;newmain.c: 48:     _delay((unsigned long)((10)*(10000000/4000.0)));
   563     076A  3021               	movlw	33
   564     076B  00F5               	movwf	??_display+1
   565     076C  3076               	movlw	118
   566     076D  00F4               	movwf	??_display
   567     076E                     u107:
   568     076E  0BF4               	decfsz	??_display,f
   569     076F  2F6E               	goto	u107
   570     0770  0BF5               	decfsz	??_display+1,f
   571     0771  2F6E               	goto	u107
   572     0772  0000               	nop
   573     0773                     l32:
   574     0773  0008               	return
   575     0774                     __end_of_display:
   576     0002                     ___latbits      equ	2
   577     007E                     btemp           set	126	;btemp
   578     007E                     wtemp0          set	126
   579                           
   580                           	psect	config
   581                           
   582                           ;Config register CONFIG @ 0x2007
   583                           ;	Oscillator Selection bits
   584                           ;	FOSC = HS, HS oscillator
   585                           ;	Watchdog Timer Enable bit
   586                           ;	WDTE = OFF, WDT disabled
   587                           ;	Power-up Timer Enable bit
   588                           ;	PWRTE = OFF, PWRT disabled
   589                           ;	Brown-out Reset Enable bit
   590                           ;	BOREN = OFF, BOR disabled
   591                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   592                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   593                           ;	Data EEPROM Memory Code Protection bit
   594                           ;	CPD = OFF, Data EEPROM code protection off
   595                           ;	Flash Program Memory Write Enable bits
   596                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   597                           ;	In-Circuit Debugger Mode bit
   598                           ;	DEBUG = 0x1, unprogrammed default
   599                           ;	Flash Program Memory Code Protection bit
   600                           ;	CP = OFF, Code protection off
   601     2007                     	org	8199
   602     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     24      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0     147
                                              6 COMMON     4     4      0
                                              0 BANK0     24    24      0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4      54
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     24      46     57.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      10     71.4%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      56      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 12 17:13:26 2024

                      pc 0002                       l32 0773                       l26 07EA  
                     u50 0758                       u51 0754                       u70 0782  
                     u64 075B                       u80 07EA                       u81 07E9  
                     u97 0762                       fsr 0004                      l610 0767  
                    l604 0751                      l620 07A9                      l612 0774  
                    l606 075B                      l630 07E1                      l622 07B5  
                    l614 077C                      l608 075D                      l624 07C1  
                    l616 0791                      l626 07C6                      l618 079D  
                    l628 07D9                      _RB2 0032                      _RB4 0034  
                    u107 076E                      fsr0 0004                      indf 0000  
                   _main 0774                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087          __end_of_display 0774  
                  main@i 0036                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0076                ??_display 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 073B               __pmaintext 0774  
                __ptext1 0751                  _display 0751     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 0728              __pdataBANK0 0038  
              ___latbits 0002            __pcstackBANK0 0020                 ?_display 0070  
              main@F1331 0038                display@DC 0072                display@RS 0070  
               main@name 0020                 init_ram0 072C  
