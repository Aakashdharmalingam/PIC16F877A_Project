

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Dec 20 20:49:11 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0008                     _PORTD          set	8
   177     0044                     _RD4            set	68
   178     0043                     _RD3            set	67
   179     0042                     _RD2            set	66
   180     0041                     _RD1            set	65
   181     0031                     _RB1            set	49
   182     0030                     _RB0            set	48
   183     0088                     _TRISD          set	136
   184     0086                     _TRISB          set	134
   185     0081                     _OPTION_REG     set	129
   186                           
   187                           	psect	cinit
   188     07FC                     start_initialization:	
   189                           ; #config settings
   190                           
   191     07FC                     __initialization:
   192     07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     07FC                     __end_of__initialization:
   196     07FC  0183               	clrf	3
   197     07FD  120A  118A  2F8B   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200     0000                     __pcstackCOMMON:
   201     0000                     ?_forward:
   202     0000                     ?_left:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0000                     ?_right:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0000                     ?_back:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0000                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0000                     ??_forward:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0000                     ??_left:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0000                     ??_right:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0000                     ??_back:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0000                     ??_main:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           	psect	maintext
   231     078B                     __pmaintext:	
   232                           ; 1 bytes @ 0x0
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 30 in file "newmain.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		_back
   260 ;;		_forward
   261 ;;		_left
   262 ;;		_right
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268     078B                     _main:	
   269                           ;psect for function _main
   270                           
   271     078B                     l627:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   274                           
   275                           
   276                           ;newmain.c: 32:     OPTION_REG=0;
   277     078B  1683               	bsf	3,5	;RP0=1, select bank1
   278     078C  1303               	bcf	3,6	;RP1=0, select bank1
   279     078D  0181               	clrf	1	;volatile
   280     078E                     l629:
   281                           
   282                           ;newmain.c: 33:     TRISB=0x0f;
   283     078E  300F               	movlw	15
   284     078F  0086               	movwf	6	;volatile
   285                           
   286                           ;newmain.c: 34:     TRISD=0;
   287     0790  0188               	clrf	8	;volatile
   288                           
   289                           ;newmain.c: 35:     PORTD=0;
   290     0791  1283               	bcf	3,5	;RP0=0, select bank0
   291     0792  1303               	bcf	3,6	;RP1=0, select bank0
   292     0793  0188               	clrf	8	;volatile
   293     0794                     l631:
   294                           
   295                           ;newmain.c: 39:    {;newmain.c: 40:     if(RB0==1 && RB1==1)
   296     0794  1C06               	btfss	6,0	;volatile
   297     0795  2F97               	goto	u11
   298     0796  2F98               	goto	u10
   299     0797                     u11:
   300     0797  2FAD               	goto	l34
   301     0798                     u10:
   302     0798                     l633:
   303     0798  1C86               	btfss	6,1	;volatile
   304     0799  2F9B               	goto	u21
   305     079A  2F9C               	goto	u20
   306     079B                     u21:
   307     079B  2FAD               	goto	l34
   308     079C                     u20:
   309     079C  2FA2               	goto	l639
   310     079D                     l637:
   311                           
   312                           ;newmain.c: 43:         {;newmain.c: 44:             forward();
   313     079D  120A  118A  2776  120A  118A  	fcall	_forward
   314     07A2                     l639:
   315                           
   316                           ;newmain.c: 42:         while(RB0==1 && RB1==1)
   317     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   318     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   319     07A4  1C06               	btfss	6,0	;volatile
   320     07A5  2FA7               	goto	u31
   321     07A6  2FA8               	goto	u30
   322     07A7                     u31:
   323     07A7  2FF8               	goto	l40
   324     07A8                     u30:
   325     07A8                     l641:
   326     07A8  1886               	btfsc	6,1	;volatile
   327     07A9  2FAB               	goto	u41
   328     07AA  2FAC               	goto	u40
   329     07AB                     u41:
   330     07AB  2F9D               	goto	l637
   331     07AC                     u40:
   332     07AC  2F94               	goto	l631
   333     07AD                     l34:	
   334                           ;newmain.c: 48:     else if(RB0==0 && RB1==1)
   335                           
   336     07AD  1806               	btfsc	6,0	;volatile
   337     07AE  2FB0               	goto	u51
   338     07AF  2FB1               	goto	u50
   339     07B0                     u51:
   340     07B0  2FC6               	goto	l41
   341     07B1                     u50:
   342     07B1                     l643:
   343     07B1  1C86               	btfss	6,1	;volatile
   344     07B2  2FB4               	goto	u61
   345     07B3  2FB5               	goto	u60
   346     07B4                     u61:
   347     07B4  2FC6               	goto	l41
   348     07B5                     u60:
   349     07B5  2FBB               	goto	l649
   350     07B6                     l647:
   351                           
   352                           ;newmain.c: 50:         {;newmain.c: 51:             left();
   353     07B6  120A  118A  277D  120A  118A  	fcall	_left
   354     07BB                     l649:
   355                           
   356                           ;newmain.c: 49:       while(RB0==0 && RB1==1)
   357     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   358     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   359     07BD  1806               	btfsc	6,0	;volatile
   360     07BE  2FC0               	goto	u71
   361     07BF  2FC1               	goto	u70
   362     07C0                     u71:
   363     07C0  2F94               	goto	l631
   364     07C1                     u70:
   365     07C1                     l651:
   366     07C1  1886               	btfsc	6,1	;volatile
   367     07C2  2FC4               	goto	u81
   368     07C3  2FC5               	goto	u80
   369     07C4                     u81:
   370     07C4  2FB6               	goto	l647
   371     07C5                     u80:
   372     07C5  2F94               	goto	l631
   373     07C6                     l41:	
   374                           ;newmain.c: 53:     else if(RB0==1 && RB1==0)
   375                           
   376     07C6  1C06               	btfss	6,0	;volatile
   377     07C7  2FC9               	goto	u91
   378     07C8  2FCA               	goto	u90
   379     07C9                     u91:
   380     07C9  2FDF               	goto	l48
   381     07CA                     u90:
   382     07CA                     l653:
   383     07CA  1886               	btfsc	6,1	;volatile
   384     07CB  2FCD               	goto	u101
   385     07CC  2FCE               	goto	u100
   386     07CD                     u101:
   387     07CD  2FDF               	goto	l48
   388     07CE                     u100:
   389     07CE  2FD4               	goto	l659
   390     07CF                     l657:
   391                           
   392                           ;newmain.c: 55:         {;newmain.c: 56:             right();
   393     07CF  120A  118A  2784  120A  118A  	fcall	_right
   394     07D4                     l659:
   395                           
   396                           ;newmain.c: 54:       while(RB0==1 && RB1==0)
   397     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   398     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   399     07D6  1C06               	btfss	6,0	;volatile
   400     07D7  2FD9               	goto	u111
   401     07D8  2FDA               	goto	u110
   402     07D9                     u111:
   403     07D9  2FF8               	goto	l40
   404     07DA                     u110:
   405     07DA                     l661:
   406     07DA  1C86               	btfss	6,1	;volatile
   407     07DB  2FDD               	goto	u121
   408     07DC  2FDE               	goto	u120
   409     07DD                     u121:
   410     07DD  2FCF               	goto	l657
   411     07DE                     u120:
   412     07DE  2F94               	goto	l631
   413     07DF                     l48:	
   414                           ;newmain.c: 58:     else if(RB0==0 && RB1==0)
   415                           
   416     07DF  1806               	btfsc	6,0	;volatile
   417     07E0  2FE2               	goto	u131
   418     07E1  2FE3               	goto	u130
   419     07E2                     u131:
   420     07E2  2F94               	goto	l631
   421     07E3                     u130:
   422     07E3                     l663:
   423     07E3  1886               	btfsc	6,1	;volatile
   424     07E4  2FE6               	goto	u141
   425     07E5  2FE7               	goto	u140
   426     07E6                     u141:
   427     07E6  2F94               	goto	l631
   428     07E7                     u140:
   429     07E7  2FED               	goto	l669
   430     07E8                     l667:
   431                           
   432                           ;newmain.c: 60:         {;newmain.c: 61:             back();
   433     07E8  120A  118A  276F  120A  118A  	fcall	_back
   434     07ED                     l669:
   435                           
   436                           ;newmain.c: 59:       while(RB0==0 && RB1==0)
   437     07ED  1283               	bcf	3,5	;RP0=0, select bank0
   438     07EE  1303               	bcf	3,6	;RP1=0, select bank0
   439     07EF  1806               	btfsc	6,0	;volatile
   440     07F0  2FF2               	goto	u151
   441     07F1  2FF3               	goto	u150
   442     07F2                     u151:
   443     07F2  2F94               	goto	l631
   444     07F3                     u150:
   445     07F3                     l671:
   446     07F3  1C86               	btfss	6,1	;volatile
   447     07F4  2FF6               	goto	u161
   448     07F5  2FF7               	goto	u160
   449     07F6                     u161:
   450     07F6  2FE8               	goto	l667
   451     07F7                     u160:
   452     07F7  2F94               	goto	l631
   453     07F8                     l40:
   454     07F8  2F94               	goto	l631
   455     07F9  120A  118A  2800   	ljmp	start
   456     07FC                     __end_of_main:
   457                           
   458                           	psect	text1
   459     0784                     __ptext1:	
   460 ;; *************** function _right *****************
   461 ;; Defined at:
   462 ;;		line 86 in file "newmain.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		None
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     0784                     _right:	
   490                           ;psect for function _right
   491                           
   492     0784                     l623:	
   493                           ;incstack = 0
   494                           ; Regs used in _right: []
   495                           
   496                           
   497                           ;newmain.c: 88:     RD1=1;
   498     0784  1283               	bcf	3,5	;RP0=0, select bank0
   499     0785  1303               	bcf	3,6	;RP1=0, select bank0
   500     0786  1488               	bsf	8,1	;volatile
   501                           
   502                           ;newmain.c: 89:     RD2=0;
   503     0787  1108               	bcf	8,2	;volatile
   504                           
   505                           ;newmain.c: 90:     RD3=0;
   506     0788  1188               	bcf	8,3	;volatile
   507                           
   508                           ;newmain.c: 91:     RD4=0;
   509     0789  1208               	bcf	8,4	;volatile
   510     078A                     l75:
   511     078A  0008               	return
   512     078B                     __end_of_right:
   513                           
   514                           	psect	text2
   515     077D                     __ptext2:	
   516 ;; *************** function _left *****************
   517 ;; Defined at:
   518 ;;		line 79 in file "newmain.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		None
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     077D                     _left:	
   546                           ;psect for function _left
   547                           
   548     077D                     l621:	
   549                           ;incstack = 0
   550                           ; Regs used in _left: []
   551                           
   552                           
   553                           ;newmain.c: 81:     RD1=0;
   554     077D  1283               	bcf	3,5	;RP0=0, select bank0
   555     077E  1303               	bcf	3,6	;RP1=0, select bank0
   556     077F  1088               	bcf	8,1	;volatile
   557                           
   558                           ;newmain.c: 82:     RD2=0;
   559     0780  1108               	bcf	8,2	;volatile
   560                           
   561                           ;newmain.c: 83:     RD3=1;
   562     0781  1588               	bsf	8,3	;volatile
   563                           
   564                           ;newmain.c: 84:     RD4=0;
   565     0782  1208               	bcf	8,4	;volatile
   566     0783                     l72:
   567     0783  0008               	return
   568     0784                     __end_of_left:
   569                           
   570                           	psect	text3
   571     0776                     __ptext3:	
   572 ;; *************** function _forward *****************
   573 ;; Defined at:
   574 ;;		line 72 in file "newmain.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		None
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     0776                     _forward:	
   602                           ;psect for function _forward
   603                           
   604     0776                     l619:	
   605                           ;incstack = 0
   606                           ; Regs used in _forward: []
   607                           
   608                           
   609                           ;newmain.c: 74:     RD1=1;
   610     0776  1283               	bcf	3,5	;RP0=0, select bank0
   611     0777  1303               	bcf	3,6	;RP1=0, select bank0
   612     0778  1488               	bsf	8,1	;volatile
   613                           
   614                           ;newmain.c: 75:     RD2=0;
   615     0779  1108               	bcf	8,2	;volatile
   616                           
   617                           ;newmain.c: 76:     RD3=1;
   618     077A  1588               	bsf	8,3	;volatile
   619                           
   620                           ;newmain.c: 77:     RD4=0;
   621     077B  1208               	bcf	8,4	;volatile
   622     077C                     l69:
   623     077C  0008               	return
   624     077D                     __end_of_forward:
   625                           
   626                           	psect	text4
   627     076F                     __ptext4:	
   628 ;; *************** function _back *****************
   629 ;; Defined at:
   630 ;;		line 65 in file "newmain.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		None
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657     076F                     _back:	
   658                           ;psect for function _back
   659                           
   660     076F                     l625:	
   661                           ;incstack = 0
   662                           ; Regs used in _back: []
   663                           
   664                           
   665                           ;newmain.c: 67:     RD1=0;
   666     076F  1283               	bcf	3,5	;RP0=0, select bank0
   667     0770  1303               	bcf	3,6	;RP1=0, select bank0
   668     0771  1088               	bcf	8,1	;volatile
   669                           
   670                           ;newmain.c: 68:     RD2=1;
   671     0772  1508               	bsf	8,2	;volatile
   672                           
   673                           ;newmain.c: 69:     RD3=0;
   674     0773  1188               	bcf	8,3	;volatile
   675                           
   676                           ;newmain.c: 70:     RD4=1;
   677     0774  1608               	bsf	8,4	;volatile
   678     0775                     l66:
   679     0775  0008               	return
   680     0776                     __end_of_back:
   681     0002                     ___latbits      equ	2
   682     007E                     btemp           set	126	;btemp
   683     007E                     wtemp0          set	126
   684                           
   685                           	psect	config
   686                           
   687                           ;Config register CONFIG @ 0x2007
   688                           ;	Oscillator Selection bits
   689                           ;	FOSC = HS, HS oscillator
   690                           ;	Watchdog Timer Enable bit
   691                           ;	WDTE = OFF, WDT disabled
   692                           ;	Power-up Timer Enable bit
   693                           ;	PWRTE = OFF, PWRT disabled
   694                           ;	Brown-out Reset Enable bit
   695                           ;	BOREN = OFF, BOR disabled
   696                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   697                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   698                           ;	Data EEPROM Memory Code Protection bit
   699                           ;	CPD = OFF, Data EEPROM code protection off
   700                           ;	Flash Program Memory Write Enable bits
   701                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   702                           ;	In-Circuit Debugger Mode bit
   703                           ;	DEBUG = 0x1, unprogrammed default
   704                           ;	Flash Program Memory Code Protection bit
   705                           ;	CP = OFF, Code protection off
   706     2007                     	org	8199
   707     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _back
                            _forward
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _back                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _back
   _forward
   _left
   _right

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      0       0      0.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Dec 20 20:49:11 2024

                     l40 07F8                       l41 07C6                       l34 07AD  
                     l72 0783                       l48 07DF                       l66 0775  
                     l75 078A                       l69 077C                       u10 0798  
                     u11 0797                       u20 079C                       u21 079B  
                     u30 07A8                       u31 07A7                       u40 07AC  
                     u41 07AB                       u50 07B1                       u51 07B0  
                     u60 07B5                       u61 07B4                       u70 07C1  
                     u71 07C0                       u80 07C5                       u81 07C4  
                     u90 07CA                       u91 07C9                      l621 077D  
                    l623 0784                      l631 0794                      l625 076F  
                    l641 07A8                      l633 0798                      l619 0776  
                    l651 07C1                      l643 07B1                      l627 078B  
                    l661 07DA                      l653 07CA                      l637 079D  
                    l629 078E                      l671 07F3                      l663 07E3  
                    l647 07B6                      l639 07A2                      l657 07CF  
                    l649 07BB                      l667 07E8                      l659 07D4  
                    l669 07ED                      _RB0 0030                      _RB1 0031  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u100 07CE                      _RD4 0044                      u101 07CD  
                    u110 07DA                      u111 07D9                      u120 07DE  
                    u121 07DD                      u130 07E3                      u131 07E2  
                    u140 07E7                      u141 07E6                      u150 07F3  
                    u151 07F2                      u160 07F7                      u161 07F6  
                   _back 076F                     _main 078B                     _left 077D  
                   btemp 007E                     start 0000                    ?_back 0000  
                  ?_main 0000                    ?_left 0000                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_forward 077D  
                  _right 0784                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_back 0776             __end_of_main 07FC  
           __end_of_left 0784                   ??_back 0000                   ??_main 0000  
                 ??_left 0000                   ?_right 0000                ??_forward 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0000            __end_of_right 078B  
                ??_right 0000               __pmaintext 078B                  __ptext1 0784  
                __ptext2 077D                  __ptext3 0776                  __ptext4 076F  
                _forward 0776     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                 ?_forward 0000               _OPTION_REG 0081  
