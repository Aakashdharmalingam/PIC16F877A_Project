

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 05 11:45:13 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175                           
   176                           	psect	idataBANK0
   177     077C                     __pidataBANK0:
   178                           
   179                           ;initializer for main@F1008
   180     077C  3448               	retlw	72
   181     077D  344C               	retlw	76
   182     077E  344F               	retlw	79
   183     077F  3400               	retlw	0
   184     0019                     _TXREG          set	25
   185     001A                     _RCREG          set	26
   186     0018                     _RCSTA          set	24
   187     0064                     _TXIF           set	100
   188     0065                     _RCIF           set	101
   189     0099                     _SPBRG          set	153
   190     0098                     _TXSTA          set	152
   191     0465                     _RCIE           set	1125
   192     0464                     _TXIE           set	1124
   193                           
   194                           	psect	cinit
   195     07E4                     start_initialization:	
   196                           ; #config settings
   197                           
   198     07E4                     __initialization:
   199                           
   200                           ; Initialize objects allocated to BANK0
   201     07E4  120A  118A  277C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   202     07E9  00B2               	movwf	__pdataBANK0& (0+127)
   203     07EA  120A  118A  277D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   204     07EF  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   205     07F0  120A  118A  277E  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   206     07F5  00B4               	movwf	(__pdataBANK0+2)& (0+127)
   207     07F6  120A  118A  277F  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   208     07FB  00B5               	movwf	(__pdataBANK0+3)& (0+127)
   209     07FC                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212     07FC                     __end_of__initialization:
   213     07FC  0183               	clrf	3
   214     07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	dataBANK0
   217     0032                     __pdataBANK0:
   218     0032                     main@F1008:
   219     0032                     	ds	4
   220                           
   221                           	psect	cstackCOMMON
   222     0000                     __pcstackCOMMON:
   223     0000                     ?_main:
   224     0000                     ??_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           	psect	cstackBANK0
   229     0020                     __pcstackBANK0:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0020                     main@a:
   233                           
   234                           ; 4 bytes @ 0x0
   235     0020                     	ds	4
   236     0024                     main@b:
   237                           
   238                           ; 10 bytes @ 0x4
   239     0024                     	ds	10
   240     002E                     main@i:
   241                           
   242                           ; 2 bytes @ 0xE
   243     002E                     	ds	2
   244     0030                     main@i_40:
   245                           
   246                           ; 2 bytes @ 0x10
   247     0030                     	ds	2
   248                           
   249                           	psect	maintext
   250     0780                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 21 in file "newmain.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  i               2   16[BANK0 ] int 
   261 ;;  i               2   14[BANK0 ] int 
   262 ;;  b              10    4[BANK0 ] unsigned char [10]
   263 ;;  a               4    0[BANK0 ] unsigned char [4]
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   268 ;; Tracked objects:
   269 ;;		On entry : B00/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         0      18       0       0       0
   275 ;;      Temps:          0       0       0       0       0
   276 ;;      Totals:         0      18       0       0       0
   277 ;;Total ram usage:       18 bytes
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285     0780                     _main:	
   286                           ;psect for function _main
   287                           
   288     0780                     l620:	
   289                           ;incstack = 0
   290                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   291                           
   292                           
   293                           ;newmain.c: 23:     char b[10];;newmain.c: 24:     char a[]={"HLO"};
   294     0780  1283               	bcf	3,5	;RP0=0, select bank0
   295     0781  1303               	bcf	3,6	;RP1=0, select bank0
   296     0782  0835               	movf	main@F1008+3,w
   297     0783  00A3               	movwf	main@a+3
   298     0784  0834               	movf	main@F1008+2,w
   299     0785  00A2               	movwf	main@a+2
   300     0786  0833               	movf	main@F1008+1,w
   301     0787  00A1               	movwf	main@a+1
   302     0788  0832               	movf	main@F1008,w
   303     0789  00A0               	movwf	main@a
   304     078A                     l622:
   305                           
   306                           ;newmain.c: 25:     TXIE=1;
   307     078A  1683               	bsf	3,5	;RP0=1, select bank1
   308     078B  1303               	bcf	3,6	;RP1=0, select bank1
   309     078C  160C               	bsf	12,4	;volatile
   310     078D                     l624:
   311                           
   312                           ;newmain.c: 26:     RCIE=1;
   313     078D  168C               	bsf	12,5	;volatile
   314     078E                     l626:
   315                           
   316                           ;newmain.c: 28:     TXSTA=0x24;
   317     078E  3024               	movlw	36
   318     078F  0098               	movwf	24	;volatile
   319     0790                     l628:
   320                           
   321                           ;newmain.c: 29:     RCSTA=0x90;
   322     0790  3090               	movlw	144
   323     0791  1283               	bcf	3,5	;RP0=0, select bank0
   324     0792  1303               	bcf	3,6	;RP1=0, select bank0
   325     0793  0098               	movwf	24	;volatile
   326     0794                     l630:
   327                           
   328                           ;newmain.c: 30:     SPBRG=64;
   329     0794  3040               	movlw	64
   330     0795  1683               	bsf	3,5	;RP0=1, select bank1
   331     0796  1303               	bcf	3,6	;RP1=0, select bank1
   332     0797  0099               	movwf	25	;volatile
   333     0798                     l632:
   334                           
   335                           ;newmain.c: 39:     for(int i=0;i<3;i++)
   336     0798  1283               	bcf	3,5	;RP0=0, select bank0
   337     0799  1303               	bcf	3,6	;RP1=0, select bank0
   338     079A  01AE               	clrf	main@i
   339     079B  01AF               	clrf	main@i+1
   340     079C                     l27:
   341     079C  1283               	bcf	3,5	;RP0=0, select bank0
   342     079D  1303               	bcf	3,6	;RP1=0, select bank0
   343     079E  1E8C               	btfss	12,5	;volatile
   344     079F  2FA1               	goto	u51
   345     07A0  2FA2               	goto	u50
   346     07A1                     u51:
   347     07A1  2F9C               	goto	l27
   348     07A2                     u50:
   349     07A2                     l638:
   350                           
   351                           ;newmain.c: 42:         b[i]=RCREG;
   352     07A2  082E               	movf	main@i,w
   353     07A3  3E24               	addlw	(low (main@b| 0))& (0+255)
   354     07A4  0084               	movwf	4
   355     07A5  081A               	movf	26,w	;volatile
   356     07A6  1383               	bcf	3,7	;select IRP bank0
   357     07A7  0080               	movwf	0
   358     07A8                     l640:
   359                           
   360                           ;newmain.c: 43:         RCIF=0;
   361     07A8  128C               	bcf	12,5	;volatile
   362     07A9                     l642:
   363                           
   364                           ;newmain.c: 44:     }
   365     07A9  3001               	movlw	1
   366     07AA  07AE               	addwf	main@i,f
   367     07AB  1803               	skipnc
   368     07AC  0AAF               	incf	main@i+1,f
   369     07AD  3000               	movlw	0
   370     07AE  07AF               	addwf	main@i+1,f
   371     07AF                     l644:
   372     07AF  082F               	movf	main@i+1,w
   373     07B0  3A80               	xorlw	128
   374     07B1  00FF               	movwf	btemp+1
   375     07B2  3080               	movlw	128
   376     07B3  027F               	subwf	btemp+1,w
   377     07B4  1D03               	skipz
   378     07B5  2FB8               	goto	u65
   379     07B6  3003               	movlw	3
   380     07B7  022E               	subwf	main@i,w
   381     07B8                     u65:
   382     07B8  1C03               	skipc
   383     07B9  2FBB               	goto	u61
   384     07BA  2FBC               	goto	u60
   385     07BB                     u61:
   386     07BB  2F9C               	goto	l27
   387     07BC                     u60:
   388     07BC                     l646:
   389                           
   390                           ;newmain.c: 45:     for(int i=0;i<3;i++)
   391     07BC  1283               	bcf	3,5	;RP0=0, select bank0
   392     07BD  1303               	bcf	3,6	;RP1=0, select bank0
   393     07BE  01B0               	clrf	main@i_40
   394     07BF  01B1               	clrf	main@i_40+1
   395     07C0                     l652:
   396                           
   397                           ;newmain.c: 46:     {;newmain.c: 47:         TXREG=b[i];
   398     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   399     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   400     07C2  0830               	movf	main@i_40,w
   401     07C3  3E24               	addlw	(low (main@b| 0))& (0+255)
   402     07C4  0084               	movwf	4
   403     07C5  1383               	bcf	3,7	;select IRP bank0
   404     07C6  0800               	movf	0,w
   405     07C7  0099               	movwf	25	;volatile
   406     07C8                     l32:	
   407                           ;newmain.c: 48:         while(TXIF==0);
   408                           
   409     07C8  1E0C               	btfss	12,4	;volatile
   410     07C9  2FCB               	goto	u71
   411     07CA  2FCC               	goto	u70
   412     07CB                     u71:
   413     07CB  2FC8               	goto	l32
   414     07CC                     u70:
   415     07CC                     l34:
   416                           
   417                           ;newmain.c: 49:         TXIF=0;
   418     07CC  120C               	bcf	12,4	;volatile
   419     07CD                     l654:
   420                           
   421                           ;newmain.c: 50:     }
   422     07CD  3001               	movlw	1
   423     07CE  07B0               	addwf	main@i_40,f
   424     07CF  1803               	skipnc
   425     07D0  0AB1               	incf	main@i_40+1,f
   426     07D1  3000               	movlw	0
   427     07D2  07B1               	addwf	main@i_40+1,f
   428     07D3                     l656:
   429     07D3  0831               	movf	main@i_40+1,w
   430     07D4  3A80               	xorlw	128
   431     07D5  00FF               	movwf	btemp+1
   432     07D6  3080               	movlw	128
   433     07D7  027F               	subwf	btemp+1,w
   434     07D8  1D03               	skipz
   435     07D9  2FDC               	goto	u85
   436     07DA  3003               	movlw	3
   437     07DB  0230               	subwf	main@i_40,w
   438     07DC                     u85:
   439     07DC  1C03               	skipc
   440     07DD  2FDF               	goto	u81
   441     07DE  2FE0               	goto	u80
   442     07DF                     u81:
   443     07DF  2FC0               	goto	l652
   444     07E0                     u80:
   445     07E0                     l35:	
   446                           ;newmain.c: 53:     while(1)
   447                           
   448     07E0  2FE0               	goto	l35
   449     07E1  120A  118A  2800   	ljmp	start
   450     07E4                     __end_of_main:
   451     0002                     ___latbits      equ	2
   452     007E                     btemp           set	126	;btemp
   453     007E                     wtemp0          set	126
   454                           
   455                           	psect	config
   456                           
   457                           ;Config register CONFIG @ 0x2007
   458                           ;	Oscillator Selection bits
   459                           ;	FOSC = HS, HS oscillator
   460                           ;	Watchdog Timer Enable bit
   461                           ;	WDTE = OFF, WDT disabled
   462                           ;	Power-up Timer Enable bit
   463                           ;	PWRTE = OFF, PWRT disabled
   464                           ;	Brown-out Reset Enable bit
   465                           ;	BOREN = OFF, BOR disabled
   466                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   467                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   468                           ;	Data EEPROM Memory Code Protection bit
   469                           ;	CPD = OFF, Data EEPROM code protection off
   470                           ;	Flash Program Memory Write Enable bits
   471                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   472                           ;	In-Circuit Debugger Mode bit
   473                           ;	DEBUG = 0x1, unprogrammed default
   474                           ;	Flash Program Memory Code Protection bit
   475                           ;	CP = OFF, Code protection off
   476     2007                     	org	8199
   477     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80     18      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0     184
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     18      22     27.5%
BITBANK0            80      0       0      0.0%
COMMON              14      0       0      0.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      22      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 05 11:45:13 2025

                     l32 07C8                       l34 07CC                       l35 07E0  
                     l27 079C                       u50 07A2                       u51 07A1  
                     u60 07BC                       u61 07BB                       u70 07CC  
                     u71 07CB                       u80 07E0                       u81 07DF  
                     u65 07B8                       u85 07DC                      l620 0780  
                    l630 0794                      l622 078A                      l640 07A8  
                    l632 0798                      l624 078D                      l642 07A9  
                    l626 078E                      l652 07C0                      l644 07AF  
                    l628 0790                      l654 07CD                      l646 07BC  
                    l638 07A2                      l656 07D3                      fsr0 0004  
                    indf 0000                     _RCIE 0465                     _RCIF 0065  
                   _TXIE 0464                     _TXIF 0064                     _main 0780  
                   btemp 007E                     start 0000                    ?_main 0000  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098                    main@a 0020  
                  main@b 0024                    main@i 002E                    status 0003  
                  wtemp0 007E          __initialization 07E4             __end_of_main 07E4  
                 ??_main 0000  __end_of__initialization 07FC           __pcstackCOMMON 0000  
           __pidataBANK0 077C               __pmaintext 0780     end_of_initialization 07FC  
    start_initialization 07E4              __pdataBANK0 0032                ___latbits 0002  
          __pcstackBANK0 0020                main@F1008 0032                 main@i_40 0030  
