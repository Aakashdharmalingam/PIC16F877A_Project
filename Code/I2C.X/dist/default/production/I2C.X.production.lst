

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Feb 13 12:32:23 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0008                     _PORTD          set	8
   175     0013                     _SSPBUF         set	19
   176     0014                     _SSPCON         set	20
   177     0031                     _RB1            set	49
   178     0030                     _RB0            set	48
   179     0063                     _SSPIF          set	99
   180     0093                     _SSPADD         set	147
   181     0086                     _TRISB          set	134
   182     0088                     _TRISD          set	136
   183     048A                     _PEN            set	1162
   184     048C                     _ACKEN          set	1164
   185     048D                     _ACKDT          set	1165
   186     048B                     _RCEN           set	1163
   187     0489                     _RSEN           set	1161
   188     0488                     _SEN            set	1160
   189                           
   190                           	psect	cinit
   191     07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07FC                     __initialization:
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2F82   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_display:
   205     0070                     ?_I2C_read:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     I2C_read@lsb_add:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     display@data:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219     0070                     	ds	1
   220     0071                     I2C_read@msb_add:
   221     0071                     ??_display:	
   222                           ; 1 bytes @ 0x1
   223                           
   224     0071                     ??_I2C_read:	
   225                           ; 1 bytes @ 0x1
   226                           
   227                           
   228                           ; 1 bytes @ 0x1
   229     0071                     	ds	1
   230     0072                     I2C_read@data:
   231                           
   232                           ; 1 bytes @ 0x2
   233     0072                     	ds	1
   234     0073                     display@rs:
   235                           
   236                           ; 1 bytes @ 0x3
   237     0073                     	ds	1
   238     0074                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x4
   241     0074                     	ds	3
   242     0077                     main@data:
   243                           
   244                           ; 1 bytes @ 0x7
   245     0077                     	ds	1
   246                           
   247                           	psect	maintext
   248     0782                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 19 in file "newmain.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  data            1    7[COMMON] unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, pclath, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   268 ;;      Params:         0       0       0       0       0
   269 ;;      Locals:         1       0       0       0       0
   270 ;;      Temps:          3       0       0       0       0
   271 ;;      Totals:         4       0       0       0       0
   272 ;;Total ram usage:        4 bytes
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		_I2C_read
   276 ;;		_display
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282     0782                     _main:	
   283                           ;psect for function _main
   284                           
   285     0782                     l748:	
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   288                           
   289                           
   290                           ;newmain.c: 21:     unsigned char data;;newmain.c: 22:     TRISD=0;
   291     0782  1683               	bsf	3,5	;RP0=1, select bank1
   292     0783  1303               	bcf	3,6	;RP1=0, select bank1
   293     0784  0188               	clrf	8	;volatile
   294                           
   295                           ;newmain.c: 23:     TRISB=0;
   296     0785  0186               	clrf	6	;volatile
   297     0786                     l750:
   298                           
   299                           ;newmain.c: 24:     SSPCON = 0x28;
   300     0786  3028               	movlw	40
   301     0787  1283               	bcf	3,5	;RP0=0, select bank0
   302     0788  1303               	bcf	3,6	;RP1=0, select bank0
   303     0789  0094               	movwf	20	;volatile
   304     078A                     l752:
   305                           
   306                           ;newmain.c: 26:     SSPADD = 24;
   307     078A  3018               	movlw	24
   308     078B  1683               	bsf	3,5	;RP0=1, select bank1
   309     078C  1303               	bcf	3,6	;RP1=0, select bank1
   310     078D  0093               	movwf	19	;volatile
   311     078E                     l754:
   312                           
   313                           ;newmain.c: 30:     _delay((unsigned long)((1000)*(10000000/4000.0)));
   314     078E  300D               	movlw	13
   315     078F  00F6               	movwf	??_main+2
   316     0790  30AF               	movlw	175
   317     0791  00F5               	movwf	??_main+1
   318     0792  30B6               	movlw	182
   319     0793  00F4               	movwf	??_main
   320     0794                     u337:
   321     0794  0BF4               	decfsz	??_main,f
   322     0795  2F94               	goto	u337
   323     0796  0BF5               	decfsz	??_main+1,f
   324     0797  2F94               	goto	u337
   325     0798  0BF6               	decfsz	??_main+2,f
   326     0799  2F94               	goto	u337
   327     079A  0000               	nop
   328     079B                     l756:
   329                           
   330                           ;newmain.c: 31:     display(0, 0x0e);
   331     079B  300E               	movlw	14
   332     079C  00F0               	movwf	display@data
   333     079D  3000               	movlw	0
   334     079E  120A  118A  270F  120A  118A  	fcall	_display
   335     07A3                     l758:
   336                           
   337                           ;newmain.c: 33:     data = I2C_read(0x00, 0x05);
   338     07A3  3005               	movlw	5
   339     07A4  00F0               	movwf	I2C_read@lsb_add
   340     07A5  3000               	movlw	0
   341     07A6  120A  118A  2733  120A  118A  	fcall	_I2C_read
   342     07AB  00F7               	movwf	main@data
   343     07AC                     l760:
   344                           
   345                           ;newmain.c: 34:     display(1, data);
   346     07AC  0877               	movf	main@data,w
   347     07AD  00F0               	movwf	display@data
   348     07AE  3001               	movlw	1
   349     07AF  120A  118A  270F  120A  118A  	fcall	_display
   350     07B4                     l762:
   351                           
   352                           ;newmain.c: 36:     data = I2C_read(0x00, 0x06);
   353     07B4  3006               	movlw	6
   354     07B5  00F0               	movwf	I2C_read@lsb_add
   355     07B6  3000               	movlw	0
   356     07B7  120A  118A  2733  120A  118A  	fcall	_I2C_read
   357     07BC  00F7               	movwf	main@data
   358     07BD                     l764:
   359                           
   360                           ;newmain.c: 37:     display(1, data);
   361     07BD  0877               	movf	main@data,w
   362     07BE  00F0               	movwf	display@data
   363     07BF  3001               	movlw	1
   364     07C0  120A  118A  270F  120A  118A  	fcall	_display
   365     07C5                     l766:
   366                           
   367                           ;newmain.c: 39:     data = I2C_read(0x00, 0x07);
   368     07C5  3007               	movlw	7
   369     07C6  00F0               	movwf	I2C_read@lsb_add
   370     07C7  3000               	movlw	0
   371     07C8  120A  118A  2733  120A  118A  	fcall	_I2C_read
   372     07CD  00F7               	movwf	main@data
   373     07CE                     l768:
   374                           
   375                           ;newmain.c: 40:     display(1, data);
   376     07CE  0877               	movf	main@data,w
   377     07CF  00F0               	movwf	display@data
   378     07D0  3001               	movlw	1
   379     07D1  120A  118A  270F  120A  118A  	fcall	_display
   380     07D6                     l770:
   381                           
   382                           ;newmain.c: 42:     data = I2C_read(0x00, 0x08);
   383     07D6  3008               	movlw	8
   384     07D7  00F0               	movwf	I2C_read@lsb_add
   385     07D8  3000               	movlw	0
   386     07D9  120A  118A  2733  120A  118A  	fcall	_I2C_read
   387     07DE  00F7               	movwf	main@data
   388     07DF                     l772:
   389                           
   390                           ;newmain.c: 43:     display(1, data);
   391     07DF  0877               	movf	main@data,w
   392     07E0  00F0               	movwf	display@data
   393     07E1  3001               	movlw	1
   394     07E2  120A  118A  270F  120A  118A  	fcall	_display
   395     07E7                     l774:
   396                           
   397                           ;newmain.c: 45:     data = I2C_read(0x00, 0x09);
   398     07E7  3009               	movlw	9
   399     07E8  00F0               	movwf	I2C_read@lsb_add
   400     07E9  3000               	movlw	0
   401     07EA  120A  118A  2733  120A  118A  	fcall	_I2C_read
   402     07EF  00F7               	movwf	main@data
   403     07F0                     l776:
   404                           
   405                           ;newmain.c: 46:     display(1, data);
   406     07F0  0877               	movf	main@data,w
   407     07F1  00F0               	movwf	display@data
   408     07F2  3001               	movlw	1
   409     07F3  120A  118A  270F  120A  118A  	fcall	_display
   410     07F8                     l41:	
   411                           ;newmain.c: 50:     while(1){
   412                           
   413     07F8                     l42:	
   414                           ;newmain.c: 52:     }
   415                           
   416     07F8  2FF8               	goto	l41
   417     07F9  120A  118A  2800   	ljmp	start
   418     07FC                     __end_of_main:
   419                           
   420                           	psect	text1
   421     070F                     __ptext1:	
   422 ;; *************** function _display *****************
   423 ;; Defined at:
   424 ;;		line 144 in file "newmain.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  rs              1    wreg     unsigned char 
   427 ;;  data            1    0[COMMON] unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  rs              1    3[COMMON] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         1       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0
   441 ;;      Temps:          2       0       0       0       0
   442 ;;      Totals:         4       0       0       0       0
   443 ;;Total ram usage:        4 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     070F                     _display:	
   453                           ;psect for function _display
   454                           
   455                           
   456                           ;incstack = 0
   457                           ; Regs used in _display: [wreg]
   458                           ;display@rs stored from wreg
   459     070F  00F3               	movwf	display@rs
   460     0710                     l724:
   461                           
   462                           ;newmain.c: 144: void display(unsigned char rs, unsigned char data);newmain.c: 145: {;ne
      +                          wmain.c: 146:     RB0=rs;
   463     0710  1873               	btfsc	display@rs,0
   464     0711  2F13               	goto	u221
   465     0712  2F17               	goto	u220
   466     0713                     u221:
   467     0713  1283               	bcf	3,5	;RP0=0, select bank0
   468     0714  1303               	bcf	3,6	;RP1=0, select bank0
   469     0715  1406               	bsf	6,0	;volatile
   470     0716  2F1A               	goto	u234
   471     0717                     u220:
   472     0717  1283               	bcf	3,5	;RP0=0, select bank0
   473     0718  1303               	bcf	3,6	;RP1=0, select bank0
   474     0719  1006               	bcf	6,0	;volatile
   475     071A                     u234:
   476     071A                     l726:
   477                           
   478                           ;newmain.c: 147:     PORTD=data;
   479     071A  0870               	movf	display@data,w
   480     071B  0088               	movwf	8	;volatile
   481     071C                     l728:
   482                           
   483                           ;newmain.c: 148:     RB1=1;
   484     071C  1486               	bsf	6,1	;volatile
   485                           
   486                           ;newmain.c: 149:     _delay((unsigned long)((10)*(10000000/4000.0)));
   487     071D  3021               	movlw	33
   488     071E  00F2               	movwf	??_display+1
   489     071F  3076               	movlw	118
   490     0720  00F1               	movwf	??_display
   491     0721                     u347:
   492     0721  0BF1               	decfsz	??_display,f
   493     0722  2F21               	goto	u347
   494     0723  0BF2               	decfsz	??_display+1,f
   495     0724  2F21               	goto	u347
   496     0725  0000               	nop
   497     0726                     l730:
   498                           
   499                           ;newmain.c: 150:     RB1=0;
   500     0726  1283               	bcf	3,5	;RP0=0, select bank0
   501     0727  1303               	bcf	3,6	;RP1=0, select bank0
   502     0728  1086               	bcf	6,1	;volatile
   503                           
   504                           ;newmain.c: 151:     _delay((unsigned long)((10)*(10000000/4000.0)));
   505     0729  3021               	movlw	33
   506     072A  00F2               	movwf	??_display+1
   507     072B  3076               	movlw	118
   508     072C  00F1               	movwf	??_display
   509     072D                     u357:
   510     072D  0BF1               	decfsz	??_display,f
   511     072E  2F2D               	goto	u357
   512     072F  0BF2               	decfsz	??_display+1,f
   513     0730  2F2D               	goto	u357
   514     0731  0000               	nop
   515     0732                     l110:
   516     0732  0008               	return
   517     0733                     __end_of_display:
   518                           
   519                           	psect	text2
   520     0733                     __ptext2:	
   521 ;; *************** function _I2C_read *****************
   522 ;; Defined at:
   523 ;;		line 55 in file "newmain.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  msb_add         1    wreg     unsigned char 
   526 ;;  lsb_add         1    0[COMMON] unsigned char 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  msb_add         1    1[COMMON] unsigned char 
   529 ;;  data            1    2[COMMON] unsigned char 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      unsigned char 
   532 ;; Registers used:
   533 ;;		wreg
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         1       0       0       0       0
   540 ;;      Locals:         2       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         3       0       0       0       0
   543 ;;Total ram usage:        3 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552     0733                     _I2C_read:	
   553                           ;psect for function _I2C_read
   554                           
   555                           
   556                           ;incstack = 0
   557                           ; Regs used in _I2C_read: [wreg]
   558                           ;I2C_read@msb_add stored from wreg
   559     0733  00F1               	movwf	I2C_read@msb_add
   560     0734                     l732:
   561                           
   562                           ;newmain.c: 55: unsigned char I2C_read(unsigned char msb_add, unsigned char lsb_add);new
      +                          main.c: 56: {;newmain.c: 57:     unsigned char data;;newmain.c: 58:     SEN=1;
   563     0734  1683               	bsf	3,5	;RP0=1, select bank1
   564     0735  1303               	bcf	3,6	;RP1=0, select bank1
   565     0736  1411               	bsf	17,0	;volatile
   566     0737                     l47:	
   567                           ;newmain.c: 59:     while(SSPIF==0);
   568                           
   569     0737  1283               	bcf	3,5	;RP0=0, select bank0
   570     0738  1D8C               	btfss	12,3	;volatile
   571     0739  2F3B               	goto	u241
   572     073A  2F3C               	goto	u240
   573     073B                     u241:
   574     073B  2F37               	goto	l47
   575     073C                     u240:
   576     073C                     l49:
   577                           
   578                           ;newmain.c: 60:     SSPIF=0;
   579     073C  118C               	bcf	12,3	;volatile
   580                           
   581                           ;newmain.c: 62:     SSPBUF=0xA0;
   582     073D  30A0               	movlw	160
   583     073E  0093               	movwf	19	;volatile
   584     073F                     l50:	
   585                           ;newmain.c: 63:     while(SSPIF==0);
   586                           
   587     073F  1D8C               	btfss	12,3	;volatile
   588     0740  2F42               	goto	u251
   589     0741  2F43               	goto	u250
   590     0742                     u251:
   591     0742  2F3F               	goto	l50
   592     0743                     u250:
   593     0743                     l52:
   594                           
   595                           ;newmain.c: 64:     SSPIF=0;
   596     0743  118C               	bcf	12,3	;volatile
   597     0744                     l734:
   598                           
   599                           ;newmain.c: 66:     SSPBUF=msb_add;
   600     0744  0871               	movf	I2C_read@msb_add,w
   601     0745  0093               	movwf	19	;volatile
   602     0746                     l53:	
   603                           ;newmain.c: 67:     while(SSPIF==0);
   604                           
   605     0746  1D8C               	btfss	12,3	;volatile
   606     0747  2F49               	goto	u261
   607     0748  2F4A               	goto	u260
   608     0749                     u261:
   609     0749  2F46               	goto	l53
   610     074A                     u260:
   611     074A                     l55:
   612                           
   613                           ;newmain.c: 68:     SSPIF=0;
   614     074A  118C               	bcf	12,3	;volatile
   615     074B                     l736:
   616                           
   617                           ;newmain.c: 70:     SSPBUF=lsb_add;
   618     074B  0870               	movf	I2C_read@lsb_add,w
   619     074C  0093               	movwf	19	;volatile
   620     074D                     l56:	
   621                           ;newmain.c: 71:     while(SSPIF==0);
   622                           
   623     074D  1D8C               	btfss	12,3	;volatile
   624     074E  2F50               	goto	u271
   625     074F  2F51               	goto	u270
   626     0750                     u271:
   627     0750  2F4D               	goto	l56
   628     0751                     u270:
   629     0751                     l58:
   630                           
   631                           ;newmain.c: 72:     SSPIF=0;
   632     0751  118C               	bcf	12,3	;volatile
   633                           
   634                           ;newmain.c: 74:     RSEN=1;
   635     0752  1683               	bsf	3,5	;RP0=1, select bank1
   636     0753  1303               	bcf	3,6	;RP1=0, select bank1
   637     0754  1491               	bsf	17,1	;volatile
   638     0755                     l59:	
   639                           ;newmain.c: 75:     while(SSPIF==0);
   640                           
   641     0755  1283               	bcf	3,5	;RP0=0, select bank0
   642     0756  1D8C               	btfss	12,3	;volatile
   643     0757  2F59               	goto	u281
   644     0758  2F5A               	goto	u280
   645     0759                     u281:
   646     0759  2F55               	goto	l59
   647     075A                     u280:
   648     075A                     l61:
   649                           
   650                           ;newmain.c: 76:     SSPIF=0;
   651     075A  118C               	bcf	12,3	;volatile
   652                           
   653                           ;newmain.c: 78:     SSPBUF=0xA1;
   654     075B  30A1               	movlw	161
   655     075C  0093               	movwf	19	;volatile
   656     075D                     l62:	
   657                           ;newmain.c: 79:     while(SSPIF==0);
   658                           
   659     075D  1D8C               	btfss	12,3	;volatile
   660     075E  2F60               	goto	u291
   661     075F  2F61               	goto	u290
   662     0760                     u291:
   663     0760  2F5D               	goto	l62
   664     0761                     u290:
   665     0761                     l64:
   666                           
   667                           ;newmain.c: 80:     SSPIF=0;
   668     0761  118C               	bcf	12,3	;volatile
   669                           
   670                           ;newmain.c: 82:     RCEN=1;
   671     0762  1683               	bsf	3,5	;RP0=1, select bank1
   672     0763  1303               	bcf	3,6	;RP1=0, select bank1
   673     0764  1591               	bsf	17,3	;volatile
   674     0765                     l65:	
   675                           ;newmain.c: 83:     while(SSPIF==0);
   676                           
   677     0765  1283               	bcf	3,5	;RP0=0, select bank0
   678     0766  1D8C               	btfss	12,3	;volatile
   679     0767  2F69               	goto	u301
   680     0768  2F6A               	goto	u300
   681     0769                     u301:
   682     0769  2F65               	goto	l65
   683     076A                     u300:
   684     076A                     l67:
   685                           
   686                           ;newmain.c: 84:     SSPIF=0;
   687     076A  118C               	bcf	12,3	;volatile
   688     076B                     l738:
   689                           
   690                           ;newmain.c: 85:     data=SSPBUF;
   691     076B  0813               	movf	19,w	;volatile
   692     076C  00F2               	movwf	I2C_read@data
   693     076D                     l740:
   694                           
   695                           ;newmain.c: 86:     ACKDT=1;
   696     076D  1683               	bsf	3,5	;RP0=1, select bank1
   697     076E  1303               	bcf	3,6	;RP1=0, select bank1
   698     076F  1691               	bsf	17,5	;volatile
   699     0770                     l742:
   700                           
   701                           ;newmain.c: 87:     ACKEN=1;
   702     0770  1611               	bsf	17,4	;volatile
   703     0771                     l68:	
   704                           ;newmain.c: 88:     while(SSPIF==0);
   705                           
   706     0771  1283               	bcf	3,5	;RP0=0, select bank0
   707     0772  1D8C               	btfss	12,3	;volatile
   708     0773  2F75               	goto	u311
   709     0774  2F76               	goto	u310
   710     0775                     u311:
   711     0775  2F71               	goto	l68
   712     0776                     u310:
   713     0776                     l70:
   714                           
   715                           ;newmain.c: 89:     SSPIF=0;
   716     0776  118C               	bcf	12,3	;volatile
   717                           
   718                           ;newmain.c: 91:     PEN=1;
   719     0777  1683               	bsf	3,5	;RP0=1, select bank1
   720     0778  1303               	bcf	3,6	;RP1=0, select bank1
   721     0779  1511               	bsf	17,2	;volatile
   722     077A                     l71:	
   723                           ;newmain.c: 92:     while(SSPIF==0);
   724                           
   725     077A  1283               	bcf	3,5	;RP0=0, select bank0
   726     077B  1D8C               	btfss	12,3	;volatile
   727     077C  2F7E               	goto	u321
   728     077D  2F7F               	goto	u320
   729     077E                     u321:
   730     077E  2F7A               	goto	l71
   731     077F                     u320:
   732     077F                     l73:
   733                           
   734                           ;newmain.c: 93:     SSPIF=0;
   735     077F  118C               	bcf	12,3	;volatile
   736     0780                     l744:
   737                           
   738                           ;newmain.c: 95:     return data;
   739     0780  0872               	movf	I2C_read@data,w
   740     0781                     l74:
   741     0781  0008               	return
   742     0782                     __end_of_I2C_read:
   743     0002                     ___latbits      equ	2
   744     007E                     btemp           set	126	;btemp
   745     007E                     wtemp0          set	126
   746                           
   747                           	psect	config
   748                           
   749                           ;Config register CONFIG @ 0x2007
   750                           ;	Oscillator Selection bits
   751                           ;	FOSC = HS, HS oscillator
   752                           ;	Watchdog Timer Enable bit
   753                           ;	WDTE = OFF, WDT disabled
   754                           ;	Power-up Timer Enable bit
   755                           ;	PWRTE = OFF, PWRT disabled
   756                           ;	Brown-out Reset Enable bit
   757                           ;	BOREN = OFF, BOR disabled
   758                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   759                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   760                           ;	Data EEPROM Memory Code Protection bit
   761                           ;	CPD = OFF, Data EEPROM code protection off
   762                           ;	Flash Program Memory Write Enable bits
   763                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   764                           ;	In-Circuit Debugger Mode bit
   765                           ;	DEBUG = 0x1, unprogrammed default
   766                           ;	Flash Program Memory Code Protection bit
   767                           ;	CP = OFF, Code protection off
   768     2007                     	org	8199
   769     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     251
                                              4 COMMON     4     4      0
                           _I2C_read
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              4     3      1      57
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _I2C_read                                             3     2      1      79
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_read
   _display

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Feb 13 12:32:23 2025

                     l41 07F8                       l50 073F                       l42 07F8  
                     l52 0743                       l61 075A                       l53 0746  
                     l70 0776                       l62 075D                       l71 077A  
                     l55 074A                       l47 0737                       l64 0761  
                     l56 074D                       l73 077F                       l65 0765  
                     l49 073C                       l74 0781                       l58 0751  
                     l67 076A                       l59 0755                       l68 0771  
                    l110 0732                      l730 0726                      l740 076D  
                    l732 0734                      l724 0710                      l742 0770  
                    l734 0744                      l726 071A                      l750 0786  
                    l744 0780                      l736 074B                      l728 071C  
                    l760 07AC                      l752 078A                      l738 076B  
                    l770 07D6                      l762 07B4                      l754 078E  
                    l772 07DF                      l764 07BD                      l756 079B  
                    l748 0782                      l774 07E7                      l766 07C5  
                    l758 07A3                      l776 07F0                      l768 07CE  
                    _RB0 0030                      _RB1 0031                      u300 076A  
                    u220 0717                      u301 0769                      u221 0713  
                    u310 0776                      u311 0775                      u320 077F  
                    u240 073C                      u321 077E                      u241 073B  
                    u250 0743                      u234 071A                      u251 0742  
                    u260 074A                      u261 0749                      u270 0751  
                    u271 0750                      u280 075A                      _PEN 048A  
                    u281 0759                      u337 0794                      u290 0761  
                    u291 0760                      u347 0721                      u357 072D  
                    _SEN 0488                     _RCEN 048B                     _RSEN 0489  
            display@data 0070                     _main 0782                     btemp 007E  
       __end_of_I2C_read 0782                     start 0000                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
        __end_of_display 0733                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 _SSPADD 0093                   _SSPCON 0014                   _SSPBUF 0013  
              ??_display 0071                ?_I2C_read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_I2C_read 0071               __pmaintext 0782  
                __ptext1 070F                  __ptext2 0733                  _display 070F  
   end_of_initialization 07FC             I2C_read@data 0072      start_initialization 07FC  
              ___latbits 0002                 ?_display 0070                 _I2C_read 0733  
              display@rs 0073          I2C_read@lsb_add 0070          I2C_read@msb_add 0071  
               main@data 0077  
