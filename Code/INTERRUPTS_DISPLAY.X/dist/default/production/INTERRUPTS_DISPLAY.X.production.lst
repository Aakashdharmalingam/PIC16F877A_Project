

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 19 20:33:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,space=0,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Generated 12/10/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0004                     fsr             equ	4
    83     0004                     fsr0            equ	4
    84     0000                     indf            equ	0
    85     0000                     indf0           equ	0
    86     0002                     pc              equ	2
    87     0002                     pcl             equ	2
    88     000A                     pclath          equ	10
    89     0003                     status          equ	3
    90     0000                     INDF            equ	0	;# 
    91     0001                     TMR0            equ	1	;# 
    92     0002                     PCL             equ	2	;# 
    93     0003                     STATUS          equ	3	;# 
    94     0004                     FSR             equ	4	;# 
    95     0005                     PORTA           equ	5	;# 
    96     0006                     PORTB           equ	6	;# 
    97     0007                     PORTC           equ	7	;# 
    98     0008                     PORTD           equ	8	;# 
    99     0009                     PORTE           equ	9	;# 
   100     000A                     PCLATH          equ	10	;# 
   101     000B                     INTCON          equ	11	;# 
   102     000C                     PIR1            equ	12	;# 
   103     000D                     PIR2            equ	13	;# 
   104     000E                     TMR1            equ	14	;# 
   105     000E                     TMR1L           equ	14	;# 
   106     000F                     TMR1H           equ	15	;# 
   107     0010                     T1CON           equ	16	;# 
   108     0011                     TMR2            equ	17	;# 
   109     0012                     T2CON           equ	18	;# 
   110     0013                     SSPBUF          equ	19	;# 
   111     0014                     SSPCON          equ	20	;# 
   112     0015                     CCPR1           equ	21	;# 
   113     0015                     CCPR1L          equ	21	;# 
   114     0016                     CCPR1H          equ	22	;# 
   115     0017                     CCP1CON         equ	23	;# 
   116     0018                     RCSTA           equ	24	;# 
   117     0019                     TXREG           equ	25	;# 
   118     001A                     RCREG           equ	26	;# 
   119     001B                     CCPR2           equ	27	;# 
   120     001B                     CCPR2L          equ	27	;# 
   121     001C                     CCPR2H          equ	28	;# 
   122     001D                     CCP2CON         equ	29	;# 
   123     001E                     ADRESH          equ	30	;# 
   124     001F                     ADCON0          equ	31	;# 
   125     0081                     OPTION_REG      equ	129	;# 
   126     0085                     TRISA           equ	133	;# 
   127     0086                     TRISB           equ	134	;# 
   128     0087                     TRISC           equ	135	;# 
   129     0088                     TRISD           equ	136	;# 
   130     0089                     TRISE           equ	137	;# 
   131     008C                     PIE1            equ	140	;# 
   132     008D                     PIE2            equ	141	;# 
   133     008E                     PCON            equ	142	;# 
   134     0091                     SSPCON2         equ	145	;# 
   135     0092                     PR2             equ	146	;# 
   136     0093                     SSPADD          equ	147	;# 
   137     0094                     SSPSTAT         equ	148	;# 
   138     0098                     TXSTA           equ	152	;# 
   139     0099                     SPBRG           equ	153	;# 
   140     009C                     CMCON           equ	156	;# 
   141     009D                     CVRCON          equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     010C                     EEDATA          equ	268	;# 
   145     010D                     EEADR           equ	269	;# 
   146     010E                     EEDATH          equ	270	;# 
   147     010F                     EEADRH          equ	271	;# 
   148     018C                     EECON1          equ	396	;# 
   149     018D                     EECON2          equ	397	;# 
   150     0000                     INDF            equ	0	;# 
   151     0001                     TMR0            equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR             equ	4	;# 
   155     0005                     PORTA           equ	5	;# 
   156     0006                     PORTB           equ	6	;# 
   157     0007                     PORTC           equ	7	;# 
   158     0008                     PORTD           equ	8	;# 
   159     0009                     PORTE           equ	9	;# 
   160     000A                     PCLATH          equ	10	;# 
   161     000B                     INTCON          equ	11	;# 
   162     000C                     PIR1            equ	12	;# 
   163     000D                     PIR2            equ	13	;# 
   164     000E                     TMR1            equ	14	;# 
   165     000E                     TMR1L           equ	14	;# 
   166     000F                     TMR1H           equ	15	;# 
   167     0010                     T1CON           equ	16	;# 
   168     0011                     TMR2            equ	17	;# 
   169     0012                     T2CON           equ	18	;# 
   170     0013                     SSPBUF          equ	19	;# 
   171     0014                     SSPCON          equ	20	;# 
   172     0015                     CCPR1           equ	21	;# 
   173     0015                     CCPR1L          equ	21	;# 
   174     0016                     CCPR1H          equ	22	;# 
   175     0017                     CCP1CON         equ	23	;# 
   176     0018                     RCSTA           equ	24	;# 
   177     0019                     TXREG           equ	25	;# 
   178     001A                     RCREG           equ	26	;# 
   179     001B                     CCPR2           equ	27	;# 
   180     001B                     CCPR2L          equ	27	;# 
   181     001C                     CCPR2H          equ	28	;# 
   182     001D                     CCP2CON         equ	29	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISA           equ	133	;# 
   187     0086                     TRISB           equ	134	;# 
   188     0087                     TRISC           equ	135	;# 
   189     0088                     TRISD           equ	136	;# 
   190     0089                     TRISE           equ	137	;# 
   191     008C                     PIE1            equ	140	;# 
   192     008D                     PIE2            equ	141	;# 
   193     008E                     PCON            equ	142	;# 
   194     0091                     SSPCON2         equ	145	;# 
   195     0092                     PR2             equ	146	;# 
   196     0093                     SSPADD          equ	147	;# 
   197     0094                     SSPSTAT         equ	148	;# 
   198     0098                     TXSTA           equ	152	;# 
   199     0099                     SPBRG           equ	153	;# 
   200     009C                     CMCON           equ	156	;# 
   201     009D                     CVRCON          equ	157	;# 
   202     009E                     ADRESL          equ	158	;# 
   203     009F                     ADCON1          equ	159	;# 
   204     010C                     EEDATA          equ	268	;# 
   205     010D                     EEADR           equ	269	;# 
   206     010E                     EEDATH          equ	270	;# 
   207     010F                     EEADRH          equ	271	;# 
   208     018C                     EECON1          equ	396	;# 
   209     018D                     EECON2          equ	397	;# 
   210     001E                     _ADRESH         set	30
   211     0006                     _PORTB          set	6
   212     0007                     _PORTC          set	7
   213     0008                     _PORTD          set	8
   214     001F                     _ADCON0         set	31
   215     0059                     _INTF           set	89
   216     0041                     _RD1            set	65
   217     0040                     _RD0            set	64
   218     00FA                     _GO_nDONE       set	250
   219     005F                     _GIE            set	95
   220     005C                     _INTE           set	92
   221     009E                     _ADRESL         set	158
   222     0087                     _TRISC          set	135
   223     0088                     _TRISD          set	136
   224     0081                     _OPTION_REG     set	129
   225     009F                     _ADCON1         set	159
   226                           
   227                           	psect	strings
   228     0800                     __pstrings:
   229     0800                     stringtab:
   230     0800                     __stringtab:
   231     0800                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234     0800                     stringdir:
   235     0800  3008               	movlw	high stringdir
   236     0801  008A               	movwf	10
   237     0802  0804               	movf	4,w
   238     0803  0A84               	incf	4,f
   239     0804  0782               	addwf	2,f
   240     0805                     __stringbase:
   241     0805  3400               	retlw	0
   242     0806                     __end_of__stringtab:
   243     0806                     STR_1:
   244     0806  3425               	retlw	37	;'%'
   245     0807  3430               	retlw	48	;'0'
   246     0808  3434               	retlw	52	;'4'
   247     0809  3464               	retlw	100	;'d'
   248     080A  3400               	retlw	0
   249     0806                     STR_2           equ	STR_1
   250     0806                     STR_3           equ	STR_1
   251                           
   252                           	psect	cinit
   253     0015                     start_initialization:	
   254                           ; #config settings
   255                           
   256     0015                     __initialization:
   257                           
   258                           ; Clear objects allocated to BANK0
   259     0015  1283               	bcf	3,5	;RP0=0, select bank0
   260     0016  1303               	bcf	3,6	;RP1=0, select bank0
   261     0017  01E9               	clrf	__pbssBANK0& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK1
   264     0018  1683               	bsf	3,5	;RP0=1, select bank1
   265     0019  1303               	bcf	3,6	;RP1=0, select bank1
   266     001A  01E2               	clrf	__pbssBANK1& (0+127)
   267     001B  01E3               	clrf	(__pbssBANK1+1)& (0+127)
   268                           
   269                           ; Clear objects allocated to BANK3
   270     001C  1783               	bsf	3,7	;select IRP bank2
   271     001D  30BF               	movlw	low __pbssBANK3
   272     001E  0084               	movwf	4
   273     001F  30E3               	movlw	low (__pbssBANK3+36)
   274     0020  120A  158A  24F8  120A  118A  	fcall	clear_ram0
   275     0025                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278     0025                     __end_of__initialization:
   279     0025  0183               	clrf	3
   280     0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283     0069                     __pbssBANK0:
   284     0069                     _flags:
   285     0069                     	ds	1
   286                           
   287                           	psect	bssBANK1
   288     00E2                     __pbssBANK1:
   289     00E2                     _width:
   290     00E2                     	ds	2
   291                           
   292                           	psect	bssBANK3
   293     01BF                     __pbssBANK3:
   294     01BF                     _prec:
   295     01BF                     	ds	2
   296     01C1                     _count:
   297     01C1                     	ds	2
   298     01C3                     _dbuf:
   299     01C3                     	ds	32
   300                           
   301                           	psect	clrtext
   302     0CF8                     clear_ram0:	
   303                           ;	Called with FSR containing the base address, and
   304                           ;	W with the last address+1
   305                           
   306     0CF8  0064               	clrwdt	;clear the watchdog before getting into this loop
   307     0CF9                     clrloop0:
   308     0CF9  0180               	clrf	0	;clear RAM location pointed to by FSR
   309     0CFA  0A84               	incf	4,f	;increment pointer
   310     0CFB  0604               	xorwf	4,w	;XOR with final address
   311     0CFC  1903               	btfsc	3,2	;have we reached the end yet?
   312     0CFD  3400               	retlw	0	;all done for this memory range, return
   313     0CFE  0604               	xorwf	4,w	;XOR again to restore value
   314     0CFF  2CF9               	goto	clrloop0	;do the next byte
   315                           
   316                           	psect	cstackBANK3
   317     0190                     __pcstackBANK3:
   318     0190                     ?_vfprintf:
   319     0190                     vfprintf@fp:	
   320                           ; 2 bytes @ 0x0
   321                           
   322                           
   323                           ; 2 bytes @ 0x0
   324     0190                     	ds	2
   325     0192                     vfprintf@fmt:
   326                           
   327                           ; 1 bytes @ 0x2
   328     0192                     	ds	1
   329     0193                     vfprintf@ap:
   330                           
   331                           ; 1 bytes @ 0x3
   332     0193                     	ds	1
   333     0194                     ?_sprintf:
   334     0194                     sprintf@s:	
   335                           ; 2 bytes @ 0x4
   336                           
   337                           
   338                           ; 2 bytes @ 0x4
   339     0194                     	ds	2
   340     0196                     sprintf@fmt:
   341                           
   342                           ; 1 bytes @ 0x6
   343     0196                     	ds	3
   344     0199                     ??_sprintf:
   345                           
   346                           ; 1 bytes @ 0x9
   347     0199                     	ds	3
   348     019C                     sprintf@ap:
   349                           
   350                           ; 1 bytes @ 0xC
   351     019C                     	ds	1
   352     019D                     sprintf@f:
   353                           
   354                           ; 11 bytes @ 0xD
   355     019D                     	ds	11
   356     01A8                     ??_main:
   357                           
   358                           ; 1 bytes @ 0x18
   359     01A8                     	ds	3
   360     01AB                     main@arr:
   361                           
   362                           ; 10 bytes @ 0x1B
   363     01AB                     	ds	10
   364     01B5                     main@low_bit:
   365                           
   366                           ; 2 bytes @ 0x25
   367     01B5                     	ds	2
   368     01B7                     main@high_bit:
   369                           
   370                           ; 2 bytes @ 0x27
   371     01B7                     	ds	2
   372     01B9                     main@bits:
   373                           
   374                           ; 2 bytes @ 0x29
   375     01B9                     	ds	2
   376     01BB                     main@i:
   377                           
   378                           ; 2 bytes @ 0x2B
   379     01BB                     	ds	2
   380     01BD                     main@i_69:
   381                           
   382                           ; 2 bytes @ 0x2D
   383     01BD                     	ds	2
   384                           
   385                           	psect	cstackBANK1
   386     00A0                     __pcstackBANK1:
   387     00A0                     ISR@br:
   388                           
   389                           ; 10 bytes @ 0x0
   390     00A0                     	ds	10
   391     00AA                     ISR@i:
   392                           
   393                           ; 2 bytes @ 0xA
   394     00AA                     	ds	2
   395     00AC                     ?_display:
   396     00AC                     ?_fputc:	
   397                           ; 1 bytes @ 0xC
   398                           
   399     00AC                     ?___wmul:	
   400                           ; 2 bytes @ 0xC
   401                           
   402     00AC                     ?___awdiv:	
   403                           ; 2 bytes @ 0xC
   404                           
   405     00AC                     ?___awmod:	
   406                           ; 2 bytes @ 0xC
   407                           
   408     00AC                     display@RS:	
   409                           ; 2 bytes @ 0xC
   410                           
   411     00AC                     ___wmul@multiplier:	
   412                           ; 2 bytes @ 0xC
   413                           
   414     00AC                     ___awdiv@divisor:	
   415                           ; 2 bytes @ 0xC
   416                           
   417     00AC                     ___awmod@divisor:	
   418                           ; 2 bytes @ 0xC
   419                           
   420     00AC                     fputc@c:	
   421                           ; 2 bytes @ 0xC
   422                           
   423     00AC                     ??_putch:	
   424                           ; 2 bytes @ 0xC
   425                           
   426                           
   427                           ; 1 bytes @ 0xC
   428     00AC                     	ds	2
   429     00AE                     display@DC:
   430     00AE                     ___wmul@multiplicand:	
   431                           ; 2 bytes @ 0xE
   432                           
   433     00AE                     ___awdiv@dividend:	
   434                           ; 2 bytes @ 0xE
   435                           
   436     00AE                     ___awmod@dividend:	
   437                           ; 2 bytes @ 0xE
   438                           
   439     00AE                     fputc@fp:	
   440                           ; 2 bytes @ 0xE
   441                           
   442                           
   443                           ; 2 bytes @ 0xE
   444     00AE                     	ds	2
   445     00B0                     ___awdiv@counter:
   446     00B0                     ___awmod@counter:	
   447                           ; 1 bytes @ 0x10
   448                           
   449     00B0                     ___wmul@product:	
   450                           ; 1 bytes @ 0x10
   451                           
   452     00B0                     ??_display:	
   453                           ; 2 bytes @ 0x10
   454                           
   455     00B0                     ??_fputc:	
   456                           ; 1 bytes @ 0x10
   457                           
   458     00B0                     ??___wmul:	
   459                           ; 1 bytes @ 0x10
   460                           
   461     00B0                     ??___awdiv:	
   462                           ; 1 bytes @ 0x10
   463                           
   464     00B0                     ??___awmod:	
   465                           ; 1 bytes @ 0x10
   466                           
   467                           
   468                           ; 1 bytes @ 0x10
   469     00B0                     	ds	1
   470     00B1                     ___awdiv@sign:
   471     00B1                     ___awmod@sign:	
   472                           ; 1 bytes @ 0x11
   473                           
   474                           
   475                           ; 1 bytes @ 0x11
   476     00B1                     	ds	1
   477     00B2                     ?_abs:
   478     00B2                     ?_read_prec_or_width:	
   479                           ; 2 bytes @ 0x12
   480                           
   481     00B2                     read_prec_or_width@fmt:	
   482                           ; 2 bytes @ 0x12
   483                           
   484     00B2                     ___awdiv@quotient:	
   485                           ; 1 bytes @ 0x12
   486                           
   487     00B2                     abs@a:	
   488                           ; 2 bytes @ 0x12
   489                           
   490                           
   491                           ; 2 bytes @ 0x12
   492     00B2                     	ds	1
   493     00B3                     read_prec_or_width@ap:
   494                           
   495                           ; 1 bytes @ 0x13
   496     00B3                     	ds	1
   497     00B4                     read_prec_or_width@c:
   498     00B4                     ??_abs:	
   499                           ; 1 bytes @ 0x14
   500                           
   501     00B4                     ??_read_prec_or_width:	
   502                           ; 1 bytes @ 0x14
   503                           
   504                           
   505                           ; 1 bytes @ 0x14
   506     00B4                     	ds	1
   507     00B5                     read_prec_or_width@n:
   508                           
   509                           ; 2 bytes @ 0x15
   510     00B5                     	ds	4
   511     00B9                     ?_fputs:
   512     00B9                     fputs@s:	
   513                           ; 2 bytes @ 0x19
   514                           
   515                           
   516                           ; 1 bytes @ 0x19
   517     00B9                     	ds	1
   518     00BA                     fputs@fp:
   519                           
   520                           ; 2 bytes @ 0x1A
   521     00BA                     	ds	2
   522     00BC                     ??_fputs:
   523                           
   524                           ; 1 bytes @ 0x1C
   525     00BC                     	ds	2
   526     00BE                     fputs@c:
   527                           
   528                           ; 1 bytes @ 0x1E
   529     00BE                     	ds	1
   530     00BF                     fputs@i:
   531                           
   532                           ; 2 bytes @ 0x1F
   533     00BF                     	ds	2
   534     00C1                     ?_pad:
   535     00C1                     pad@fp:	
   536                           ; 1 bytes @ 0x21
   537                           
   538                           
   539                           ; 2 bytes @ 0x21
   540     00C1                     	ds	2
   541     00C3                     pad@buf:
   542                           
   543                           ; 1 bytes @ 0x23
   544     00C3                     	ds	1
   545     00C4                     pad@p:
   546                           
   547                           ; 2 bytes @ 0x24
   548     00C4                     	ds	2
   549     00C6                     ??_pad:
   550                           
   551                           ; 1 bytes @ 0x26
   552     00C6                     	ds	1
   553     00C7                     pad@i:
   554                           
   555                           ; 2 bytes @ 0x27
   556     00C7                     	ds	2
   557     00C9                     ?_dtoa:
   558     00C9                     dtoa@fp:	
   559                           ; 1 bytes @ 0x29
   560                           
   561                           
   562                           ; 2 bytes @ 0x29
   563     00C9                     	ds	2
   564     00CB                     dtoa@d:
   565                           
   566                           ; 2 bytes @ 0x2B
   567     00CB                     	ds	2
   568     00CD                     _dtoa$601:
   569     00CD                     ??_dtoa:	
   570                           ; 2 bytes @ 0x2D
   571                           
   572                           
   573                           ; 1 bytes @ 0x2D
   574     00CD                     	ds	2
   575     00CF                     dtoa@p:
   576                           
   577                           ; 1 bytes @ 0x2F
   578     00CF                     	ds	1
   579     00D0                     dtoa@w:
   580                           
   581                           ; 2 bytes @ 0x30
   582     00D0                     	ds	2
   583     00D2                     dtoa@s:
   584                           
   585                           ; 1 bytes @ 0x32
   586     00D2                     	ds	1
   587     00D3                     dtoa@i:
   588                           
   589                           ; 2 bytes @ 0x33
   590     00D3                     	ds	2
   591     00D5                     ?_vfpfcnvrt:
   592     00D5                     vfpfcnvrt@fp:	
   593                           ; 1 bytes @ 0x35
   594                           
   595                           
   596                           ; 2 bytes @ 0x35
   597     00D5                     	ds	2
   598     00D7                     vfpfcnvrt@fmt:
   599                           
   600                           ; 1 bytes @ 0x37
   601     00D7                     	ds	1
   602     00D8                     vfpfcnvrt@ap:
   603                           
   604                           ; 1 bytes @ 0x38
   605     00D8                     	ds	1
   606     00D9                     ??_vfpfcnvrt:
   607                           
   608                           ; 1 bytes @ 0x39
   609     00D9                     	ds	2
   610     00DB                     vfpfcnvrt@convarg:
   611                           
   612                           ; 4 bytes @ 0x3B
   613     00DB                     	ds	4
   614     00DF                     vfpfcnvrt@done:
   615                           
   616                           ; 1 bytes @ 0x3F
   617     00DF                     	ds	1
   618     00E0                     vfpfcnvrt@cp:
   619                           
   620                           ; 1 bytes @ 0x40
   621     00E0                     	ds	1
   622     00E1                     vfprintf@cfmt:
   623     00E1                     ??_vfprintf:	
   624                           ; 1 bytes @ 0x41
   625                           
   626                           
   627                           ; 1 bytes @ 0x41
   628     00E1                     	ds	1
   629                           
   630                           	psect	cstackCOMMON
   631     0070                     __pcstackCOMMON:
   632     0070                     ?_putch:
   633     0070                     ?_main:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_ISR:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?i1_display:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?i1_putch:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?i1___wmul:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?i1___awdiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651     0070                     ?i1___awmod:	
   652                           ; 2 bytes @ 0x0
   653                           
   654     0070                     ?i1_fputc:	
   655                           ; 2 bytes @ 0x0
   656                           
   657     0070                     putch@c:	
   658                           ; 2 bytes @ 0x0
   659                           
   660     0070                     i1display@RS:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     i1___wmul@multiplier:	
   664                           ; 2 bytes @ 0x0
   665                           
   666     0070                     i1___awdiv@divisor:	
   667                           ; 2 bytes @ 0x0
   668                           
   669     0070                     i1___awmod@divisor:	
   670                           ; 2 bytes @ 0x0
   671                           
   672     0070                     i1fputc@c:	
   673                           ; 2 bytes @ 0x0
   674                           
   675     0070                     ??i1_putch:	
   676                           ; 2 bytes @ 0x0
   677                           
   678                           
   679                           ; 1 bytes @ 0x0
   680     0070                     	ds	2
   681     0072                     i1display@DC:
   682     0072                     i1___wmul@multiplicand:	
   683                           ; 2 bytes @ 0x2
   684                           
   685     0072                     i1___awdiv@dividend:	
   686                           ; 2 bytes @ 0x2
   687                           
   688     0072                     i1___awmod@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691     0072                     i1fputc@fp:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696     0072                     	ds	2
   697     0074                     i1___awdiv@counter:
   698     0074                     i1___awmod@counter:	
   699                           ; 1 bytes @ 0x4
   700                           
   701     0074                     i1___wmul@product:	
   702                           ; 1 bytes @ 0x4
   703                           
   704     0074                     ??i1_display:	
   705                           ; 2 bytes @ 0x4
   706                           
   707     0074                     ??i1___wmul:	
   708                           ; 1 bytes @ 0x4
   709                           
   710     0074                     ??i1___awdiv:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0074                     ??i1___awmod:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     ??i1_fputc:	
   717                           ; 1 bytes @ 0x4
   718                           
   719                           
   720                           ; 1 bytes @ 0x4
   721     0074                     	ds	1
   722     0075                     i1___awdiv@sign:
   723     0075                     i1___awmod@sign:	
   724                           ; 1 bytes @ 0x5
   725                           
   726                           
   727                           ; 1 bytes @ 0x5
   728     0075                     	ds	1
   729     0076                     ?i1_read_prec_or_width:
   730     0076                     ?i1_abs:	
   731                           ; 2 bytes @ 0x6
   732                           
   733     0076                     i1read_prec_or_width@fmt:	
   734                           ; 2 bytes @ 0x6
   735                           
   736     0076                     i1___awdiv@quotient:	
   737                           ; 1 bytes @ 0x6
   738                           
   739     0076                     i1abs@a:	
   740                           ; 2 bytes @ 0x6
   741                           
   742                           
   743                           ; 2 bytes @ 0x6
   744     0076                     	ds	1
   745     0077                     i1read_prec_or_width@ap:
   746                           
   747                           ; 2 bytes @ 0x7
   748     0077                     	ds	1
   749     0078                     ??i1_abs:
   750                           
   751                           ; 1 bytes @ 0x8
   752     0078                     	ds	1
   753     0079                     ??i1_read_prec_or_width:
   754                           
   755                           ; 1 bytes @ 0x9
   756     0079                     	ds	2
   757     007B                     i1read_prec_or_width@c:
   758                           
   759                           ; 1 bytes @ 0xB
   760     007B                     	ds	1
   761     007C                     i1read_prec_or_width@n:
   762                           
   763                           ; 2 bytes @ 0xC
   764     007C                     	ds	1
   765     007D                     ??i1_pad:
   766                           
   767                           ; 1 bytes @ 0xD
   768     007D                     	ds	1
   769     007E                     ??i1_dtoa:
   770     007E                     ??i1_vfprintf:	
   771                           ; 1 bytes @ 0xE
   772                           
   773                           
   774                           	psect	cstackBANK0
   775     0020                     __pcstackBANK0:	
   776                           ; 1 bytes @ 0xE
   777                           
   778     0020                     ?i1_fputs:
   779     0020                     i1fputs@s:	
   780                           ; 2 bytes @ 0x0
   781                           
   782                           
   783                           ; 1 bytes @ 0x0
   784     0020                     	ds	1
   785     0021                     i1fputs@fp:
   786                           
   787                           ; 2 bytes @ 0x1
   788     0021                     	ds	2
   789     0023                     ??i1_fputs:
   790                           
   791                           ; 1 bytes @ 0x3
   792     0023                     	ds	2
   793     0025                     i1fputs@c:
   794                           
   795                           ; 1 bytes @ 0x5
   796     0025                     	ds	1
   797     0026                     i1fputs@i:
   798                           
   799                           ; 2 bytes @ 0x6
   800     0026                     	ds	2
   801     0028                     ?i1_pad:
   802     0028                     i1pad@fp:	
   803                           ; 1 bytes @ 0x8
   804                           
   805                           
   806                           ; 2 bytes @ 0x8
   807     0028                     	ds	2
   808     002A                     i1pad@buf:
   809                           
   810                           ; 1 bytes @ 0xA
   811     002A                     	ds	1
   812     002B                     i1pad@p:
   813                           
   814                           ; 2 bytes @ 0xB
   815     002B                     	ds	2
   816     002D                     i1pad@i:
   817                           
   818                           ; 2 bytes @ 0xD
   819     002D                     	ds	2
   820     002F                     ?i1_dtoa:
   821     002F                     i1dtoa@fp:	
   822                           ; 1 bytes @ 0xF
   823                           
   824                           
   825                           ; 2 bytes @ 0xF
   826     002F                     	ds	2
   827     0031                     i1dtoa@d:
   828                           
   829                           ; 2 bytes @ 0x11
   830     0031                     	ds	2
   831     0033                     i1_dtoa$601:
   832                           
   833                           ; 2 bytes @ 0x13
   834     0033                     	ds	2
   835     0035                     i1dtoa@p:
   836                           
   837                           ; 1 bytes @ 0x15
   838     0035                     	ds	1
   839     0036                     i1dtoa@w:
   840                           
   841                           ; 2 bytes @ 0x16
   842     0036                     	ds	2
   843     0038                     i1dtoa@s:
   844                           
   845                           ; 1 bytes @ 0x18
   846     0038                     	ds	1
   847     0039                     i1dtoa@i:
   848                           
   849                           ; 2 bytes @ 0x19
   850     0039                     	ds	2
   851     003B                     ?i1_vfpfcnvrt:
   852     003B                     i1vfpfcnvrt@fp:	
   853                           ; 1 bytes @ 0x1B
   854                           
   855                           
   856                           ; 2 bytes @ 0x1B
   857     003B                     	ds	2
   858     003D                     i1vfpfcnvrt@fmt:
   859                           
   860                           ; 1 bytes @ 0x1D
   861     003D                     	ds	1
   862     003E                     i1vfpfcnvrt@ap:
   863                           
   864                           ; 2 bytes @ 0x1E
   865     003E                     	ds	2
   866     0040                     ??i1_vfpfcnvrt:
   867                           
   868                           ; 1 bytes @ 0x20
   869     0040                     	ds	2
   870     0042                     i1vfpfcnvrt@convarg:
   871                           
   872                           ; 4 bytes @ 0x22
   873     0042                     	ds	4
   874     0046                     i1vfpfcnvrt@done:
   875                           
   876                           ; 1 bytes @ 0x26
   877     0046                     	ds	1
   878     0047                     i1vfpfcnvrt@cp:
   879                           
   880                           ; 1 bytes @ 0x27
   881     0047                     	ds	1
   882     0048                     ?i1_vfprintf:
   883     0048                     i1vfprintf@fp:	
   884                           ; 2 bytes @ 0x28
   885                           
   886                           
   887                           ; 2 bytes @ 0x28
   888     0048                     	ds	2
   889     004A                     i1vfprintf@fmt:
   890                           
   891                           ; 1 bytes @ 0x2A
   892     004A                     	ds	1
   893     004B                     i1vfprintf@ap:
   894                           
   895                           ; 2 bytes @ 0x2B
   896     004B                     	ds	2
   897     004D                     i1vfprintf@cfmt:
   898                           
   899                           ; 1 bytes @ 0x2D
   900     004D                     	ds	1
   901     004E                     ?i1_sprintf:
   902     004E                     i1sprintf@s:	
   903                           ; 2 bytes @ 0x2E
   904                           
   905                           
   906                           ; 2 bytes @ 0x2E
   907     004E                     	ds	2
   908     0050                     i1sprintf@fmt:
   909                           
   910                           ; 1 bytes @ 0x30
   911     0050                     	ds	3
   912     0053                     ??i1_sprintf:
   913                           
   914                           ; 1 bytes @ 0x33
   915     0053                     	ds	3
   916     0056                     i1sprintf@ap:
   917                           
   918                           ; 2 bytes @ 0x36
   919     0056                     	ds	2
   920     0058                     i1sprintf@f:
   921                           
   922                           ; 11 bytes @ 0x38
   923     0058                     	ds	11
   924     0063                     ??_ISR:
   925                           
   926                           ; 1 bytes @ 0x43
   927     0063                     	ds	6
   928                           
   929                           	psect	maintext
   930     0029                     __pmaintext:	
   931 ;;
   932 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   933 ;;
   934 ;; *************** function _main *****************
   935 ;; Defined at:
   936 ;;		line 29 in file "newmain.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  i               2   45[BANK3 ] int 
   941 ;;  i               2   43[BANK3 ] int 
   942 ;;  arr            10   27[BANK3 ] unsigned char [10]
   943 ;;  bits            2   41[BANK3 ] int 
   944 ;;  high_bit        2   39[BANK3 ] int 
   945 ;;  low_bit         2   37[BANK3 ] int 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : B00/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0      20       0
   957 ;;      Temps:          0       0       0       3       0
   958 ;;      Totals:         0       0       0      23       0
   959 ;;Total ram usage:       23 bytes
   960 ;; Hardware stack levels required when called: 17
   961 ;; This function calls:
   962 ;;		_display
   963 ;;		_sprintf
   964 ;; This function is called by:
   965 ;;		Startup code after reset
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969     0029                     _main:	
   970                           ;psect for function _main
   971                           
   972     0029                     l2589:	
   973                           ;incstack = 0
   974 ;; hardware stack exceeded
   975                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   976                           
   977                           
   978                           ;newmain.c: 30:     char arr[10];;newmain.c: 31:     int low_bit;;newmain.c: 32:     int
      +                           high_bit;;newmain.c: 33:     int bits;;newmain.c: 34:     ADCON0 =0x01;
   979     0029  3001               	movlw	1
   980     002A  1283               	bcf	3,5	;RP0=0, select bank0
   981     002B  1303               	bcf	3,6	;RP1=0, select bank0
   982     002C  009F               	movwf	31	;volatile
   983                           
   984                           ;newmain.c: 35:     ADCON1 =0x80;
   985     002D  3080               	movlw	128
   986     002E  1683               	bsf	3,5	;RP0=1, select bank1
   987     002F  1303               	bcf	3,6	;RP1=0, select bank1
   988     0030  009F               	movwf	31	;volatile
   989     0031                     l2591:
   990                           
   991                           ;newmain.c: 36:     OPTION_REG =0x00;
   992     0031  0181               	clrf	1	;volatile
   993     0032                     l2593:
   994                           
   995                           ;newmain.c: 37:     INTE=1;
   996     0032  160B               	bsf	11,4	;volatile
   997     0033                     l2595:
   998                           
   999                           ;newmain.c: 38:     GIE=1;
  1000     0033  178B               	bsf	11,7	;volatile
  1001                           
  1002                           ;newmain.c: 40:     TRISD=TRISC=0;
  1003     0034  0187               	clrf	7	;volatile
  1004     0035  0188               	clrf	8	;volatile
  1005                           
  1006                           ;newmain.c: 41:     PORTD=PORTC=0;
  1007     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1008     0037  1303               	bcf	3,6	;RP1=0, select bank0
  1009     0038  0187               	clrf	7	;volatile
  1010     0039  0188               	clrf	8	;volatile
  1011                           
  1012                           ;newmain.c: 42:     PORTB=0;
  1013     003A  0186               	clrf	6	;volatile
  1014     003B                     l2597:
  1015                           
  1016                           ;newmain.c: 44:     display(0, 0x0e);
  1017     003B  3000               	movlw	0
  1018     003C  1683               	bsf	3,5	;RP0=1, select bank1
  1019     003D  1303               	bcf	3,6	;RP1=0, select bank1
  1020     003E  00AC               	movwf	display@RS^(0+128)
  1021     003F  00AD               	movwf	(display@RS+1)^(0+128)
  1022     0040  300E               	movlw	14
  1023     0041  00AE               	movwf	display@DC^(0+128)
  1024     0042  3000               	movlw	0
  1025     0043  00AF               	movwf	(display@DC^(0+128)+1)
  1026     0044  120A  158A  25E3  120A  118A  	fcall	_display
  1027     0049                     l2599:
  1028                           
  1029                           ;newmain.c: 45:     display(0, 0x38);
  1030     0049  3000               	movlw	0
  1031     004A  1683               	bsf	3,5	;RP0=1, select bank1
  1032     004B  1303               	bcf	3,6	;RP1=0, select bank1
  1033     004C  00AC               	movwf	display@RS^(0+128)
  1034     004D  00AD               	movwf	(display@RS+1)^(0+128)
  1035     004E  3038               	movlw	56
  1036     004F  00AE               	movwf	display@DC^(0+128)
  1037     0050  3000               	movlw	0
  1038     0051  00AF               	movwf	(display@DC^(0+128)+1)
  1039     0052  120A  158A  25E3  120A  118A  	fcall	_display
  1040     0057                     l2601:
  1041                           
  1042                           ;newmain.c: 48:     {;newmain.c: 49:         ADCON0 =0x01;
  1043     0057  3001               	movlw	1
  1044     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0059  1303               	bcf	3,6	;RP1=0, select bank0
  1046     005A  009F               	movwf	31	;volatile
  1047     005B                     l2603:
  1048                           
  1049                           ;newmain.c: 50:         _delay((unsigned long)((10)*(10000000/4000.0)));
  1050     005B  3021               	movlw	33
  1051     005C  1683               	bsf	3,5	;RP0=1, select bank3
  1052     005D  1703               	bsf	3,6	;RP1=1, select bank3
  1053     005E  00A9               	movwf	(??_main^(0+384)+1)
  1054     005F  3075               	movlw	117
  1055     0060  00A8               	movwf	??_main^(0+384)
  1056     0061                     u3457:
  1057     0061  0BA8               	decfsz	??_main^(0+384),f
  1058     0062  2861               	goto	u3457
  1059     0063  0BA9               	decfsz	(??_main^(0+384)+1),f
  1060     0064  2861               	goto	u3457
  1061     0065  2866               	nop2
  1062     0066                     l2605:
  1063                           
  1064                           ;newmain.c: 51:         GO_nDONE = 1;
  1065     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1066     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1067     0068  151F               	bsf	31,2	;volatile
  1068     0069                     l46:	
  1069                           ;newmain.c: 52:         while(GO_nDONE==1){}
  1070                           
  1071     0069  191F               	btfsc	31,2	;volatile
  1072     006A  286C               	goto	u3391
  1073     006B  286D               	goto	u3390
  1074     006C                     u3391:
  1075     006C  2869               	goto	l46
  1076     006D                     u3390:
  1077     006D                     l2607:
  1078                           
  1079                           ;newmain.c: 53:         low_bit = ADRESL;
  1080     006D  1683               	bsf	3,5	;RP0=1, select bank1
  1081     006E  1303               	bcf	3,6	;RP1=0, select bank1
  1082     006F  081E               	movf	30,w	;volatile
  1083     0070  1683               	bsf	3,5	;RP0=1, select bank3
  1084     0071  1703               	bsf	3,6	;RP1=1, select bank3
  1085     0072  00A8               	movwf	??_main^(0+384)
  1086     0073  01A9               	clrf	(??_main^(0+384)+1)
  1087     0074  0828               	movf	??_main^(0+384),w
  1088     0075  00B5               	movwf	main@low_bit^(0+384)
  1089     0076  0829               	movf	(??_main+1)^(0+384),w
  1090     0077  00B6               	movwf	(main@low_bit+1)^(0+384)
  1091                           
  1092                           ;newmain.c: 54:         high_bit = ADRESH;
  1093     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1094     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1095     007A  081E               	movf	30,w	;volatile
  1096     007B  1683               	bsf	3,5	;RP0=1, select bank3
  1097     007C  1703               	bsf	3,6	;RP1=1, select bank3
  1098     007D  00A8               	movwf	??_main^(0+384)
  1099     007E  01A9               	clrf	(??_main^(0+384)+1)
  1100     007F  0828               	movf	??_main^(0+384),w
  1101     0080  00B7               	movwf	main@high_bit^(0+384)
  1102     0081  0829               	movf	(??_main+1)^(0+384),w
  1103     0082  00B8               	movwf	(main@high_bit+1)^(0+384)
  1104     0083                     l2609:
  1105                           
  1106                           ;newmain.c: 56:         bits = low_bit | high_bit<<8;
  1107     0083  0838               	movf	(main@high_bit+1)^(0+384),w
  1108     0084  00A9               	movwf	(??_main^(0+384)+1)
  1109     0085  0837               	movf	main@high_bit^(0+384),w
  1110     0086  00A8               	movwf	??_main^(0+384)
  1111     0087  0828               	movf	??_main^(0+384),w
  1112     0088  00A9               	movwf	(??_main^(0+384)+1)
  1113     0089  01A8               	clrf	??_main^(0+384)
  1114     008A  0835               	movf	main@low_bit^(0+384),w
  1115     008B  0428               	iorwf	??_main^(0+384),w
  1116     008C  00B9               	movwf	main@bits^(0+384)
  1117     008D  0836               	movf	(main@low_bit+1)^(0+384),w
  1118     008E  0429               	iorwf	(??_main+1)^(0+384),w
  1119     008F  00BA               	movwf	(main@bits+1)^(0+384)
  1120     0090                     l2611:
  1121                           
  1122                           ;newmain.c: 57:         sprintf(arr, "%04d", bits);
  1123     0090  30AB               	movlw	(low (main@arr| (0+256)))& (0+255)
  1124     0091  0094               	movwf	sprintf@s^(0+384)
  1125     0092  3001               	movlw	1
  1126     0093  0095               	movwf	(sprintf@s+1)^(0+384)
  1127     0094  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1128     0095  0096               	movwf	sprintf@fmt^(0+384)
  1129     0096  083A               	movf	(main@bits+1)^(0+384),w
  1130     0097  0098               	movwf	((?_sprintf+1)^(0+384)+3)
  1131     0098  0839               	movf	main@bits^(0+384),w
  1132     0099  0097               	movwf	(?_sprintf^(0+384)+3)
  1133     009A  120A  158A  2610  120A  118A  	fcall	_sprintf
  1134     009F                     l2613:
  1135                           
  1136                           ;newmain.c: 58:         display(0, 0x80);
  1137     009F  3000               	movlw	0
  1138     00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1139     00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1140     00A2  00AC               	movwf	display@RS^(0+128)
  1141     00A3  00AD               	movwf	(display@RS+1)^(0+128)
  1142     00A4  3080               	movlw	128
  1143     00A5  00AE               	movwf	display@DC^(0+128)
  1144     00A6  3000               	movlw	0
  1145     00A7  00AF               	movwf	(display@DC^(0+128)+1)
  1146     00A8  120A  158A  25E3  120A  118A  	fcall	_display
  1147     00AD                     l2615:
  1148                           
  1149                           ;newmain.c: 60:         for(int i=0;arr[i]!='\0';i++)
  1150     00AD  1683               	bsf	3,5	;RP0=1, select bank3
  1151     00AE  1703               	bsf	3,6	;RP1=1, select bank3
  1152     00AF  01BB               	clrf	main@i^(0+384)
  1153     00B0  01BC               	clrf	(main@i+1)^(0+384)
  1154     00B1  28D7               	goto	l2621
  1155     00B2                     l2617:
  1156                           
  1157                           ;newmain.c: 61:         {;newmain.c: 62:             display(1, arr[i]);
  1158     00B2  3001               	movlw	1
  1159     00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1160     00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1161     00B5  00AC               	movwf	display@RS^(0+128)
  1162     00B6  3000               	movlw	0
  1163     00B7  00AD               	movwf	(display@RS^(0+128)+1)
  1164     00B8  1683               	bsf	3,5	;RP0=1, select bank3
  1165     00B9  1703               	bsf	3,6	;RP1=1, select bank3
  1166     00BA  083B               	movf	main@i^(0+384),w
  1167     00BB  3EAB               	addlw	(low (main@arr| (0+256)))& (0+255)
  1168     00BC  0084               	movwf	4
  1169     00BD  0800               	movf	0,w
  1170     00BE  00A8               	movwf	??_main^(0+384)
  1171     00BF  01A9               	clrf	(??_main^(0+384)+1)
  1172     00C0  0828               	movf	??_main^(0+384),w
  1173     00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1174     00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1175     00C3  00AE               	movwf	display@DC^(0+128)
  1176     00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1177     00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1178     00C6  0829               	movf	(??_main+1)^(0+384),w
  1179     00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1180     00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1181     00C9  00AF               	movwf	(display@DC+1)^(0+128)
  1182     00CA  120A  158A  25E3  120A  118A  	fcall	_display
  1183     00CF                     l2619:
  1184                           
  1185                           ;newmain.c: 63:         }
  1186     00CF  3001               	movlw	1
  1187     00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1188     00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1189     00D2  07BB               	addwf	main@i^(0+384),f
  1190     00D3  1803               	skipnc
  1191     00D4  0ABC               	incf	(main@i+1)^(0+384),f
  1192     00D5  3000               	movlw	0
  1193     00D6  07BC               	addwf	(main@i+1)^(0+384),f
  1194     00D7                     l2621:
  1195     00D7  083B               	movf	main@i^(0+384),w
  1196     00D8  3EAB               	addlw	(low (main@arr| (0+256)))& (0+255)
  1197     00D9  0084               	movwf	4
  1198     00DA  1783               	bsf	3,7	;select IRP bank3
  1199     00DB  0800               	movf	0,w
  1200     00DC  1D03               	btfss	3,2
  1201     00DD  28DF               	goto	u3401
  1202     00DE  28E0               	goto	u3400
  1203     00DF                     u3401:
  1204     00DF  28B2               	goto	l2617
  1205     00E0                     u3400:
  1206     00E0                     l2623:
  1207                           
  1208                           ;newmain.c: 64:         _delay((unsigned long)((300)*(10000000/4000.0)));
  1209     00E0  3004               	movlw	4
  1210     00E1  1683               	bsf	3,5	;RP0=1, select bank3
  1211     00E2  1703               	bsf	3,6	;RP1=1, select bank3
  1212     00E3  00AA               	movwf	(??_main^(0+384)+2)
  1213     00E4  30CF               	movlw	207
  1214     00E5  00A9               	movwf	(??_main^(0+384)+1)
  1215     00E6  3001               	movlw	1
  1216     00E7  00A8               	movwf	??_main^(0+384)
  1217     00E8                     u3467:
  1218     00E8  0BA8               	decfsz	??_main^(0+384),f
  1219     00E9  28E8               	goto	u3467
  1220     00EA  0BA9               	decfsz	(??_main^(0+384)+1),f
  1221     00EB  28E8               	goto	u3467
  1222     00EC  0BAA               	decfsz	(??_main^(0+384)+2),f
  1223     00ED  28E8               	goto	u3467
  1224     00EE                     l2625:
  1225                           
  1226                           ;newmain.c: 66:         ADCON0 =0x09;
  1227     00EE  3009               	movlw	9
  1228     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1229     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1230     00F1  009F               	movwf	31	;volatile
  1231                           
  1232                           ;newmain.c: 67:         _delay((unsigned long)((10)*(10000000/4000.0)));
  1233     00F2  3021               	movlw	33
  1234     00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1235     00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1236     00F5  00A9               	movwf	(??_main^(0+384)+1)
  1237     00F6  3075               	movlw	117
  1238     00F7  00A8               	movwf	??_main^(0+384)
  1239     00F8                     u3477:
  1240     00F8  0BA8               	decfsz	??_main^(0+384),f
  1241     00F9  28F8               	goto	u3477
  1242     00FA  0BA9               	decfsz	(??_main^(0+384)+1),f
  1243     00FB  28F8               	goto	u3477
  1244     00FC  28FD               	nop2
  1245     00FD                     l2627:
  1246                           
  1247                           ;newmain.c: 68:         GO_nDONE = 1;
  1248     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1249     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1250     00FF  151F               	bsf	31,2	;volatile
  1251     0100                     l52:	
  1252                           ;newmain.c: 69:         while(GO_nDONE==1){}
  1253                           
  1254     0100  191F               	btfsc	31,2	;volatile
  1255     0101  2903               	goto	u3411
  1256     0102  2904               	goto	u3410
  1257     0103                     u3411:
  1258     0103  2900               	goto	l52
  1259     0104                     u3410:
  1260     0104                     l2629:
  1261                           
  1262                           ;newmain.c: 70:         low_bit = ADRESL;
  1263     0104  1683               	bsf	3,5	;RP0=1, select bank1
  1264     0105  1303               	bcf	3,6	;RP1=0, select bank1
  1265     0106  081E               	movf	30,w	;volatile
  1266     0107  1683               	bsf	3,5	;RP0=1, select bank3
  1267     0108  1703               	bsf	3,6	;RP1=1, select bank3
  1268     0109  00A8               	movwf	??_main^(0+384)
  1269     010A  01A9               	clrf	(??_main^(0+384)+1)
  1270     010B  0828               	movf	??_main^(0+384),w
  1271     010C  00B5               	movwf	main@low_bit^(0+384)
  1272     010D  0829               	movf	(??_main+1)^(0+384),w
  1273     010E  00B6               	movwf	(main@low_bit+1)^(0+384)
  1274                           
  1275                           ;newmain.c: 71:         high_bit = ADRESH;
  1276     010F  1283               	bcf	3,5	;RP0=0, select bank0
  1277     0110  1303               	bcf	3,6	;RP1=0, select bank0
  1278     0111  081E               	movf	30,w	;volatile
  1279     0112  1683               	bsf	3,5	;RP0=1, select bank3
  1280     0113  1703               	bsf	3,6	;RP1=1, select bank3
  1281     0114  00A8               	movwf	??_main^(0+384)
  1282     0115  01A9               	clrf	(??_main^(0+384)+1)
  1283     0116  0828               	movf	??_main^(0+384),w
  1284     0117  00B7               	movwf	main@high_bit^(0+384)
  1285     0118  0829               	movf	(??_main+1)^(0+384),w
  1286     0119  00B8               	movwf	(main@high_bit+1)^(0+384)
  1287     011A                     l2631:
  1288                           
  1289                           ;newmain.c: 73:         bits = low_bit | high_bit<<8;
  1290     011A  0838               	movf	(main@high_bit+1)^(0+384),w
  1291     011B  00A9               	movwf	(??_main^(0+384)+1)
  1292     011C  0837               	movf	main@high_bit^(0+384),w
  1293     011D  00A8               	movwf	??_main^(0+384)
  1294     011E  0828               	movf	??_main^(0+384),w
  1295     011F  00A9               	movwf	(??_main^(0+384)+1)
  1296     0120  01A8               	clrf	??_main^(0+384)
  1297     0121  0835               	movf	main@low_bit^(0+384),w
  1298     0122  0428               	iorwf	??_main^(0+384),w
  1299     0123  00B9               	movwf	main@bits^(0+384)
  1300     0124  0836               	movf	(main@low_bit+1)^(0+384),w
  1301     0125  0429               	iorwf	(??_main+1)^(0+384),w
  1302     0126  00BA               	movwf	(main@bits+1)^(0+384)
  1303     0127                     l2633:
  1304                           
  1305                           ;newmain.c: 74:         sprintf(arr, "%04d", bits);
  1306     0127  30AB               	movlw	(low (main@arr| (0+256)))& (0+255)
  1307     0128  0094               	movwf	sprintf@s^(0+384)
  1308     0129  3001               	movlw	1
  1309     012A  0095               	movwf	(sprintf@s+1)^(0+384)
  1310     012B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1311     012C  0096               	movwf	sprintf@fmt^(0+384)
  1312     012D  083A               	movf	(main@bits+1)^(0+384),w
  1313     012E  0098               	movwf	((?_sprintf+1)^(0+384)+3)
  1314     012F  0839               	movf	main@bits^(0+384),w
  1315     0130  0097               	movwf	(?_sprintf^(0+384)+3)
  1316     0131  120A  158A  2610  120A  118A  	fcall	_sprintf
  1317     0136                     l2635:
  1318                           
  1319                           ;newmain.c: 75:         display(0, 0xc0);
  1320     0136  3000               	movlw	0
  1321     0137  1683               	bsf	3,5	;RP0=1, select bank1
  1322     0138  1303               	bcf	3,6	;RP1=0, select bank1
  1323     0139  00AC               	movwf	display@RS^(0+128)
  1324     013A  00AD               	movwf	(display@RS+1)^(0+128)
  1325     013B  30C0               	movlw	192
  1326     013C  00AE               	movwf	display@DC^(0+128)
  1327     013D  3000               	movlw	0
  1328     013E  00AF               	movwf	(display@DC^(0+128)+1)
  1329     013F  120A  158A  25E3  120A  118A  	fcall	_display
  1330     0144                     l2637:
  1331                           
  1332                           ;newmain.c: 77:         for(int i=0;arr[i]!='\0';i++)
  1333     0144  1683               	bsf	3,5	;RP0=1, select bank3
  1334     0145  1703               	bsf	3,6	;RP1=1, select bank3
  1335     0146  01BD               	clrf	main@i_69^(0+384)
  1336     0147  01BE               	clrf	(main@i_69+1)^(0+384)
  1337     0148  296E               	goto	l2643
  1338     0149                     l2639:
  1339                           
  1340                           ;newmain.c: 78:         {;newmain.c: 79:             display(1, arr[i]);
  1341     0149  3001               	movlw	1
  1342     014A  1683               	bsf	3,5	;RP0=1, select bank1
  1343     014B  1303               	bcf	3,6	;RP1=0, select bank1
  1344     014C  00AC               	movwf	display@RS^(0+128)
  1345     014D  3000               	movlw	0
  1346     014E  00AD               	movwf	(display@RS^(0+128)+1)
  1347     014F  1683               	bsf	3,5	;RP0=1, select bank3
  1348     0150  1703               	bsf	3,6	;RP1=1, select bank3
  1349     0151  083D               	movf	main@i_69^(0+384),w
  1350     0152  3EAB               	addlw	(low (main@arr| (0+256)))& (0+255)
  1351     0153  0084               	movwf	4
  1352     0154  0800               	movf	0,w
  1353     0155  00A8               	movwf	??_main^(0+384)
  1354     0156  01A9               	clrf	(??_main^(0+384)+1)
  1355     0157  0828               	movf	??_main^(0+384),w
  1356     0158  1683               	bsf	3,5	;RP0=1, select bank1
  1357     0159  1303               	bcf	3,6	;RP1=0, select bank1
  1358     015A  00AE               	movwf	display@DC^(0+128)
  1359     015B  1683               	bsf	3,5	;RP0=1, select bank3
  1360     015C  1703               	bsf	3,6	;RP1=1, select bank3
  1361     015D  0829               	movf	(??_main+1)^(0+384),w
  1362     015E  1683               	bsf	3,5	;RP0=1, select bank1
  1363     015F  1303               	bcf	3,6	;RP1=0, select bank1
  1364     0160  00AF               	movwf	(display@DC+1)^(0+128)
  1365     0161  120A  158A  25E3  120A  118A  	fcall	_display
  1366     0166                     l2641:
  1367                           
  1368                           ;newmain.c: 80:         }
  1369     0166  3001               	movlw	1
  1370     0167  1683               	bsf	3,5	;RP0=1, select bank3
  1371     0168  1703               	bsf	3,6	;RP1=1, select bank3
  1372     0169  07BD               	addwf	main@i_69^(0+384),f
  1373     016A  1803               	skipnc
  1374     016B  0ABE               	incf	(main@i_69+1)^(0+384),f
  1375     016C  3000               	movlw	0
  1376     016D  07BE               	addwf	(main@i_69+1)^(0+384),f
  1377     016E                     l2643:
  1378     016E  083D               	movf	main@i_69^(0+384),w
  1379     016F  3EAB               	addlw	(low (main@arr| (0+256)))& (0+255)
  1380     0170  0084               	movwf	4
  1381     0171  1783               	bsf	3,7	;select IRP bank3
  1382     0172  0800               	movf	0,w
  1383     0173  1D03               	btfss	3,2
  1384     0174  2976               	goto	u3421
  1385     0175  2977               	goto	u3420
  1386     0176                     u3421:
  1387     0176  2949               	goto	l2639
  1388     0177                     u3420:
  1389     0177                     l2645:
  1390                           
  1391                           ;newmain.c: 81:         _delay((unsigned long)((300)*(10000000/4000.0)));
  1392     0177  3004               	movlw	4
  1393     0178  1683               	bsf	3,5	;RP0=1, select bank3
  1394     0179  1703               	bsf	3,6	;RP1=1, select bank3
  1395     017A  00AA               	movwf	(??_main^(0+384)+2)
  1396     017B  30CF               	movlw	207
  1397     017C  00A9               	movwf	(??_main^(0+384)+1)
  1398     017D  3001               	movlw	1
  1399     017E  00A8               	movwf	??_main^(0+384)
  1400     017F                     u3487:
  1401     017F  0BA8               	decfsz	??_main^(0+384),f
  1402     0180  297F               	goto	u3487
  1403     0181  0BA9               	decfsz	(??_main^(0+384)+1),f
  1404     0182  297F               	goto	u3487
  1405     0183  0BAA               	decfsz	(??_main^(0+384)+2),f
  1406     0184  297F               	goto	u3487
  1407     0185  2857               	goto	l2601
  1408     0186  120A  118A  2812   	ljmp	start
  1409     0189                     __end_of_main:
  1410                           
  1411                           	psect	text1
  1412     0E10                     __ptext1:	
  1413 ;; *************** function _sprintf *****************
  1414 ;; Defined at:
  1415 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  s               2    4[BANK3 ] PTR unsigned char 
  1418 ;;		 -> ISR@br(10), main@arr(10), 
  1419 ;;  fmt             1    6[BANK3 ] PTR const unsigned char 
  1420 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  f              11   13[BANK3 ] struct _IO_FILE
  1423 ;;  ret             2    0        int 
  1424 ;;  ap              1   12[BANK3 ] PTR void [1]
  1425 ;;		 -> ?_sprintf(2), 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    4[BANK3 ] int 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       5       0
  1436 ;;      Locals:         0       0       0      12       0
  1437 ;;      Temps:          0       0       0       3       0
  1438 ;;      Totals:         0       0       0      20       0
  1439 ;;Total ram usage:       20 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 16
  1442 ;; This function calls:
  1443 ;;		_vfprintf
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     0E10                     _sprintf:	
  1450                           ;psect for function _sprintf
  1451                           
  1452     0E10                     l2555:	
  1453                           ;incstack = 0
  1454 ;; hardware stack exceeded
  1455                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1456                           
  1457     0E10  3097               	movlw	(low ((?_sprintf| (0+256)+3)))& (0+255)
  1458     0E11  1683               	bsf	3,5	;RP0=1, select bank3
  1459     0E12  1703               	bsf	3,6	;RP1=1, select bank3
  1460     0E13  009C               	movwf	sprintf@ap^(0+384)
  1461     0E14                     l2557:
  1462     0E14  0814               	movf	sprintf@s^(0+384),w
  1463     0E15  009D               	movwf	sprintf@f^(0+384)
  1464     0E16  0815               	movf	(sprintf@s+1)^(0+384),w
  1465     0E17  009E               	movwf	(sprintf@f+1)^(0+384)
  1466     0E18                     l2559:
  1467     0E18  019F               	clrf	(sprintf@f^(0+384)+2)
  1468     0E19  01A0               	clrf	((sprintf@f+1)^(0+384)+2)
  1469     0E1A                     l2561:
  1470     0E1A  01A6               	clrf	(sprintf@f^(0+384)+9)
  1471     0E1B  01A7               	clrf	((sprintf@f+1)^(0+384)+9)
  1472     0E1C                     l2563:
  1473     0E1C  309D               	movlw	low sprintf@f
  1474     0E1D  0090               	movwf	vfprintf@fp^(0+384)
  1475     0E1E  3001               	movlw	high sprintf@f
  1476     0E1F  0091               	movwf	(vfprintf@fp^(0+384)+1)
  1477     0E20  0816               	movf	sprintf@fmt^(0+384),w
  1478     0E21  0092               	movwf	vfprintf@fmt^(0+384)
  1479     0E22  309C               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  1480     0E23  0093               	movwf	vfprintf@ap^(0+384)
  1481     0E24  120A  158A  2640  120A  158A  	fcall	_vfprintf
  1482     0E29                     l2565:
  1483     0E29  1683               	bsf	3,5	;RP0=1, select bank3
  1484     0E2A  1703               	bsf	3,6	;RP1=1, select bank3
  1485     0E2B  081F               	movf	(sprintf@f^(0+384)+2),w
  1486     0E2C  0714               	addwf	sprintf@s^(0+384),w
  1487     0E2D  009A               	movwf	(??_sprintf+1)^(0+384)
  1488     0E2E  0815               	movf	(sprintf@s+1)^(0+384),w
  1489     0E2F  0099               	movwf	??_sprintf^(0+384)
  1490     0E30  1803               	skipnc
  1491     0E31  0A99               	incf	??_sprintf^(0+384),f
  1492     0E32  1F9F               	btfss	(sprintf@f^(0+384)+2),7
  1493     0E33  2E35               	goto	u3350
  1494     0E34  0399               	decf	??_sprintf^(0+384),f
  1495     0E35                     u3350:
  1496     0E35  1683               	bsf	3,5	;RP0=1, select bank3
  1497     0E36  1703               	bsf	3,6	;RP1=1, select bank3
  1498     0E37  0819               	movf	??_sprintf^(0+384),w
  1499     0E38  009B               	movwf	((??_sprintf+1)^(0+384)+1)
  1500     0E39  081A               	movf	(??_sprintf+1)^(0+384),w
  1501     0E3A  0084               	movwf	4
  1502     0E3B  1783               	bsf	3,7
  1503     0E3C  1C1B               	btfss	(??_sprintf+2)^(0+384),0
  1504     0E3D  1383               	bcf	3,7
  1505     0E3E  0180               	clrf	0
  1506     0E3F                     l621:
  1507     0E3F  0008               	return
  1508     0E40                     __end_of_sprintf:
  1509                           
  1510                           	psect	text2
  1511     0E40                     __ptext2:	
  1512 ;; *************** function _vfprintf *****************
  1513 ;; Defined at:
  1514 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  fp              2    0[BANK3 ] PTR struct _IO_FILE
  1517 ;;		 -> sprintf@f(11), 
  1518 ;;  fmt             1    2[BANK3 ] PTR const unsigned char 
  1519 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1520 ;;  ap              1    3[BANK3 ] PTR PTR void 
  1521 ;;		 -> sprintf@ap(1), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  cfmt            1   65[BANK1 ] PTR unsigned char 
  1524 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    0[BANK3 ] int 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         0       0       0       4       0
  1535 ;;      Locals:         0       0       1       0       0
  1536 ;;      Temps:          0       0       0       0       0
  1537 ;;      Totals:         0       0       1       4       0
  1538 ;;Total ram usage:        5 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 15
  1541 ;; This function calls:
  1542 ;;		_vfpfcnvrt
  1543 ;; This function is called by:
  1544 ;;		_sprintf
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548     0E40                     _vfprintf:	
  1549                           ;psect for function _vfprintf
  1550                           
  1551     0E40                     l2535:	
  1552                           ;incstack = 0
  1553 ;; hardware stack exceeded
  1554                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1555                           
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1558     0E40  1683               	bsf	3,5	;RP0=1, select bank3
  1559     0E41  1703               	bsf	3,6	;RP1=1, select bank3
  1560     0E42  0812               	movf	vfprintf@fmt^(0+384),w
  1561     0E43  1683               	bsf	3,5	;RP0=1, select bank1
  1562     0E44  1303               	bcf	3,6	;RP1=0, select bank1
  1563     0E45  00E1               	movwf	vfprintf@cfmt^(0+128)
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1566     0E46  2E60               	goto	l2539
  1567     0E47                     l2537:
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1570     0E47  1683               	bsf	3,5	;RP0=1, select bank3
  1571     0E48  1703               	bsf	3,6	;RP1=1, select bank3
  1572     0E49  0810               	movf	vfprintf@fp^(0+384),w
  1573     0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  1574     0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  1575     0E4C  00D5               	movwf	vfpfcnvrt@fp^(0+128)
  1576     0E4D  1683               	bsf	3,5	;RP0=1, select bank3
  1577     0E4E  1703               	bsf	3,6	;RP1=1, select bank3
  1578     0E4F  0811               	movf	(vfprintf@fp+1)^(0+384),w
  1579     0E50  1683               	bsf	3,5	;RP0=1, select bank1
  1580     0E51  1303               	bcf	3,6	;RP1=0, select bank1
  1581     0E52  00D6               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  1582     0E53  30E1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1583     0E54  00D7               	movwf	vfpfcnvrt@fmt^(0+128)
  1584     0E55  1683               	bsf	3,5	;RP0=1, select bank3
  1585     0E56  1703               	bsf	3,6	;RP1=1, select bank3
  1586     0E57  0813               	movf	vfprintf@ap^(0+384),w
  1587     0E58  1683               	bsf	3,5	;RP0=1, select bank1
  1588     0E59  1303               	bcf	3,6	;RP1=0, select bank1
  1589     0E5A  00D8               	movwf	vfpfcnvrt@ap^(0+128)
  1590     0E5B  120A  118A  23EC  120A  158A  	fcall	_vfpfcnvrt
  1591     0E60                     l2539:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1594     0E60  1683               	bsf	3,5	;RP0=1, select bank1
  1595     0E61  1303               	bcf	3,6	;RP1=0, select bank1
  1596     0E62  0861               	movf	vfprintf@cfmt^(0+128),w
  1597     0E63  0084               	movwf	4
  1598     0E64  120A  158A  2000  120A  158A  	fcall	stringdir
  1599     0E69  3A00               	xorlw	0
  1600     0E6A  1D03               	skipz
  1601     0E6B  2E6D               	goto	u3331
  1602     0E6C  2E6E               	goto	u3330
  1603     0E6D                     u3331:
  1604     0E6D  2E47               	goto	l2537
  1605     0E6E                     u3330:
  1606     0E6E                     l2541:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1609     0E6E  1683               	bsf	3,5	;RP0=1, select bank3
  1610     0E6F  1703               	bsf	3,6	;RP1=1, select bank3
  1611     0E70  0190               	clrf	?_vfprintf^(0+384)
  1612     0E71  0191               	clrf	(?_vfprintf+1)^(0+384)
  1613     0E72                     l691:
  1614     0E72  0008               	return
  1615     0E73                     __end_of_vfprintf:
  1616                           
  1617                           	psect	text3
  1618     03EC                     __ptext3:	
  1619 ;; *************** function _vfpfcnvrt *****************
  1620 ;; Defined at:
  1621 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  fp              2   53[BANK1 ] PTR struct _IO_FILE
  1624 ;;		 -> sprintf@f(11), 
  1625 ;;  fmt             1   55[BANK1 ] PTR PTR unsigned char 
  1626 ;;		 -> vfprintf@cfmt(1), 
  1627 ;;  ap              1   56[BANK1 ] PTR PTR void 
  1628 ;;		 -> sprintf@ap(1), 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  convarg         4   59[BANK1 ] struct .
  1631 ;;  cp              1   64[BANK1 ] PTR unsigned char 
  1632 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1633 ;;  done            1   63[BANK1 ] _Bool 
  1634 ;;  c               1    0        unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       4       0       0
  1645 ;;      Locals:         0       0       6       0       0
  1646 ;;      Temps:          0       0       2       0       0
  1647 ;;      Totals:         0       0      12       0       0
  1648 ;;Total ram usage:       12 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 14
  1651 ;; This function calls:
  1652 ;;		_dtoa
  1653 ;;		_fputc
  1654 ;;		_read_prec_or_width
  1655 ;; This function is called by:
  1656 ;;		_vfprintf
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660     03EC                     _vfpfcnvrt:	
  1661                           ;psect for function _vfpfcnvrt
  1662                           
  1663     03EC                     l2437:	
  1664                           ;incstack = 0
  1665 ;; hardware stack exceeded
  1666                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1667                           
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1670     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  1671     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  1672     03EE  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1673     03EF  0084               	movwf	4
  1674     03F0  1383               	bcf	3,7	;select IRP bank0
  1675     03F1  0800               	movf	0,w
  1676     03F2  0084               	movwf	4
  1677     03F3  120A  158A  2000  120A  118A  	fcall	stringdir
  1678     03F8  3A25               	xorlw	37
  1679     03F9  1D03               	skipz
  1680     03FA  2BFC               	goto	u3231
  1681     03FB  2BFD               	goto	u3230
  1682     03FC                     u3231:
  1683     03FC  2C94               	goto	l2481
  1684     03FD                     u3230:
  1685     03FD                     l2439:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1688     03FD  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1689     03FE  0084               	movwf	4
  1690     03FF  3001               	movlw	1
  1691     0400  0780               	addwf	0,f
  1692     0401                     l2441:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1695     0401  01E2               	clrf	_width^(0+128)
  1696     0402  01E3               	clrf	(_width+1)^(0+128)
  1697     0403  3000               	movlw	0
  1698     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1699     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1700     0406  00E9               	movwf	_flags
  1701     0407                     l2443:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1704     0407  30FF               	movlw	255
  1705     0408  1683               	bsf	3,5	;RP0=1, select bank3
  1706     0409  1703               	bsf	3,6	;RP1=1, select bank3
  1707     040A  00BF               	movwf	_prec^(0+384)
  1708     040B  30FF               	movlw	255
  1709     040C  00C0               	movwf	(_prec^(0+384)+1)
  1710     040D                     l2445:
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1713     040D  1683               	bsf	3,5	;RP0=1, select bank1
  1714     040E  1303               	bcf	3,6	;RP1=0, select bank1
  1715     040F  01DF               	clrf	vfpfcnvrt@done^(0+128)
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1718     0410  2C2B               	goto	l2453
  1719     0411                     l677:	
  1720                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  1721                           
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1724     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1725     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1726     0413  14E9               	bsf	_flags,1
  1727     0414                     l2447:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1730     0414  1683               	bsf	3,5	;RP0=1, select bank1
  1731     0415  1303               	bcf	3,6	;RP1=0, select bank1
  1732     0416  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1733     0417  0084               	movwf	4
  1734     0418  3001               	movlw	1
  1735     0419  0780               	addwf	0,f
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1738     041A  2C2B               	goto	l2453
  1739     041B                     l679:	
  1740                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  1741                           
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1744     041B  3001               	movlw	1
  1745     041C  00DF               	movwf	vfpfcnvrt@done^(0+128)
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1748     041D  2C2B               	goto	l2453
  1749     041E                     l2451:
  1750     041E  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1751     041F  0084               	movwf	4
  1752     0420  0800               	movf	0,w
  1753     0421  0084               	movwf	4
  1754     0422  120A  158A  2000  120A  118A  	fcall	stringdir
  1755                           
  1756                           ; Switch size 1, requested type "simple"
  1757                           ; Number of cases is 1, Range of values is 48 to 48
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte            4     3 (average)
  1761                           ; direct_byte           14    11 (fixed)
  1762                           ; jumptable            263     9 (fixed)
  1763                           ;	Chosen strategy is simple_byte
  1764     0427  3A30               	xorlw	48	; case 48
  1765     0428  1903               	skipnz
  1766     0429  2C11               	goto	l677
  1767     042A  2C1B               	goto	l679
  1768     042B                     l2453:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1771     042B  085F               	movf	vfpfcnvrt@done^(0+128),w
  1772     042C  1903               	btfsc	3,2
  1773     042D  2C2F               	goto	u3241
  1774     042E  2C30               	goto	u3240
  1775     042F                     u3241:
  1776     042F  2C1E               	goto	l2451
  1777     0430                     u3240:
  1778     0430                     l2455:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1781     0430  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1782     0431  00B2               	movwf	read_prec_or_width@fmt^(0+128)
  1783     0432  0858               	movf	vfpfcnvrt@ap^(0+128),w
  1784     0433  00B3               	movwf	read_prec_or_width@ap^(0+128)
  1785     0434  120A  158A  27A8  120A  118A  	fcall	_read_prec_or_width
  1786     0439  1683               	bsf	3,5	;RP0=1, select bank1
  1787     043A  1303               	bcf	3,6	;RP1=0, select bank1
  1788     043B  0833               	movf	(?_read_prec_or_width+1)^(0+128),w
  1789     043C  00E3               	movwf	(_width+1)^(0+128)
  1790     043D  0832               	movf	?_read_prec_or_width^(0+128),w
  1791     043E  00E2               	movwf	_width^(0+128)
  1792     043F                     l2457:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1795     043F  1FE3               	btfss	(_width+1)^(0+128),7
  1796     0440  2C42               	goto	u3251
  1797     0441  2C43               	goto	u3250
  1798     0442                     u3251:
  1799     0442  2C4D               	goto	l2463
  1800     0443                     u3250:
  1801     0443                     l2459:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1804     0443  1283               	bcf	3,5	;RP0=0, select bank0
  1805     0444  1303               	bcf	3,6	;RP1=0, select bank0
  1806     0445  1469               	bsf	_flags,0
  1807     0446                     l2461:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1810     0446  1683               	bsf	3,5	;RP0=1, select bank1
  1811     0447  1303               	bcf	3,6	;RP1=0, select bank1
  1812     0448  09E2               	comf	_width^(0+128),f
  1813     0449  09E3               	comf	(_width+1)^(0+128),f
  1814     044A  0AE2               	incf	_width^(0+128),f
  1815     044B  1903               	skipnz
  1816     044C  0AE3               	incf	(_width+1)^(0+128),f
  1817     044D                     l2463:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1820     044D  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1821     044E  0084               	movwf	4
  1822     044F  1383               	bcf	3,7	;select IRP bank0
  1823     0450  0800               	movf	0,w
  1824     0451  00E0               	movwf	vfpfcnvrt@cp^(0+128)
  1825     0452                     l2465:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1828     0452  0860               	movf	vfpfcnvrt@cp^(0+128),w
  1829     0453  0084               	movwf	4
  1830     0454  120A  158A  2000  120A  118A  	fcall	stringdir
  1831     0459  3A64               	xorlw	100
  1832     045A  1903               	skipnz
  1833     045B  2C5D               	goto	u3261
  1834     045C  2C5E               	goto	u3260
  1835     045D                     u3261:
  1836     045D  2C6A               	goto	l2469
  1837     045E                     u3260:
  1838     045E                     l2467:
  1839     045E  0860               	movf	vfpfcnvrt@cp^(0+128),w
  1840     045F  0084               	movwf	4
  1841     0460  120A  158A  2000  120A  118A  	fcall	stringdir
  1842     0465  3A69               	xorlw	105
  1843     0466  1D03               	skipz
  1844     0467  2C69               	goto	u3271
  1845     0468  2C6A               	goto	u3270
  1846     0469                     u3271:
  1847     0469  2C8C               	goto	l2477
  1848     046A                     u3270:
  1849     046A                     l2469:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1852     046A  0858               	movf	vfpfcnvrt@ap^(0+128),w
  1853     046B  0084               	movwf	4
  1854     046C  1783               	bsf	3,7	;select IRP bank2
  1855     046D  0800               	movf	0,w
  1856     046E  00FF               	movwf	btemp+1
  1857     046F  3002               	movlw	2
  1858     0470  0780               	addwf	0,f
  1859     0471  087F               	movf	btemp+1,w
  1860     0472  0084               	movwf	4
  1861     0473  0800               	movf	0,w
  1862     0474  00DB               	movwf	vfpfcnvrt@convarg^(0+128)
  1863     0475  0A84               	incf	4,f
  1864     0476  0800               	movf	0,w
  1865     0477  00DC               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  1866     0478                     l2471:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1869     0478  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1870     0479  0084               	movwf	4
  1871     047A  0860               	movf	vfpfcnvrt@cp^(0+128),w
  1872     047B  3E01               	addlw	1
  1873     047C  1383               	bcf	3,7	;select IRP bank0
  1874     047D  0080               	movwf	0
  1875     047E                     l2473:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1878     047E  0855               	movf	vfpfcnvrt@fp^(0+128),w
  1879     047F  00C9               	movwf	dtoa@fp^(0+128)
  1880     0480  0856               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  1881     0481  00CA               	movwf	(dtoa@fp+1)^(0+128)
  1882     0482  085C               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  1883     0483  00CC               	movwf	(dtoa@d+1)^(0+128)
  1884     0484  085B               	movf	vfpfcnvrt@convarg^(0+128),w
  1885     0485  00CB               	movwf	dtoa@d^(0+128)
  1886     0486  120A  118A  2325  120A  118A  	fcall	_dtoa
  1887     048B  2CAD               	goto	l685
  1888     048C                     l2477:
  1889                           
  1890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1891     048C  1683               	bsf	3,5	;RP0=1, select bank1
  1892     048D  1303               	bcf	3,6	;RP1=0, select bank1
  1893     048E  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1894     048F  0084               	movwf	4
  1895     0490  3001               	movlw	1
  1896     0491  1383               	bcf	3,7	;select IRP bank0
  1897     0492  0780               	addwf	0,f
  1898     0493  2CAD               	goto	l685
  1899     0494                     l2481:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1902     0494  0857               	movf	vfpfcnvrt@fmt^(0+128),w
  1903     0495  0084               	movwf	4
  1904     0496  0800               	movf	0,w
  1905     0497  0084               	movwf	4
  1906     0498  120A  158A  2000  120A  118A  	fcall	stringdir
  1907     049D  00D9               	movwf	??_vfpfcnvrt^(0+128)
  1908     049E  01DA               	clrf	(??_vfpfcnvrt^(0+128)+1)
  1909     049F  0859               	movf	??_vfpfcnvrt^(0+128),w
  1910     04A0  00AC               	movwf	fputc@c^(0+128)
  1911     04A1  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  1912     04A2  00AD               	movwf	(fputc@c+1)^(0+128)
  1913     04A3  0855               	movf	vfpfcnvrt@fp^(0+128),w
  1914     04A4  00AE               	movwf	fputc@fp^(0+128)
  1915     04A5  0856               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  1916     04A6  00AF               	movwf	(fputc@fp+1)^(0+128)
  1917     04A7  120A  118A  24AE  120A  118A  	fcall	_fputc
  1918     04AC  2C8C               	goto	l2477
  1919     04AD                     l685:
  1920     04AD  0008               	return
  1921     04AE                     __end_of_vfpfcnvrt:
  1922                           
  1923                           	psect	text4
  1924     0FA8                     __ptext4:	
  1925 ;; *************** function _read_prec_or_width *****************
  1926 ;; Defined at:
  1927 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  fmt             1   18[BANK1 ] PTR PTR const unsigned c
  1930 ;;		 -> vfprintf@cfmt(1), 
  1931 ;;  ap              1   19[BANK1 ] PTR PTR void [1]
  1932 ;;		 -> sprintf@ap(1), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  c               1   20[BANK1 ] unsigned char 
  1935 ;;  n               2   21[BANK1 ] int 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2   18[BANK1 ] int 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       2       0       0
  1946 ;;      Locals:         0       0       3       0       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       0       5       0       0
  1949 ;;Total ram usage:        5 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 10
  1952 ;; This function calls:
  1953 ;;		___wmul
  1954 ;; This function is called by:
  1955 ;;		_vfpfcnvrt
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959     0FA8                     _read_prec_or_width:	
  1960                           ;psect for function _read_prec_or_width
  1961                           
  1962     0FA8                     l2357:	
  1963                           ;incstack = 0
  1964 ;; hardware stack exceeded
  1965                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1966                           
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1969     0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  1970     0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  1971     0FAA  01B5               	clrf	read_prec_or_width@n^(0+128)
  1972     0FAB  01B6               	clrf	(read_prec_or_width@n+1)^(0+128)
  1973     0FAC                     l2359:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1976     0FAC  0832               	movf	read_prec_or_width@fmt^(0+128),w
  1977     0FAD  0084               	movwf	4
  1978     0FAE  1383               	bcf	3,7	;select IRP bank0
  1979     0FAF  0800               	movf	0,w
  1980     0FB0  0084               	movwf	4
  1981     0FB1  120A  158A  2000  120A  158A  	fcall	stringdir
  1982     0FB6  3A2A               	xorlw	42
  1983     0FB7  1D03               	skipz
  1984     0FB8  2FBA               	goto	u3091
  1985     0FB9  2FBB               	goto	u3090
  1986     0FBA                     u3091:
  1987     0FBA  2FEA               	goto	l2369
  1988     0FBB                     u3090:
  1989     0FBB                     l2361:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1992     0FBB  0832               	movf	read_prec_or_width@fmt^(0+128),w
  1993     0FBC  0084               	movwf	4
  1994     0FBD  3001               	movlw	1
  1995     0FBE  0780               	addwf	0,f
  1996     0FBF                     l2363:
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1999     0FBF  0833               	movf	read_prec_or_width@ap^(0+128),w
  2000     0FC0  0084               	movwf	4
  2001     0FC1  1783               	bsf	3,7	;select IRP bank2
  2002     0FC2  0800               	movf	0,w
  2003     0FC3  00FF               	movwf	btemp+1
  2004     0FC4  3002               	movlw	2
  2005     0FC5  0780               	addwf	0,f
  2006     0FC6  087F               	movf	btemp+1,w
  2007     0FC7  0084               	movwf	4
  2008     0FC8  0800               	movf	0,w
  2009     0FC9  00B5               	movwf	read_prec_or_width@n^(0+128)
  2010     0FCA  0A84               	incf	4,f
  2011     0FCB  0800               	movf	0,w
  2012     0FCC  00B6               	movwf	(read_prec_or_width@n+1)^(0+128)
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2015     0FCD  2FFB               	goto	l2371
  2016     0FCE                     l2365:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2019     0FCE  0836               	movf	(read_prec_or_width@n+1)^(0+128),w
  2020     0FCF  00AD               	movwf	(___wmul@multiplier+1)^(0+128)
  2021     0FD0  0835               	movf	read_prec_or_width@n^(0+128),w
  2022     0FD1  00AC               	movwf	___wmul@multiplier^(0+128)
  2023     0FD2  300A               	movlw	10
  2024     0FD3  00AE               	movwf	___wmul@multiplicand^(0+128)
  2025     0FD4  3000               	movlw	0
  2026     0FD5  00AF               	movwf	(___wmul@multiplicand^(0+128)+1)
  2027     0FD6  120A  158A  2591  120A  158A  	fcall	___wmul
  2028     0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2029     0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2030     0FDD  0834               	movf	read_prec_or_width@c^(0+128),w
  2031     0FDE  072C               	addwf	?___wmul^(0+128),w
  2032     0FDF  00B5               	movwf	read_prec_or_width@n^(0+128)
  2033     0FE0  3000               	movlw	0
  2034     0FE1  1803               	skipnc
  2035     0FE2  3001               	movlw	1
  2036     0FE3  072D               	addwf	(?___wmul+1)^(0+128),w
  2037     0FE4  00B6               	movwf	(read_prec_or_width@n+1)^(0+128)
  2038     0FE5                     l2367:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2041     0FE5  0832               	movf	read_prec_or_width@fmt^(0+128),w
  2042     0FE6  0084               	movwf	4
  2043     0FE7  3001               	movlw	1
  2044     0FE8  1383               	bcf	3,7	;select IRP bank0
  2045     0FE9  0780               	addwf	0,f
  2046     0FEA                     l2369:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2049     0FEA  0832               	movf	read_prec_or_width@fmt^(0+128),w
  2050     0FEB  0084               	movwf	4
  2051     0FEC  0800               	movf	0,w
  2052     0FED  0084               	movwf	4
  2053     0FEE  120A  158A  2000  120A  158A  	fcall	stringdir
  2054     0FF3  3ED0               	addlw	208
  2055     0FF4  00B4               	movwf	read_prec_or_width@c^(0+128)
  2056     0FF5  300A               	movlw	10
  2057     0FF6  0234               	subwf	read_prec_or_width@c^(0+128),w
  2058     0FF7  1C03               	skipc
  2059     0FF8  2FFA               	goto	u3101
  2060     0FF9  2FFB               	goto	u3100
  2061     0FFA                     u3101:
  2062     0FFA  2FCE               	goto	l2365
  2063     0FFB                     u3100:
  2064     0FFB                     l2371:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2067     0FFB  0836               	movf	(read_prec_or_width@n+1)^(0+128),w
  2068     0FFC  00B3               	movwf	(?_read_prec_or_width+1)^(0+128)
  2069     0FFD  0835               	movf	read_prec_or_width@n^(0+128),w
  2070     0FFE  00B2               	movwf	?_read_prec_or_width^(0+128)
  2071     0FFF                     l670:
  2072     0FFF  0008               	return
  2073     1000                     __end_of_read_prec_or_width:
  2074                           
  2075                           	psect	text5
  2076     0D91                     __ptext5:	
  2077 ;; *************** function ___wmul *****************
  2078 ;; Defined at:
  2079 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  multiplier      2   12[BANK1 ] unsigned int 
  2082 ;;  multiplicand    2   14[BANK1 ] unsigned int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  product         2   16[BANK1 ] unsigned int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2   12[BANK1 ] unsigned int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       4       0       0
  2095 ;;      Locals:         0       0       2       0       0
  2096 ;;      Temps:          0       0       0       0       0
  2097 ;;      Totals:         0       0       6       0       0
  2098 ;;Total ram usage:        6 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 9
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_read_prec_or_width
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108     0D91                     ___wmul:	
  2109                           ;psect for function ___wmul
  2110                           
  2111     0D91                     l2071:	
  2112                           ;incstack = 0
  2113 ;; hardware stack exceeded
  2114                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2115                           
  2116     0D91  1683               	bsf	3,5	;RP0=1, select bank1
  2117     0D92  1303               	bcf	3,6	;RP1=0, select bank1
  2118     0D93  01B0               	clrf	___wmul@product^(0+128)
  2119     0D94  01B1               	clrf	(___wmul@product+1)^(0+128)
  2120     0D95                     l2073:
  2121     0D95  1C2C               	btfss	___wmul@multiplier^(0+128),0
  2122     0D96  2D98               	goto	u2431
  2123     0D97  2D99               	goto	u2430
  2124     0D98                     u2431:
  2125     0D98  2D9F               	goto	l158
  2126     0D99                     u2430:
  2127     0D99                     l2075:
  2128     0D99  082E               	movf	___wmul@multiplicand^(0+128),w
  2129     0D9A  07B0               	addwf	___wmul@product^(0+128),f
  2130     0D9B  1803               	skipnc
  2131     0D9C  0AB1               	incf	(___wmul@product+1)^(0+128),f
  2132     0D9D  082F               	movf	(___wmul@multiplicand+1)^(0+128),w
  2133     0D9E  07B1               	addwf	(___wmul@product+1)^(0+128),f
  2134     0D9F                     l158:
  2135     0D9F  3001               	movlw	1
  2136     0DA0                     u2445:
  2137     0DA0  1003               	clrc
  2138     0DA1  0DAE               	rlf	___wmul@multiplicand^(0+128),f
  2139     0DA2  0DAF               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2140     0DA3  3EFF               	addlw	-1
  2141     0DA4  1D03               	skipz
  2142     0DA5  2DA0               	goto	u2445
  2143     0DA6                     l2077:
  2144     0DA6  3001               	movlw	1
  2145     0DA7                     u2455:
  2146     0DA7  1003               	clrc
  2147     0DA8  0CAD               	rrf	(___wmul@multiplier+1)^(0+128),f
  2148     0DA9  0CAC               	rrf	___wmul@multiplier^(0+128),f
  2149     0DAA  3EFF               	addlw	-1
  2150     0DAB  1D03               	skipz
  2151     0DAC  2DA7               	goto	u2455
  2152     0DAD                     l2079:
  2153     0DAD  082C               	movf	___wmul@multiplier^(0+128),w
  2154     0DAE  042D               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2155     0DAF  1D03               	btfss	3,2
  2156     0DB0  2DB2               	goto	u2461
  2157     0DB1  2DB3               	goto	u2460
  2158     0DB2                     u2461:
  2159     0DB2  2D95               	goto	l2073
  2160     0DB3                     u2460:
  2161     0DB3                     l2081:
  2162     0DB3  0831               	movf	(___wmul@product+1)^(0+128),w
  2163     0DB4  00AD               	movwf	(?___wmul+1)^(0+128)
  2164     0DB5  0830               	movf	___wmul@product^(0+128),w
  2165     0DB6  00AC               	movwf	?___wmul^(0+128)
  2166     0DB7                     l160:
  2167     0DB7  0008               	return
  2168     0DB8                     __end_of___wmul:
  2169                           
  2170                           	psect	text6
  2171     0325                     __ptext6:	
  2172 ;; *************** function _dtoa *****************
  2173 ;; Defined at:
  2174 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
  2177 ;;		 -> sprintf@f(11), 
  2178 ;;  d               2   43[BANK1 ] int 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  i               2   51[BANK1 ] int 
  2181 ;;  w               2   48[BANK1 ] int 
  2182 ;;  s               1   50[BANK1 ] unsigned char 
  2183 ;;  p               1   47[BANK1 ] _Bool 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       4       0       0
  2194 ;;      Locals:         0       0       8       0       0
  2195 ;;      Temps:          0       0       0       0       0
  2196 ;;      Totals:         0       0      12       0       0
  2197 ;;Total ram usage:       12 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 13
  2200 ;; This function calls:
  2201 ;;		___awdiv
  2202 ;;		___awmod
  2203 ;;		_abs
  2204 ;;		_pad
  2205 ;; This function is called by:
  2206 ;;		_vfpfcnvrt
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210     0325                     _dtoa:	
  2211                           ;psect for function _dtoa
  2212                           
  2213     0325                     l2311:	
  2214                           ;incstack = 0
  2215 ;; hardware stack exceeded
  2216                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2217                           
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2220     0325  3001               	movlw	1
  2221     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2222     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2223     0328  00CF               	movwf	dtoa@p^(0+128)
  2224     0329                     l2313:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2227     0329  1BCC               	btfsc	(dtoa@d+1)^(0+128),7
  2228     032A  2B2C               	goto	u2991
  2229     032B  2B2E               	goto	u2990
  2230     032C                     u2991:
  2231     032C  3001               	movlw	1
  2232     032D  2B2F               	goto	u3000
  2233     032E                     u2990:
  2234     032E  3000               	movlw	0
  2235     032F                     u3000:
  2236     032F  00D2               	movwf	dtoa@s^(0+128)
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2239     0330  0863               	movf	(_width+1)^(0+128),w
  2240     0331  00D1               	movwf	(dtoa@w+1)^(0+128)
  2241     0332  0862               	movf	_width^(0+128),w
  2242     0333  00D0               	movwf	dtoa@w^(0+128)
  2243     0334                     l2315:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  2246     0334  0852               	movf	dtoa@s^(0+128),w
  2247     0335  1903               	btfsc	3,2
  2248     0336  2B38               	goto	u3011
  2249     0337  2B39               	goto	u3010
  2250     0338                     u3011:
  2251     0338  2B4F               	goto	l649
  2252     0339                     u3010:
  2253     0339                     l2317:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  2256     0339  30FF               	movlw	255
  2257     033A  07D0               	addwf	dtoa@w^(0+128),f
  2258     033B  1803               	skipnc
  2259     033C  0AD1               	incf	(dtoa@w+1)^(0+128),f
  2260     033D  30FF               	movlw	255
  2261     033E  07D1               	addwf	(dtoa@w+1)^(0+128),f
  2262     033F                     l2319:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2265     033F  0852               	movf	dtoa@s^(0+128),w
  2266     0340  1D03               	btfss	3,2
  2267     0341  2B43               	goto	u3021
  2268     0342  2B44               	goto	u3020
  2269     0343                     u3021:
  2270     0343  2B49               	goto	l2323
  2271     0344                     u3020:
  2272     0344                     l2321:
  2273     0344  302B               	movlw	43
  2274     0345  00CD               	movwf	_dtoa$601^(0+128)
  2275     0346  3000               	movlw	0
  2276     0347  00CE               	movwf	(_dtoa$601^(0+128)+1)
  2277     0348  2B4D               	goto	l653
  2278     0349                     l2323:
  2279     0349  302D               	movlw	45
  2280     034A  00CD               	movwf	_dtoa$601^(0+128)
  2281     034B  3000               	movlw	0
  2282     034C  00CE               	movwf	(_dtoa$601^(0+128)+1)
  2283     034D                     l653:
  2284     034D  084D               	movf	_dtoa$601^(0+128),w
  2285     034E  00D2               	movwf	dtoa@s^(0+128)
  2286     034F                     l649:	
  2287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  2288                           
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2291     034F  301F               	movlw	31
  2292     0350  00D3               	movwf	dtoa@i^(0+128)
  2293     0351  3000               	movlw	0
  2294     0352  00D4               	movwf	(dtoa@i^(0+128)+1)
  2295     0353                     l2325:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2298     0353  1683               	bsf	3,5	;RP0=1, select bank3
  2299     0354  1703               	bsf	3,6	;RP1=1, select bank3
  2300     0355  01E2               	clrf	(_dbuf^(0+384)+31)
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2303     0356  2B9A               	goto	l2337
  2304     0357                     l2327:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  2307     0357  30FF               	movlw	255
  2308     0358  1683               	bsf	3,5	;RP0=1, select bank1
  2309     0359  1303               	bcf	3,6	;RP1=0, select bank1
  2310     035A  07D3               	addwf	dtoa@i^(0+128),f
  2311     035B  1803               	skipnc
  2312     035C  0AD4               	incf	(dtoa@i+1)^(0+128),f
  2313     035D  30FF               	movlw	255
  2314     035E  07D4               	addwf	(dtoa@i+1)^(0+128),f
  2315     035F                     l2329:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2318     035F  0853               	movf	dtoa@i^(0+128),w
  2319     0360  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2320     0361  0084               	movwf	4
  2321     0362  300A               	movlw	10
  2322     0363  00AC               	movwf	___awmod@divisor^(0+128)
  2323     0364  3000               	movlw	0
  2324     0365  00AD               	movwf	(___awmod@divisor^(0+128)+1)
  2325     0366  084C               	movf	(dtoa@d+1)^(0+128),w
  2326     0367  00AF               	movwf	(___awmod@dividend+1)^(0+128)
  2327     0368  084B               	movf	dtoa@d^(0+128),w
  2328     0369  00AE               	movwf	___awmod@dividend^(0+128)
  2329     036A  120A  118A  277C  120A  118A  	fcall	___awmod
  2330     036F  1683               	bsf	3,5	;RP0=1, select bank1
  2331     0370  1303               	bcf	3,6	;RP1=0, select bank1
  2332     0371  082D               	movf	(?___awmod+1)^(0+128),w
  2333     0372  00B3               	movwf	(abs@a+1)^(0+128)
  2334     0373  082C               	movf	?___awmod^(0+128),w
  2335     0374  00B2               	movwf	abs@a^(0+128)
  2336     0375  120A  158A  2511  120A  118A  	fcall	_abs
  2337     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2338     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2339     037C  0832               	movf	?_abs^(0+128),w
  2340     037D  3E30               	addlw	48
  2341     037E  1783               	bsf	3,7	;select IRP bank3
  2342     037F  0080               	movwf	0
  2343     0380                     l2331:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2346     0380  01CF               	clrf	dtoa@p^(0+128)
  2347     0381                     l2333:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  2350     0381  30FF               	movlw	255
  2351     0382  07D0               	addwf	dtoa@w^(0+128),f
  2352     0383  1803               	skipnc
  2353     0384  0AD1               	incf	(dtoa@w+1)^(0+128),f
  2354     0385  30FF               	movlw	255
  2355     0386  07D1               	addwf	(dtoa@w+1)^(0+128),f
  2356     0387                     l2335:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2359     0387  300A               	movlw	10
  2360     0388  00AC               	movwf	___awdiv@divisor^(0+128)
  2361     0389  3000               	movlw	0
  2362     038A  00AD               	movwf	(___awdiv@divisor^(0+128)+1)
  2363     038B  084C               	movf	(dtoa@d+1)^(0+128),w
  2364     038C  00AF               	movwf	(___awdiv@dividend+1)^(0+128)
  2365     038D  084B               	movf	dtoa@d^(0+128),w
  2366     038E  00AE               	movwf	___awdiv@dividend^(0+128)
  2367     038F  120A  118A  2654  120A  118A  	fcall	___awdiv
  2368     0394  1683               	bsf	3,5	;RP0=1, select bank1
  2369     0395  1303               	bcf	3,6	;RP1=0, select bank1
  2370     0396  082D               	movf	(?___awdiv+1)^(0+128),w
  2371     0397  00CC               	movwf	(dtoa@d+1)^(0+128)
  2372     0398  082C               	movf	?___awdiv^(0+128),w
  2373     0399  00CB               	movwf	dtoa@d^(0+128)
  2374     039A                     l2337:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2377     039A  1303               	bcf	3,6	;RP1=0, select bank1
  2378     039B  0854               	movf	(dtoa@i+1)^(0+128),w
  2379     039C  3A80               	xorlw	128
  2380     039D  00FF               	movwf	btemp+1
  2381     039E  3080               	movlw	128
  2382     039F  027F               	subwf	btemp+1,w
  2383     03A0  1D03               	skipz
  2384     03A1  2BA4               	goto	u3035
  2385     03A2  3001               	movlw	1
  2386     03A3  0253               	subwf	dtoa@i^(0+128),w
  2387     03A4                     u3035:
  2388     03A4  1C03               	skipc
  2389     03A5  2BA7               	goto	u3031
  2390     03A6  2BA8               	goto	u3030
  2391     03A7                     u3031:
  2392     03A7  2BC8               	goto	l2347
  2393     03A8                     u3030:
  2394     03A8                     l2339:
  2395     03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2396     03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2397     03AA  084B               	movf	dtoa@d^(0+128),w
  2398     03AB  044C               	iorwf	(dtoa@d+1)^(0+128),w
  2399     03AC  1D03               	btfss	3,2
  2400     03AD  2BAF               	goto	u3041
  2401     03AE  2BB0               	goto	u3040
  2402     03AF                     u3041:
  2403     03AF  2B57               	goto	l2327
  2404     03B0                     u3040:
  2405     03B0                     l2341:
  2406     03B0  084F               	movf	dtoa@p^(0+128),w
  2407     03B1  1D03               	btfss	3,2
  2408     03B2  2BB4               	goto	u3051
  2409     03B3  2BB5               	goto	u3050
  2410     03B4                     u3051:
  2411     03B4  2B57               	goto	l2327
  2412     03B5                     u3050:
  2413     03B5                     l2343:
  2414     03B5  0851               	movf	(dtoa@w+1)^(0+128),w
  2415     03B6  3A80               	xorlw	128
  2416     03B7  00FF               	movwf	btemp+1
  2417     03B8  3080               	movlw	128
  2418     03B9  027F               	subwf	btemp+1,w
  2419     03BA  1D03               	skipz
  2420     03BB  2BBE               	goto	u3065
  2421     03BC  3001               	movlw	1
  2422     03BD  0250               	subwf	dtoa@w^(0+128),w
  2423     03BE                     u3065:
  2424     03BE  1C03               	skipc
  2425     03BF  2BC1               	goto	u3061
  2426     03C0  2BC2               	goto	u3060
  2427     03C1                     u3061:
  2428     03C1  2BC8               	goto	l2347
  2429     03C2                     u3060:
  2430     03C2                     l2345:
  2431     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2432     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2433     03C4  18E9               	btfsc	_flags,1
  2434     03C5  2BC7               	goto	u3071
  2435     03C6  2BC8               	goto	u3070
  2436     03C7                     u3071:
  2437     03C7  2B57               	goto	l2327
  2438     03C8                     u3070:
  2439     03C8                     l2347:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2442     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2443     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2444     03CA  0852               	movf	dtoa@s^(0+128),w
  2445     03CB  1903               	btfsc	3,2
  2446     03CC  2BCE               	goto	u3081
  2447     03CD  2BCF               	goto	u3080
  2448     03CE                     u3081:
  2449     03CE  2BDB               	goto	l2353
  2450     03CF                     u3080:
  2451     03CF                     l2349:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  2454     03CF  30FF               	movlw	255
  2455     03D0  07D3               	addwf	dtoa@i^(0+128),f
  2456     03D1  1803               	skipnc
  2457     03D2  0AD4               	incf	(dtoa@i+1)^(0+128),f
  2458     03D3  30FF               	movlw	255
  2459     03D4  07D4               	addwf	(dtoa@i+1)^(0+128),f
  2460     03D5                     l2351:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2463     03D5  0853               	movf	dtoa@i^(0+128),w
  2464     03D6  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2465     03D7  0084               	movwf	4
  2466     03D8  0852               	movf	dtoa@s^(0+128),w
  2467     03D9  1783               	bsf	3,7	;select IRP bank3
  2468     03DA  0080               	movwf	0
  2469     03DB                     l2353:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2472     03DB  0849               	movf	dtoa@fp^(0+128),w
  2473     03DC  00C1               	movwf	pad@fp^(0+128)
  2474     03DD  084A               	movf	(dtoa@fp+1)^(0+128),w
  2475     03DE  00C2               	movwf	(pad@fp+1)^(0+128)
  2476     03DF  0853               	movf	dtoa@i^(0+128),w
  2477     03E0  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2478     03E1  00C3               	movwf	pad@buf^(0+128)
  2479     03E2  0851               	movf	(dtoa@w+1)^(0+128),w
  2480     03E3  00C5               	movwf	(pad@p+1)^(0+128)
  2481     03E4  0850               	movf	dtoa@w^(0+128),w
  2482     03E5  00C4               	movwf	pad@p^(0+128)
  2483     03E6  120A  158A  2751  120A  118A  	fcall	_pad
  2484     03EB                     l662:
  2485     03EB  0008               	return
  2486     03EC                     __end_of_dtoa:
  2487                           
  2488                           	psect	text7
  2489     0F51                     __ptext7:	
  2490 ;; *************** function _pad *****************
  2491 ;; Defined at:
  2492 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
  2495 ;;		 -> sprintf@f(11), 
  2496 ;;  buf             1   35[BANK1 ] PTR unsigned char 
  2497 ;;		 -> dbuf(32), 
  2498 ;;  p               2   36[BANK1 ] int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  i               2   39[BANK1 ] int 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       5       0       0
  2511 ;;      Locals:         0       0       2       0       0
  2512 ;;      Temps:          0       0       1       0       0
  2513 ;;      Totals:         0       0       8       0       0
  2514 ;;Total ram usage:        8 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 12
  2517 ;; This function calls:
  2518 ;;		_fputc
  2519 ;;		_fputs
  2520 ;; This function is called by:
  2521 ;;		_dtoa
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525     0F51                     _pad:	
  2526                           ;psect for function _pad
  2527                           
  2528     0F51                     l2167:	
  2529                           ;incstack = 0
  2530 ;; hardware stack exceeded
  2531                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2532                           
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2535     0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2536     0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2537     0F53  1C69               	btfss	_flags,0
  2538     0F54  2F56               	goto	u2661
  2539     0F55  2F57               	goto	u2660
  2540     0F56                     u2661:
  2541     0F56  2F64               	goto	l2171
  2542     0F57                     u2660:
  2543     0F57                     l2169:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2546     0F57  1683               	bsf	3,5	;RP0=1, select bank1
  2547     0F58  1303               	bcf	3,6	;RP1=0, select bank1
  2548     0F59  0843               	movf	pad@buf^(0+128),w
  2549     0F5A  00B9               	movwf	fputs@s^(0+128)
  2550     0F5B  0841               	movf	pad@fp^(0+128),w
  2551     0F5C  00BA               	movwf	fputs@fp^(0+128)
  2552     0F5D  0842               	movf	(pad@fp+1)^(0+128),w
  2553     0F5E  00BB               	movwf	(fputs@fp+1)^(0+128)
  2554     0F5F  120A  118A  27D5  120A  158A  	fcall	_fputs
  2555     0F64                     l2171:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2558     0F64  1683               	bsf	3,5	;RP0=1, select bank1
  2559     0F65  1303               	bcf	3,6	;RP1=0, select bank1
  2560     0F66  1FC5               	btfss	(pad@p+1)^(0+128),7
  2561     0F67  2F69               	goto	u2671
  2562     0F68  2F6A               	goto	u2670
  2563     0F69                     u2671:
  2564     0F69  2F6C               	goto	l641
  2565     0F6A                     u2670:
  2566     0F6A                     l2173:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2569     0F6A  01C4               	clrf	pad@p^(0+128)
  2570     0F6B  01C5               	clrf	(pad@p+1)^(0+128)
  2571     0F6C                     l641:	
  2572                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  2573                           
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2576     0F6C  01C7               	clrf	pad@i^(0+128)
  2577     0F6D  01C8               	clrf	(pad@i+1)^(0+128)
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2580     0F6E  2F86               	goto	l2179
  2581     0F6F                     l2175:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2584     0F6F  3020               	movlw	32
  2585     0F70  1683               	bsf	3,5	;RP0=1, select bank1
  2586     0F71  1303               	bcf	3,6	;RP1=0, select bank1
  2587     0F72  00AC               	movwf	fputc@c^(0+128)
  2588     0F73  3000               	movlw	0
  2589     0F74  00AD               	movwf	(fputc@c^(0+128)+1)
  2590     0F75  0841               	movf	pad@fp^(0+128),w
  2591     0F76  00AE               	movwf	fputc@fp^(0+128)
  2592     0F77  0842               	movf	(pad@fp+1)^(0+128),w
  2593     0F78  00AF               	movwf	(fputc@fp+1)^(0+128)
  2594     0F79  120A  118A  24AE  120A  158A  	fcall	_fputc
  2595     0F7E                     l2177:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2598     0F7E  3001               	movlw	1
  2599     0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2600     0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2601     0F81  07C7               	addwf	pad@i^(0+128),f
  2602     0F82  1803               	skipnc
  2603     0F83  0AC8               	incf	(pad@i+1)^(0+128),f
  2604     0F84  3000               	movlw	0
  2605     0F85  07C8               	addwf	(pad@i+1)^(0+128),f
  2606     0F86                     l2179:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2609     0F86  0848               	movf	(pad@i+1)^(0+128),w
  2610     0F87  3A80               	xorlw	128
  2611     0F88  00C6               	movwf	??_pad^(0+128)
  2612     0F89  0845               	movf	(pad@p+1)^(0+128),w
  2613     0F8A  3A80               	xorlw	128
  2614     0F8B  0246               	subwf	??_pad^(0+128),w
  2615     0F8C  1D03               	skipz
  2616     0F8D  2F90               	goto	u2685
  2617     0F8E  0844               	movf	pad@p^(0+128),w
  2618     0F8F  0247               	subwf	pad@i^(0+128),w
  2619     0F90                     u2685:
  2620     0F90  1C03               	skipc
  2621     0F91  2F93               	goto	u2681
  2622     0F92  2F94               	goto	u2680
  2623     0F93                     u2681:
  2624     0F93  2F6F               	goto	l2175
  2625     0F94                     u2680:
  2626     0F94                     l644:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2629     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0F96  1869               	btfsc	_flags,0
  2632     0F97  2F99               	goto	u2691
  2633     0F98  2F9A               	goto	u2690
  2634     0F99                     u2691:
  2635     0F99  2FA7               	goto	l646
  2636     0F9A                     u2690:
  2637     0F9A                     l2181:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2640     0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  2641     0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  2642     0F9C  0843               	movf	pad@buf^(0+128),w
  2643     0F9D  00B9               	movwf	fputs@s^(0+128)
  2644     0F9E  0841               	movf	pad@fp^(0+128),w
  2645     0F9F  00BA               	movwf	fputs@fp^(0+128)
  2646     0FA0  0842               	movf	(pad@fp+1)^(0+128),w
  2647     0FA1  00BB               	movwf	(fputs@fp+1)^(0+128)
  2648     0FA2  120A  118A  27D5  120A  158A  	fcall	_fputs
  2649     0FA7                     l646:
  2650     0FA7  0008               	return
  2651     0FA8                     __end_of_pad:
  2652                           
  2653                           	psect	text8
  2654     07D5                     __ptext8:	
  2655 ;; *************** function _fputs *****************
  2656 ;; Defined at:
  2657 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  s               1   25[BANK1 ] PTR const unsigned char 
  2660 ;;		 -> dbuf(32), 
  2661 ;;  fp              2   26[BANK1 ] PTR struct _IO_FILE
  2662 ;;		 -> sprintf@f(11), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  i               2   31[BANK1 ] int 
  2665 ;;  c               1   30[BANK1 ] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  2   25[BANK1 ] int 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       3       0       0
  2676 ;;      Locals:         0       0       3       0       0
  2677 ;;      Temps:          0       0       2       0       0
  2678 ;;      Totals:         0       0       8       0       0
  2679 ;;Total ram usage:        8 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 11
  2682 ;; This function calls:
  2683 ;;		_fputc
  2684 ;; This function is called by:
  2685 ;;		_pad
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689     07D5                     _fputs:	
  2690                           ;psect for function _fputs
  2691                           
  2692     07D5                     l2055:	
  2693                           ;incstack = 0
  2694 ;; hardware stack exceeded
  2695                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696                           
  2697     07D5  1683               	bsf	3,5	;RP0=1, select bank1
  2698     07D6  1303               	bcf	3,6	;RP1=0, select bank1
  2699     07D7  01BF               	clrf	fputs@i^(0+128)
  2700     07D8  01C0               	clrf	(fputs@i+1)^(0+128)
  2701     07D9  2FF2               	goto	l2061
  2702     07DA                     l2057:
  2703     07DA  083E               	movf	fputs@c^(0+128),w
  2704     07DB  00BC               	movwf	??_fputs^(0+128)
  2705     07DC  01BD               	clrf	(??_fputs^(0+128)+1)
  2706     07DD  083C               	movf	??_fputs^(0+128),w
  2707     07DE  00AC               	movwf	fputc@c^(0+128)
  2708     07DF  083D               	movf	(??_fputs+1)^(0+128),w
  2709     07E0  00AD               	movwf	(fputc@c+1)^(0+128)
  2710     07E1  083A               	movf	fputs@fp^(0+128),w
  2711     07E2  00AE               	movwf	fputc@fp^(0+128)
  2712     07E3  083B               	movf	(fputs@fp+1)^(0+128),w
  2713     07E4  00AF               	movwf	(fputc@fp+1)^(0+128)
  2714     07E5  120A  118A  24AE  120A  118A  	fcall	_fputc
  2715     07EA                     l2059:
  2716     07EA  3001               	movlw	1
  2717     07EB  1683               	bsf	3,5	;RP0=1, select bank1
  2718     07EC  1303               	bcf	3,6	;RP1=0, select bank1
  2719     07ED  07BF               	addwf	fputs@i^(0+128),f
  2720     07EE  1803               	skipnc
  2721     07EF  0AC0               	incf	(fputs@i+1)^(0+128),f
  2722     07F0  3000               	movlw	0
  2723     07F1  07C0               	addwf	(fputs@i+1)^(0+128),f
  2724     07F2                     l2061:
  2725     07F2  083F               	movf	fputs@i^(0+128),w
  2726     07F3  0739               	addwf	fputs@s^(0+128),w
  2727     07F4  00BC               	movwf	??_fputs^(0+128)
  2728     07F5  083C               	movf	??_fputs^(0+128),w
  2729     07F6  0084               	movwf	4
  2730     07F7  1783               	bsf	3,7	;select IRP bank2
  2731     07F8  0800               	movf	0,w
  2732     07F9  00BE               	movwf	fputs@c^(0+128)
  2733     07FA  083E               	movf	fputs@c^(0+128),w
  2734     07FB  1D03               	btfss	3,2
  2735     07FC  2FFE               	goto	u2411
  2736     07FD  2FFF               	goto	u2410
  2737     07FE                     u2411:
  2738     07FE  2FDA               	goto	l2057
  2739     07FF                     u2410:
  2740     07FF                     l718:
  2741     07FF  0008               	return
  2742     0800                     __end_of_fputs:
  2743                           
  2744                           	psect	text9
  2745     04AE                     __ptext9:	
  2746 ;; *************** function _fputc *****************
  2747 ;; Defined at:
  2748 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  c               2   12[BANK1 ] int 
  2751 ;;  fp              2   14[BANK1 ] PTR struct _IO_FILE
  2752 ;;		 -> sprintf@f(11), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2   12[BANK1 ] int 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       0       4       0       0
  2765 ;;      Locals:         0       0       0       0       0
  2766 ;;      Temps:          0       0       9       0       0
  2767 ;;      Totals:         0       0      13       0       0
  2768 ;;Total ram usage:       13 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 10
  2771 ;; This function calls:
  2772 ;;		_putch
  2773 ;; This function is called by:
  2774 ;;		_pad
  2775 ;;		_vfpfcnvrt
  2776 ;;		_fputs
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780     04AE                     _fputc:	
  2781                           ;psect for function _fputc
  2782                           
  2783     04AE                     l2027:	
  2784                           ;incstack = 0
  2785 ;; hardware stack exceeded
  2786                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2787                           
  2788     04AE  1683               	bsf	3,5	;RP0=1, select bank1
  2789     04AF  1303               	bcf	3,6	;RP1=0, select bank1
  2790     04B0  082E               	movf	fputc@fp^(0+128),w
  2791     04B1  042F               	iorwf	(fputc@fp+1)^(0+128),w
  2792     04B2  1903               	btfsc	3,2
  2793     04B3  2CB5               	goto	u2311
  2794     04B4  2CB6               	goto	u2310
  2795     04B5                     u2311:
  2796     04B5  2CBC               	goto	l2031
  2797     04B6                     u2310:
  2798     04B6                     l2029:
  2799     04B6  082E               	movf	fputc@fp^(0+128),w
  2800     04B7  042F               	iorwf	(fputc@fp+1)^(0+128),w
  2801     04B8  1D03               	btfss	3,2
  2802     04B9  2CBB               	goto	u2321
  2803     04BA  2CBC               	goto	u2320
  2804     04BB                     u2321:
  2805     04BB  2CC3               	goto	l2033
  2806     04BC                     u2320:
  2807     04BC                     l2031:
  2808     04BC  082C               	movf	fputc@c^(0+128),w
  2809     04BD  120A  118A  2003  120A  118A  	fcall	_putch
  2810     04C2  2D4D               	goto	l710
  2811     04C3                     l2033:
  2812     04C3  082E               	movf	fputc@fp^(0+128),w
  2813     04C4  3E09               	addlw	9
  2814     04C5  00B0               	movwf	??_fputc^(0+128)
  2815     04C6  082F               	movf	(fputc@fp+1)^(0+128),w
  2816     04C7  1803               	skipnc
  2817     04C8  3E01               	addlw	1
  2818     04C9  3E00               	addlw	0
  2819     04CA  00B1               	movwf	(??_fputc+1)^(0+128)
  2820     04CB  0830               	movf	??_fputc^(0+128),w
  2821     04CC  0084               	movwf	4
  2822     04CD  1783               	bsf	3,7
  2823     04CE  1C31               	btfss	(??_fputc+1)^(0+128),0
  2824     04CF  1383               	bcf	3,7
  2825     04D0  0800               	movf	0,w
  2826     04D1  00B2               	movwf	(??_fputc+2)^(0+128)
  2827     04D2  0A84               	incf	4,f
  2828     04D3  0800               	movf	0,w
  2829     04D4  00B3               	movwf	((??_fputc+2)^(0+128)+1)
  2830     04D5  0832               	movf	(??_fputc+2)^(0+128),w
  2831     04D6  0433               	iorwf	((??_fputc+2)^(0+128)+1),w
  2832     04D7  1903               	btfsc	3,2
  2833     04D8  2CDA               	goto	u2331
  2834     04D9  2CDB               	goto	u2330
  2835     04DA                     u2331:
  2836     04DA  2D0D               	goto	l2037
  2837     04DB                     u2330:
  2838     04DB                     l2035:
  2839     04DB  082E               	movf	fputc@fp^(0+128),w
  2840     04DC  3E09               	addlw	9
  2841     04DD  00B0               	movwf	??_fputc^(0+128)
  2842     04DE  082F               	movf	(fputc@fp+1)^(0+128),w
  2843     04DF  1803               	skipnc
  2844     04E0  3E01               	addlw	1
  2845     04E1  3E00               	addlw	0
  2846     04E2  00B1               	movwf	(??_fputc+1)^(0+128)
  2847     04E3  0830               	movf	??_fputc^(0+128),w
  2848     04E4  0084               	movwf	4
  2849     04E5  1783               	bsf	3,7
  2850     04E6  1C31               	btfss	(??_fputc+1)^(0+128),0
  2851     04E7  1383               	bcf	3,7
  2852     04E8  0800               	movf	0,w
  2853     04E9  00B2               	movwf	(??_fputc+2)^(0+128)
  2854     04EA  0A84               	incf	4,f
  2855     04EB  0800               	movf	0,w
  2856     04EC  00B3               	movwf	((??_fputc+2)^(0+128)+1)
  2857     04ED  082E               	movf	fputc@fp^(0+128),w
  2858     04EE  3E02               	addlw	2
  2859     04EF  00B4               	movwf	(??_fputc+4)^(0+128)
  2860     04F0  082F               	movf	(fputc@fp+1)^(0+128),w
  2861     04F1  1803               	skipnc
  2862     04F2  3E01               	addlw	1
  2863     04F3  3E00               	addlw	0
  2864     04F4  00B5               	movwf	(??_fputc+5)^(0+128)
  2865     04F5  0834               	movf	(??_fputc+4)^(0+128),w
  2866     04F6  0084               	movwf	4
  2867     04F7  1783               	bsf	3,7
  2868     04F8  1C35               	btfss	(??_fputc+5)^(0+128),0
  2869     04F9  1383               	bcf	3,7
  2870     04FA  0800               	movf	0,w
  2871     04FB  00B6               	movwf	(??_fputc+6)^(0+128)
  2872     04FC  0A84               	incf	4,f
  2873     04FD  0800               	movf	0,w
  2874     04FE  00B7               	movwf	((??_fputc+6)^(0+128)+1)
  2875     04FF  0837               	movf	(??_fputc+7)^(0+128),w
  2876     0500  3A80               	xorlw	128
  2877     0501  00B8               	movwf	(??_fputc+8)^(0+128)
  2878     0502  0833               	movf	(??_fputc+3)^(0+128),w
  2879     0503  3A80               	xorlw	128
  2880     0504  0238               	subwf	(??_fputc+8)^(0+128),w
  2881     0505  1D03               	skipz
  2882     0506  2D09               	goto	u2345
  2883     0507  0832               	movf	(??_fputc+2)^(0+128),w
  2884     0508  0236               	subwf	(??_fputc+6)^(0+128),w
  2885     0509                     u2345:
  2886     0509  1803               	skipnc
  2887     050A  2D0C               	goto	u2341
  2888     050B  2D0D               	goto	u2340
  2889     050C                     u2341:
  2890     050C  2D4D               	goto	l710
  2891     050D                     u2340:
  2892     050D                     l2037:
  2893     050D  1683               	bsf	3,5	;RP0=1, select bank1
  2894     050E  1303               	bcf	3,6	;RP1=0, select bank1
  2895     050F  082E               	movf	fputc@fp^(0+128),w
  2896     0510  0084               	movwf	4
  2897     0511  1783               	bsf	3,7
  2898     0512  1C2F               	btfss	(fputc@fp+1)^(0+128),0
  2899     0513  1383               	bcf	3,7
  2900     0514  0800               	movf	0,w
  2901     0515  00B0               	movwf	??_fputc^(0+128)
  2902     0516  0A84               	incf	4,f
  2903     0517  0800               	movf	0,w
  2904     0518  00B1               	movwf	(??_fputc^(0+128)+1)
  2905     0519  082E               	movf	fputc@fp^(0+128),w
  2906     051A  3E02               	addlw	2
  2907     051B  00B2               	movwf	(??_fputc+2)^(0+128)
  2908     051C  082F               	movf	(fputc@fp+1)^(0+128),w
  2909     051D  1803               	skipnc
  2910     051E  3E01               	addlw	1
  2911     051F  3E00               	addlw	0
  2912     0520  00B3               	movwf	(??_fputc+3)^(0+128)
  2913     0521  0832               	movf	(??_fputc+2)^(0+128),w
  2914     0522  0084               	movwf	4
  2915     0523  1783               	bsf	3,7
  2916     0524  1C33               	btfss	(??_fputc+3)^(0+128),0
  2917     0525  1383               	bcf	3,7
  2918     0526  0800               	movf	0,w
  2919     0527  0730               	addwf	??_fputc^(0+128),w
  2920     0528  00B5               	movwf	(??_fputc+5)^(0+128)
  2921     0529  0831               	movf	(??_fputc+1)^(0+128),w
  2922     052A  00B4               	movwf	(??_fputc+4)^(0+128)
  2923     052B  1803               	skipnc
  2924     052C  0AB4               	incf	(??_fputc+4)^(0+128),f
  2925     052D  1F80               	btfss	0,7
  2926     052E  2D30               	goto	u2350
  2927     052F  03B4               	decf	(??_fputc+4)^(0+128),f
  2928     0530                     u2350:
  2929     0530  1683               	bsf	3,5	;RP0=1, select bank1
  2930     0531  1303               	bcf	3,6	;RP1=0, select bank1
  2931     0532  0834               	movf	(??_fputc+4)^(0+128),w
  2932     0533  00B6               	movwf	((??_fputc+5)^(0+128)+1)
  2933     0534  0835               	movf	(??_fputc+5)^(0+128),w
  2934     0535  0084               	movwf	4
  2935     0536  1783               	bsf	3,7
  2936     0537  1C36               	btfss	(??_fputc+6)^(0+128),0
  2937     0538  1383               	bcf	3,7
  2938     0539  082C               	movf	fputc@c^(0+128),w
  2939     053A  0080               	movwf	0
  2940     053B  082E               	movf	fputc@fp^(0+128),w
  2941     053C  3E02               	addlw	2
  2942     053D  00B0               	movwf	??_fputc^(0+128)
  2943     053E  082F               	movf	(fputc@fp+1)^(0+128),w
  2944     053F  1803               	skipnc
  2945     0540  3E01               	addlw	1
  2946     0541  3E00               	addlw	0
  2947     0542  00B1               	movwf	(??_fputc+1)^(0+128)
  2948     0543  0830               	movf	??_fputc^(0+128),w
  2949     0544  0084               	movwf	4
  2950     0545  1783               	bsf	3,7
  2951     0546  1C31               	btfss	(??_fputc+1)^(0+128),0
  2952     0547  1383               	bcf	3,7
  2953     0548  3001               	movlw	1
  2954     0549  0780               	addwf	0,f
  2955     054A  0A84               	incf	4,f
  2956     054B  1803               	skipnc
  2957     054C  0A80               	incf	0,f
  2958     054D                     l710:
  2959     054D  0008               	return
  2960     054E                     __end_of_fputc:
  2961                           
  2962                           	psect	text10
  2963     0003                     __ptext10:	
  2964 ;; *************** function _putch *****************
  2965 ;; Defined at:
  2966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  c               1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  c               1    0[COMMON] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 9
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_fputc
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     0003                     _putch:	
  2995                           ;psect for function _putch
  2996                           
  2997     0003                     l721:	
  2998                           ;incstack = 0
  2999 ;; hardware stack exceeded
  3000                           ; Regs used in _putch: [wreg]
  3001                           
  3002     0003  0008               	return
  3003     0004                     __end_of_putch:
  3004                           
  3005                           	psect	text11
  3006     0D11                     __ptext11:	
  3007 ;; *************** function _abs *****************
  3008 ;; Defined at:
  3009 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  a               2   18[BANK1 ] int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2   18[BANK1 ] int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       2       0       0
  3024 ;;      Locals:         0       0       0       0       0
  3025 ;;      Temps:          0       0       2       0       0
  3026 ;;      Totals:         0       0       4       0       0
  3027 ;;Total ram usage:        4 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 9
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_dtoa
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     0D11                     _abs:	
  3038                           ;psect for function _abs
  3039                           
  3040     0D11                     l2183:	
  3041                           ;incstack = 0
  3042 ;; hardware stack exceeded
  3043                           ; Regs used in _abs: [wreg+status,2+status,0]
  3044                           
  3045     0D11  1683               	bsf	3,5	;RP0=1, select bank1
  3046     0D12  1303               	bcf	3,6	;RP1=0, select bank1
  3047     0D13  1BB3               	btfsc	(abs@a+1)^(0+128),7
  3048     0D14  2D16               	goto	u2701
  3049     0D15  2D17               	goto	u2700
  3050     0D16                     u2701:
  3051     0D16  2D18               	goto	l2187
  3052     0D17                     u2700:
  3053     0D17                     l2185:
  3054     0D17  2D23               	goto	l698
  3055     0D18                     l2187:
  3056     0D18  0932               	comf	abs@a^(0+128),w
  3057     0D19  00B4               	movwf	??_abs^(0+128)
  3058     0D1A  0933               	comf	(abs@a+1)^(0+128),w
  3059     0D1B  00B5               	movwf	(??_abs^(0+128)+1)
  3060     0D1C  0AB4               	incf	??_abs^(0+128),f
  3061     0D1D  1903               	skipnz
  3062     0D1E  0AB5               	incf	(??_abs^(0+128)+1),f
  3063     0D1F  0834               	movf	??_abs^(0+128),w
  3064     0D20  00B2               	movwf	?_abs^(0+128)
  3065     0D21  0835               	movf	(??_abs+1)^(0+128),w
  3066     0D22  00B3               	movwf	(?_abs+1)^(0+128)
  3067     0D23                     l698:
  3068     0D23  0008               	return
  3069     0D24                     __end_of_abs:
  3070                           
  3071                           	psect	text12
  3072     077C                     __ptext12:	
  3073 ;; *************** function ___awmod *****************
  3074 ;; Defined at:
  3075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  divisor         2   12[BANK1 ] int 
  3078 ;;  dividend        2   14[BANK1 ] int 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  sign            1   17[BANK1 ] unsigned char 
  3081 ;;  counter         1   16[BANK1 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  2   12[BANK1 ] int 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       0       4       0       0
  3092 ;;      Locals:         0       0       2       0       0
  3093 ;;      Temps:          0       0       0       0       0
  3094 ;;      Totals:         0       0       6       0       0
  3095 ;;Total ram usage:        6 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 9
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_dtoa
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105     077C                     ___awmod:	
  3106                           ;psect for function ___awmod
  3107                           
  3108     077C                     l2129:	
  3109                           ;incstack = 0
  3110 ;; hardware stack exceeded
  3111                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3112                           
  3113     077C  1683               	bsf	3,5	;RP0=1, select bank1
  3114     077D  1303               	bcf	3,6	;RP1=0, select bank1
  3115     077E  01B1               	clrf	___awmod@sign^(0+128)
  3116     077F                     l2131:
  3117     077F  1FAF               	btfss	(___awmod@dividend+1)^(0+128),7
  3118     0780  2F82               	goto	u2571
  3119     0781  2F83               	goto	u2570
  3120     0782                     u2571:
  3121     0782  2F8A               	goto	l2137
  3122     0783                     u2570:
  3123     0783                     l2133:
  3124     0783  09AE               	comf	___awmod@dividend^(0+128),f
  3125     0784  09AF               	comf	(___awmod@dividend+1)^(0+128),f
  3126     0785  0AAE               	incf	___awmod@dividend^(0+128),f
  3127     0786  1903               	skipnz
  3128     0787  0AAF               	incf	(___awmod@dividend+1)^(0+128),f
  3129     0788                     l2135:
  3130     0788  3001               	movlw	1
  3131     0789  00B1               	movwf	___awmod@sign^(0+128)
  3132     078A                     l2137:
  3133     078A  1FAD               	btfss	(___awmod@divisor+1)^(0+128),7
  3134     078B  2F8D               	goto	u2581
  3135     078C  2F8E               	goto	u2580
  3136     078D                     u2581:
  3137     078D  2F93               	goto	l2141
  3138     078E                     u2580:
  3139     078E                     l2139:
  3140     078E  09AC               	comf	___awmod@divisor^(0+128),f
  3141     078F  09AD               	comf	(___awmod@divisor+1)^(0+128),f
  3142     0790  0AAC               	incf	___awmod@divisor^(0+128),f
  3143     0791  1903               	skipnz
  3144     0792  0AAD               	incf	(___awmod@divisor+1)^(0+128),f
  3145     0793                     l2141:
  3146     0793  082C               	movf	___awmod@divisor^(0+128),w
  3147     0794  042D               	iorwf	(___awmod@divisor+1)^(0+128),w
  3148     0795  1903               	btfsc	3,2
  3149     0796  2F98               	goto	u2591
  3150     0797  2F99               	goto	u2590
  3151     0798                     u2591:
  3152     0798  2FC6               	goto	l2159
  3153     0799                     u2590:
  3154     0799                     l2143:
  3155     0799  3001               	movlw	1
  3156     079A  00B0               	movwf	___awmod@counter^(0+128)
  3157     079B  2FA5               	goto	l2149
  3158     079C                     l2145:
  3159     079C  3001               	movlw	1
  3160     079D                     u2605:
  3161     079D  1003               	clrc
  3162     079E  0DAC               	rlf	___awmod@divisor^(0+128),f
  3163     079F  0DAD               	rlf	(___awmod@divisor+1)^(0+128),f
  3164     07A0  3EFF               	addlw	-1
  3165     07A1  1D03               	skipz
  3166     07A2  2F9D               	goto	u2605
  3167     07A3                     l2147:
  3168     07A3  3001               	movlw	1
  3169     07A4  07B0               	addwf	___awmod@counter^(0+128),f
  3170     07A5                     l2149:
  3171     07A5  1FAD               	btfss	(___awmod@divisor+1)^(0+128),7
  3172     07A6  2FA8               	goto	u2611
  3173     07A7  2FA9               	goto	u2610
  3174     07A8                     u2611:
  3175     07A8  2F9C               	goto	l2145
  3176     07A9                     u2610:
  3177     07A9                     l2151:
  3178     07A9  082D               	movf	(___awmod@divisor+1)^(0+128),w
  3179     07AA  022F               	subwf	(___awmod@dividend+1)^(0+128),w
  3180     07AB  1D03               	skipz
  3181     07AC  2FAF               	goto	u2625
  3182     07AD  082C               	movf	___awmod@divisor^(0+128),w
  3183     07AE  022E               	subwf	___awmod@dividend^(0+128),w
  3184     07AF                     u2625:
  3185     07AF  1C03               	skipc
  3186     07B0  2FB2               	goto	u2621
  3187     07B1  2FB3               	goto	u2620
  3188     07B2                     u2621:
  3189     07B2  2FB9               	goto	l2155
  3190     07B3                     u2620:
  3191     07B3                     l2153:
  3192     07B3  082C               	movf	___awmod@divisor^(0+128),w
  3193     07B4  02AE               	subwf	___awmod@dividend^(0+128),f
  3194     07B5  082D               	movf	(___awmod@divisor+1)^(0+128),w
  3195     07B6  1C03               	skipc
  3196     07B7  03AF               	decf	(___awmod@dividend+1)^(0+128),f
  3197     07B8  02AF               	subwf	(___awmod@dividend+1)^(0+128),f
  3198     07B9                     l2155:
  3199     07B9  3001               	movlw	1
  3200     07BA                     u2635:
  3201     07BA  1003               	clrc
  3202     07BB  0CAD               	rrf	(___awmod@divisor+1)^(0+128),f
  3203     07BC  0CAC               	rrf	___awmod@divisor^(0+128),f
  3204     07BD  3EFF               	addlw	-1
  3205     07BE  1D03               	skipz
  3206     07BF  2FBA               	goto	u2635
  3207     07C0                     l2157:
  3208     07C0  3001               	movlw	1
  3209     07C1  02B0               	subwf	___awmod@counter^(0+128),f
  3210     07C2  1D03               	btfss	3,2
  3211     07C3  2FC5               	goto	u2641
  3212     07C4  2FC6               	goto	u2640
  3213     07C5                     u2641:
  3214     07C5  2FA9               	goto	l2151
  3215     07C6                     u2640:
  3216     07C6                     l2159:
  3217     07C6  0831               	movf	___awmod@sign^(0+128),w
  3218     07C7  1903               	btfsc	3,2
  3219     07C8  2FCA               	goto	u2651
  3220     07C9  2FCB               	goto	u2650
  3221     07CA                     u2651:
  3222     07CA  2FD0               	goto	l2163
  3223     07CB                     u2650:
  3224     07CB                     l2161:
  3225     07CB  09AE               	comf	___awmod@dividend^(0+128),f
  3226     07CC  09AF               	comf	(___awmod@dividend+1)^(0+128),f
  3227     07CD  0AAE               	incf	___awmod@dividend^(0+128),f
  3228     07CE  1903               	skipnz
  3229     07CF  0AAF               	incf	(___awmod@dividend+1)^(0+128),f
  3230     07D0                     l2163:
  3231     07D0  082F               	movf	(___awmod@dividend+1)^(0+128),w
  3232     07D1  00AD               	movwf	(?___awmod+1)^(0+128)
  3233     07D2  082E               	movf	___awmod@dividend^(0+128),w
  3234     07D3  00AC               	movwf	?___awmod^(0+128)
  3235     07D4                     l324:
  3236     07D4  0008               	return
  3237     07D5                     __end_of___awmod:
  3238                           
  3239                           	psect	text13
  3240     0654                     __ptext13:	
  3241 ;; *************** function ___awdiv *****************
  3242 ;; Defined at:
  3243 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  divisor         2   12[BANK1 ] int 
  3246 ;;  dividend        2   14[BANK1 ] int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  quotient        2   18[BANK1 ] int 
  3249 ;;  sign            1   17[BANK1 ] unsigned char 
  3250 ;;  counter         1   16[BANK1 ] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  2   12[BANK1 ] int 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       0       4       0       0
  3261 ;;      Locals:         0       0       4       0       0
  3262 ;;      Temps:          0       0       0       0       0
  3263 ;;      Totals:         0       0       8       0       0
  3264 ;;Total ram usage:        8 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 9
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_dtoa
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274     0654                     ___awdiv:	
  3275                           ;psect for function ___awdiv
  3276                           
  3277     0654                     l2085:	
  3278                           ;incstack = 0
  3279 ;; hardware stack exceeded
  3280                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3281                           
  3282     0654  1683               	bsf	3,5	;RP0=1, select bank1
  3283     0655  1303               	bcf	3,6	;RP1=0, select bank1
  3284     0656  01B1               	clrf	___awdiv@sign^(0+128)
  3285     0657                     l2087:
  3286     0657  1FAD               	btfss	(___awdiv@divisor+1)^(0+128),7
  3287     0658  2E5A               	goto	u2471
  3288     0659  2E5B               	goto	u2470
  3289     065A                     u2471:
  3290     065A  2E62               	goto	l2093
  3291     065B                     u2470:
  3292     065B                     l2089:
  3293     065B  09AC               	comf	___awdiv@divisor^(0+128),f
  3294     065C  09AD               	comf	(___awdiv@divisor+1)^(0+128),f
  3295     065D  0AAC               	incf	___awdiv@divisor^(0+128),f
  3296     065E  1903               	skipnz
  3297     065F  0AAD               	incf	(___awdiv@divisor+1)^(0+128),f
  3298     0660                     l2091:
  3299     0660  3001               	movlw	1
  3300     0661  00B1               	movwf	___awdiv@sign^(0+128)
  3301     0662                     l2093:
  3302     0662  1FAF               	btfss	(___awdiv@dividend+1)^(0+128),7
  3303     0663  2E65               	goto	u2481
  3304     0664  2E66               	goto	u2480
  3305     0665                     u2481:
  3306     0665  2E6D               	goto	l2099
  3307     0666                     u2480:
  3308     0666                     l2095:
  3309     0666  09AE               	comf	___awdiv@dividend^(0+128),f
  3310     0667  09AF               	comf	(___awdiv@dividend+1)^(0+128),f
  3311     0668  0AAE               	incf	___awdiv@dividend^(0+128),f
  3312     0669  1903               	skipnz
  3313     066A  0AAF               	incf	(___awdiv@dividend+1)^(0+128),f
  3314     066B                     l2097:
  3315     066B  3001               	movlw	1
  3316     066C  06B1               	xorwf	___awdiv@sign^(0+128),f
  3317     066D                     l2099:
  3318     066D  01B2               	clrf	___awdiv@quotient^(0+128)
  3319     066E  01B3               	clrf	(___awdiv@quotient+1)^(0+128)
  3320     066F                     l2101:
  3321     066F  082C               	movf	___awdiv@divisor^(0+128),w
  3322     0670  042D               	iorwf	(___awdiv@divisor+1)^(0+128),w
  3323     0671  1903               	btfsc	3,2
  3324     0672  2E74               	goto	u2491
  3325     0673  2E75               	goto	u2490
  3326     0674                     u2491:
  3327     0674  2EAA               	goto	l2121
  3328     0675                     u2490:
  3329     0675                     l2103:
  3330     0675  3001               	movlw	1
  3331     0676  00B0               	movwf	___awdiv@counter^(0+128)
  3332     0677  2E81               	goto	l2109
  3333     0678                     l2105:
  3334     0678  3001               	movlw	1
  3335     0679                     u2505:
  3336     0679  1003               	clrc
  3337     067A  0DAC               	rlf	___awdiv@divisor^(0+128),f
  3338     067B  0DAD               	rlf	(___awdiv@divisor+1)^(0+128),f
  3339     067C  3EFF               	addlw	-1
  3340     067D  1D03               	skipz
  3341     067E  2E79               	goto	u2505
  3342     067F                     l2107:
  3343     067F  3001               	movlw	1
  3344     0680  07B0               	addwf	___awdiv@counter^(0+128),f
  3345     0681                     l2109:
  3346     0681  1FAD               	btfss	(___awdiv@divisor+1)^(0+128),7
  3347     0682  2E84               	goto	u2511
  3348     0683  2E85               	goto	u2510
  3349     0684                     u2511:
  3350     0684  2E78               	goto	l2105
  3351     0685                     u2510:
  3352     0685                     l2111:
  3353     0685  3001               	movlw	1
  3354     0686                     u2525:
  3355     0686  1003               	clrc
  3356     0687  0DB2               	rlf	___awdiv@quotient^(0+128),f
  3357     0688  0DB3               	rlf	(___awdiv@quotient+1)^(0+128),f
  3358     0689  3EFF               	addlw	-1
  3359     068A  1D03               	skipz
  3360     068B  2E86               	goto	u2525
  3361     068C  082D               	movf	(___awdiv@divisor+1)^(0+128),w
  3362     068D  022F               	subwf	(___awdiv@dividend+1)^(0+128),w
  3363     068E  1D03               	skipz
  3364     068F  2E92               	goto	u2535
  3365     0690  082C               	movf	___awdiv@divisor^(0+128),w
  3366     0691  022E               	subwf	___awdiv@dividend^(0+128),w
  3367     0692                     u2535:
  3368     0692  1C03               	skipc
  3369     0693  2E95               	goto	u2531
  3370     0694  2E96               	goto	u2530
  3371     0695                     u2531:
  3372     0695  2E9D               	goto	l2117
  3373     0696                     u2530:
  3374     0696                     l2113:
  3375     0696  082C               	movf	___awdiv@divisor^(0+128),w
  3376     0697  02AE               	subwf	___awdiv@dividend^(0+128),f
  3377     0698  082D               	movf	(___awdiv@divisor+1)^(0+128),w
  3378     0699  1C03               	skipc
  3379     069A  03AF               	decf	(___awdiv@dividend+1)^(0+128),f
  3380     069B  02AF               	subwf	(___awdiv@dividend+1)^(0+128),f
  3381     069C                     l2115:
  3382     069C  1432               	bsf	___awdiv@quotient^(0+128),0
  3383     069D                     l2117:
  3384     069D  3001               	movlw	1
  3385     069E                     u2545:
  3386     069E  1003               	clrc
  3387     069F  0CAD               	rrf	(___awdiv@divisor+1)^(0+128),f
  3388     06A0  0CAC               	rrf	___awdiv@divisor^(0+128),f
  3389     06A1  3EFF               	addlw	-1
  3390     06A2  1D03               	skipz
  3391     06A3  2E9E               	goto	u2545
  3392     06A4                     l2119:
  3393     06A4  3001               	movlw	1
  3394     06A5  02B0               	subwf	___awdiv@counter^(0+128),f
  3395     06A6  1D03               	btfss	3,2
  3396     06A7  2EA9               	goto	u2551
  3397     06A8  2EAA               	goto	u2550
  3398     06A9                     u2551:
  3399     06A9  2E85               	goto	l2111
  3400     06AA                     u2550:
  3401     06AA                     l2121:
  3402     06AA  0831               	movf	___awdiv@sign^(0+128),w
  3403     06AB  1903               	btfsc	3,2
  3404     06AC  2EAE               	goto	u2561
  3405     06AD  2EAF               	goto	u2560
  3406     06AE                     u2561:
  3407     06AE  2EB4               	goto	l2125
  3408     06AF                     u2560:
  3409     06AF                     l2123:
  3410     06AF  09B2               	comf	___awdiv@quotient^(0+128),f
  3411     06B0  09B3               	comf	(___awdiv@quotient+1)^(0+128),f
  3412     06B1  0AB2               	incf	___awdiv@quotient^(0+128),f
  3413     06B2  1903               	skipnz
  3414     06B3  0AB3               	incf	(___awdiv@quotient+1)^(0+128),f
  3415     06B4                     l2125:
  3416     06B4  0833               	movf	(___awdiv@quotient+1)^(0+128),w
  3417     06B5  00AD               	movwf	(?___awdiv+1)^(0+128)
  3418     06B6  0832               	movf	___awdiv@quotient^(0+128),w
  3419     06B7  00AC               	movwf	?___awdiv^(0+128)
  3420     06B8                     l311:
  3421     06B8  0008               	return
  3422     06B9                     __end_of___awdiv:
  3423                           
  3424                           	psect	text14
  3425     0DE3                     __ptext14:	
  3426 ;; *************** function _display *****************
  3427 ;; Defined at:
  3428 ;;		line 86 in file "newmain.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  RS              2   12[BANK1 ] int 
  3431 ;;  DC              2   14[BANK1 ] int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       4       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       2       0       0
  3446 ;;      Totals:         0       0       6       0       0
  3447 ;;Total ram usage:        6 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 9
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457     0DE3                     _display:	
  3458                           ;psect for function _display
  3459                           
  3460     0DE3                     l1907:	
  3461                           ;incstack = 0
  3462 ;; hardware stack exceeded
  3463                           ; Regs used in _display: [wreg]
  3464                           
  3465                           
  3466                           ;newmain.c: 86: void display(int RS, int DC);newmain.c: 87: {;newmain.c: 88:     RD0=RS;
  3467     0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3468     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  3469     0DE5  182C               	btfsc	display@RS^(0+128),0
  3470     0DE6  2DE8               	goto	u2191
  3471     0DE7  2DEC               	goto	u2190
  3472     0DE8                     u2191:
  3473     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0DEA  1408               	bsf	8,0	;volatile
  3476     0DEB  2DEF               	goto	u2204
  3477     0DEC                     u2190:
  3478     0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  3479     0DED  1303               	bcf	3,6	;RP1=0, select bank0
  3480     0DEE  1008               	bcf	8,0	;volatile
  3481     0DEF                     u2204:
  3482     0DEF                     l1909:
  3483                           
  3484                           ;newmain.c: 89:     PORTC=DC;
  3485     0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  3486     0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  3487     0DF1  082E               	movf	display@DC^(0+128),w
  3488     0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0DF4  0087               	movwf	7	;volatile
  3491     0DF5                     l1911:
  3492                           
  3493                           ;newmain.c: 90:     RD1=1;
  3494     0DF5  1488               	bsf	8,1	;volatile
  3495                           
  3496                           ;newmain.c: 91:     _delay((unsigned long)((10)*(10000000/4000.0)));
  3497     0DF6  3021               	movlw	33
  3498     0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  3499     0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  3500     0DF9  00B1               	movwf	(??_display^(0+128)+1)
  3501     0DFA  3075               	movlw	117
  3502     0DFB  00B0               	movwf	??_display^(0+128)
  3503     0DFC                     u3497:
  3504     0DFC  0BB0               	decfsz	??_display^(0+128),f
  3505     0DFD  2DFC               	goto	u3497
  3506     0DFE  0BB1               	decfsz	(??_display^(0+128)+1),f
  3507     0DFF  2DFC               	goto	u3497
  3508     0E00  2E01               	nop2
  3509     0E01                     l1913:
  3510                           
  3511                           ;newmain.c: 92:     RD1=0;
  3512     0E01  1283               	bcf	3,5	;RP0=0, select bank0
  3513     0E02  1303               	bcf	3,6	;RP1=0, select bank0
  3514     0E03  1088               	bcf	8,1	;volatile
  3515                           
  3516                           ;newmain.c: 93:     _delay((unsigned long)((10)*(10000000/4000.0)));
  3517     0E04  3021               	movlw	33
  3518     0E05  1683               	bsf	3,5	;RP0=1, select bank1
  3519     0E06  1303               	bcf	3,6	;RP1=0, select bank1
  3520     0E07  00B1               	movwf	(??_display^(0+128)+1)
  3521     0E08  3075               	movlw	117
  3522     0E09  00B0               	movwf	??_display^(0+128)
  3523     0E0A                     u3507:
  3524     0E0A  0BB0               	decfsz	??_display^(0+128),f
  3525     0E0B  2E0A               	goto	u3507
  3526     0E0C  0BB1               	decfsz	(??_display^(0+128)+1),f
  3527     0E0D  2E0A               	goto	u3507
  3528     0E0E  2E0F               	nop2
  3529     0E0F                     l63:
  3530     0E0F  0008               	return
  3531     0E10                     __end_of_display:
  3532                           
  3533                           	psect	text15
  3534     05E8                     __ptext15:	
  3535 ;; *************** function _ISR *****************
  3536 ;; Defined at:
  3537 ;;		line 95 in file "newmain.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  i               2   10[BANK1 ] int 
  3542 ;;  br             10    0[BANK1 ] unsigned char [10]
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         0       0      12       0       0
  3554 ;;      Temps:          0       6       0       0       0
  3555 ;;      Totals:         0       6      12       0       0
  3556 ;;Total ram usage:       18 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 8
  3559 ;; This function calls:
  3560 ;;		i1_display
  3561 ;;		i1_sprintf
  3562 ;; This function is called by:
  3563 ;;		Interrupt level 1
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567     05E8                     _ISR:	
  3568                           ;psect for function _ISR
  3569                           
  3570     05E8                     i1l2647:
  3571                           
  3572                           ;newmain.c: 98:     char br[10];;newmain.c: 99:     if(INTF ==1)
  3573     05E8  1C8B               	btfss	11,1	;volatile
  3574     05E9  2DEB               	goto	u343_21
  3575     05EA  2DEC               	goto	u343_20
  3576     05EB                     u343_21:
  3577     05EB  2DF7               	goto	i1l2653
  3578     05EC                     u343_20:
  3579     05EC                     i1l2649:
  3580                           
  3581                           ;newmain.c: 100:     {;newmain.c: 101:         count=count+1;
  3582     05EC  1683               	bsf	3,5	;RP0=1, select bank3
  3583     05ED  1703               	bsf	3,6	;RP1=1, select bank3
  3584     05EE  0841               	movf	_count^(0+384),w
  3585     05EF  3E01               	addlw	1
  3586     05F0  00C1               	movwf	_count^(0+384)
  3587     05F1  0842               	movf	(_count+1)^(0+384),w
  3588     05F2  1803               	skipnc
  3589     05F3  3E01               	addlw	1
  3590     05F4  3E00               	addlw	0
  3591     05F5  00C2               	movwf	(_count+1)^(0+384)
  3592     05F6                     i1l2651:
  3593                           
  3594                           ;newmain.c: 102:         INTF=0;
  3595     05F6  108B               	bcf	11,1	;volatile
  3596     05F7                     i1l2653:
  3597                           
  3598                           ;newmain.c: 104:     sprintf(br,"%04d",count);
  3599     05F7  30A0               	movlw	(low (ISR@br| 0))& (0+255)
  3600     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3601     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3602     05FA  00CE               	movwf	i1sprintf@s
  3603     05FB  3000               	movlw	0
  3604     05FC  00CF               	movwf	i1sprintf@s+1
  3605     05FD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3606     05FE  00D0               	movwf	i1sprintf@fmt
  3607     05FF  1683               	bsf	3,5	;RP0=1, select bank3
  3608     0600  1703               	bsf	3,6	;RP1=1, select bank3
  3609     0601  0842               	movf	(_count+1)^(0+384),w
  3610     0602  1283               	bcf	3,5	;RP0=0, select bank0
  3611     0603  1303               	bcf	3,6	;RP1=0, select bank0
  3612     0604  00D2               	movwf	?i1_sprintf+4
  3613     0605  1683               	bsf	3,5	;RP0=1, select bank3
  3614     0606  1703               	bsf	3,6	;RP1=1, select bank3
  3615     0607  0841               	movf	_count^(0+384),w
  3616     0608  1283               	bcf	3,5	;RP0=0, select bank0
  3617     0609  1303               	bcf	3,6	;RP1=0, select bank0
  3618     060A  00D1               	movwf	?i1_sprintf+3
  3619     060B  120A  158A  2673  120A  118A  	fcall	i1_sprintf
  3620     0610                     i1l2655:
  3621                           
  3622                           ;newmain.c: 106:     display(0,0x89);
  3623     0610  3000               	movlw	0
  3624     0611  00F0               	movwf	i1display@RS
  3625     0612  00F1               	movwf	i1display@RS+1
  3626     0613  3089               	movlw	137
  3627     0614  00F2               	movwf	i1display@DC
  3628     0615  3000               	movlw	0
  3629     0616  00F3               	movwf	i1display@DC+1
  3630     0617  120A  158A  2524  120A  118A  	fcall	i1_display
  3631     061C                     i1l2657:
  3632                           
  3633                           ;newmain.c: 107:     for(int i=0;br[i]!='\0';i++)
  3634     061C  1683               	bsf	3,5	;RP0=1, select bank1
  3635     061D  1303               	bcf	3,6	;RP1=0, select bank1
  3636     061E  01AA               	clrf	ISR@i^(0+128)
  3637     061F  01AB               	clrf	(ISR@i+1)^(0+128)
  3638     0620  2E3E               	goto	i1l2663
  3639     0621                     i1l2659:
  3640                           
  3641                           ;newmain.c: 108:         display(1, br[i]);
  3642     0621  3001               	movlw	1
  3643     0622  00F0               	movwf	i1display@RS
  3644     0623  3000               	movlw	0
  3645     0624  00F1               	movwf	i1display@RS+1
  3646     0625  082A               	movf	ISR@i^(0+128),w
  3647     0626  3EA0               	addlw	(low (ISR@br| 0))& (0+255)
  3648     0627  0084               	movwf	4
  3649     0628  0800               	movf	0,w
  3650     0629  1283               	bcf	3,5	;RP0=0, select bank0
  3651     062A  1303               	bcf	3,6	;RP1=0, select bank0
  3652     062B  00E3               	movwf	??_ISR
  3653     062C  01E4               	clrf	??_ISR+1
  3654     062D  0863               	movf	??_ISR,w
  3655     062E  00F2               	movwf	i1display@DC
  3656     062F  0864               	movf	??_ISR+1,w
  3657     0630  00F3               	movwf	i1display@DC+1
  3658     0631  120A  158A  2524  120A  118A  	fcall	i1_display
  3659     0636                     i1l2661:
  3660     0636  3001               	movlw	1
  3661     0637  1683               	bsf	3,5	;RP0=1, select bank1
  3662     0638  1303               	bcf	3,6	;RP1=0, select bank1
  3663     0639  07AA               	addwf	ISR@i^(0+128),f
  3664     063A  1803               	skipnc
  3665     063B  0AAB               	incf	(ISR@i+1)^(0+128),f
  3666     063C  3000               	movlw	0
  3667     063D  07AB               	addwf	(ISR@i+1)^(0+128),f
  3668     063E                     i1l2663:
  3669     063E  082A               	movf	ISR@i^(0+128),w
  3670     063F  3EA0               	addlw	(low (ISR@br| 0))& (0+255)
  3671     0640  0084               	movwf	4
  3672     0641  1383               	bcf	3,7	;select IRP bank1
  3673     0642  0800               	movf	0,w
  3674     0643  1D03               	btfss	3,2
  3675     0644  2E46               	goto	u344_21
  3676     0645  2E47               	goto	u344_20
  3677     0646                     u344_21:
  3678     0646  2E21               	goto	i1l2659
  3679     0647                     u344_20:
  3680     0647                     i1l72:
  3681     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3682     0648  1303               	bcf	3,6	;RP1=0, select bank0
  3683     0649  0868               	movf	??_ISR+5,w
  3684     064A  00FF               	movwf	btemp+1
  3685     064B  0867               	movf	??_ISR+4,w
  3686     064C  008A               	movwf	10
  3687     064D  0866               	movf	??_ISR+3,w
  3688     064E  0084               	movwf	4
  3689     064F  0E65               	swapf	??_ISR+2,w
  3690     0650  0083               	movwf	3
  3691     0651  0EFE               	swapf	btemp,f
  3692     0652  0E7E               	swapf	btemp,w
  3693     0653  0009               	retfie
  3694     0654                     __end_of_ISR:
  3695                           
  3696                           	psect	intentry
  3697     0004                     __pintentry:	
  3698                           ;incstack = 0
  3699 ;; hardware stack exceeded
  3700                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3701                           
  3702     0004                     interrupt_function:
  3703     007E                     saved_w         set	btemp
  3704     0004  00FE               	movwf	btemp
  3705     0005  0E03               	swapf	3,w
  3706     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3708     0008  00E5               	movwf	??_ISR+2
  3709     0009  0804               	movf	4,w
  3710     000A  00E6               	movwf	??_ISR+3
  3711     000B  080A               	movf	10,w
  3712     000C  00E7               	movwf	??_ISR+4
  3713     000D  087F               	movf	btemp+1,w
  3714     000E  00E8               	movwf	??_ISR+5
  3715     000F  120A  118A  2DE8   	ljmp	_ISR
  3716                           
  3717                           	psect	text16
  3718     0E73                     __ptext16:	
  3719 ;; *************** function i1_sprintf *****************
  3720 ;; Defined at:
  3721 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  s               2   46[BANK0 ] PTR unsigned char 
  3724 ;;		 -> ISR@br(10), main@arr(10), 
  3725 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  3726 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  f              11   56[BANK0 ] struct _IO_FILE
  3729 ;;  ap              2   54[BANK0 ] PTR void [1]
  3730 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  3731 ;;  ret             2    0        int 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2   46[BANK0 ] int 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       5       0       0       0
  3742 ;;      Locals:         0      13       0       0       0
  3743 ;;      Temps:          0       3       0       0       0
  3744 ;;      Totals:         0      21       0       0       0
  3745 ;;Total ram usage:       21 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 7
  3748 ;; This function calls:
  3749 ;;		i1_vfprintf
  3750 ;; This function is called by:
  3751 ;;		_ISR
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755     0E73                     i1_sprintf:	
  3756                           ;psect for function i1_sprintf
  3757                           
  3758     0E73                     i1l2577:	
  3759                           ;incstack = 0
  3760 ;; hardware stack exceeded
  3761                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3762                           
  3763     0E73  3051               	movlw	(low ((?i1_sprintf| 0+3)))& (0+255)
  3764     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  3765     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  3766     0E76  00D6               	movwf	i1sprintf@ap
  3767     0E77  3000               	movlw	0
  3768     0E78  00D7               	movwf	i1sprintf@ap+1
  3769     0E79  084E               	movf	i1sprintf@s,w
  3770     0E7A  00D8               	movwf	i1sprintf@f
  3771     0E7B  084F               	movf	i1sprintf@s+1,w
  3772     0E7C  00D9               	movwf	i1sprintf@f+1
  3773     0E7D                     i1l2579:
  3774     0E7D  01DA               	clrf	i1sprintf@f+2
  3775     0E7E  01DB               	clrf	i1sprintf@f+3
  3776     0E7F                     i1l2581:
  3777     0E7F  01E1               	clrf	i1sprintf@f+9
  3778     0E80  01E2               	clrf	i1sprintf@f+10
  3779     0E81                     i1l2583:
  3780     0E81  3058               	movlw	low i1sprintf@f
  3781     0E82  00C8               	movwf	i1vfprintf@fp
  3782     0E83  3000               	movlw	high i1sprintf@f
  3783     0E84  00C9               	movwf	i1vfprintf@fp+1
  3784     0E85  0850               	movf	i1sprintf@fmt,w
  3785     0E86  00CA               	movwf	i1vfprintf@fmt
  3786     0E87  3056               	movlw	(low (i1sprintf@ap| 0))& (0+255)
  3787     0E88  00CB               	movwf	i1vfprintf@ap
  3788     0E89  3000               	movlw	0
  3789     0E8A  00CC               	movwf	i1vfprintf@ap+1
  3790     0E8B  120A  158A  256C  120A  158A  	fcall	i1_vfprintf
  3791     0E90                     i1l2585:
  3792     0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3794     0E92  085A               	movf	i1sprintf@f+2,w
  3795     0E93  074E               	addwf	i1sprintf@s,w
  3796     0E94  00D4               	movwf	??i1_sprintf+1
  3797     0E95  084F               	movf	i1sprintf@s+1,w
  3798     0E96  00D3               	movwf	??i1_sprintf
  3799     0E97  1803               	skipnc
  3800     0E98  0AD3               	incf	??i1_sprintf,f
  3801     0E99  1FDA               	btfss	i1sprintf@f+2,7
  3802     0E9A  2E9C               	goto	u338_20
  3803     0E9B  03D3               	decf	??i1_sprintf,f
  3804     0E9C                     u338_20:
  3805     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3806     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  3807     0E9E  0853               	movf	??i1_sprintf,w
  3808     0E9F  00D5               	movwf	??i1_sprintf+2
  3809     0EA0  0854               	movf	??i1_sprintf+1,w
  3810     0EA1  0084               	movwf	4
  3811     0EA2  1783               	bsf	3,7
  3812     0EA3  1C55               	btfss	??i1_sprintf+2,0
  3813     0EA4  1383               	bcf	3,7
  3814     0EA5  0180               	clrf	0
  3815     0EA6                     i1l621:
  3816     0EA6  0008               	return
  3817     0EA7                     __end_ofi1_sprintf:
  3818                           
  3819                           	psect	text17
  3820     0D6C                     __ptext17:	
  3821 ;; *************** function i1_vfprintf *****************
  3822 ;; Defined at:
  3823 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  3826 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  3827 ;;  fmt             1   42[BANK0 ] PTR const unsigned char 
  3828 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3829 ;;  ap              2   43[BANK0 ] PTR PTR void 
  3830 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  cfmt            1   45[BANK0 ] PTR unsigned char 
  3833 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2   40[BANK0 ] int 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       5       0       0       0
  3844 ;;      Locals:         0       1       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       6       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 6
  3850 ;; This function calls:
  3851 ;;		i1_vfpfcnvrt
  3852 ;; This function is called by:
  3853 ;;		i1_sprintf
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857     0D6C                     i1_vfprintf:	
  3858                           ;psect for function i1_vfprintf
  3859                           
  3860     0D6C                     i1l2545:	
  3861                           ;incstack = 0
  3862 ;; hardware stack exceeded
  3863                           ; Regs used in i1_vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3864                           
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3867     0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  3868     0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  3869     0D6E  084A               	movf	i1vfprintf@fmt,w
  3870     0D6F  00CD               	movwf	i1vfprintf@cfmt
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3873     0D70  2D80               	goto	i1l2549
  3874     0D71                     i1l2547:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3877     0D71  0848               	movf	i1vfprintf@fp,w
  3878     0D72  00BB               	movwf	i1vfpfcnvrt@fp
  3879     0D73  0849               	movf	i1vfprintf@fp+1,w
  3880     0D74  00BC               	movwf	i1vfpfcnvrt@fp+1
  3881     0D75  304D               	movlw	(low (i1vfprintf@cfmt| 0))& (0+255)
  3882     0D76  00BD               	movwf	i1vfpfcnvrt@fmt
  3883     0D77  084B               	movf	i1vfprintf@ap,w
  3884     0D78  00BE               	movwf	i1vfpfcnvrt@ap
  3885     0D79  084C               	movf	i1vfprintf@ap+1,w
  3886     0D7A  00BF               	movwf	i1vfpfcnvrt@ap+1
  3887     0D7B  120A  118A  2189  120A  158A  	fcall	i1_vfpfcnvrt
  3888     0D80                     i1l2549:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3891     0D80  1283               	bcf	3,5	;RP0=0, select bank0
  3892     0D81  1303               	bcf	3,6	;RP1=0, select bank0
  3893     0D82  084D               	movf	i1vfprintf@cfmt,w
  3894     0D83  0084               	movwf	4
  3895     0D84  120A  158A  2000  120A  158A  	fcall	stringdir
  3896     0D89  3A00               	xorlw	0
  3897     0D8A  1D03               	skipz
  3898     0D8B  2D8D               	goto	u334_21
  3899     0D8C  2D8E               	goto	u334_20
  3900     0D8D                     u334_21:
  3901     0D8D  2D71               	goto	i1l2547
  3902     0D8E                     u334_20:
  3903     0D8E                     i1l2551:
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3906     0D8E  01C8               	clrf	?i1_vfprintf
  3907     0D8F  01C9               	clrf	?i1_vfprintf+1
  3908     0D90                     i1l691:
  3909     0D90  0008               	return
  3910     0D91                     __end_ofi1_vfprintf:
  3911                           
  3912                           	psect	text18
  3913     0189                     __ptext18:	
  3914 ;; *************** function i1_vfpfcnvrt *****************
  3915 ;; Defined at:
  3916 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3919 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  3920 ;;  fmt             1   29[BANK0 ] PTR PTR unsigned char 
  3921 ;;		 -> i1vfprintf@cfmt(1), vfprintf@cfmt(1), 
  3922 ;;  ap              2   30[BANK0 ] PTR PTR void 
  3923 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  convarg         4   34[BANK0 ] struct .
  3926 ;;  cp              1   39[BANK0 ] PTR unsigned char 
  3927 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3928 ;;  done            1   38[BANK0 ] _Bool 
  3929 ;;  c               1    0        unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       5       0       0       0
  3940 ;;      Locals:         0       6       0       0       0
  3941 ;;      Temps:          0       2       0       0       0
  3942 ;;      Totals:         0      13       0       0       0
  3943 ;;Total ram usage:       13 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 5
  3946 ;; This function calls:
  3947 ;;		i1_dtoa
  3948 ;;		i1_fputc
  3949 ;;		i1_read_prec_or_width
  3950 ;; This function is called by:
  3951 ;;		i1_vfprintf
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955     0189                     i1_vfpfcnvrt:	
  3956                           ;psect for function i1_vfpfcnvrt
  3957                           
  3958     0189                     i1l2487:	
  3959                           ;incstack = 0
  3960 ;; hardware stack exceeded
  3961                           ; Regs used in i1_vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3962                           
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3965     0189  1283               	bcf	3,5	;RP0=0, select bank0
  3966     018A  1303               	bcf	3,6	;RP1=0, select bank0
  3967     018B  083D               	movf	i1vfpfcnvrt@fmt,w
  3968     018C  0084               	movwf	4
  3969     018D  1383               	bcf	3,7	;select IRP bank0
  3970     018E  0800               	movf	0,w
  3971     018F  0084               	movwf	4
  3972     0190  120A  158A  2000  120A  118A  	fcall	stringdir
  3973     0195  3A25               	xorlw	37
  3974     0196  1D03               	skipz
  3975     0197  2999               	goto	u328_21
  3976     0198  299A               	goto	u328_20
  3977     0199                     u328_21:
  3978     0199  2A3F               	goto	i1l2529
  3979     019A                     u328_20:
  3980     019A                     i1l2489:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3983     019A  083D               	movf	i1vfpfcnvrt@fmt,w
  3984     019B  0084               	movwf	4
  3985     019C  3001               	movlw	1
  3986     019D  0780               	addwf	0,f
  3987     019E                     i1l2491:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3990     019E  1683               	bsf	3,5	;RP0=1, select bank1
  3991     019F  1303               	bcf	3,6	;RP1=0, select bank1
  3992     01A0  01E2               	clrf	_width^(0+128)
  3993     01A1  01E3               	clrf	(_width+1)^(0+128)
  3994     01A2  3000               	movlw	0
  3995     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3996     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  3997     01A5  00E9               	movwf	_flags
  3998     01A6                     i1l2493:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4001     01A6  30FF               	movlw	255
  4002     01A7  1683               	bsf	3,5	;RP0=1, select bank3
  4003     01A8  1703               	bsf	3,6	;RP1=1, select bank3
  4004     01A9  00BF               	movwf	_prec^(0+384)
  4005     01AA  30FF               	movlw	255
  4006     01AB  00C0               	movwf	(_prec^(0+384)+1)
  4007     01AC                     i1l2495:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  4010     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4011     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4012     01AE  01C6               	clrf	i1vfpfcnvrt@done
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  4015     01AF  29C6               	goto	i1l2503
  4016     01B0                     i1l677:	
  4017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  4018                           
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  4021     01B0  14E9               	bsf	_flags,1
  4022     01B1                     i1l2497:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  4025     01B1  083D               	movf	i1vfpfcnvrt@fmt,w
  4026     01B2  0084               	movwf	4
  4027     01B3  3001               	movlw	1
  4028     01B4  0780               	addwf	0,f
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  4031     01B5  29C6               	goto	i1l2503
  4032     01B6                     i1l679:	
  4033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  4034                           
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  4037     01B6  3001               	movlw	1
  4038     01B7  00C6               	movwf	i1vfpfcnvrt@done
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  4041     01B8  29C6               	goto	i1l2503
  4042     01B9                     i1l2501:
  4043     01B9  083D               	movf	i1vfpfcnvrt@fmt,w
  4044     01BA  0084               	movwf	4
  4045     01BB  0800               	movf	0,w
  4046     01BC  0084               	movwf	4
  4047     01BD  120A  158A  2000  120A  118A  	fcall	stringdir
  4048                           
  4049                           ; Switch size 1, requested type "simple"
  4050                           ; Number of cases is 1, Range of values is 48 to 48
  4051                           ; switch strategies available:
  4052                           ; Name         Instructions Cycles
  4053                           ; simple_byte            4     3 (average)
  4054                           ; direct_byte           14    11 (fixed)
  4055                           ; jumptable            263     9 (fixed)
  4056                           ;	Chosen strategy is simple_byte
  4057     01C2  3A30               	xorlw	48	; case 48
  4058     01C3  1903               	skipnz
  4059     01C4  29B0               	goto	i1l677
  4060     01C5  29B6               	goto	i1l679
  4061     01C6                     i1l2503:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  4064     01C6  0846               	movf	i1vfpfcnvrt@done,w
  4065     01C7  1903               	btfsc	3,2
  4066     01C8  29CA               	goto	u329_21
  4067     01C9  29CB               	goto	u329_20
  4068     01CA                     u329_21:
  4069     01CA  29B9               	goto	i1l2501
  4070     01CB                     u329_20:
  4071     01CB                     i1l2505:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  4074     01CB  083D               	movf	i1vfpfcnvrt@fmt,w
  4075     01CC  00F6               	movwf	i1read_prec_or_width@fmt
  4076     01CD  083E               	movf	i1vfpfcnvrt@ap,w
  4077     01CE  00F7               	movwf	i1read_prec_or_width@ap
  4078     01CF  083F               	movf	i1vfpfcnvrt@ap+1,w
  4079     01D0  00F8               	movwf	i1read_prec_or_width@ap+1
  4080     01D1  120A  118A  271C  120A  118A  	fcall	i1_read_prec_or_width
  4081     01D6  0877               	movf	?i1_read_prec_or_width+1,w
  4082     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4083     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4084     01D9  00E3               	movwf	(_width+1)^(0+128)
  4085     01DA  0876               	movf	?i1_read_prec_or_width,w
  4086     01DB  00E2               	movwf	_width^(0+128)
  4087     01DC                     i1l2507:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  4090     01DC  1FE3               	btfss	(_width+1)^(0+128),7
  4091     01DD  29DF               	goto	u330_21
  4092     01DE  29E0               	goto	u330_20
  4093     01DF                     u330_21:
  4094     01DF  29EA               	goto	i1l2513
  4095     01E0                     u330_20:
  4096     01E0                     i1l2509:
  4097                           
  4098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  4099     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  4100     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  4101     01E2  1469               	bsf	_flags,0
  4102     01E3                     i1l2511:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  4105     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  4106     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  4107     01E5  09E2               	comf	_width^(0+128),f
  4108     01E6  09E3               	comf	(_width+1)^(0+128),f
  4109     01E7  0AE2               	incf	_width^(0+128),f
  4110     01E8  1903               	skipnz
  4111     01E9  0AE3               	incf	(_width+1)^(0+128),f
  4112     01EA                     i1l2513:
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4115     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4116     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4117     01EC  083D               	movf	i1vfpfcnvrt@fmt,w
  4118     01ED  0084               	movwf	4
  4119     01EE  1383               	bcf	3,7	;select IRP bank0
  4120     01EF  0800               	movf	0,w
  4121     01F0  00C7               	movwf	i1vfpfcnvrt@cp
  4122     01F1                     i1l2515:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4125     01F1  0847               	movf	i1vfpfcnvrt@cp,w
  4126     01F2  0084               	movwf	4
  4127     01F3  120A  158A  2000  120A  118A  	fcall	stringdir
  4128     01F8  3A64               	xorlw	100
  4129     01F9  1903               	skipnz
  4130     01FA  29FC               	goto	u331_21
  4131     01FB  29FD               	goto	u331_20
  4132     01FC                     u331_21:
  4133     01FC  2A09               	goto	i1l2519
  4134     01FD                     u331_20:
  4135     01FD                     i1l2517:
  4136     01FD  0847               	movf	i1vfpfcnvrt@cp,w
  4137     01FE  0084               	movwf	4
  4138     01FF  120A  158A  2000  120A  118A  	fcall	stringdir
  4139     0204  3A69               	xorlw	105
  4140     0205  1D03               	skipz
  4141     0206  2A08               	goto	u332_21
  4142     0207  2A09               	goto	u332_20
  4143     0208                     u332_21:
  4144     0208  2A37               	goto	i1l2525
  4145     0209                     u332_20:
  4146     0209                     i1l2519:
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4149     0209  083E               	movf	i1vfpfcnvrt@ap,w
  4150     020A  0084               	movwf	4
  4151     020B  1783               	bsf	3,7
  4152     020C  1C3F               	btfss	i1vfpfcnvrt@ap+1,0
  4153     020D  1383               	bcf	3,7
  4154     020E  0800               	movf	0,w
  4155     020F  00C0               	movwf	??i1_vfpfcnvrt
  4156     0210  3002               	movlw	2
  4157     0211  0780               	addwf	0,f
  4158     0212  0A84               	incf	4,f
  4159     0213  0800               	movf	0,w
  4160     0214  00C1               	movwf	??i1_vfpfcnvrt+1
  4161     0215  3000               	movlw	0
  4162     0216  1803               	skipnc
  4163     0217  0A80               	incf	0,f
  4164     0218  0780               	addwf	0,f
  4165     0219  0840               	movf	??i1_vfpfcnvrt,w
  4166     021A  0084               	movwf	4
  4167     021B  1783               	bsf	3,7
  4168     021C  1C41               	btfss	??i1_vfpfcnvrt+1,0
  4169     021D  1383               	bcf	3,7
  4170     021E  0800               	movf	0,w
  4171     021F  00C2               	movwf	i1vfpfcnvrt@convarg
  4172     0220  0A84               	incf	4,f
  4173     0221  0800               	movf	0,w
  4174     0222  00C3               	movwf	i1vfpfcnvrt@convarg+1
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4177     0223  083D               	movf	i1vfpfcnvrt@fmt,w
  4178     0224  0084               	movwf	4
  4179     0225  0847               	movf	i1vfpfcnvrt@cp,w
  4180     0226  3E01               	addlw	1
  4181     0227  1383               	bcf	3,7	;select IRP bank0
  4182     0228  0080               	movwf	0
  4183     0229                     i1l2521:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of i1_vfpfcnvrt is never used
  4186     0229  083B               	movf	i1vfpfcnvrt@fp,w
  4187     022A  00AF               	movwf	i1dtoa@fp
  4188     022B  083C               	movf	i1vfpfcnvrt@fp+1,w
  4189     022C  00B0               	movwf	i1dtoa@fp+1
  4190     022D  0843               	movf	i1vfpfcnvrt@convarg+1,w
  4191     022E  00B2               	movwf	i1dtoa@d+1
  4192     022F  0842               	movf	i1vfpfcnvrt@convarg,w
  4193     0230  00B1               	movwf	i1dtoa@d
  4194     0231  120A  118A  2259  120A  118A  	fcall	i1_dtoa
  4195     0236  2A58               	goto	i1l685
  4196     0237                     i1l2525:
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4199     0237  1283               	bcf	3,5	;RP0=0, select bank0
  4200     0238  1303               	bcf	3,6	;RP1=0, select bank0
  4201     0239  083D               	movf	i1vfpfcnvrt@fmt,w
  4202     023A  0084               	movwf	4
  4203     023B  3001               	movlw	1
  4204     023C  1383               	bcf	3,7	;select IRP bank0
  4205     023D  0780               	addwf	0,f
  4206     023E  2A58               	goto	i1l685
  4207     023F                     i1l2529:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4210     023F  083D               	movf	i1vfpfcnvrt@fmt,w
  4211     0240  0084               	movwf	4
  4212     0241  0800               	movf	0,w
  4213     0242  0084               	movwf	4
  4214     0243  120A  158A  2000  120A  118A  	fcall	stringdir
  4215     0248  00C0               	movwf	??i1_vfpfcnvrt
  4216     0249  01C1               	clrf	??i1_vfpfcnvrt+1
  4217     024A  0840               	movf	??i1_vfpfcnvrt,w
  4218     024B  00F0               	movwf	i1fputc@c
  4219     024C  0841               	movf	??i1_vfpfcnvrt+1,w
  4220     024D  00F1               	movwf	i1fputc@c+1
  4221     024E  083B               	movf	i1vfpfcnvrt@fp,w
  4222     024F  00F2               	movwf	i1fputc@fp
  4223     0250  083C               	movf	i1vfpfcnvrt@fp+1,w
  4224     0251  00F3               	movwf	i1fputc@fp+1
  4225     0252  120A  118A  254E  120A  118A  	fcall	i1_fputc
  4226     0257  2A37               	goto	i1l2525
  4227     0258                     i1l685:
  4228     0258  0008               	return
  4229     0259                     __end_ofi1_vfpfcnvrt:
  4230                           
  4231                           	psect	text19
  4232     071C                     __ptext19:	
  4233 ;; *************** function i1_read_prec_or_width *****************
  4234 ;; Defined at:
  4235 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  4238 ;;		 -> i1vfprintf@cfmt(1), vfprintf@cfmt(1), 
  4239 ;;  ap              2    7[COMMON] PTR PTR void [1]
  4240 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  n               2   12[COMMON] int 
  4243 ;;  c               1   11[COMMON] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    6[COMMON] int 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         3       0       0       0       0
  4254 ;;      Locals:         3       0       0       0       0
  4255 ;;      Temps:          2       0       0       0       0
  4256 ;;      Totals:         8       0       0       0       0
  4257 ;;Total ram usage:        8 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 1
  4260 ;; This function calls:
  4261 ;;		i1___wmul
  4262 ;; This function is called by:
  4263 ;;		i1_vfpfcnvrt
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267     071C                     i1_read_prec_or_width:	
  4268                           ;psect for function i1_read_prec_or_width
  4269                           
  4270     071C                     i1l2421:	
  4271                           ;incstack = 0
  4272 ;; hardware stack exceeded
  4273                           ; Regs used in i1_read_prec_or_width: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4274                           
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4277     071C  01FC               	clrf	i1read_prec_or_width@n
  4278     071D  01FD               	clrf	i1read_prec_or_width@n+1
  4279     071E                     i1l2423:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4282     071E  0876               	movf	i1read_prec_or_width@fmt,w
  4283     071F  0084               	movwf	4
  4284     0720  1383               	bcf	3,7	;select IRP bank0
  4285     0721  0800               	movf	0,w
  4286     0722  0084               	movwf	4
  4287     0723  120A  158A  2000  120A  118A  	fcall	stringdir
  4288     0728  3A2A               	xorlw	42
  4289     0729  1D03               	skipz
  4290     072A  2F2C               	goto	u321_21
  4291     072B  2F2D               	goto	u321_20
  4292     072C                     u321_21:
  4293     072C  2F66               	goto	i1l2431
  4294     072D                     u321_20:
  4295     072D                     i1l2425:
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4298     072D  0876               	movf	i1read_prec_or_width@fmt,w
  4299     072E  0084               	movwf	4
  4300     072F  3001               	movlw	1
  4301     0730  0780               	addwf	0,f
  4302                           
  4303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4304     0731  0877               	movf	i1read_prec_or_width@ap,w
  4305     0732  0084               	movwf	4
  4306     0733  1783               	bsf	3,7
  4307     0734  1C78               	btfss	i1read_prec_or_width@ap+1,0
  4308     0735  1383               	bcf	3,7
  4309     0736  0800               	movf	0,w
  4310     0737  00F9               	movwf	??i1_read_prec_or_width
  4311     0738  3002               	movlw	2
  4312     0739  0780               	addwf	0,f
  4313     073A  0A84               	incf	4,f
  4314     073B  0800               	movf	0,w
  4315     073C  00FA               	movwf	??i1_read_prec_or_width+1
  4316     073D  3000               	movlw	0
  4317     073E  1803               	skipnc
  4318     073F  0A80               	incf	0,f
  4319     0740  0780               	addwf	0,f
  4320     0741  0879               	movf	??i1_read_prec_or_width,w
  4321     0742  0084               	movwf	4
  4322     0743  1783               	bsf	3,7
  4323     0744  1C7A               	btfss	??i1_read_prec_or_width+1,0
  4324     0745  1383               	bcf	3,7
  4325     0746  0800               	movf	0,w
  4326     0747  00FC               	movwf	i1read_prec_or_width@n
  4327     0748  0A84               	incf	4,f
  4328     0749  0800               	movf	0,w
  4329     074A  00FD               	movwf	i1read_prec_or_width@n+1
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4332     074B  2F77               	goto	i1l2433
  4333     074C                     i1l2427:
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4336     074C  087D               	movf	i1read_prec_or_width@n+1,w
  4337     074D  00F1               	movwf	i1___wmul@multiplier+1
  4338     074E  087C               	movf	i1read_prec_or_width@n,w
  4339     074F  00F0               	movwf	i1___wmul@multiplier
  4340     0750  300A               	movlw	10
  4341     0751  00F2               	movwf	i1___wmul@multiplicand
  4342     0752  3000               	movlw	0
  4343     0753  00F3               	movwf	i1___wmul@multiplicand+1
  4344     0754  120A  158A  2547  120A  118A  	fcall	i1___wmul
  4345     0759  087B               	movf	i1read_prec_or_width@c,w
  4346     075A  0770               	addwf	?i1___wmul,w
  4347     075B  00FC               	movwf	i1read_prec_or_width@n
  4348     075C  3000               	movlw	0
  4349     075D  1803               	skipnc
  4350     075E  3001               	movlw	1
  4351     075F  0771               	addwf	?i1___wmul+1,w
  4352     0760  00FD               	movwf	i1read_prec_or_width@n+1
  4353     0761                     i1l2429:
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4356     0761  0876               	movf	i1read_prec_or_width@fmt,w
  4357     0762  0084               	movwf	4
  4358     0763  3001               	movlw	1
  4359     0764  1383               	bcf	3,7	;select IRP bank0
  4360     0765  0780               	addwf	0,f
  4361     0766                     i1l2431:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4364     0766  0876               	movf	i1read_prec_or_width@fmt,w
  4365     0767  0084               	movwf	4
  4366     0768  0800               	movf	0,w
  4367     0769  0084               	movwf	4
  4368     076A  120A  158A  2000  120A  118A  	fcall	stringdir
  4369     076F  3ED0               	addlw	208
  4370     0770  00FB               	movwf	i1read_prec_or_width@c
  4371     0771  300A               	movlw	10
  4372     0772  027B               	subwf	i1read_prec_or_width@c,w
  4373     0773  1C03               	skipc
  4374     0774  2F76               	goto	u322_21
  4375     0775  2F77               	goto	u322_20
  4376     0776                     u322_21:
  4377     0776  2F4C               	goto	i1l2427
  4378     0777                     u322_20:
  4379     0777                     i1l2433:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4382     0777  087D               	movf	i1read_prec_or_width@n+1,w
  4383     0778  00F7               	movwf	?i1_read_prec_or_width+1
  4384     0779  087C               	movf	i1read_prec_or_width@n,w
  4385     077A  00F6               	movwf	?i1_read_prec_or_width
  4386     077B                     i1l670:
  4387     077B  0008               	return
  4388     077C                     __end_ofi1_read_prec_or_width:
  4389                           
  4390                           	psect	text20
  4391     0D47                     __ptext20:	
  4392 ;; *************** function i1___wmul *****************
  4393 ;; Defined at:
  4394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  multiplier      2    0[COMMON] unsigned int 
  4397 ;;  multiplicand    2    2[COMMON] unsigned int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  product         2    4[COMMON] unsigned int 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2    0[COMMON] unsigned int 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         4       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0
  4412 ;;      Totals:         6       0       0       0       0
  4413 ;;Total ram usage:        6 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		i1_read_prec_or_width
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422     0D47                     i1___wmul:	
  4423                           ;psect for function i1___wmul
  4424                           
  4425     0D47                     i1l2191:	
  4426                           ;incstack = 0
  4427 ;; hardware stack exceeded
  4428                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4429                           
  4430     0D47  01F4               	clrf	i1___wmul@product
  4431     0D48  01F5               	clrf	i1___wmul@product+1
  4432     0D49                     i1l2193:
  4433     0D49  1C70               	btfss	i1___wmul@multiplier,0
  4434     0D4A  2D4C               	goto	u271_21
  4435     0D4B  2D4D               	goto	u271_20
  4436     0D4C                     u271_21:
  4437     0D4C  2D53               	goto	i1l158
  4438     0D4D                     u271_20:
  4439     0D4D                     i1l2195:
  4440     0D4D  0872               	movf	i1___wmul@multiplicand,w
  4441     0D4E  07F4               	addwf	i1___wmul@product,f
  4442     0D4F  1803               	skipnc
  4443     0D50  0AF5               	incf	i1___wmul@product+1,f
  4444     0D51  0873               	movf	i1___wmul@multiplicand+1,w
  4445     0D52  07F5               	addwf	i1___wmul@product+1,f
  4446     0D53                     i1l158:
  4447     0D53  3001               	movlw	1
  4448     0D54                     u272_25:
  4449     0D54  1003               	clrc
  4450     0D55  0DF2               	rlf	i1___wmul@multiplicand,f
  4451     0D56  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4452     0D57  3EFF               	addlw	-1
  4453     0D58  1D03               	skipz
  4454     0D59  2D54               	goto	u272_25
  4455     0D5A                     i1l2197:
  4456     0D5A  3001               	movlw	1
  4457     0D5B                     u273_25:
  4458     0D5B  1003               	clrc
  4459     0D5C  0CF1               	rrf	i1___wmul@multiplier+1,f
  4460     0D5D  0CF0               	rrf	i1___wmul@multiplier,f
  4461     0D5E  3EFF               	addlw	-1
  4462     0D5F  1D03               	skipz
  4463     0D60  2D5B               	goto	u273_25
  4464     0D61                     i1l2199:
  4465     0D61  0870               	movf	i1___wmul@multiplier,w
  4466     0D62  0471               	iorwf	i1___wmul@multiplier+1,w
  4467     0D63  1D03               	btfss	3,2
  4468     0D64  2D66               	goto	u274_21
  4469     0D65  2D67               	goto	u274_20
  4470     0D66                     u274_21:
  4471     0D66  2D49               	goto	i1l2193
  4472     0D67                     u274_20:
  4473     0D67                     i1l2201:
  4474     0D67  0875               	movf	i1___wmul@product+1,w
  4475     0D68  00F1               	movwf	?i1___wmul+1
  4476     0D69  0874               	movf	i1___wmul@product,w
  4477     0D6A  00F0               	movwf	?i1___wmul
  4478     0D6B                     i1l160:
  4479     0D6B  0008               	return
  4480     0D6C                     __end_ofi1___wmul:
  4481                           
  4482                           	psect	text21
  4483     0259                     __ptext21:	
  4484 ;; *************** function i1_dtoa *****************
  4485 ;; Defined at:
  4486 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  4489 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  4490 ;;  d               2   17[BANK0 ] int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  i               2   25[BANK0 ] int 
  4493 ;;  w               2   22[BANK0 ] int 
  4494 ;;  s               1   24[BANK0 ] unsigned char 
  4495 ;;  p               1   21[BANK0 ] _Bool 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         0       4       0       0       0
  4506 ;;      Locals:         0       8       0       0       0
  4507 ;;      Temps:          0       0       0       0       0
  4508 ;;      Totals:         0      12       0       0       0
  4509 ;;Total ram usage:       12 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 4
  4512 ;; This function calls:
  4513 ;;		i1___awdiv
  4514 ;;		i1___awmod
  4515 ;;		i1_abs
  4516 ;;		i1_pad
  4517 ;; This function is called by:
  4518 ;;		i1_vfpfcnvrt
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522     0259                     i1_dtoa:	
  4523                           ;psect for function i1_dtoa
  4524                           
  4525     0259                     i1l2375:	
  4526                           ;incstack = 0
  4527 ;; hardware stack exceeded
  4528                           ; Regs used in i1_dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4529                           
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  4532     0259  3001               	movlw	1
  4533     025A  1283               	bcf	3,5	;RP0=0, select bank0
  4534     025B  1303               	bcf	3,6	;RP1=0, select bank0
  4535     025C  00B5               	movwf	i1dtoa@p
  4536     025D                     i1l2377:
  4537                           
  4538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  4539     025D  1BB2               	btfsc	i1dtoa@d+1,7
  4540     025E  2A60               	goto	u311_21
  4541     025F  2A62               	goto	u311_20
  4542     0260                     u311_21:
  4543     0260  3001               	movlw	1
  4544     0261  2A63               	goto	u312_20
  4545     0262                     u311_20:
  4546     0262  3000               	movlw	0
  4547     0263                     u312_20:
  4548     0263  00B8               	movwf	i1dtoa@s
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  4551     0264  1683               	bsf	3,5	;RP0=1, select bank1
  4552     0265  1303               	bcf	3,6	;RP1=0, select bank1
  4553     0266  0863               	movf	(_width+1)^(0+128),w
  4554     0267  1283               	bcf	3,5	;RP0=0, select bank0
  4555     0268  1303               	bcf	3,6	;RP1=0, select bank0
  4556     0269  00B7               	movwf	i1dtoa@w+1
  4557     026A  1683               	bsf	3,5	;RP0=1, select bank1
  4558     026B  1303               	bcf	3,6	;RP1=0, select bank1
  4559     026C  0862               	movf	_width^(0+128),w
  4560     026D  1283               	bcf	3,5	;RP0=0, select bank0
  4561     026E  1303               	bcf	3,6	;RP1=0, select bank0
  4562     026F  00B6               	movwf	i1dtoa@w
  4563     0270                     i1l2379:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  4566     0270  0838               	movf	i1dtoa@s,w
  4567     0271  1903               	btfsc	3,2
  4568     0272  2A74               	goto	u313_21
  4569     0273  2A75               	goto	u313_20
  4570     0274                     u313_21:
  4571     0274  2A8B               	goto	i1l649
  4572     0275                     u313_20:
  4573     0275                     i1l2381:
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  4576     0275  30FF               	movlw	255
  4577     0276  07B6               	addwf	i1dtoa@w,f
  4578     0277  1803               	skipnc
  4579     0278  0AB7               	incf	i1dtoa@w+1,f
  4580     0279  30FF               	movlw	255
  4581     027A  07B7               	addwf	i1dtoa@w+1,f
  4582     027B                     i1l2383:
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  4585     027B  0838               	movf	i1dtoa@s,w
  4586     027C  1D03               	btfss	3,2
  4587     027D  2A7F               	goto	u314_21
  4588     027E  2A80               	goto	u314_20
  4589     027F                     u314_21:
  4590     027F  2A85               	goto	i1l2387
  4591     0280                     u314_20:
  4592     0280                     i1l2385:
  4593     0280  302B               	movlw	43
  4594     0281  00B3               	movwf	i1_dtoa$601
  4595     0282  3000               	movlw	0
  4596     0283  00B4               	movwf	i1_dtoa$601+1
  4597     0284  2A89               	goto	i1l653
  4598     0285                     i1l2387:
  4599     0285  302D               	movlw	45
  4600     0286  00B3               	movwf	i1_dtoa$601
  4601     0287  3000               	movlw	0
  4602     0288  00B4               	movwf	i1_dtoa$601+1
  4603     0289                     i1l653:
  4604     0289  0833               	movf	i1_dtoa$601,w
  4605     028A  00B8               	movwf	i1dtoa@s
  4606     028B                     i1l649:	
  4607                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  4608                           
  4609                           
  4610                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  4611     028B  301F               	movlw	31
  4612     028C  00B9               	movwf	i1dtoa@i
  4613     028D  3000               	movlw	0
  4614     028E  00BA               	movwf	i1dtoa@i+1
  4615     028F                     i1l2389:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  4618     028F  1683               	bsf	3,5	;RP0=1, select bank3
  4619     0290  1703               	bsf	3,6	;RP1=1, select bank3
  4620     0291  01E2               	clrf	(_dbuf^(0+384)+31)
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4623     0292  2AD2               	goto	i1l2401
  4624     0293                     i1l2391:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  4627     0293  30FF               	movlw	255
  4628     0294  07B9               	addwf	i1dtoa@i,f
  4629     0295  1803               	skipnc
  4630     0296  0ABA               	incf	i1dtoa@i+1,f
  4631     0297  30FF               	movlw	255
  4632     0298  07BA               	addwf	i1dtoa@i+1,f
  4633     0299                     i1l2393:
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4636     0299  0839               	movf	i1dtoa@i,w
  4637     029A  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4638     029B  0084               	movwf	4
  4639     029C  300A               	movlw	10
  4640     029D  00F0               	movwf	i1___awmod@divisor
  4641     029E  3000               	movlw	0
  4642     029F  00F1               	movwf	i1___awmod@divisor+1
  4643     02A0  0832               	movf	i1dtoa@d+1,w
  4644     02A1  00F3               	movwf	i1___awmod@dividend+1
  4645     02A2  0831               	movf	i1dtoa@d,w
  4646     02A3  00F2               	movwf	i1___awmod@dividend
  4647     02A4  120A  158A  26FA  120A  118A  	fcall	i1___awmod
  4648     02A9  0871               	movf	?i1___awmod+1,w
  4649     02AA  00F7               	movwf	i1abs@a+1
  4650     02AB  0870               	movf	?i1___awmod,w
  4651     02AC  00F6               	movwf	i1abs@a
  4652     02AD  120A  158A  2500  120A  118A  	fcall	i1_abs
  4653     02B2  0876               	movf	?i1_abs,w
  4654     02B3  3E30               	addlw	48
  4655     02B4  1783               	bsf	3,7	;select IRP bank3
  4656     02B5  0080               	movwf	0
  4657     02B6                     i1l2395:
  4658                           
  4659                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  4660     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  4661     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  4662     02B8  01B5               	clrf	i1dtoa@p
  4663     02B9                     i1l2397:
  4664                           
  4665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  4666     02B9  30FF               	movlw	255
  4667     02BA  07B6               	addwf	i1dtoa@w,f
  4668     02BB  1803               	skipnc
  4669     02BC  0AB7               	incf	i1dtoa@w+1,f
  4670     02BD  30FF               	movlw	255
  4671     02BE  07B7               	addwf	i1dtoa@w+1,f
  4672     02BF                     i1l2399:
  4673                           
  4674                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  4675     02BF  300A               	movlw	10
  4676     02C0  00F0               	movwf	i1___awdiv@divisor
  4677     02C1  3000               	movlw	0
  4678     02C2  00F1               	movwf	i1___awdiv@divisor+1
  4679     02C3  0832               	movf	i1dtoa@d+1,w
  4680     02C4  00F3               	movwf	i1___awdiv@dividend+1
  4681     02C5  0831               	movf	i1dtoa@d,w
  4682     02C6  00F2               	movwf	i1___awdiv@dividend
  4683     02C7  120A  118A  26B9  120A  118A  	fcall	i1___awdiv
  4684     02CC  0871               	movf	?i1___awdiv+1,w
  4685     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  4686     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  4687     02CF  00B2               	movwf	i1dtoa@d+1
  4688     02D0  0870               	movf	?i1___awdiv,w
  4689     02D1  00B1               	movwf	i1dtoa@d
  4690     02D2                     i1l2401:
  4691                           
  4692                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4693     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  4694     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  4695     02D4  083A               	movf	i1dtoa@i+1,w
  4696     02D5  3A80               	xorlw	128
  4697     02D6  00FF               	movwf	btemp+1
  4698     02D7  3080               	movlw	128
  4699     02D8  027F               	subwf	btemp+1,w
  4700     02D9  1D03               	skipz
  4701     02DA  2ADD               	goto	u315_25
  4702     02DB  3001               	movlw	1
  4703     02DC  0239               	subwf	i1dtoa@i,w
  4704     02DD                     u315_25:
  4705     02DD  1C03               	skipc
  4706     02DE  2AE0               	goto	u315_21
  4707     02DF  2AE1               	goto	u315_20
  4708     02E0                     u315_21:
  4709     02E0  2B01               	goto	i1l2411
  4710     02E1                     u315_20:
  4711     02E1                     i1l2403:
  4712     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  4713     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  4714     02E3  0831               	movf	i1dtoa@d,w
  4715     02E4  0432               	iorwf	i1dtoa@d+1,w
  4716     02E5  1D03               	btfss	3,2
  4717     02E6  2AE8               	goto	u316_21
  4718     02E7  2AE9               	goto	u316_20
  4719     02E8                     u316_21:
  4720     02E8  2A93               	goto	i1l2391
  4721     02E9                     u316_20:
  4722     02E9                     i1l2405:
  4723     02E9  0835               	movf	i1dtoa@p,w
  4724     02EA  1D03               	btfss	3,2
  4725     02EB  2AED               	goto	u317_21
  4726     02EC  2AEE               	goto	u317_20
  4727     02ED                     u317_21:
  4728     02ED  2A93               	goto	i1l2391
  4729     02EE                     u317_20:
  4730     02EE                     i1l2407:
  4731     02EE  0837               	movf	i1dtoa@w+1,w
  4732     02EF  3A80               	xorlw	128
  4733     02F0  00FF               	movwf	btemp+1
  4734     02F1  3080               	movlw	128
  4735     02F2  027F               	subwf	btemp+1,w
  4736     02F3  1D03               	skipz
  4737     02F4  2AF7               	goto	u318_25
  4738     02F5  3001               	movlw	1
  4739     02F6  0236               	subwf	i1dtoa@w,w
  4740     02F7                     u318_25:
  4741     02F7  1C03               	skipc
  4742     02F8  2AFA               	goto	u318_21
  4743     02F9  2AFB               	goto	u318_20
  4744     02FA                     u318_21:
  4745     02FA  2B01               	goto	i1l2411
  4746     02FB                     u318_20:
  4747     02FB                     i1l2409:
  4748     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4749     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4750     02FD  18E9               	btfsc	_flags,1
  4751     02FE  2B00               	goto	u319_21
  4752     02FF  2B01               	goto	u319_20
  4753     0300                     u319_21:
  4754     0300  2A93               	goto	i1l2391
  4755     0301                     u319_20:
  4756     0301                     i1l2411:
  4757                           
  4758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  4759     0301  1283               	bcf	3,5	;RP0=0, select bank0
  4760     0302  1303               	bcf	3,6	;RP1=0, select bank0
  4761     0303  0838               	movf	i1dtoa@s,w
  4762     0304  1903               	btfsc	3,2
  4763     0305  2B07               	goto	u320_21
  4764     0306  2B08               	goto	u320_20
  4765     0307                     u320_21:
  4766     0307  2B14               	goto	i1l2417
  4767     0308                     u320_20:
  4768     0308                     i1l2413:
  4769                           
  4770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  4771     0308  30FF               	movlw	255
  4772     0309  07B9               	addwf	i1dtoa@i,f
  4773     030A  1803               	skipnc
  4774     030B  0ABA               	incf	i1dtoa@i+1,f
  4775     030C  30FF               	movlw	255
  4776     030D  07BA               	addwf	i1dtoa@i+1,f
  4777     030E                     i1l2415:
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  4780     030E  0839               	movf	i1dtoa@i,w
  4781     030F  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4782     0310  0084               	movwf	4
  4783     0311  0838               	movf	i1dtoa@s,w
  4784     0312  1783               	bsf	3,7	;select IRP bank3
  4785     0313  0080               	movwf	0
  4786     0314                     i1l2417:
  4787                           
  4788                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4789     0314  082F               	movf	i1dtoa@fp,w
  4790     0315  00A8               	movwf	i1pad@fp
  4791     0316  0830               	movf	i1dtoa@fp+1,w
  4792     0317  00A9               	movwf	i1pad@fp+1
  4793     0318  0839               	movf	i1dtoa@i,w
  4794     0319  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4795     031A  00AA               	movwf	i1pad@buf
  4796     031B  0837               	movf	i1dtoa@w+1,w
  4797     031C  00AC               	movwf	i1pad@p+1
  4798     031D  0836               	movf	i1dtoa@w,w
  4799     031E  00AB               	movwf	i1pad@p
  4800     031F  120A  158A  26A7  120A  118A  	fcall	i1_pad
  4801     0324                     i1l662:
  4802     0324  0008               	return
  4803     0325                     __end_ofi1_dtoa:
  4804                           
  4805                           	psect	text22
  4806     0EA7                     __ptext22:	
  4807 ;; *************** function i1_pad *****************
  4808 ;; Defined at:
  4809 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  4812 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  4813 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  4814 ;;		 -> dbuf(32), 
  4815 ;;  p               2   11[BANK0 ] int 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  i               2   13[BANK0 ] int 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       5       0       0       0
  4828 ;;      Locals:         0       2       0       0       0
  4829 ;;      Temps:          1       0       0       0       0
  4830 ;;      Totals:         1       7       0       0       0
  4831 ;;Total ram usage:        8 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 3
  4834 ;; This function calls:
  4835 ;;		i1_fputc
  4836 ;;		i1_fputs
  4837 ;; This function is called by:
  4838 ;;		i1_dtoa
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842     0EA7                     i1_pad:	
  4843                           ;psect for function i1_pad
  4844                           
  4845     0EA7                     i1l2287:	
  4846                           ;incstack = 0
  4847 ;; hardware stack exceeded
  4848                           ; Regs used in i1_pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4849                           
  4850                           
  4851                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  4852     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4853     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4854     0EA9  1C69               	btfss	_flags,0
  4855     0EAA  2EAC               	goto	u294_21
  4856     0EAB  2EAD               	goto	u294_20
  4857     0EAC                     u294_21:
  4858     0EAC  2EB8               	goto	i1l2291
  4859     0EAD                     u294_20:
  4860     0EAD                     i1l2289:
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  4863     0EAD  082A               	movf	i1pad@buf,w
  4864     0EAE  00A0               	movwf	i1fputs@s
  4865     0EAF  0828               	movf	i1pad@fp,w
  4866     0EB0  00A1               	movwf	i1fputs@fp
  4867     0EB1  0829               	movf	i1pad@fp+1,w
  4868     0EB2  00A2               	movwf	i1fputs@fp+1
  4869     0EB3  120A  158A  25B8  120A  158A  	fcall	i1_fputs
  4870     0EB8                     i1l2291:
  4871                           
  4872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  4873     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  4874     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  4875     0EBA  1FAC               	btfss	i1pad@p+1,7
  4876     0EBB  2EBD               	goto	u295_21
  4877     0EBC  2EBE               	goto	u295_20
  4878     0EBD                     u295_21:
  4879     0EBD  2EC0               	goto	i1l641
  4880     0EBE                     u295_20:
  4881     0EBE                     i1l2293:
  4882                           
  4883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4884     0EBE  01AB               	clrf	i1pad@p
  4885     0EBF  01AC               	clrf	i1pad@p+1
  4886     0EC0                     i1l641:	
  4887                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  4888                           
  4889                           
  4890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4891     0EC0  01AD               	clrf	i1pad@i
  4892     0EC1  01AE               	clrf	i1pad@i+1
  4893                           
  4894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4895     0EC2  2EDA               	goto	i1l2299
  4896     0EC3                     i1l2295:
  4897                           
  4898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4899     0EC3  3020               	movlw	32
  4900     0EC4  00F0               	movwf	i1fputc@c
  4901     0EC5  3000               	movlw	0
  4902     0EC6  00F1               	movwf	i1fputc@c+1
  4903     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4904     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4905     0EC9  0828               	movf	i1pad@fp,w
  4906     0ECA  00F2               	movwf	i1fputc@fp
  4907     0ECB  0829               	movf	i1pad@fp+1,w
  4908     0ECC  00F3               	movwf	i1fputc@fp+1
  4909     0ECD  120A  118A  254E  120A  158A  	fcall	i1_fputc
  4910     0ED2                     i1l2297:
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4913     0ED2  3001               	movlw	1
  4914     0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  4915     0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  4916     0ED5  07AD               	addwf	i1pad@i,f
  4917     0ED6  1803               	skipnc
  4918     0ED7  0AAE               	incf	i1pad@i+1,f
  4919     0ED8  3000               	movlw	0
  4920     0ED9  07AE               	addwf	i1pad@i+1,f
  4921     0EDA                     i1l2299:
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4924     0EDA  082E               	movf	i1pad@i+1,w
  4925     0EDB  3A80               	xorlw	128
  4926     0EDC  00FD               	movwf	??i1_pad
  4927     0EDD  082C               	movf	i1pad@p+1,w
  4928     0EDE  3A80               	xorlw	128
  4929     0EDF  027D               	subwf	??i1_pad,w
  4930     0EE0  1D03               	skipz
  4931     0EE1  2EE4               	goto	u296_25
  4932     0EE2  082B               	movf	i1pad@p,w
  4933     0EE3  022D               	subwf	i1pad@i,w
  4934     0EE4                     u296_25:
  4935     0EE4  1C03               	skipc
  4936     0EE5  2EE7               	goto	u296_21
  4937     0EE6  2EE8               	goto	u296_20
  4938     0EE7                     u296_21:
  4939     0EE7  2EC3               	goto	i1l2295
  4940     0EE8                     u296_20:
  4941     0EE8                     i1l644:
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  4944     0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  4945     0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  4946     0EEA  1869               	btfsc	_flags,0
  4947     0EEB  2EED               	goto	u297_21
  4948     0EEC  2EEE               	goto	u297_20
  4949     0EED                     u297_21:
  4950     0EED  2EF9               	goto	i1l646
  4951     0EEE                     u297_20:
  4952     0EEE                     i1l2301:
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4955     0EEE  082A               	movf	i1pad@buf,w
  4956     0EEF  00A0               	movwf	i1fputs@s
  4957     0EF0  0828               	movf	i1pad@fp,w
  4958     0EF1  00A1               	movwf	i1fputs@fp
  4959     0EF2  0829               	movf	i1pad@fp+1,w
  4960     0EF3  00A2               	movwf	i1fputs@fp+1
  4961     0EF4  120A  158A  25B8  120A  158A  	fcall	i1_fputs
  4962     0EF9                     i1l646:
  4963     0EF9  0008               	return
  4964     0EFA                     __end_ofi1_pad:
  4965                           
  4966                           	psect	text23
  4967     0DB8                     __ptext23:	
  4968 ;; *************** function i1_fputs *****************
  4969 ;; Defined at:
  4970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  4973 ;;		 -> dbuf(32), 
  4974 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  4975 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  i               2    6[BANK0 ] int 
  4978 ;;  c               1    5[BANK0 ] unsigned char 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  2    0[BANK0 ] int 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         0       3       0       0       0
  4989 ;;      Locals:         0       3       0       0       0
  4990 ;;      Temps:          0       2       0       0       0
  4991 ;;      Totals:         0       8       0       0       0
  4992 ;;Total ram usage:        8 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 2
  4995 ;; This function calls:
  4996 ;;		i1_fputc
  4997 ;; This function is called by:
  4998 ;;		i1_pad
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002     0DB8                     i1_fputs:	
  5003                           ;psect for function i1_fputs
  5004                           
  5005     0DB8                     i1l2063:	
  5006                           ;incstack = 0
  5007 ;; hardware stack exceeded
  5008                           ; Regs used in i1_fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5009                           
  5010     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0DBA  01A6               	clrf	i1fputs@i
  5013     0DBB  01A7               	clrf	i1fputs@i+1
  5014     0DBC  2DD5               	goto	i1l2069
  5015     0DBD                     i1l2065:
  5016     0DBD  0825               	movf	i1fputs@c,w
  5017     0DBE  00A3               	movwf	??i1_fputs
  5018     0DBF  01A4               	clrf	??i1_fputs+1
  5019     0DC0  0823               	movf	??i1_fputs,w
  5020     0DC1  00F0               	movwf	i1fputc@c
  5021     0DC2  0824               	movf	??i1_fputs+1,w
  5022     0DC3  00F1               	movwf	i1fputc@c+1
  5023     0DC4  0821               	movf	i1fputs@fp,w
  5024     0DC5  00F2               	movwf	i1fputc@fp
  5025     0DC6  0822               	movf	i1fputs@fp+1,w
  5026     0DC7  00F3               	movwf	i1fputc@fp+1
  5027     0DC8  120A  118A  254E  120A  158A  	fcall	i1_fputc
  5028     0DCD                     i1l2067:
  5029     0DCD  3001               	movlw	1
  5030     0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  5031     0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  5032     0DD0  07A6               	addwf	i1fputs@i,f
  5033     0DD1  1803               	skipnc
  5034     0DD2  0AA7               	incf	i1fputs@i+1,f
  5035     0DD3  3000               	movlw	0
  5036     0DD4  07A7               	addwf	i1fputs@i+1,f
  5037     0DD5                     i1l2069:
  5038     0DD5  0826               	movf	i1fputs@i,w
  5039     0DD6  0720               	addwf	i1fputs@s,w
  5040     0DD7  00A3               	movwf	??i1_fputs
  5041     0DD8  0823               	movf	??i1_fputs,w
  5042     0DD9  0084               	movwf	4
  5043     0DDA  1783               	bsf	3,7	;select IRP bank2
  5044     0DDB  0800               	movf	0,w
  5045     0DDC  00A5               	movwf	i1fputs@c
  5046     0DDD  0825               	movf	i1fputs@c,w
  5047     0DDE  1D03               	btfss	3,2
  5048     0DDF  2DE1               	goto	u242_21
  5049     0DE0  2DE2               	goto	u242_20
  5050     0DE1                     u242_21:
  5051     0DE1  2DBD               	goto	i1l2065
  5052     0DE2                     u242_20:
  5053     0DE2                     i1l718:
  5054     0DE2  0008               	return
  5055     0DE3                     __end_ofi1_fputs:
  5056                           
  5057                           	psect	text24
  5058     054E                     __ptext24:	
  5059 ;; *************** function i1_fputc *****************
  5060 ;; Defined at:
  5061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  c               2    0[COMMON] int 
  5064 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  5065 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  2    0[COMMON] int 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5077 ;;      Params:         4       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0
  5079 ;;      Temps:          9       0       0       0       0
  5080 ;;      Totals:        13       0       0       0       0
  5081 ;;Total ram usage:       13 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 1
  5084 ;; This function calls:
  5085 ;;		i1_putch
  5086 ;; This function is called by:
  5087 ;;		i1_pad
  5088 ;;		i1_vfpfcnvrt
  5089 ;;		i1_fputs
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093     054E                     i1_fputc:	
  5094                           ;psect for function i1_fputc
  5095                           
  5096     054E                     i1l2041:	
  5097                           ;incstack = 0
  5098 ;; hardware stack exceeded
  5099                           ; Regs used in i1_fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5100                           
  5101     054E  0872               	movf	i1fputc@fp,w
  5102     054F  0473               	iorwf	i1fputc@fp+1,w
  5103     0550  1903               	btfsc	3,2
  5104     0551  2D53               	goto	u236_21
  5105     0552  2D54               	goto	u236_20
  5106     0553                     u236_21:
  5107     0553  2D5A               	goto	i1l2045
  5108     0554                     u236_20:
  5109     0554                     i1l2043:
  5110     0554  0872               	movf	i1fputc@fp,w
  5111     0555  0473               	iorwf	i1fputc@fp+1,w
  5112     0556  1D03               	btfss	3,2
  5113     0557  2D59               	goto	u237_21
  5114     0558  2D5A               	goto	u237_20
  5115     0559                     u237_21:
  5116     0559  2D61               	goto	i1l2047
  5117     055A                     u237_20:
  5118     055A                     i1l2045:
  5119     055A  0870               	movf	i1fputc@c,w
  5120     055B  120A  158A  24F7  120A  118A  	fcall	i1_putch
  5121     0560  2DE7               	goto	i1l710
  5122     0561                     i1l2047:
  5123     0561  0872               	movf	i1fputc@fp,w
  5124     0562  3E09               	addlw	9
  5125     0563  00F4               	movwf	??i1_fputc
  5126     0564  0873               	movf	i1fputc@fp+1,w
  5127     0565  1803               	skipnc
  5128     0566  3E01               	addlw	1
  5129     0567  3E00               	addlw	0
  5130     0568  00F5               	movwf	??i1_fputc+1
  5131     0569  0874               	movf	??i1_fputc,w
  5132     056A  0084               	movwf	4
  5133     056B  1783               	bsf	3,7
  5134     056C  1C75               	btfss	??i1_fputc+1,0
  5135     056D  1383               	bcf	3,7
  5136     056E  0800               	movf	0,w
  5137     056F  00F6               	movwf	??i1_fputc+2
  5138     0570  0A84               	incf	4,f
  5139     0571  0800               	movf	0,w
  5140     0572  00F7               	movwf	??i1_fputc+3
  5141     0573  0876               	movf	??i1_fputc+2,w
  5142     0574  0477               	iorwf	??i1_fputc+3,w
  5143     0575  1903               	btfsc	3,2
  5144     0576  2D78               	goto	u238_21
  5145     0577  2D79               	goto	u238_20
  5146     0578                     u238_21:
  5147     0578  2DAB               	goto	i1l2051
  5148     0579                     u238_20:
  5149     0579                     i1l2049:
  5150     0579  0872               	movf	i1fputc@fp,w
  5151     057A  3E09               	addlw	9
  5152     057B  00F4               	movwf	??i1_fputc
  5153     057C  0873               	movf	i1fputc@fp+1,w
  5154     057D  1803               	skipnc
  5155     057E  3E01               	addlw	1
  5156     057F  3E00               	addlw	0
  5157     0580  00F5               	movwf	??i1_fputc+1
  5158     0581  0874               	movf	??i1_fputc,w
  5159     0582  0084               	movwf	4
  5160     0583  1783               	bsf	3,7
  5161     0584  1C75               	btfss	??i1_fputc+1,0
  5162     0585  1383               	bcf	3,7
  5163     0586  0800               	movf	0,w
  5164     0587  00F6               	movwf	??i1_fputc+2
  5165     0588  0A84               	incf	4,f
  5166     0589  0800               	movf	0,w
  5167     058A  00F7               	movwf	??i1_fputc+3
  5168     058B  0872               	movf	i1fputc@fp,w
  5169     058C  3E02               	addlw	2
  5170     058D  00F8               	movwf	??i1_fputc+4
  5171     058E  0873               	movf	i1fputc@fp+1,w
  5172     058F  1803               	skipnc
  5173     0590  3E01               	addlw	1
  5174     0591  3E00               	addlw	0
  5175     0592  00F9               	movwf	??i1_fputc+5
  5176     0593  0878               	movf	??i1_fputc+4,w
  5177     0594  0084               	movwf	4
  5178     0595  1783               	bsf	3,7
  5179     0596  1C79               	btfss	??i1_fputc+5,0
  5180     0597  1383               	bcf	3,7
  5181     0598  0800               	movf	0,w
  5182     0599  00FA               	movwf	??i1_fputc+6
  5183     059A  0A84               	incf	4,f
  5184     059B  0800               	movf	0,w
  5185     059C  00FB               	movwf	??i1_fputc+7
  5186     059D  087B               	movf	??i1_fputc+7,w
  5187     059E  3A80               	xorlw	128
  5188     059F  00FC               	movwf	??i1_fputc+8
  5189     05A0  0877               	movf	??i1_fputc+3,w
  5190     05A1  3A80               	xorlw	128
  5191     05A2  027C               	subwf	??i1_fputc+8,w
  5192     05A3  1D03               	skipz
  5193     05A4  2DA7               	goto	u239_25
  5194     05A5  0876               	movf	??i1_fputc+2,w
  5195     05A6  027A               	subwf	??i1_fputc+6,w
  5196     05A7                     u239_25:
  5197     05A7  1803               	skipnc
  5198     05A8  2DAA               	goto	u239_21
  5199     05A9  2DAB               	goto	u239_20
  5200     05AA                     u239_21:
  5201     05AA  2DE7               	goto	i1l710
  5202     05AB                     u239_20:
  5203     05AB                     i1l2051:
  5204     05AB  0872               	movf	i1fputc@fp,w
  5205     05AC  0084               	movwf	4
  5206     05AD  1783               	bsf	3,7
  5207     05AE  1C73               	btfss	i1fputc@fp+1,0
  5208     05AF  1383               	bcf	3,7
  5209     05B0  0800               	movf	0,w
  5210     05B1  00F4               	movwf	??i1_fputc
  5211     05B2  0A84               	incf	4,f
  5212     05B3  0800               	movf	0,w
  5213     05B4  00F5               	movwf	??i1_fputc+1
  5214     05B5  0872               	movf	i1fputc@fp,w
  5215     05B6  3E02               	addlw	2
  5216     05B7  00F6               	movwf	??i1_fputc+2
  5217     05B8  0873               	movf	i1fputc@fp+1,w
  5218     05B9  1803               	skipnc
  5219     05BA  3E01               	addlw	1
  5220     05BB  3E00               	addlw	0
  5221     05BC  00F7               	movwf	??i1_fputc+3
  5222     05BD  0876               	movf	??i1_fputc+2,w
  5223     05BE  0084               	movwf	4
  5224     05BF  1783               	bsf	3,7
  5225     05C0  1C77               	btfss	??i1_fputc+3,0
  5226     05C1  1383               	bcf	3,7
  5227     05C2  0800               	movf	0,w
  5228     05C3  0774               	addwf	??i1_fputc,w
  5229     05C4  00F9               	movwf	??i1_fputc+5
  5230     05C5  0875               	movf	??i1_fputc+1,w
  5231     05C6  00F8               	movwf	??i1_fputc+4
  5232     05C7  1803               	skipnc
  5233     05C8  0AF8               	incf	??i1_fputc+4,f
  5234     05C9  1F80               	btfss	0,7
  5235     05CA  2DCC               	goto	u240_20
  5236     05CB  03F8               	decf	??i1_fputc+4,f
  5237     05CC                     u240_20:
  5238     05CC  0878               	movf	??i1_fputc+4,w
  5239     05CD  00FA               	movwf	??i1_fputc+6
  5240     05CE  0879               	movf	??i1_fputc+5,w
  5241     05CF  0084               	movwf	4
  5242     05D0  1783               	bsf	3,7
  5243     05D1  1C7A               	btfss	??i1_fputc+6,0
  5244     05D2  1383               	bcf	3,7
  5245     05D3  0870               	movf	i1fputc@c,w
  5246     05D4  0080               	movwf	0
  5247     05D5  0872               	movf	i1fputc@fp,w
  5248     05D6  3E02               	addlw	2
  5249     05D7  00F4               	movwf	??i1_fputc
  5250     05D8  0873               	movf	i1fputc@fp+1,w
  5251     05D9  1803               	skipnc
  5252     05DA  3E01               	addlw	1
  5253     05DB  3E00               	addlw	0
  5254     05DC  00F5               	movwf	??i1_fputc+1
  5255     05DD  0874               	movf	??i1_fputc,w
  5256     05DE  0084               	movwf	4
  5257     05DF  1783               	bsf	3,7
  5258     05E0  1C75               	btfss	??i1_fputc+1,0
  5259     05E1  1383               	bcf	3,7
  5260     05E2  3001               	movlw	1
  5261     05E3  0780               	addwf	0,f
  5262     05E4  0A84               	incf	4,f
  5263     05E5  1803               	skipnc
  5264     05E6  0A80               	incf	0,f
  5265     05E7                     i1l710:
  5266     05E7  0008               	return
  5267     05E8                     __end_ofi1_fputc:
  5268                           
  5269                           	psect	text25
  5270     0CF7                     __ptext25:	
  5271 ;; *************** function i1_putch *****************
  5272 ;; Defined at:
  5273 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  c               1    wreg     unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  c               1  (no storage) unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		i1_fputc
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300     0CF7                     i1_putch:	
  5301                           ;psect for function i1_putch
  5302                           
  5303     0CF7                     i1l721:	
  5304                           ;incstack = 0
  5305 ;; hardware stack exceeded
  5306                           ; Regs used in i1_putch: [wreg]
  5307                           
  5308     0CF7  0008               	return
  5309     0CF8                     __end_ofi1_putch:
  5310                           
  5311                           	psect	text26
  5312     0D00                     __ptext26:	
  5313 ;; *************** function i1_abs *****************
  5314 ;; Defined at:
  5315 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  a               2    6[COMMON] int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    6[COMMON] int 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5329 ;;      Params:         2       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0
  5331 ;;      Temps:          2       0       0       0       0
  5332 ;;      Totals:         4       0       0       0       0
  5333 ;;Total ram usage:        4 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		i1_dtoa
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342     0D00                     i1_abs:	
  5343                           ;psect for function i1_abs
  5344                           
  5345     0D00                     i1l2303:	
  5346                           ;incstack = 0
  5347 ;; hardware stack exceeded
  5348                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  5349                           
  5350     0D00  1BF7               	btfsc	i1abs@a+1,7
  5351     0D01  2D03               	goto	u298_21
  5352     0D02  2D04               	goto	u298_20
  5353     0D03                     u298_21:
  5354     0D03  2D05               	goto	i1l2307
  5355     0D04                     u298_20:
  5356     0D04                     i1l2305:
  5357     0D04  2D10               	goto	i1l698
  5358     0D05                     i1l2307:
  5359     0D05  0976               	comf	i1abs@a,w
  5360     0D06  00F8               	movwf	??i1_abs
  5361     0D07  0977               	comf	i1abs@a+1,w
  5362     0D08  00F9               	movwf	??i1_abs+1
  5363     0D09  0AF8               	incf	??i1_abs,f
  5364     0D0A  1903               	skipnz
  5365     0D0B  0AF9               	incf	??i1_abs+1,f
  5366     0D0C  0878               	movf	??i1_abs,w
  5367     0D0D  00F6               	movwf	?i1_abs
  5368     0D0E  0879               	movf	??i1_abs+1,w
  5369     0D0F  00F7               	movwf	?i1_abs+1
  5370     0D10                     i1l698:
  5371     0D10  0008               	return
  5372     0D11                     __end_ofi1_abs:
  5373                           
  5374                           	psect	text27
  5375     0EFA                     __ptext27:	
  5376 ;; *************** function i1___awmod *****************
  5377 ;; Defined at:
  5378 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  divisor         2    0[COMMON] int 
  5381 ;;  dividend        2    2[COMMON] int 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  sign            1    5[COMMON] unsigned char 
  5384 ;;  counter         1    4[COMMON] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  2    0[COMMON] int 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5394 ;;      Params:         4       0       0       0       0
  5395 ;;      Locals:         2       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0
  5397 ;;      Totals:         6       0       0       0       0
  5398 ;;Total ram usage:        6 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		i1_dtoa
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407     0EFA                     i1___awmod:	
  5408                           ;psect for function i1___awmod
  5409                           
  5410     0EFA                     i1l2249:	
  5411                           ;incstack = 0
  5412 ;; hardware stack exceeded
  5413                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  5414                           
  5415     0EFA  01F5               	clrf	i1___awmod@sign
  5416     0EFB                     i1l2251:
  5417     0EFB  1FF3               	btfss	i1___awmod@dividend+1,7
  5418     0EFC  2EFE               	goto	u285_21
  5419     0EFD  2EFF               	goto	u285_20
  5420     0EFE                     u285_21:
  5421     0EFE  2F06               	goto	i1l2257
  5422     0EFF                     u285_20:
  5423     0EFF                     i1l2253:
  5424     0EFF  09F2               	comf	i1___awmod@dividend,f
  5425     0F00  09F3               	comf	i1___awmod@dividend+1,f
  5426     0F01  0AF2               	incf	i1___awmod@dividend,f
  5427     0F02  1903               	skipnz
  5428     0F03  0AF3               	incf	i1___awmod@dividend+1,f
  5429     0F04                     i1l2255:
  5430     0F04  3001               	movlw	1
  5431     0F05  00F5               	movwf	i1___awmod@sign
  5432     0F06                     i1l2257:
  5433     0F06  1FF1               	btfss	i1___awmod@divisor+1,7
  5434     0F07  2F09               	goto	u286_21
  5435     0F08  2F0A               	goto	u286_20
  5436     0F09                     u286_21:
  5437     0F09  2F0F               	goto	i1l2261
  5438     0F0A                     u286_20:
  5439     0F0A                     i1l2259:
  5440     0F0A  09F0               	comf	i1___awmod@divisor,f
  5441     0F0B  09F1               	comf	i1___awmod@divisor+1,f
  5442     0F0C  0AF0               	incf	i1___awmod@divisor,f
  5443     0F0D  1903               	skipnz
  5444     0F0E  0AF1               	incf	i1___awmod@divisor+1,f
  5445     0F0F                     i1l2261:
  5446     0F0F  0870               	movf	i1___awmod@divisor,w
  5447     0F10  0471               	iorwf	i1___awmod@divisor+1,w
  5448     0F11  1903               	btfsc	3,2
  5449     0F12  2F14               	goto	u287_21
  5450     0F13  2F15               	goto	u287_20
  5451     0F14                     u287_21:
  5452     0F14  2F42               	goto	i1l2279
  5453     0F15                     u287_20:
  5454     0F15                     i1l2263:
  5455     0F15  3001               	movlw	1
  5456     0F16  00F4               	movwf	i1___awmod@counter
  5457     0F17  2F21               	goto	i1l2269
  5458     0F18                     i1l2265:
  5459     0F18  3001               	movlw	1
  5460     0F19                     u288_25:
  5461     0F19  1003               	clrc
  5462     0F1A  0DF0               	rlf	i1___awmod@divisor,f
  5463     0F1B  0DF1               	rlf	i1___awmod@divisor+1,f
  5464     0F1C  3EFF               	addlw	-1
  5465     0F1D  1D03               	skipz
  5466     0F1E  2F19               	goto	u288_25
  5467     0F1F                     i1l2267:
  5468     0F1F  3001               	movlw	1
  5469     0F20  07F4               	addwf	i1___awmod@counter,f
  5470     0F21                     i1l2269:
  5471     0F21  1FF1               	btfss	i1___awmod@divisor+1,7
  5472     0F22  2F24               	goto	u289_21
  5473     0F23  2F25               	goto	u289_20
  5474     0F24                     u289_21:
  5475     0F24  2F18               	goto	i1l2265
  5476     0F25                     u289_20:
  5477     0F25                     i1l2271:
  5478     0F25  0871               	movf	i1___awmod@divisor+1,w
  5479     0F26  0273               	subwf	i1___awmod@dividend+1,w
  5480     0F27  1D03               	skipz
  5481     0F28  2F2B               	goto	u290_25
  5482     0F29  0870               	movf	i1___awmod@divisor,w
  5483     0F2A  0272               	subwf	i1___awmod@dividend,w
  5484     0F2B                     u290_25:
  5485     0F2B  1C03               	skipc
  5486     0F2C  2F2E               	goto	u290_21
  5487     0F2D  2F2F               	goto	u290_20
  5488     0F2E                     u290_21:
  5489     0F2E  2F35               	goto	i1l2275
  5490     0F2F                     u290_20:
  5491     0F2F                     i1l2273:
  5492     0F2F  0870               	movf	i1___awmod@divisor,w
  5493     0F30  02F2               	subwf	i1___awmod@dividend,f
  5494     0F31  0871               	movf	i1___awmod@divisor+1,w
  5495     0F32  1C03               	skipc
  5496     0F33  03F3               	decf	i1___awmod@dividend+1,f
  5497     0F34  02F3               	subwf	i1___awmod@dividend+1,f
  5498     0F35                     i1l2275:
  5499     0F35  3001               	movlw	1
  5500     0F36                     u291_25:
  5501     0F36  1003               	clrc
  5502     0F37  0CF1               	rrf	i1___awmod@divisor+1,f
  5503     0F38  0CF0               	rrf	i1___awmod@divisor,f
  5504     0F39  3EFF               	addlw	-1
  5505     0F3A  1D03               	skipz
  5506     0F3B  2F36               	goto	u291_25
  5507     0F3C                     i1l2277:
  5508     0F3C  3001               	movlw	1
  5509     0F3D  02F4               	subwf	i1___awmod@counter,f
  5510     0F3E  1D03               	btfss	3,2
  5511     0F3F  2F41               	goto	u292_21
  5512     0F40  2F42               	goto	u292_20
  5513     0F41                     u292_21:
  5514     0F41  2F25               	goto	i1l2271
  5515     0F42                     u292_20:
  5516     0F42                     i1l2279:
  5517     0F42  0875               	movf	i1___awmod@sign,w
  5518     0F43  1903               	btfsc	3,2
  5519     0F44  2F46               	goto	u293_21
  5520     0F45  2F47               	goto	u293_20
  5521     0F46                     u293_21:
  5522     0F46  2F4C               	goto	i1l2283
  5523     0F47                     u293_20:
  5524     0F47                     i1l2281:
  5525     0F47  09F2               	comf	i1___awmod@dividend,f
  5526     0F48  09F3               	comf	i1___awmod@dividend+1,f
  5527     0F49  0AF2               	incf	i1___awmod@dividend,f
  5528     0F4A  1903               	skipnz
  5529     0F4B  0AF3               	incf	i1___awmod@dividend+1,f
  5530     0F4C                     i1l2283:
  5531     0F4C  0873               	movf	i1___awmod@dividend+1,w
  5532     0F4D  00F1               	movwf	?i1___awmod+1
  5533     0F4E  0872               	movf	i1___awmod@dividend,w
  5534     0F4F  00F0               	movwf	?i1___awmod
  5535     0F50                     i1l324:
  5536     0F50  0008               	return
  5537     0F51                     __end_ofi1___awmod:
  5538                           
  5539                           	psect	text28
  5540     06B9                     __ptext28:	
  5541 ;; *************** function i1___awdiv *****************
  5542 ;; Defined at:
  5543 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  divisor         2    0[COMMON] int 
  5546 ;;  dividend        2    2[COMMON] int 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  quotient        2    6[COMMON] int 
  5549 ;;  sign            1    5[COMMON] unsigned char 
  5550 ;;  counter         1    4[COMMON] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  2    0[COMMON] int 
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         4       0       0       0       0
  5561 ;;      Locals:         4       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0
  5563 ;;      Totals:         8       0       0       0       0
  5564 ;;Total ram usage:        8 bytes
  5565 ;; Hardware stack levels used: 1
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		i1_dtoa
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573     06B9                     i1___awdiv:	
  5574                           ;psect for function i1___awdiv
  5575                           
  5576     06B9                     i1l2205:	
  5577                           ;incstack = 0
  5578 ;; hardware stack exceeded
  5579                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  5580                           
  5581     06B9  01F5               	clrf	i1___awdiv@sign
  5582     06BA                     i1l2207:
  5583     06BA  1FF1               	btfss	i1___awdiv@divisor+1,7
  5584     06BB  2EBD               	goto	u275_21
  5585     06BC  2EBE               	goto	u275_20
  5586     06BD                     u275_21:
  5587     06BD  2EC5               	goto	i1l2213
  5588     06BE                     u275_20:
  5589     06BE                     i1l2209:
  5590     06BE  09F0               	comf	i1___awdiv@divisor,f
  5591     06BF  09F1               	comf	i1___awdiv@divisor+1,f
  5592     06C0  0AF0               	incf	i1___awdiv@divisor,f
  5593     06C1  1903               	skipnz
  5594     06C2  0AF1               	incf	i1___awdiv@divisor+1,f
  5595     06C3                     i1l2211:
  5596     06C3  3001               	movlw	1
  5597     06C4  00F5               	movwf	i1___awdiv@sign
  5598     06C5                     i1l2213:
  5599     06C5  1FF3               	btfss	i1___awdiv@dividend+1,7
  5600     06C6  2EC8               	goto	u276_21
  5601     06C7  2EC9               	goto	u276_20
  5602     06C8                     u276_21:
  5603     06C8  2ED0               	goto	i1l2219
  5604     06C9                     u276_20:
  5605     06C9                     i1l2215:
  5606     06C9  09F2               	comf	i1___awdiv@dividend,f
  5607     06CA  09F3               	comf	i1___awdiv@dividend+1,f
  5608     06CB  0AF2               	incf	i1___awdiv@dividend,f
  5609     06CC  1903               	skipnz
  5610     06CD  0AF3               	incf	i1___awdiv@dividend+1,f
  5611     06CE                     i1l2217:
  5612     06CE  3001               	movlw	1
  5613     06CF  06F5               	xorwf	i1___awdiv@sign,f
  5614     06D0                     i1l2219:
  5615     06D0  01F6               	clrf	i1___awdiv@quotient
  5616     06D1  01F7               	clrf	i1___awdiv@quotient+1
  5617     06D2                     i1l2221:
  5618     06D2  0870               	movf	i1___awdiv@divisor,w
  5619     06D3  0471               	iorwf	i1___awdiv@divisor+1,w
  5620     06D4  1903               	btfsc	3,2
  5621     06D5  2ED7               	goto	u277_21
  5622     06D6  2ED8               	goto	u277_20
  5623     06D7                     u277_21:
  5624     06D7  2F0D               	goto	i1l2241
  5625     06D8                     u277_20:
  5626     06D8                     i1l2223:
  5627     06D8  3001               	movlw	1
  5628     06D9  00F4               	movwf	i1___awdiv@counter
  5629     06DA  2EE4               	goto	i1l2229
  5630     06DB                     i1l2225:
  5631     06DB  3001               	movlw	1
  5632     06DC                     u278_25:
  5633     06DC  1003               	clrc
  5634     06DD  0DF0               	rlf	i1___awdiv@divisor,f
  5635     06DE  0DF1               	rlf	i1___awdiv@divisor+1,f
  5636     06DF  3EFF               	addlw	-1
  5637     06E0  1D03               	skipz
  5638     06E1  2EDC               	goto	u278_25
  5639     06E2                     i1l2227:
  5640     06E2  3001               	movlw	1
  5641     06E3  07F4               	addwf	i1___awdiv@counter,f
  5642     06E4                     i1l2229:
  5643     06E4  1FF1               	btfss	i1___awdiv@divisor+1,7
  5644     06E5  2EE7               	goto	u279_21
  5645     06E6  2EE8               	goto	u279_20
  5646     06E7                     u279_21:
  5647     06E7  2EDB               	goto	i1l2225
  5648     06E8                     u279_20:
  5649     06E8                     i1l2231:
  5650     06E8  3001               	movlw	1
  5651     06E9                     u280_25:
  5652     06E9  1003               	clrc
  5653     06EA  0DF6               	rlf	i1___awdiv@quotient,f
  5654     06EB  0DF7               	rlf	i1___awdiv@quotient+1,f
  5655     06EC  3EFF               	addlw	-1
  5656     06ED  1D03               	skipz
  5657     06EE  2EE9               	goto	u280_25
  5658     06EF  0871               	movf	i1___awdiv@divisor+1,w
  5659     06F0  0273               	subwf	i1___awdiv@dividend+1,w
  5660     06F1  1D03               	skipz
  5661     06F2  2EF5               	goto	u281_25
  5662     06F3  0870               	movf	i1___awdiv@divisor,w
  5663     06F4  0272               	subwf	i1___awdiv@dividend,w
  5664     06F5                     u281_25:
  5665     06F5  1C03               	skipc
  5666     06F6  2EF8               	goto	u281_21
  5667     06F7  2EF9               	goto	u281_20
  5668     06F8                     u281_21:
  5669     06F8  2F00               	goto	i1l2237
  5670     06F9                     u281_20:
  5671     06F9                     i1l2233:
  5672     06F9  0870               	movf	i1___awdiv@divisor,w
  5673     06FA  02F2               	subwf	i1___awdiv@dividend,f
  5674     06FB  0871               	movf	i1___awdiv@divisor+1,w
  5675     06FC  1C03               	skipc
  5676     06FD  03F3               	decf	i1___awdiv@dividend+1,f
  5677     06FE  02F3               	subwf	i1___awdiv@dividend+1,f
  5678     06FF                     i1l2235:
  5679     06FF  1476               	bsf	i1___awdiv@quotient,0
  5680     0700                     i1l2237:
  5681     0700  3001               	movlw	1
  5682     0701                     u282_25:
  5683     0701  1003               	clrc
  5684     0702  0CF1               	rrf	i1___awdiv@divisor+1,f
  5685     0703  0CF0               	rrf	i1___awdiv@divisor,f
  5686     0704  3EFF               	addlw	-1
  5687     0705  1D03               	skipz
  5688     0706  2F01               	goto	u282_25
  5689     0707                     i1l2239:
  5690     0707  3001               	movlw	1
  5691     0708  02F4               	subwf	i1___awdiv@counter,f
  5692     0709  1D03               	btfss	3,2
  5693     070A  2F0C               	goto	u283_21
  5694     070B  2F0D               	goto	u283_20
  5695     070C                     u283_21:
  5696     070C  2EE8               	goto	i1l2231
  5697     070D                     u283_20:
  5698     070D                     i1l2241:
  5699     070D  0875               	movf	i1___awdiv@sign,w
  5700     070E  1903               	btfsc	3,2
  5701     070F  2F11               	goto	u284_21
  5702     0710  2F12               	goto	u284_20
  5703     0711                     u284_21:
  5704     0711  2F17               	goto	i1l2245
  5705     0712                     u284_20:
  5706     0712                     i1l2243:
  5707     0712  09F6               	comf	i1___awdiv@quotient,f
  5708     0713  09F7               	comf	i1___awdiv@quotient+1,f
  5709     0714  0AF6               	incf	i1___awdiv@quotient,f
  5710     0715  1903               	skipnz
  5711     0716  0AF7               	incf	i1___awdiv@quotient+1,f
  5712     0717                     i1l2245:
  5713     0717  0877               	movf	i1___awdiv@quotient+1,w
  5714     0718  00F1               	movwf	?i1___awdiv+1
  5715     0719  0876               	movf	i1___awdiv@quotient,w
  5716     071A  00F0               	movwf	?i1___awdiv
  5717     071B                     i1l311:
  5718     071B  0008               	return
  5719     071C                     __end_ofi1___awdiv:
  5720                           
  5721                           	psect	text29
  5722     0D24                     __ptext29:	
  5723 ;; *************** function i1_display *****************
  5724 ;; Defined at:
  5725 ;;		line 86 in file "newmain.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  RS              2    0[COMMON] int 
  5728 ;;  DC              2    2[COMMON] int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5740 ;;      Params:         4       0       0       0       0
  5741 ;;      Locals:         0       0       0       0       0
  5742 ;;      Temps:          2       0       0       0       0
  5743 ;;      Totals:         6       0       0       0       0
  5744 ;;Total ram usage:        6 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_ISR
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753     0D24                     i1_display:	
  5754                           ;psect for function i1_display
  5755                           
  5756     0D24                     i1l2569:	
  5757                           ;incstack = 0
  5758 ;; hardware stack exceeded
  5759                           ; Regs used in i1_display: [wreg]
  5760                           
  5761                           
  5762                           ;newmain.c: 86: void display(int RS, int DC);newmain.c: 87: {;newmain.c: 88:     RD0=RS;
  5763     0D24  1870               	btfsc	i1display@RS,0
  5764     0D25  2D27               	goto	u336_21
  5765     0D26  2D2B               	goto	u336_20
  5766     0D27                     u336_21:
  5767     0D27  1283               	bcf	3,5	;RP0=0, select bank0
  5768     0D28  1303               	bcf	3,6	;RP1=0, select bank0
  5769     0D29  1408               	bsf	8,0	;volatile
  5770     0D2A  2D2E               	goto	u337_24
  5771     0D2B                     u336_20:
  5772     0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  5773     0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  5774     0D2D  1008               	bcf	8,0	;volatile
  5775     0D2E                     u337_24:
  5776     0D2E                     i1l2571:
  5777                           
  5778                           ;newmain.c: 89:     PORTC=DC;
  5779     0D2E  0872               	movf	i1display@DC,w
  5780     0D2F  0087               	movwf	7	;volatile
  5781     0D30                     i1l2573:
  5782                           
  5783                           ;newmain.c: 90:     RD1=1;
  5784     0D30  1488               	bsf	8,1	;volatile
  5785                           
  5786                           ;newmain.c: 91:     _delay((unsigned long)((10)*(10000000/4000.0)));
  5787     0D31  3021               	movlw	33
  5788     0D32  00F5               	movwf	??i1_display+1
  5789     0D33  3076               	movlw	118
  5790     0D34  00F4               	movwf	??i1_display
  5791     0D35                     u351_27:
  5792     0D35  0BF4               	decfsz	??i1_display,f
  5793     0D36  2D35               	goto	u351_27
  5794     0D37  0BF5               	decfsz	??i1_display+1,f
  5795     0D38  2D35               	goto	u351_27
  5796     0D39  0000               	nop
  5797     0D3A                     i1l2575:
  5798                           
  5799                           ;newmain.c: 92:     RD1=0;
  5800     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  5801     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  5802     0D3C  1088               	bcf	8,1	;volatile
  5803                           
  5804                           ;newmain.c: 93:     _delay((unsigned long)((10)*(10000000/4000.0)));
  5805     0D3D  3021               	movlw	33
  5806     0D3E  00F5               	movwf	??i1_display+1
  5807     0D3F  3076               	movlw	118
  5808     0D40  00F4               	movwf	??i1_display
  5809     0D41                     u352_27:
  5810     0D41  0BF4               	decfsz	??i1_display,f
  5811     0D42  2D41               	goto	u352_27
  5812     0D43  0BF5               	decfsz	??i1_display+1,f
  5813     0D44  2D41               	goto	u352_27
  5814     0D45  0000               	nop
  5815     0D46                     i1l63:
  5816     0D46  0008               	return
  5817     0D47                     __end_ofi1_display:
  5818     0002                     ___latbits      equ	2
  5819     007E                     btemp           set	126	;btemp
  5820     007E                     wtemp0          set	126
  5821                           
  5822                           	psect	config
  5823                           
  5824                           ;Config register CONFIG @ 0x2007
  5825                           ;	Oscillator Selection bits
  5826                           ;	FOSC = HS, HS oscillator
  5827                           ;	Watchdog Timer Enable bit
  5828                           ;	WDTE = OFF, WDT disabled
  5829                           ;	Power-up Timer Enable bit
  5830                           ;	PWRTE = OFF, PWRT disabled
  5831                           ;	Brown-out Reset Enable bit
  5832                           ;	BOREN = OFF, BOR disabled
  5833                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5834                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5835                           ;	Data EEPROM Memory Code Protection bit
  5836                           ;	CPD = OFF, Data EEPROM code protection off
  5837                           ;	Flash Program Memory Write Enable bits
  5838                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5839                           ;	In-Circuit Debugger Mode bit
  5840                           ;	DEBUG = 0x1, unprogrammed default
  5841                           ;	Flash Program Memory Code Protection bit
  5842                           ;	CP = OFF, Code protection off
  5843     2007                     	org	8199
  5844     2007  3F3A               	dw	16186

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      74
    BANK1            80     66      68
    BANK3            96     47      83
    BANK2            96      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@br(BANK1[10]), main@arr(BANK3[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@br(BANK1[10]), main@arr(BANK3[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@br(BANK1[10]), main@arr(BANK3[10]), 

    i1sprintf@f$.$source	PTR const unsigned char  size(1) Largest target is 0

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    S522$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@br(BANK1[10]), main@arr(BANK3[10]), 

    S522$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@br(BANK1[10]), main@arr(BANK3[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_vfpfcnvrt->i1_read_prec_or_width
    i1_read_prec_or_width->i1___wmul
    i1_dtoa->i1_pad
    i1_pad->i1_fputc
    i1_fputs->i1_fputc
    i1_abs->i1___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_dtoa
    i1_dtoa->i1_pad
    i1_pad->i1_fputs

Critical Paths under _main in BANK1

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    5299
                                             24 BANK3     23    23      0
                            _display
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    17      5    4681
                                              4 BANK3     20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    4317
                                             65 BANK1      1     1      0
                                              0 BANK3      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    4030
                                             53 BANK1     12     8      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     408
                                             18 BANK1      5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     142
                                             12 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     8      4    2677
                                             41 BANK1     12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1088
                                             33 BANK1      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     487
                                             25 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     335
                                             12 BANK1     13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                             18 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                             12 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                             12 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4      56
                                             12 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 18    18      0    4847
                                             67 BANK0      6     6      0
                                              0 BANK1     12    12      0
                          i1_display
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (10) i1_sprintf                                          23    18      5    4582
                                             46 BANK0     21    16      5
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (11) i1_vfprintf                                          6     1      5    4257
                                             40 BANK0      6     1      5
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i1_vfpfcnvrt                                        14     9      5    4030
                                             27 BANK0     13     8      5
                             i1_dtoa
                            i1_fputc
               i1_read_prec_or_width
 ---------------------------------------------------------------------------------
 (13) i1_read_prec_or_width                                8     5      3     408
                                              6 COMMON     8     5      3
                           i1___wmul
 ---------------------------------------------------------------------------------
 (14) i1___wmul                                            6     2      4     142
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) i1_dtoa                                             12     8      4    2677
                                             15 BANK0     12     8      4
                          i1___awdiv
                          i1___awmod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (14) i1_pad                                               8     3      5    1088
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                            i1_fputc
                            i1_fputs
 ---------------------------------------------------------------------------------
 (15) i1_fputs                                             8     5      3     487
                                              0 BANK0      8     5      3
                            i1_fputc
 ---------------------------------------------------------------------------------
 (13) i1_fputc                                            13     9      4     335
                                              0 COMMON    13     9      4
                            i1_putch
 ---------------------------------------------------------------------------------
 (14) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i1_abs                                               4     2      2      96
                                              6 COMMON     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___awmod                                           6     2      4     439
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           8     4      4     451
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_display                                           6     2      4      74
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR (ROOT)
   i1_display
   i1_sprintf
     i1_vfprintf
       i1_vfpfcnvrt
         i1_dtoa
           i1___awdiv
           i1___awmod
           i1_abs
             i1___awmod (ARG)
           i1_pad
             i1_fputc
               i1_putch
             i1_fputs
               i1_fputc
         i1_fputc
         i1_read_prec_or_width
           i1___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     73      74     92.5%
BANK1               80     66      68     85.0%
BANK3               96     47      83     86.5%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     230      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 19 20:33:41 2024

                           pc 0002                            l52 0100                            l46 0069  
                          l63 0E0F                  ___awdiv@sign 00B1                            fsr 0004  
         __end_ofi1_vfpfcnvrt 0259           ___wmul@multiplicand 00AE              i1___wmul@product 0074  
__end_ofi1_read_prec_or_width 077C                           l311 06B8                           l160 0DB7  
                         l324 07D4                           l158 0D9F                           l621 0E3F  
                         l710 054D                           l721 0003                           l641 0F6C  
                         l644 0F94                           l653 034D                           l718 07FF  
                         l646 0FA7                           l662 03EB                           l670 0FFF  
                         l649 034F                           l691 0E72                           l685 04AD  
                         l677 0411                           l679 041B                           l698 0D23  
                         _GIE 005F                           _RD0 0040                           _RD1 0041  
                         _ISR 05E8                    i1_dtoa$601 0033                           _abs 0D11  
                         _pad 0F51                           fsr0 0004                           indf 0000  
                ___awmod@sign 00B1                          ?_ISR 0070                          ISR@i 00AA  
                        ?_abs 00B2                          l2101 066F                          l2111 0685  
                        l2103 0675                          l2031 04BC                          l2113 0696  
                        l2105 0678                          l2121 06AA                          l2033 04C3  
                        l2123 06AF                          l2115 069C                          l2107 067F  
                        l2131 077F                          l2035 04DB                          l2027 04AE  
                        l2125 06B4                          l2117 069D                          l2109 0681  
                        l2141 0793                          l2133 0783                          l2037 050D  
                        l2029 04B6                          l2061 07F2                          l2119 06A4  
                        l2151 07A9                          l2143 0799                          l2135 0788  
                        l2055 07D5                          l2311 0325                          l2071 0D91  
                        l2161 07CB                          l2153 07B3                          l2145 079C  
                        l2137 078A                          l2129 077C                          l2057 07DA  
                        l2321 0344                          l2313 0329                          l2081 0DB3  
                        l2073 0D95                          l2091 0660                          l2163 07D0  
                        l2155 07B9                          l2147 07A3                          l2139 078E  
                        l2059 07EA                          l2171 0F64                          l2331 0380  
                        l2323 0349                          l2315 0334                          l2075 0D99  
                        l2093 0662                          l2085 0654                          l2157 07C0  
                        l2149 07A5                          l2181 0F9A                          l2173 0F6A  
                        l2341 03B0                          l2333 0381                          l2325 0353  
                        l2317 0339                          l2077 0DA6                          l2095 0666  
                        l2087 0657                          l2159 07C6                          l2183 0D11  
                        l2175 0F6F                          l2167 0F51                          l2351 03D5  
                        l2343 03B5                          l2335 0387                          l2327 0357  
                        l2319 033F                          l2079 0DAD                          l2097 066B  
                        l2089 065B                          l2185 0D17                          l2177 0F7E  
                        l2169 0F57                          l2353 03DB                          l2345 03C2  
                        l2329 035F                          l2337 039A                          l2361 0FBB  
                        l2441 0401                          l2601 0057                          l2099 066D  
                        l2187 0D18                          l2179 0F86                          l2339 03A8  
                        l2347 03C8                          l2371 0FFB                          l2363 0FBF  
                        l2451 041E                          l2443 0407                          l2611 0090  
                        l2603 005B                          l2349 03CF                          l2365 0FCE  
                        l2357 0FA8                          l2461 0446                          l2453 042B  
                        l2445 040D                          l2437 03EC                          l2541 0E6E  
                        l2621 00D7                          l2613 009F                          l2605 0066  
                        l1911 0DF5                          l2367 0FE5                          l2359 0FAC  
                        l2471 0478                          l2463 044D                          l2455 0430  
                        l2447 0414                          l2439 03FD                          l2535 0E40  
                        l2631 011A                          l2623 00E0                          l2615 00AD  
                        l2607 006D                          l1913 0E01                          l2369 0FEA  
                        l2473 047E                          l2465 0452                          l2457 043F  
                        l2481 0494                          l2537 0E47                          l2561 0E1A  
                        l2641 0166                          l2633 0127                          l2625 00EE  
                        l2617 00B2                          l2609 0083                          l1907 0DE3  
                        l2467 045E                          l2459 0443                          l2539 0E60  
                        l2563 0E1C                          l2555 0E10                          l2643 016E  
                        l2635 0136                          l2627 00FD                          l2619 00CF  
                        l1909 0DEF                          l2477 048C                          l2469 046A  
                        l2565 0E29                          l2557 0E14                          l2645 0177  
                        l2637 0144                          l2629 0104                          l2559 0E18  
                        l2639 0149                          l2591 0031                          l2593 0032  
                        l2595 0033                          l2597 003B                          l2589 0029  
                        ?_pad 00C1                          l2599 0049                          STR_1 0806  
                        STR_2 0806                          STR_3 0806                          u3000 032F  
                        u3010 0339                          u3011 0338                          u2204 0DEF  
                        u3020 0344                          u3100 0FFB                          u3021 0343  
                        u3101 0FFA                          u2310 04B6                          u3030 03A8  
                        u2311 04B5                          u3031 03A7                          u2320 04BC  
                        u3040 03B0                          u2321 04BB                          u3041 03AF  
                        u2330 04DB                          u2410 07FF                          u3050 03B5  
                        u2331 04DA                          u2411 07FE                          u3051 03B4  
                        u3035 03A4                          u2340 050D                          u3060 03C2  
                        u2341 050C                          u3061 03C1                          u2190 0DEC  
                        u2510 0685                          u2350 0530                          u3070 03C8  
                        u2430 0D99                          u3230 03FD                          u2191 0DE8  
                        u2511 0684                          u3071 03C7                          u2431 0D98  
                        u3231 03FC                          u3080 03CF                          u3240 0430  
                        u3400 00E0                          u2505 0679                          u2345 0509  
                        u3081 03CE                          u3065 03BE                          u3241 042F  
                        u3401 00DF                          u2530 0696                          u2610 07A9  
                        u3090 0FBB                          u3250 0443                          u3330 0E6E  
                        u3410 0104                          u2531 0695                          u2611 07A8  
                        u3091 0FBA                          u3251 0442                          u3331 0E6D  
                        u3411 0103                          u2620 07B3                          u2700 0D17  
                        u2460 0DB3                          u3260 045E                          u3420 0177  
                        u2525 0686                          u2621 07B2                          u2605 079D  
                        u2701 0D16                          u2461 0DB2                          u2445 0DA0  
                        u3261 045D                          u3421 0176                          u2550 06AA  
                        u2470 065B                          u3270 046A                          u3350 0E35  
                        u2551 06A9                          u2535 0692                          u2471 065A  
                        u2455 0DA7                          u3271 0469                          u2560 06AF  
                        u2480 0666                          u2640 07C6                          u2561 06AE  
                        u2545 069E                          u2481 0665                          u2641 07C5  
                        u2625 07AF                          u2490 0675                          u2650 07CB  
                        u2570 0783                          u3507 0E0A                          u2491 0674  
                        u2651 07CA                          u2635 07BA                          u2571 0782  
                        u2580 078E                          u2660 0F57                          u2581 078D  
                        u2661 0F56                          u2590 0799                          u2670 0F6A  
                        u3390 006D                          u2591 0798                          u2671 0F69  
                        u3391 006C                          u2680 0F94                          u2681 0F93  
                        u3457 0061                          u2690 0F9A                          u2691 0F99  
                        u3467 00E8                          u2685 0F90                          u3477 00F8  
                        _INTE 005C                          _INTF 0059                          u3487 017F  
                        u3497 0DFC                          u2990 032E                          i1l63 0D46  
                        u2991 032C                          i1l72 0647                          abs@a 00B2  
                        _dbuf 01C3                   main@low_bit 01B5                          _main 0029  
                        _dtoa 0325                          _prec 01BF                          pad@i 00C7  
                        pad@p 00C4                          btemp 007E                          start 0012  
             __end_ofi1_fputc 05E8               __end_ofi1_fputs 0DE3               __end_ofi1_putch 0CF8  
                  i1_vfprintf 0D6C                         ??_ISR 0063                         ??_abs 00B4  
                       ??_pad 00C6                         ISR@br 00A0                 i1vfpfcnvrt@ap 003E  
                main@high_bit 01B7                 i1vfpfcnvrt@cp 0047                 i1vfpfcnvrt@fp 003B  
                       ?_main 0070                         ?_dtoa 00C9                i1___awdiv@sign 0075  
             __end_of___awdiv 06B9               __end_of___awmod 07D5               ___awdiv@divisor 00AC  
                       i1l311 071B                         i1l160 0D6B                         i1l324 0F50  
                       i1l158 0D53                         i1l621 0EA6                         i1l710 05E7  
                       i1l721 0CF7                         i1l641 0EC0                         i1l644 0EE8  
                       i1l653 0289                         i1l718 0DE2                         i1l646 0EF9  
                       i1l662 0324                         i1l670 077B                         i1l649 028B  
                       i1l691 0D90                         i1l685 0258                         i1l677 01B0  
                       i1l679 01B6                         i1l698 0D10               ___awdiv@counter 00B0  
                vfpfcnvrt@fmt 00D7                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _TRISC 0087                         _TRISD 0088  
                       i1_abs 0D00                         i1_pad 0EA7               __end_of_display 0E10  
              i1___awmod@sign 0075                         _flags 0069                         _count 01C1  
         read_prec_or_width@c 00B4           read_prec_or_width@n 00B5                         _fputc 04AE  
                       _fputs 07D5                         pad@fp 00C1                         _width 00E2  
                       _putch 0003                         main@i 01BB                         dtoa@d 00CB  
                       dtoa@i 00D3                         dtoa@p 00CF                         dtoa@s 00D2  
                       dtoa@w 00D0                         pclath 000A              __end_ofi1___wmul 0D6C  
                       status 0003           i1___wmul@multiplier 0070                         wtemp0 007E  
             __end_of_sprintf 0E40                   i1_vfpfcnvrt 0189               __initialization 0015  
                __end_of_main 0189                  __end_of_dtoa 03EC                 i1vfprintf@fmt 004A  
      i1read_prec_or_width@ap 0077                   i1display@DC 0072                   i1display@RS 0070  
                  i1sprintf@f 0058                    i1sprintf@s 004E                        ??_main 01A8  
                      ??_dtoa 00CD                        ?i1_abs 0076                        ?i1_pad 0028  
  __end_of_read_prec_or_width 1000                i1vfpfcnvrt@fmt 003D                        _ADCON0 001F  
                      _ADCON1 009F                        ?_fputc 00AC                        ?_fputs 00B9  
                      _ADRESH 001E                        _ADRESL 009E              ___awdiv@dividend 00AE  
                      ?_putch 0070                        i1l2041 054E                        i1l2201 0D67  
                      i1l2211 06C3                        i1l2051 05AB                        i1l2043 0554  
                      i1l2221 06D2                        i1l2213 06C5                        i1l2205 06B9  
                      i1l2045 055A                        i1l2301 0EEE                        i1l2231 06E8  
                      i1l2223 06D8                        i1l2215 06C9                        i1l2207 06BA  
                      i1l2303 0D00                        i1l2047 0561                        i1l2063 0DB8  
                      i1l2233 06F9                        i1l2225 06DB                        i1l2241 070D  
                      i1l2217 06CE                        i1l2209 06BE                        i1l2305 0D04  
                      i1l2049 0579                        i1l2065 0DBD                        i1l2401 02D2  
                      i1l2243 0712                        i1l2235 06FF                        i1l2227 06E2  
                      i1l2219 06D0                        i1l2251 0EFB                        i1l2307 0D05  
                      i1l2067 0DCD                        i1l2403 02E1                        i1l2411 0301  
                      i1l2245 0717                        i1l2237 0700                        i1l2229 06E4  
                      i1l2261 0F0F                        i1l2253 0EFF                        i1l2069 0DD5  
                      i1l2413 0308                        i1l2405 02E9                        i1l2421 071C  
                      i1l2501 01B9                        i1l2239 0707                        i1l2271 0F25  
                      i1l2263 0F15                        i1l2255 0F04                        i1l2415 030E  
                      i1l2407 02EE                        i1l2191 0D47                        i1l2431 0766  
                      i1l2423 071E                        i1l2511 01E3                        i1l2503 01C6  
                      i1l2281 0F47                        i1l2273 0F2F                        i1l2265 0F18  
                      i1l2257 0F06                        i1l2249 0EFA                        i1l2417 0314  
                      i1l2409 02FB                        i1l2193 0D49                        i1l2433 0777  
                      i1l2425 072D                        i1l2521 0229                        i1l2513 01EA  
                      i1l2505 01CB                        i1l2283 0F4C                        i1l2275 0F35  
                      i1l2267 0F1F                        i1l2259 0F0A                        i1l2291 0EB8  
                      i1l2195 0D4D                        i1l2427 074C                        i1l2515 01F1  
                      i1l2507 01DC                        i1l2277 0F3C                        i1l2269 0F21  
                      i1l2293 0EBE                        i1l2381 0275                        i1l2197 0D5A  
                      i1l2429 0761                        i1l2525 0237                        i1l2517 01FD  
                      i1l2509 01E0                        i1l2279 0F42                        i1l2295 0EC3  
                      i1l2287 0EA7                        i1l2391 0293                        i1l2383 027B  
                      i1l2375 0259                        i1l2199 0D61                        i1l2519 0209  
                      i1l2551 0D8E                        i1l2297 0ED2                        i1l2289 0EAD  
                      i1l2393 0299                        i1l2385 0280                        i1l2377 025D  
                      i1l2529 023F                        i1l2545 0D6C                        i1l2571 0D2E  
                      i1l2299 0EDA                        i1l2395 02B6                        i1l2387 0285  
                      i1l2379 0270                        i1l2491 019E                        i1l2547 0D71  
                      i1l2651 05F6                        i1l2573 0D30                        i1l2397 02B9  
                      i1l2389 028F                        i1l2493 01A6                        i1l2549 0D80  
                      i1l2581 0E7F                        i1l2661 0636                        i1l2653 05F7  
                      i1l2575 0D3A                        i1l2399 02BF                        i1l2495 01AC  
                      i1l2487 0189                        i1l2583 0E81                        i1l2663 063E  
                      i1l2655 0610                        i1l2647 05E8                        i1l2569 0D24  
                      i1l2497 01B1                        i1l2489 019A                        i1l2585 0E90  
                      i1l2577 0E73                        i1l2657 061C                        i1l2649 05EC  
                      i1l2579 0E7D                        i1l2659 0621                        u311_20 0262  
                      u311_21 0260                        u240_20 05CC                        u320_20 0308  
                      u312_20 0263                        u320_21 0307                     ??i1_fputc 0074  
                      u313_20 0275                        u321_20 072D                        u313_21 0274  
                      u321_21 072C                        u242_20 0DE2                        u314_20 0280  
                      u322_20 0777                        u330_20 01E0                        u242_21 0DE1  
                      u314_21 027F                        u322_21 0776                        u330_21 01DF  
                   ??i1_fputs 0023                        u315_20 02E1                        u331_20 01FD  
                      u315_21 02E0                        u331_21 01FC                        u315_25 02DD  
                      u236_20 0554                        u316_20 02E9                        u332_20 0209  
                      u236_21 0553                        u316_21 02E8                        u332_21 0208  
                      u237_20 055A                        u317_20 02EE                        u237_21 0559  
                      u317_21 02ED                        u238_20 0579                        u318_20 02FB  
                      u334_20 0D8E                        u238_21 0578                        u318_21 02FA  
                      u334_21 0D8D                        u318_25 02F7                        u239_20 05AB  
                      u319_20 0301                        u271_20 0D4D                        u343_20 05EC  
                      u239_21 05AA                        u319_21 0300                        u271_21 0D4C  
                      u343_21 05EB                        u239_25 05A7                        u351_27 0D35  
                      u336_20 0D2B                        u328_20 019A                        u344_20 0647  
                      u336_21 0D27                        u328_21 0199                        u344_21 0646  
                      u280_25 06E9                        u272_25 0D54                        u352_27 0D41  
                      u281_20 06F9                        u329_20 01CB                        u281_21 06F8  
                      u329_21 01CA                        u337_24 0D2E                        u281_25 06F5  
                      u273_25 0D5B                        u290_20 0F2F                        u274_20 0D67  
                      u338_20 0E9C                        u290_21 0F2E                        u274_21 0D66  
                      u282_25 0701                        u290_25 0F2B                        u283_20 070D  
                      u275_20 06BE                        u283_21 070C                        u275_21 06BD  
                      u291_25 0F36                        u284_20 0712                        u276_20 06C9  
                      u292_20 0F42                        u284_21 0711                        u276_21 06C8  
                      u292_21 0F41                        u277_20 06D8                        u293_20 0F47  
                      u285_20 0EFF                        u277_21 06D7                        u293_21 0F46  
                      u285_21 0EFE                        u286_20 0F0A                        u294_20 0EAD  
                      u286_21 0F09                        u294_21 0EAC                        u278_25 06DC  
                      u279_20 06E8                        u287_20 0F15                        u295_20 0EBE  
                      u279_21 06E7                        u287_21 0F14                        u295_21 0EBD  
                      u296_20 0EE8                        u296_21 0EE7                        u288_25 0F19  
                      u296_25 0EE4                        u289_20 0F25                        u297_20 0EEE  
                      u289_21 0F24                        u297_21 0EED                        u298_20 0D04  
                      u298_21 0D03                     ??i1_putch 0070                 vfpfcnvrt@done 00DF  
        i1_read_prec_or_width 071C                        i1abs@a 0076                        i1_dtoa 0259  
                      i1pad@i 002D                        i1pad@p 002B                  vfprintf@cfmt 00E1  
                 ?i1_vfprintf 0048                        ___wmul 0D91                     ??___awdiv 00B0  
                   ??___awmod 00B0          read_prec_or_width@ap 00B3              ___awdiv@quotient 00B2  
             ___awmod@divisor 00AC               ___awmod@counter 00B0                        pad@buf 00C3  
                      dtoa@fp 00C9                     ??_display 00B0             __end_ofi1___awdiv 071C  
           __end_ofi1___awmod 0F51                        fputc@c 00AC                        fputs@c 00BE  
                      fputs@i 00BF                        fputs@s 00B9                        saved_w 007E  
                      putch@c 0070              __end_of_vfprintf 0E73             __end_ofi1_display 0D47  
                   ??_sprintf 0199       __end_of__initialization 0025         ?i1_read_prec_or_width 0076  
           __end_ofi1_sprintf 0EA7                 __end_ofi1_abs 0D11                 __end_ofi1_pad 0EFA  
              __pcstackCOMMON 0070                i1vfprintf@cfmt 004D                 __end_of_fputc 054E  
               __end_of_fputs 0800                 __end_of_putch 0004       i1read_prec_or_width@fmt 0076  
                   ?i1___wmul 0070                       ??i1_abs 0078                       ??i1_pad 007D  
                 i1sprintf@ap 0056                       ??_fputc 00B0                       ??_fputs 00BC  
                     ??_putch 00AC                    __pbssBANK0 0069                    __pbssBANK1 00E2  
                  __pbssBANK3 01BF                       ?i1_dtoa 002F               i1vfpfcnvrt@done 0046  
                  __pmaintext 0029                       ?___wmul 00AC                    __pintentry 0004  
                  ??i1___wmul 0074            i1___awdiv@dividend 0072                    __stringtab 0800  
      ??i1_read_prec_or_width 0079                       i1_fputc 054E                       i1_fputs 0DB8  
                     i1pad@fp 0028                       i1_putch 0CF7                       i1dtoa@d 0031  
                     i1dtoa@i 0039                       i1dtoa@p 0035                       i1dtoa@s 0038  
                     i1dtoa@w 0036                  ?i1_vfpfcnvrt 003B            i1___awdiv@quotient 0076  
                     ___awdiv 0654                       ___awmod 077C                     ?_vfprintf 0190  
                     __ptext1 0E10                       __ptext2 0E40                       __ptext3 03EC  
                     __ptext4 0FA8                       __ptext5 0D91                       __ptext6 0325  
                     __ptext7 0F51                       __ptext8 07D5                       __ptext9 04AE  
                     _display 0DE3         read_prec_or_width@fmt 00B2              ___awmod@dividend 00AE  
                     main@arr 01AB                       _sprintf 0E10                       clrloop0 0CF9  
        end_of_initialization 0025                       fputc@fp 00AE                       fputs@fp 00BA  
          _read_prec_or_width 0FA8                  ??i1_vfprintf 007E             __end_of_vfpfcnvrt 04AE  
         ?_read_prec_or_width 00B2              vfpfcnvrt@convarg 00DB                    ??_vfprintf 00E1  
       i1___wmul@multiplicand 0072                     i1___awdiv 06B9                     i1___awmod 0EFA  
        ??_read_prec_or_width 00B4            __end_ofi1_vfprintf 0D91                     i1_display 0D24  
              __end_ofi1_dtoa 0325                     i1_sprintf 0E73                   vfpfcnvrt@ap 00D8  
                 vfpfcnvrt@cp 00E0                   vfpfcnvrt@fp 00D5                __end_of___wmul 0DB8  
                   i1fputc@fp 0072                     i1fputs@fp 0021           start_initialization 0015  
                 __end_of_ISR 0654                   __end_of_abs 0D24                  i1vfprintf@ap 004B  
                 __end_of_pad 0FA8                  i1vfprintf@fp 0048                    ?i1___awdiv 0070  
                  ?i1___awmod 0070         i1read_prec_or_width@c 007B         i1read_prec_or_width@n 007C  
                  ?i1_display 0070                      ??i1_dtoa 007E                  i1sprintf@fmt 0050  
                 vfprintf@fmt 0192                    ?i1_sprintf 004E                      ??___wmul 00B0  
          i1___awmod@dividend 0072                     ___latbits 0002                 __pcstackBANK0 0020  
               __pcstackBANK1 00A0                 __pcstackBANK3 0190                      ?i1_fputc 0070  
                    ?i1_fputs 0020                      ?i1_putch 0070            i1vfpfcnvrt@convarg 0042  
                    ?___awdiv 00AC                      ?___awmod 00AC             i1___awdiv@divisor 0070  
           i1___awdiv@counter 0074                     __pstrings 0800                      ?_display 00AC  
                 ??i1___awdiv 0074                   ??i1___awmod 0074                      ?_sprintf 0194  
                 ??i1_display 0074             interrupt_function 0004                ___wmul@product 00B0  
                   clear_ram0 0CF8                      _GO_nDONE 00FA                   ??i1_sprintf 0053  
                   _vfpfcnvrt 03EC                   __stringbase 0805             ___wmul@multiplier 00AC  
                    i1___wmul 0D47                     display@DC 00AE                     display@RS 00AC  
                    i1pad@buf 002A                      i1dtoa@fp 002F                      i1fputc@c 0070  
                    i1fputs@c 0025                      i1fputs@i 0026                      i1fputs@s 0020  
                  vfprintf@ap 0193                    vfprintf@fp 0190             i1___awmod@divisor 0070  
           i1___awmod@counter 0074                    ?_vfpfcnvrt 00D5            __end_of__stringtab 0806  
                  sprintf@fmt 0196                      _dtoa$601 00CD                      __ptext10 0003  
                    __ptext11 0D11                      __ptext20 0D47                      __ptext12 077C  
                    __ptext21 0259                      __ptext13 0654                      __ptext22 0EA7  
                    __ptext14 0DE3                      __ptext23 0DB8                      __ptext15 05E8  
                    __ptext24 054E                      __ptext16 0E73                      __ptext25 0CF7  
                    __ptext17 0D6C                      __ptext26 0D00                      __ptext18 0189  
                    __ptext27 0EFA                      __ptext19 071C                      __ptext28 06B9  
                    __ptext29 0D24                      main@i_69 01BD                      _vfprintf 0E40  
                    main@bits 01B9                      intlevel1 0000                     sprintf@ap 019C  
                   stringcode 0800                 ??i1_vfpfcnvrt 0040                   ??_vfpfcnvrt 00D9  
                  _OPTION_REG 0081                      sprintf@f 019D                      sprintf@s 0194  
                    stringdir 0800                      stringtab 0800  
