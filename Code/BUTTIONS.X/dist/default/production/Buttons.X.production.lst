

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 03 20:05:57 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataBANK0
   178     077D                     __pidataBANK0:
   179                           
   180                           ;initializer for main@F1007
   181     077D  343F               	retlw	63
   182     077E  3400               	retlw	0
   183     077F  3406               	retlw	6
   184     0780  3400               	retlw	0
   185     0781  345B               	retlw	91
   186     0782  3400               	retlw	0
   187     0783  344F               	retlw	79
   188     0784  3400               	retlw	0
   189     0785  3466               	retlw	102
   190     0786  3400               	retlw	0
   191     0787  346D               	retlw	109
   192     0788  3400               	retlw	0
   193     0789  347D               	retlw	125
   194     078A  3400               	retlw	0
   195     078B  3407               	retlw	7
   196     078C  3400               	retlw	0
   197     078D  347F               	retlw	127
   198     078E  3400               	retlw	0
   199     078F  346F               	retlw	111
   200     0790  3400               	retlw	0
   201     0007                     _PORTC          set	7
   202     0031                     _RB1            set	49
   203     0030                     _RB0            set	48
   204     0087                     _TRISC          set	135
   205     0431                     _TRISB1         set	1073
   206     0430                     _TRISB0         set	1072
   207     040F                     _nRBPU          set	1039
   208                           
   209                           	psect	cinit
   210     07EE                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07EE                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216     07EE  1383               	bcf	3,7	;select IRP bank0
   217     07EF  304A               	movlw	low (__pdataBANK0+20)
   218     07F0  00FD               	movwf	btemp+-1
   219     07F1  3007               	movlw	high __pidataBANK0
   220     07F2  00FE               	movwf	btemp
   221     07F3  307D               	movlw	low __pidataBANK0
   222     07F4  00FF               	movwf	btemp+1
   223     07F5  3036               	movlw	low __pdataBANK0
   224     07F6  0084               	movwf	4
   225     07F7  120A  118A  276E  120A  118A  	fcall	init_ram0
   226     07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229     07FC                     __end_of__initialization:
   230     07FC  0183               	clrf	3
   231     07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	dataBANK0
   234     0036                     __pdataBANK0:
   235     0036                     main@F1007:
   236     0036                     	ds	20
   237                           
   238                           	psect	inittext
   239     076A                     init_fetch0:	
   240                           ;	Called with low address in FSR and high address in W
   241                           
   242     076A  087E               	movf	btemp,w
   243     076B  008A               	movwf	10
   244     076C  087F               	movf	btemp+1,w
   245     076D  0082               	movwf	2
   246     076E                     init_ram0:	
   247                           ;Called with:
   248                           ;	high address of idata address in btemp 
   249                           ;	low address of idata address in btemp+1 
   250                           ;	low address of data in FSR
   251                           ;	high address + 1 of data in btemp-1
   252                           
   253     076E  120A  118A  276A  120A  118A  	fcall	init_fetch0
   254     0773  0080               	movwf	0
   255     0774  0A84               	incf	4,f
   256     0775  0804               	movf	4,w
   257     0776  067D               	xorwf	btemp+-1,w
   258     0777  1903               	btfsc	3,2
   259     0778  3400               	retlw	0
   260     0779  0AFF               	incf	btemp+1,f
   261     077A  1903               	btfsc	3,2
   262     077B  0AFE               	incf	btemp,f
   263     077C  2F6E               	goto	init_ram0
   264                           
   265                           	psect	cstackCOMMON
   266     0070                     __pcstackCOMMON:
   267     0070                     ?_main:
   268     0070                     ??_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273     0070                     	ds	4
   274                           
   275                           	psect	cstackBANK0
   276     0020                     __pcstackBANK0:
   277     0020                     main@led:
   278                           
   279                           ; 20 bytes @ 0x0
   280     0020                     	ds	20
   281     0034                     main@count:
   282                           
   283                           ; 2 bytes @ 0x14
   284     0034                     	ds	2
   285                           
   286                           	psect	maintext
   287     0791                     __pmaintext:	
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 23 in file "newmain.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  led            20    0[BANK0 ] int [10]
   298 ;;  count           2   20[BANK0 ] int 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0      22       0       0       0
   310 ;;      Temps:          4       0       0       0       0
   311 ;;      Totals:         4      22       0       0       0
   312 ;;Total ram usage:       26 bytes
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320     0791                     _main:	
   321                           ;psect for function _main
   322                           
   323     0791                     l609:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   326                           
   327                           
   328                           ;newmain.c: 25:     int led[]={0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6
      +                          F};
   329     0791  3036               	movlw	main@F1007& (0+255)
   330     0792  0084               	movwf	4
   331     0793  3020               	movlw	low main@led
   332     0794  00F0               	movwf	??_main
   333     0795  3014               	movlw	20
   334     0796  00F1               	movwf	??_main+1
   335     0797                     u70:
   336     0797  1383               	bcf	3,7	;select IRP bank0
   337     0798  0800               	movf	0,w
   338     0799  00F2               	movwf	??_main+2
   339     079A  0A04               	incf	4,w
   340     079B  00F3               	movwf	??_main+3
   341     079C  0870               	movf	??_main,w
   342     079D  0084               	movwf	4
   343     079E  0872               	movf	??_main+2,w
   344     079F  0080               	movwf	0
   345     07A0  0A04               	incf	4,w
   346     07A1  00F0               	movwf	??_main
   347     07A2  0873               	movf	??_main+3,w
   348     07A3  0084               	movwf	4
   349     07A4  0BF1               	decfsz	??_main+1,f
   350     07A5  2F97               	goto	u70
   351     07A6                     l611:
   352                           
   353                           ;newmain.c: 26:     int count=0;
   354     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   355     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   356     07A8  01B4               	clrf	main@count
   357     07A9  01B5               	clrf	main@count+1
   358     07AA                     l613:
   359                           
   360                           ;newmain.c: 27:     nRBPU=0;
   361     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   362     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   363     07AC  1381               	bcf	1,7	;volatile
   364     07AD                     l615:
   365                           
   366                           ;newmain.c: 28:     TRISB0=1;
   367     07AD  1406               	bsf	6,0	;volatile
   368     07AE                     l617:
   369                           
   370                           ;newmain.c: 29:     TRISB1=1;
   371     07AE  1486               	bsf	6,1	;volatile
   372     07AF                     l619:
   373                           
   374                           ;newmain.c: 30:     TRISC=0;
   375     07AF  0187               	clrf	7	;volatile
   376     07B0                     l621:
   377                           
   378                           ;newmain.c: 31:     PORTC=0;
   379     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   380     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   381     07B2  0187               	clrf	7	;volatile
   382     07B3                     l623:
   383                           
   384                           ;newmain.c: 34:     {;newmain.c: 35:         if(RB0==0)
   385     07B3  1806               	btfsc	6,0	;volatile
   386     07B4  2FB6               	goto	u81
   387     07B5  2FB7               	goto	u80
   388     07B6                     u81:
   389     07B6  2FC1               	goto	l629
   390     07B7                     u80:
   391     07B7                     l23:	
   392                           ;newmain.c: 38:             {;newmain.c: 40:             }
   393                           
   394                           
   395                           ;newmain.c: 37:             while(RB0==0)
   396     07B7  1C06               	btfss	6,0	;volatile
   397     07B8  2FBA               	goto	u91
   398     07B9  2FBB               	goto	u90
   399     07BA                     u91:
   400     07BA  2FB7               	goto	l23
   401     07BB                     u90:
   402     07BB                     l627:
   403                           
   404                           ;newmain.c: 41:             count++;
   405     07BB  3001               	movlw	1
   406     07BC  07B4               	addwf	main@count,f
   407     07BD  1803               	skipnc
   408     07BE  0AB5               	incf	main@count+1,f
   409     07BF  3000               	movlw	0
   410     07C0  07B5               	addwf	main@count+1,f
   411     07C1                     l629:
   412                           
   413                           ;newmain.c: 43:         if(RB1==0)
   414     07C1  1886               	btfsc	6,1	;volatile
   415     07C2  2FC4               	goto	u101
   416     07C3  2FC5               	goto	u100
   417     07C4                     u101:
   418     07C4  2FCF               	goto	l635
   419     07C5                     u100:
   420     07C5                     l27:	
   421                           ;newmain.c: 47:             {;newmain.c: 49:             }
   422                           
   423                           
   424                           ;newmain.c: 46:             while(RB1==0)
   425     07C5  1C86               	btfss	6,1	;volatile
   426     07C6  2FC8               	goto	u111
   427     07C7  2FC9               	goto	u110
   428     07C8                     u111:
   429     07C8  2FC5               	goto	l27
   430     07C9                     u110:
   431     07C9                     l633:
   432                           
   433                           ;newmain.c: 50:             count--;
   434     07C9  30FF               	movlw	255
   435     07CA  07B4               	addwf	main@count,f
   436     07CB  1803               	skipnc
   437     07CC  0AB5               	incf	main@count+1,f
   438     07CD  30FF               	movlw	255
   439     07CE  07B5               	addwf	main@count+1,f
   440     07CF                     l635:
   441                           
   442                           ;newmain.c: 52:         if(count>9)
   443     07CF  0835               	movf	main@count+1,w
   444     07D0  3A80               	xorlw	128
   445     07D1  00FF               	movwf	btemp+1
   446     07D2  3080               	movlw	128
   447     07D3  027F               	subwf	btemp+1,w
   448     07D4  1D03               	skipz
   449     07D5  2FD8               	goto	u125
   450     07D6  300A               	movlw	10
   451     07D7  0234               	subwf	main@count,w
   452     07D8                     u125:
   453     07D8  1C03               	skipc
   454     07D9  2FDB               	goto	u121
   455     07DA  2FDC               	goto	u120
   456     07DB                     u121:
   457     07DB  2FE0               	goto	l639
   458     07DC                     u120:
   459     07DC                     l637:
   460                           
   461                           ;newmain.c: 53:             count=0;
   462     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   463     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   464     07DE  01B4               	clrf	main@count
   465     07DF  01B5               	clrf	main@count+1
   466     07E0                     l639:
   467                           
   468                           ;newmain.c: 54:         PORTC=led[count];
   469     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   470     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   471     07E2  0834               	movf	main@count,w
   472     07E3  00F0               	movwf	??_main
   473     07E4  0770               	addwf	??_main,w
   474     07E5  3E20               	addlw	(low (main@led| 0))& (0+255)
   475     07E6  0084               	movwf	4
   476     07E7  1383               	bcf	3,7	;select IRP bank0
   477     07E8  0800               	movf	0,w
   478     07E9  0087               	movwf	7	;volatile
   479     07EA  2FB3               	goto	l623
   480     07EB  120A  118A  2800   	ljmp	start
   481     07EE                     __end_of_main:
   482     0002                     ___latbits      equ	2
   483     007E                     btemp           set	126	;btemp
   484     007E                     wtemp0          set	126
   485                           
   486                           	psect	config
   487                           
   488                           ;Config register CONFIG @ 0x2007
   489                           ;	Oscillator Selection bits
   490                           ;	FOSC = HS, HS oscillator
   491                           ;	Watchdog Timer Enable bit
   492                           ;	WDTE = OFF, WDT disabled
   493                           ;	Power-up Timer Enable bit
   494                           ;	PWRTE = OFF, PWRT disabled
   495                           ;	Brown-out Reset Enable bit
   496                           ;	BOREN = OFF, BOR disabled
   497                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   498                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   499                           ;	Data EEPROM Memory Code Protection bit
   500                           ;	CPD = OFF, Data EEPROM code protection off
   501                           ;	Flash Program Memory Write Enable bits
   502                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   503                           ;	In-Circuit Debugger Mode bit
   504                           ;	DEBUG = 0x1, unprogrammed default
   505                           ;	Flash Program Memory Code Protection bit
   506                           ;	CP = OFF, Code protection off
   507     2007                     	org	8199
   508     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     22      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0      72
                                              0 COMMON     4     4      0
                                              0 BANK0     22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      42     52.5%
BITBANK0            80      0       0      0.0%
COMMON              14      4       4     28.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      46      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 03 20:05:57 2024

                      pc 0002                       l23 07B7                       l27 07C5  
                     u70 0797                       u80 07B7                       u81 07B6  
                     u90 07BB                       u91 07BA                       fsr 0004  
                    l611 07A6                      l621 07B0                      l613 07AA  
                    l623 07B3                      l615 07AD                      l633 07C9  
                    l617 07AE                      l609 0791                      l635 07CF  
                    l627 07BB                      l619 07AF                      l637 07DC  
                    l629 07C1                      l639 07E0                      _RB0 0030  
                    _RB1 0031                      u100 07C5                      u101 07C4  
                    u110 07C9                      u111 07C8                      u120 07DC  
                    u121 07DB                      u125 07D8                      fsr0 0004  
                    indf 0000                     _main 0791                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTC 0007  
                  _TRISC 0087                    _nRBPU 040F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070                   _TRISB0 0430  
                 _TRISB1 0431  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 077D               __pmaintext 0791                  main@led 0020  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 076A  
            __pdataBANK0 0036                ___latbits 0002            __pcstackBANK0 0020  
              main@F1007 0036                main@count 0034                 init_ram0 076E  
