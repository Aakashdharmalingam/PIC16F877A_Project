

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Dec 21 20:58:07 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,space=0,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61     0000                     
    62                           ; Generated 12/10/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F877A Definitions
    94                           ; 
    95                           ; SFR Addresses
    96     0004                     fsr             equ	4
    97     0004                     fsr0            equ	4
    98     0000                     indf            equ	0
    99     0000                     indf0           equ	0
   100     0002                     pc              equ	2
   101     0002                     pcl             equ	2
   102     000A                     pclath          equ	10
   103     0003                     status          equ	3
   104     0000                     INDF            equ	0	;# 
   105     0001                     TMR0            equ	1	;# 
   106     0002                     PCL             equ	2	;# 
   107     0003                     STATUS          equ	3	;# 
   108     0004                     FSR             equ	4	;# 
   109     0005                     PORTA           equ	5	;# 
   110     0006                     PORTB           equ	6	;# 
   111     0007                     PORTC           equ	7	;# 
   112     0008                     PORTD           equ	8	;# 
   113     0009                     PORTE           equ	9	;# 
   114     000A                     PCLATH          equ	10	;# 
   115     000B                     INTCON          equ	11	;# 
   116     000C                     PIR1            equ	12	;# 
   117     000D                     PIR2            equ	13	;# 
   118     000E                     TMR1            equ	14	;# 
   119     000E                     TMR1L           equ	14	;# 
   120     000F                     TMR1H           equ	15	;# 
   121     0010                     T1CON           equ	16	;# 
   122     0011                     TMR2            equ	17	;# 
   123     0012                     T2CON           equ	18	;# 
   124     0013                     SSPBUF          equ	19	;# 
   125     0014                     SSPCON          equ	20	;# 
   126     0015                     CCPR1           equ	21	;# 
   127     0015                     CCPR1L          equ	21	;# 
   128     0016                     CCPR1H          equ	22	;# 
   129     0017                     CCP1CON         equ	23	;# 
   130     0018                     RCSTA           equ	24	;# 
   131     0019                     TXREG           equ	25	;# 
   132     001A                     RCREG           equ	26	;# 
   133     001B                     CCPR2           equ	27	;# 
   134     001B                     CCPR2L          equ	27	;# 
   135     001C                     CCPR2H          equ	28	;# 
   136     001D                     CCP2CON         equ	29	;# 
   137     001E                     ADRESH          equ	30	;# 
   138     001F                     ADCON0          equ	31	;# 
   139     0081                     OPTION_REG      equ	129	;# 
   140     0085                     TRISA           equ	133	;# 
   141     0086                     TRISB           equ	134	;# 
   142     0087                     TRISC           equ	135	;# 
   143     0088                     TRISD           equ	136	;# 
   144     0089                     TRISE           equ	137	;# 
   145     008C                     PIE1            equ	140	;# 
   146     008D                     PIE2            equ	141	;# 
   147     008E                     PCON            equ	142	;# 
   148     0091                     SSPCON2         equ	145	;# 
   149     0092                     PR2             equ	146	;# 
   150     0093                     SSPADD          equ	147	;# 
   151     0094                     SSPSTAT         equ	148	;# 
   152     0098                     TXSTA           equ	152	;# 
   153     0099                     SPBRG           equ	153	;# 
   154     009C                     CMCON           equ	156	;# 
   155     009D                     CVRCON          equ	157	;# 
   156     009E                     ADRESL          equ	158	;# 
   157     009F                     ADCON1          equ	159	;# 
   158     010C                     EEDATA          equ	268	;# 
   159     010D                     EEADR           equ	269	;# 
   160     010E                     EEDATH          equ	270	;# 
   161     010F                     EEADRH          equ	271	;# 
   162     018C                     EECON1          equ	396	;# 
   163     018D                     EECON2          equ	397	;# 
   164     0000                     INDF            equ	0	;# 
   165     0001                     TMR0            equ	1	;# 
   166     0002                     PCL             equ	2	;# 
   167     0003                     STATUS          equ	3	;# 
   168     0004                     FSR             equ	4	;# 
   169     0005                     PORTA           equ	5	;# 
   170     0006                     PORTB           equ	6	;# 
   171     0007                     PORTC           equ	7	;# 
   172     0008                     PORTD           equ	8	;# 
   173     0009                     PORTE           equ	9	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PIR1            equ	12	;# 
   177     000D                     PIR2            equ	13	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0011                     TMR2            equ	17	;# 
   183     0012                     T2CON           equ	18	;# 
   184     0013                     SSPBUF          equ	19	;# 
   185     0014                     SSPCON          equ	20	;# 
   186     0015                     CCPR1           equ	21	;# 
   187     0015                     CCPR1L          equ	21	;# 
   188     0016                     CCPR1H          equ	22	;# 
   189     0017                     CCP1CON         equ	23	;# 
   190     0018                     RCSTA           equ	24	;# 
   191     0019                     TXREG           equ	25	;# 
   192     001A                     RCREG           equ	26	;# 
   193     001B                     CCPR2           equ	27	;# 
   194     001B                     CCPR2L          equ	27	;# 
   195     001C                     CCPR2H          equ	28	;# 
   196     001D                     CCP2CON         equ	29	;# 
   197     001E                     ADRESH          equ	30	;# 
   198     001F                     ADCON0          equ	31	;# 
   199     0081                     OPTION_REG      equ	129	;# 
   200     0085                     TRISA           equ	133	;# 
   201     0086                     TRISB           equ	134	;# 
   202     0087                     TRISC           equ	135	;# 
   203     0088                     TRISD           equ	136	;# 
   204     0089                     TRISE           equ	137	;# 
   205     008C                     PIE1            equ	140	;# 
   206     008D                     PIE2            equ	141	;# 
   207     008E                     PCON            equ	142	;# 
   208     0091                     SSPCON2         equ	145	;# 
   209     0092                     PR2             equ	146	;# 
   210     0093                     SSPADD          equ	147	;# 
   211     0094                     SSPSTAT         equ	148	;# 
   212     0098                     TXSTA           equ	152	;# 
   213     0099                     SPBRG           equ	153	;# 
   214     009C                     CMCON           equ	156	;# 
   215     009D                     CVRCON          equ	157	;# 
   216     009E                     ADRESL          equ	158	;# 
   217     009F                     ADCON1          equ	159	;# 
   218     010C                     EEDATA          equ	268	;# 
   219     010D                     EEADR           equ	269	;# 
   220     010E                     EEDATH          equ	270	;# 
   221     010F                     EEADRH          equ	271	;# 
   222     018C                     EECON1          equ	396	;# 
   223     018D                     EECON2          equ	397	;# 
   224     001E                     _ADRESH         set	30
   225     001F                     _ADCON0         set	31
   226     0008                     _PORTD          set	8
   227     0007                     _PORTC          set	7
   228     0059                     _INTF           set	89
   229     0041                     _RD1            set	65
   230     0040                     _RD0            set	64
   231     00FA                     _GO_nDONE       set	250
   232     005F                     _GIE            set	95
   233     005C                     _INTE           set	92
   234     009E                     _ADRESL         set	158
   235     0081                     _OPTION_REG     set	129
   236     009F                     _ADCON1         set	159
   237     0088                     _TRISD          set	136
   238     0087                     _TRISC          set	135
   239                           
   240                           	psect	strings
   241     07EA                     __pstrings:
   242     07EA                     stringtab:
   243     07EA                     __stringtab:
   244                           
   245                           ;	String table - string pointers are 1 byte each
   246     07EA  1BFF               	btfsc	btemp+1,7
   247     07EB  2FF4               	ljmp	stringcode
   248     07EC  1383               	bcf	3,7
   249     07ED  187F               	btfsc	btemp+1,0
   250     07EE  1783               	bsf	3,7
   251     07EF  0800               	movf	0,w
   252     07F0  0A84               	incf	4,f
   253     07F1  1903               	skipnz
   254     07F2  0AFF               	incf	btemp+1,f
   255     07F3  0008               	return
   256     07F4                     stringcode:
   257     07F4                     stringdir:
   258     07F4  3007               	movlw	high stringdir
   259     07F5  008A               	movwf	10
   260     07F6  0804               	movf	4,w
   261     07F7  0A84               	incf	4,f
   262     07F8  0782               	addwf	2,f
   263     07F9                     __stringbase:
   264     07F9  3400               	retlw	0
   265     07FA                     __end_of__stringtab:
   266     07FA                     STR_1:
   267     07FA  3425               	retlw	37	;'%'
   268     07FB  3430               	retlw	48	;'0'
   269     07FC  3434               	retlw	52	;'4'
   270     07FD  3464               	retlw	100	;'d'
   271     07FE  3400               	retlw	0
   272     07FA                     STR_2           equ	STR_1
   273                           
   274                           	psect	cinit
   275     0015                     start_initialization:	
   276                           ; #config settings
   277                           
   278     0015                     __initialization:
   279                           
   280                           ; Clear objects allocated to BANK1
   281     0015  1683               	bsf	3,5	;RP0=1, select bank1
   282     0016  1303               	bcf	3,6	;RP1=0, select bank1
   283     0017  01D7               	clrf	__pbssBANK1& (0+127)
   284     0018  01D8               	clrf	(__pbssBANK1+1)& (0+127)
   285     0019  01D9               	clrf	(__pbssBANK1+2)& (0+127)
   286     001A  01DA               	clrf	(__pbssBANK1+3)& (0+127)
   287     001B  01DB               	clrf	(__pbssBANK1+4)& (0+127)
   288     001C  01DC               	clrf	(__pbssBANK1+5)& (0+127)
   289     001D  01DD               	clrf	(__pbssBANK1+6)& (0+127)
   290                           
   291                           ; Clear objects allocated to BANK3
   292     001E  1703               	bsf	3,6	;RP1=1, select bank3
   293     001F  01E7               	clrf	__pbssBANK3& (0+127)
   294     0020  01E8               	clrf	(__pbssBANK3+1)& (0+127)
   295                           
   296                           ; Clear objects allocated to BANK2
   297     0021  1783               	bsf	3,7	;select IRP bank2
   298     0022  3010               	movlw	low __pbssBANK2
   299     0023  0084               	movwf	4
   300     0024  3030               	movlw	low (__pbssBANK2+32)
   301     0025  160A  118A  208F   	fcall	clear_ram0
   302     0028                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305     0028                     __end_of__initialization:
   306     0028  0183               	clrf	3
   307     0029  120A  158A  2EBB   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	bssBANK1
   310     00D7                     __pbssBANK1:
   311     00D7                     _width:
   312     00D7                     	ds	2
   313     00D9                     _prec:
   314     00D9                     	ds	2
   315     00DB                     _count:
   316     00DB                     	ds	2
   317     00DD                     _flags:
   318     00DD                     	ds	1
   319                           
   320                           	psect	bssBANK3
   321     01E7                     __pbssBANK3:
   322     01E7                     _nout:
   323     01E7                     	ds	2
   324                           
   325                           	psect	bssBANK2
   326     0110                     __pbssBANK2:
   327     0110                     _dbuf:
   328     0110                     	ds	32
   329                           
   330                           	psect	clrtext
   331     108F                     clear_ram0:	
   332                           ;	Called with FSR containing the base address, and
   333                           ;	W with the last address+1
   334                           
   335     108F  0064               	clrwdt	;clear the watchdog before getting into this loop
   336     1090                     clrloop0:
   337     1090  0180               	clrf	0	;clear RAM location pointed to by FSR
   338     1091  0A84               	incf	4,f	;increment pointer
   339     1092  0604               	xorwf	4,w	;XOR with final address
   340     1093  1903               	btfsc	3,2	;have we reached the end yet?
   341     1094  3400               	retlw	0	;all done for this memory range, return
   342     1095  0604               	xorwf	4,w	;XOR again to restore value
   343     1096  2890               	goto	clrloop0	;do the next byte
   344                           
   345                           	psect	cstackBANK3
   346     0190                     __pcstackBANK3:
   347     0190                     xtoa@a:
   348     0190                     _dtoa$616:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0190                     otoa@p:	
   352                           ; 2 bytes @ 0x0
   353                           
   354     0190                     utoa@p:	
   355                           ; 2 bytes @ 0x0
   356                           
   357                           
   358                           ; 2 bytes @ 0x0
   359     0190                     	ds	1
   360     0191                     _xtoa$641:
   361                           
   362                           ; 2 bytes @ 0x1
   363     0191                     	ds	1
   364     0192                     dtoa@p:
   365     0192                     otoa@w:	
   366                           ; 2 bytes @ 0x2
   367                           
   368     0192                     utoa@w:	
   369                           ; 2 bytes @ 0x2
   370                           
   371                           
   372                           ; 2 bytes @ 0x2
   373     0192                     	ds	1
   374     0193                     xtoa@p:
   375                           
   376                           ; 2 bytes @ 0x3
   377     0193                     	ds	1
   378     0194                     otoa@t:
   379     0194                     dtoa@w:	
   380                           ; 1 bytes @ 0x4
   381                           
   382     0194                     utoa@i:	
   383                           ; 2 bytes @ 0x4
   384                           
   385                           
   386                           ; 2 bytes @ 0x4
   387     0194                     	ds	1
   388     0195                     xtoa@d_nonzero:
   389     0195                     otoa@i:	
   390                           ; 1 bytes @ 0x5
   391                           
   392                           
   393                           ; 2 bytes @ 0x5
   394     0195                     	ds	1
   395     0196                     dtoa@s:
   396     0196                     xtoa@w:	
   397                           ; 1 bytes @ 0x6
   398                           
   399                           
   400                           ; 2 bytes @ 0x6
   401     0196                     	ds	1
   402     0197                     dtoa@i:
   403                           
   404                           ; 2 bytes @ 0x7
   405     0197                     	ds	1
   406     0198                     xtoa@c:
   407                           
   408                           ; 1 bytes @ 0x8
   409     0198                     	ds	1
   410     0199                     xtoa@i:
   411                           
   412                           ; 2 bytes @ 0x9
   413     0199                     	ds	2
   414     019B                     ?_vfpfcnvrt:
   415     019B                     vfpfcnvrt@fp:	
   416                           ; 2 bytes @ 0xB
   417                           
   418                           
   419                           ; 2 bytes @ 0xB
   420     019B                     	ds	2
   421     019D                     vfpfcnvrt@fmt:
   422                           
   423                           ; 1 bytes @ 0xD
   424     019D                     	ds	1
   425     019E                     vfpfcnvrt@ap:
   426                           
   427                           ; 2 bytes @ 0xE
   428     019E                     	ds	2
   429     01A0                     ??_vfpfcnvrt:
   430                           
   431                           ; 1 bytes @ 0x10
   432     01A0                     	ds	4
   433     01A4                     vfpfcnvrt@done:
   434                           
   435                           ; 1 bytes @ 0x14
   436     01A4                     	ds	1
   437     01A5                     vfpfcnvrt@c:
   438                           
   439                           ; 1 bytes @ 0x15
   440     01A5                     	ds	1
   441     01A6                     vfpfcnvrt@convarg:
   442                           
   443                           ; 4 bytes @ 0x16
   444     01A6                     	ds	4
   445     01AA                     vfpfcnvrt@cp:
   446                           
   447                           ; 2 bytes @ 0x1A
   448     01AA                     	ds	2
   449     01AC                     ?_vfprintf:
   450     01AC                     vfprintf@fp:	
   451                           ; 2 bytes @ 0x1C
   452                           
   453                           
   454                           ; 2 bytes @ 0x1C
   455     01AC                     	ds	2
   456     01AE                     vfprintf@fmt:
   457                           
   458                           ; 2 bytes @ 0x1E
   459     01AE                     	ds	2
   460     01B0                     vfprintf@ap:
   461                           
   462                           ; 1 bytes @ 0x20
   463     01B0                     	ds	1
   464     01B1                     ?_sprintf:
   465     01B1                     sprintf@s:	
   466                           ; 2 bytes @ 0x21
   467                           
   468                           
   469                           ; 2 bytes @ 0x21
   470     01B1                     	ds	2
   471     01B3                     sprintf@fmt:
   472                           
   473                           ; 2 bytes @ 0x23
   474     01B3                     	ds	4
   475     01B7                     ??_sprintf:
   476                           
   477                           ; 1 bytes @ 0x27
   478     01B7                     	ds	3
   479     01BA                     sprintf@f:
   480                           
   481                           ; 11 bytes @ 0x2A
   482     01BA                     	ds	11
   483     01C5                     sprintf@ap:
   484                           
   485                           ; 1 bytes @ 0x35
   486     01C5                     	ds	1
   487     01C6                     ??_main:
   488                           
   489                           ; 1 bytes @ 0x36
   490     01C6                     	ds	3
   491     01C9                     main@a:
   492                           
   493                           ; 10 bytes @ 0x39
   494     01C9                     	ds	10
   495     01D3                     main@b:
   496                           
   497                           ; 10 bytes @ 0x43
   498     01D3                     	ds	10
   499     01DD                     main@Low_bits:
   500                           
   501                           ; 2 bytes @ 0x4D
   502     01DD                     	ds	2
   503     01DF                     main@high_bits:
   504                           
   505                           ; 2 bytes @ 0x4F
   506     01DF                     	ds	2
   507     01E1                     main@bits:
   508                           
   509                           ; 2 bytes @ 0x51
   510     01E1                     	ds	2
   511     01E3                     main@i:
   512                           
   513                           ; 2 bytes @ 0x53
   514     01E3                     	ds	2
   515     01E5                     main@i_70:
   516                           
   517                           ; 2 bytes @ 0x55
   518     01E5                     	ds	2
   519                           
   520                           	psect	cstackBANK1
   521     00A0                     __pcstackBANK1:
   522     00A0                     ??_ISR:
   523                           
   524                           ; 1 bytes @ 0x0
   525     00A0                     	ds	6
   526     00A6                     ISR@c:
   527                           
   528                           ; 10 bytes @ 0x6
   529     00A6                     	ds	10
   530     00B0                     ISR@i:
   531                           
   532                           ; 2 bytes @ 0x10
   533     00B0                     	ds	2
   534     00B2                     ?_display:
   535     00B2                     ?_fputc:	
   536                           ; 1 bytes @ 0x12
   537                           
   538     00B2                     ?_strlen:	
   539                           ; 2 bytes @ 0x12
   540                           
   541     00B2                     ?___wmul:	
   542                           ; 2 bytes @ 0x12
   543                           
   544     00B2                     ?___awdiv:	
   545                           ; 2 bytes @ 0x12
   546                           
   547     00B2                     ?___awmod:	
   548                           ; 2 bytes @ 0x12
   549                           
   550     00B2                     ?___lwdiv:	
   551                           ; 2 bytes @ 0x12
   552                           
   553     00B2                     ?___lwmod:	
   554                           ; 2 bytes @ 0x12
   555                           
   556     00B2                     strlen@s:	
   557                           ; 2 bytes @ 0x12
   558                           
   559     00B2                     display@RS:	
   560                           ; 1 bytes @ 0x12
   561                           
   562     00B2                     ___wmul@multiplier:	
   563                           ; 2 bytes @ 0x12
   564                           
   565     00B2                     ___awdiv@divisor:	
   566                           ; 2 bytes @ 0x12
   567                           
   568     00B2                     ___awmod@divisor:	
   569                           ; 2 bytes @ 0x12
   570                           
   571     00B2                     ___lwdiv@divisor:	
   572                           ; 2 bytes @ 0x12
   573                           
   574     00B2                     ___lwmod@divisor:	
   575                           ; 2 bytes @ 0x12
   576                           
   577     00B2                     fputc@c:	
   578                           ; 2 bytes @ 0x12
   579                           
   580     00B2                     ??_putch:	
   581                           ; 2 bytes @ 0x12
   582                           
   583                           
   584                           ; 1 bytes @ 0x12
   585     00B2                     	ds	2
   586     00B4                     strlen@a:
   587     00B4                     display@DC:	
   588                           ; 1 bytes @ 0x14
   589                           
   590     00B4                     ___wmul@multiplicand:	
   591                           ; 2 bytes @ 0x14
   592                           
   593     00B4                     ___awdiv@dividend:	
   594                           ; 2 bytes @ 0x14
   595                           
   596     00B4                     ___awmod@dividend:	
   597                           ; 2 bytes @ 0x14
   598                           
   599     00B4                     ___lwdiv@dividend:	
   600                           ; 2 bytes @ 0x14
   601                           
   602     00B4                     ___lwmod@dividend:	
   603                           ; 2 bytes @ 0x14
   604                           
   605     00B4                     fputc@fp:	
   606                           ; 2 bytes @ 0x14
   607                           
   608     00B4                     ??_strlen:	
   609                           ; 2 bytes @ 0x14
   610                           
   611                           
   612                           ; 1 bytes @ 0x14
   613     00B4                     	ds	2
   614     00B6                     ___awdiv@counter:
   615     00B6                     ___awmod@counter:	
   616                           ; 1 bytes @ 0x16
   617                           
   618     00B6                     ___lwdiv@counter:	
   619                           ; 1 bytes @ 0x16
   620                           
   621     00B6                     ___lwmod@counter:	
   622                           ; 1 bytes @ 0x16
   623                           
   624     00B6                     ___wmul@product:	
   625                           ; 1 bytes @ 0x16
   626                           
   627     00B6                     ??_display:	
   628                           ; 2 bytes @ 0x16
   629                           
   630     00B6                     ??_fputc:	
   631                           ; 1 bytes @ 0x16
   632                           
   633     00B6                     ??___wmul:	
   634                           ; 1 bytes @ 0x16
   635                           
   636     00B6                     ??___awdiv:	
   637                           ; 1 bytes @ 0x16
   638                           
   639     00B6                     ??___awmod:	
   640                           ; 1 bytes @ 0x16
   641                           
   642     00B6                     ??___lwdiv:	
   643                           ; 1 bytes @ 0x16
   644                           
   645     00B6                     ??___lwmod:	
   646                           ; 1 bytes @ 0x16
   647                           
   648                           
   649                           ; 1 bytes @ 0x16
   650     00B6                     	ds	1
   651     00B7                     ___awdiv@sign:
   652     00B7                     ___awmod@sign:	
   653                           ; 1 bytes @ 0x17
   654                           
   655     00B7                     ___lwdiv@quotient:	
   656                           ; 1 bytes @ 0x17
   657                           
   658                           
   659                           ; 2 bytes @ 0x17
   660     00B7                     	ds	1
   661     00B8                     ?_abs:
   662     00B8                     ?_read_prec_or_width:	
   663                           ; 2 bytes @ 0x18
   664                           
   665     00B8                     read_prec_or_width@fmt:	
   666                           ; 2 bytes @ 0x18
   667                           
   668     00B8                     ___awdiv@quotient:	
   669                           ; 1 bytes @ 0x18
   670                           
   671     00B8                     abs@a:	
   672                           ; 2 bytes @ 0x18
   673                           
   674                           
   675                           ; 2 bytes @ 0x18
   676     00B8                     	ds	1
   677     00B9                     read_prec_or_width@ap:
   678                           
   679                           ; 1 bytes @ 0x19
   680     00B9                     	ds	1
   681     00BA                     ??_abs:
   682     00BA                     ??_read_prec_or_width:	
   683                           ; 1 bytes @ 0x1A
   684                           
   685                           
   686                           ; 1 bytes @ 0x1A
   687     00BA                     	ds	2
   688     00BC                     read_prec_or_width@c:
   689                           
   690                           ; 1 bytes @ 0x1C
   691     00BC                     	ds	1
   692     00BD                     read_prec_or_width@n:
   693                           
   694                           ; 2 bytes @ 0x1D
   695     00BD                     	ds	2
   696     00BF                     ?_fputs:
   697     00BF                     ?_ctoa:	
   698                           ; 2 bytes @ 0x1F
   699                           
   700     00BF                     fputs@s:	
   701                           ; 2 bytes @ 0x1F
   702                           
   703     00BF                     ctoa@fp:	
   704                           ; 1 bytes @ 0x1F
   705                           
   706                           
   707                           ; 2 bytes @ 0x1F
   708     00BF                     	ds	1
   709     00C0                     fputs@fp:
   710                           
   711                           ; 2 bytes @ 0x20
   712     00C0                     	ds	1
   713     00C1                     ctoa@c:
   714                           
   715                           ; 1 bytes @ 0x21
   716     00C1                     	ds	1
   717     00C2                     ??_fputs:
   718     00C2                     ??_ctoa:	
   719                           ; 1 bytes @ 0x22
   720                           
   721                           
   722                           ; 1 bytes @ 0x22
   723     00C2                     	ds	2
   724     00C4                     fputs@c:
   725     00C4                     ctoa@l:	
   726                           ; 1 bytes @ 0x24
   727                           
   728                           
   729                           ; 2 bytes @ 0x24
   730     00C4                     	ds	1
   731     00C5                     fputs@i:
   732                           
   733                           ; 2 bytes @ 0x25
   734     00C5                     	ds	1
   735     00C6                     ctoa@w:
   736                           
   737                           ; 2 bytes @ 0x26
   738     00C6                     	ds	1
   739     00C7                     ?_pad:
   740     00C7                     pad@fp:	
   741                           ; 2 bytes @ 0x27
   742                           
   743                           
   744                           ; 2 bytes @ 0x27
   745     00C7                     	ds	2
   746     00C9                     pad@buf:
   747                           
   748                           ; 1 bytes @ 0x29
   749     00C9                     	ds	1
   750     00CA                     pad@p:
   751                           
   752                           ; 2 bytes @ 0x2A
   753     00CA                     	ds	2
   754     00CC                     ??_pad:
   755                           
   756                           ; 1 bytes @ 0x2C
   757     00CC                     	ds	1
   758     00CD                     pad@i:
   759                           
   760                           ; 2 bytes @ 0x2D
   761     00CD                     	ds	2
   762     00CF                     ?_dtoa:
   763     00CF                     ?_otoa:	
   764                           ; 2 bytes @ 0x2F
   765                           
   766     00CF                     ?_utoa:	
   767                           ; 2 bytes @ 0x2F
   768                           
   769     00CF                     ?_xtoa:	
   770                           ; 2 bytes @ 0x2F
   771                           
   772     00CF                     dtoa@fp:	
   773                           ; 2 bytes @ 0x2F
   774                           
   775     00CF                     otoa@fp:	
   776                           ; 2 bytes @ 0x2F
   777                           
   778     00CF                     utoa@fp:	
   779                           ; 2 bytes @ 0x2F
   780                           
   781     00CF                     xtoa@fp:	
   782                           ; 2 bytes @ 0x2F
   783                           
   784                           
   785                           ; 2 bytes @ 0x2F
   786     00CF                     	ds	2
   787     00D1                     dtoa@d:
   788     00D1                     otoa@d:	
   789                           ; 2 bytes @ 0x31
   790                           
   791     00D1                     utoa@d:	
   792                           ; 2 bytes @ 0x31
   793                           
   794     00D1                     xtoa@d:	
   795                           ; 2 bytes @ 0x31
   796                           
   797                           
   798                           ; 2 bytes @ 0x31
   799     00D1                     	ds	2
   800     00D3                     xtoa@x:
   801     00D3                     ??_dtoa:	
   802                           ; 1 bytes @ 0x33
   803                           
   804     00D3                     ??_otoa:	
   805                           ; 1 bytes @ 0x33
   806                           
   807     00D3                     ??_utoa:	
   808                           ; 1 bytes @ 0x33
   809                           
   810                           
   811                           ; 1 bytes @ 0x33
   812     00D3                     	ds	1
   813     00D4                     ??_xtoa:
   814                           
   815                           ; 1 bytes @ 0x34
   816     00D4                     	ds	1
   817     00D5                     vfprintf@cfmt:
   818     00D5                     ??_vfprintf:	
   819                           ; 2 bytes @ 0x35
   820                           
   821                           
   822                           ; 1 bytes @ 0x35
   823     00D5                     	ds	2
   824                           
   825                           	psect	cstackCOMMON
   826     0070                     __pcstackCOMMON:
   827     0070                     ?_putch:
   828     0070                     ?_main:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_ISR:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?i1_display:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?i1_putch:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?i1___wmul:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?i1___awdiv:	
   844                           ; 2 bytes @ 0x0
   845                           
   846     0070                     ?i1___awmod:	
   847                           ; 2 bytes @ 0x0
   848                           
   849     0070                     ?i1___lwdiv:	
   850                           ; 2 bytes @ 0x0
   851                           
   852     0070                     ?i1___lwmod:	
   853                           ; 2 bytes @ 0x0
   854                           
   855     0070                     ?i1_fputc:	
   856                           ; 2 bytes @ 0x0
   857                           
   858     0070                     ?i1_strlen:	
   859                           ; 2 bytes @ 0x0
   860                           
   861     0070                     putch@c:	
   862                           ; 2 bytes @ 0x0
   863                           
   864     0070                     i1strlen@s:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     i1display@RS:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     i1___wmul@multiplier:	
   871                           ; 2 bytes @ 0x0
   872                           
   873     0070                     i1___awdiv@divisor:	
   874                           ; 2 bytes @ 0x0
   875                           
   876     0070                     i1___awmod@divisor:	
   877                           ; 2 bytes @ 0x0
   878                           
   879     0070                     i1___lwdiv@divisor:	
   880                           ; 2 bytes @ 0x0
   881                           
   882     0070                     i1___lwmod@divisor:	
   883                           ; 2 bytes @ 0x0
   884                           
   885     0070                     i1fputc@c:	
   886                           ; 2 bytes @ 0x0
   887                           
   888     0070                     ??i1_putch:	
   889                           ; 2 bytes @ 0x0
   890                           
   891                           
   892                           ; 1 bytes @ 0x0
   893     0070                     	ds	2
   894     0072                     i1strlen@a:
   895     0072                     i1display@DC:	
   896                           ; 1 bytes @ 0x2
   897                           
   898     0072                     i1___wmul@multiplicand:	
   899                           ; 2 bytes @ 0x2
   900                           
   901     0072                     i1___awdiv@dividend:	
   902                           ; 2 bytes @ 0x2
   903                           
   904     0072                     i1___awmod@dividend:	
   905                           ; 2 bytes @ 0x2
   906                           
   907     0072                     i1___lwdiv@dividend:	
   908                           ; 2 bytes @ 0x2
   909                           
   910     0072                     i1___lwmod@dividend:	
   911                           ; 2 bytes @ 0x2
   912                           
   913     0072                     i1fputc@fp:	
   914                           ; 2 bytes @ 0x2
   915                           
   916     0072                     ??i1_strlen:	
   917                           ; 2 bytes @ 0x2
   918                           
   919                           
   920                           ; 1 bytes @ 0x2
   921     0072                     	ds	2
   922     0074                     i1___awdiv@counter:
   923     0074                     i1___awmod@counter:	
   924                           ; 1 bytes @ 0x4
   925                           
   926     0074                     i1___lwmod@counter:	
   927                           ; 1 bytes @ 0x4
   928                           
   929     0074                     i1___wmul@product:	
   930                           ; 1 bytes @ 0x4
   931                           
   932     0074                     i1___lwdiv@quotient:	
   933                           ; 2 bytes @ 0x4
   934                           
   935     0074                     ??i1_display:	
   936                           ; 2 bytes @ 0x4
   937                           
   938     0074                     ??i1___wmul:	
   939                           ; 1 bytes @ 0x4
   940                           
   941     0074                     ??i1___awdiv:	
   942                           ; 1 bytes @ 0x4
   943                           
   944     0074                     ??i1___awmod:	
   945                           ; 1 bytes @ 0x4
   946                           
   947     0074                     ??i1___lwdiv:	
   948                           ; 1 bytes @ 0x4
   949                           
   950     0074                     ??i1___lwmod:	
   951                           ; 1 bytes @ 0x4
   952                           
   953     0074                     ??i1_fputc:	
   954                           ; 1 bytes @ 0x4
   955                           
   956                           
   957                           ; 1 bytes @ 0x4
   958     0074                     	ds	1
   959     0075                     i1___awdiv@sign:
   960     0075                     i1___awmod@sign:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 1 bytes @ 0x5
   965     0075                     	ds	1
   966     0076                     ?i1_read_prec_or_width:
   967     0076                     ?i1_abs:	
   968                           ; 2 bytes @ 0x6
   969                           
   970     0076                     i1___lwdiv@counter:	
   971                           ; 2 bytes @ 0x6
   972                           
   973     0076                     i1read_prec_or_width@fmt:	
   974                           ; 1 bytes @ 0x6
   975                           
   976     0076                     i1___awdiv@quotient:	
   977                           ; 1 bytes @ 0x6
   978                           
   979     0076                     i1abs@a:	
   980                           ; 2 bytes @ 0x6
   981                           
   982                           
   983                           ; 2 bytes @ 0x6
   984     0076                     	ds	1
   985     0077                     i1read_prec_or_width@ap:
   986                           
   987                           ; 2 bytes @ 0x7
   988     0077                     	ds	1
   989     0078                     ??i1_abs:
   990                           
   991                           ; 1 bytes @ 0x8
   992     0078                     	ds	1
   993     0079                     ??i1_read_prec_or_width:
   994                           
   995                           ; 1 bytes @ 0x9
   996     0079                     	ds	2
   997     007B                     i1read_prec_or_width@c:
   998                           
   999                           ; 1 bytes @ 0xB
  1000     007B                     	ds	1
  1001     007C                     i1read_prec_or_width@n:
  1002                           
  1003                           ; 2 bytes @ 0xC
  1004     007C                     	ds	1
  1005     007D                     ??i1_pad:
  1006                           
  1007                           ; 1 bytes @ 0xD
  1008     007D                     	ds	1
  1009     007E                     ??i1_dtoa:
  1010     007E                     ??i1_utoa:	
  1011                           ; 1 bytes @ 0xE
  1012                           
  1013     007E                     ??i1_xtoa:	
  1014                           ; 1 bytes @ 0xE
  1015                           
  1016     007E                     ??i1_vfprintf:	
  1017                           ; 1 bytes @ 0xE
  1018                           
  1019                           
  1020                           	psect	cstackBANK0
  1021     0020                     __pcstackBANK0:	
  1022                           ; 1 bytes @ 0xE
  1023                           
  1024     0020                     ?i1_ctoa:
  1025     0020                     ?i1_fputs:	
  1026                           ; 2 bytes @ 0x0
  1027                           
  1028     0020                     i1fputs@s:	
  1029                           ; 2 bytes @ 0x0
  1030                           
  1031     0020                     i1ctoa@fp:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x0
  1036     0020                     	ds	1
  1037     0021                     i1fputs@fp:
  1038                           
  1039                           ; 2 bytes @ 0x1
  1040     0021                     	ds	1
  1041     0022                     i1ctoa@c:
  1042                           
  1043                           ; 1 bytes @ 0x2
  1044     0022                     	ds	1
  1045     0023                     ??i1_ctoa:
  1046     0023                     ??i1_fputs:	
  1047                           ; 1 bytes @ 0x3
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x3
  1051     0023                     	ds	2
  1052     0025                     i1fputs@c:
  1053     0025                     i1ctoa@l:	
  1054                           ; 1 bytes @ 0x5
  1055                           
  1056                           
  1057                           ; 2 bytes @ 0x5
  1058     0025                     	ds	1
  1059     0026                     i1fputs@i:
  1060                           
  1061                           ; 2 bytes @ 0x6
  1062     0026                     	ds	1
  1063     0027                     i1ctoa@w:
  1064                           
  1065                           ; 2 bytes @ 0x7
  1066     0027                     	ds	1
  1067     0028                     ?i1_pad:
  1068     0028                     i1pad@fp:	
  1069                           ; 2 bytes @ 0x8
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x8
  1073     0028                     	ds	2
  1074     002A                     i1pad@buf:
  1075                           
  1076                           ; 1 bytes @ 0xA
  1077     002A                     	ds	1
  1078     002B                     i1pad@p:
  1079                           
  1080                           ; 2 bytes @ 0xB
  1081     002B                     	ds	2
  1082     002D                     i1pad@i:
  1083                           
  1084                           ; 2 bytes @ 0xD
  1085     002D                     	ds	2
  1086     002F                     ?i1_dtoa:
  1087     002F                     ?i1_otoa:	
  1088                           ; 2 bytes @ 0xF
  1089                           
  1090     002F                     ?i1_utoa:	
  1091                           ; 2 bytes @ 0xF
  1092                           
  1093     002F                     ?i1_xtoa:	
  1094                           ; 2 bytes @ 0xF
  1095                           
  1096     002F                     i1dtoa@fp:	
  1097                           ; 2 bytes @ 0xF
  1098                           
  1099     002F                     i1otoa@fp:	
  1100                           ; 2 bytes @ 0xF
  1101                           
  1102     002F                     i1utoa@fp:	
  1103                           ; 2 bytes @ 0xF
  1104                           
  1105     002F                     i1xtoa@fp:	
  1106                           ; 2 bytes @ 0xF
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0xF
  1110     002F                     	ds	2
  1111     0031                     i1dtoa@d:
  1112     0031                     i1otoa@d:	
  1113                           ; 2 bytes @ 0x11
  1114                           
  1115     0031                     i1utoa@d:	
  1116                           ; 2 bytes @ 0x11
  1117                           
  1118     0031                     i1xtoa@d:	
  1119                           ; 2 bytes @ 0x11
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x11
  1123     0031                     	ds	2
  1124     0033                     i1xtoa@x:
  1125     0033                     i1_dtoa$616:	
  1126                           ; 1 bytes @ 0x13
  1127                           
  1128     0033                     i1utoa@p:	
  1129                           ; 2 bytes @ 0x13
  1130                           
  1131     0033                     ??i1_otoa:	
  1132                           ; 2 bytes @ 0x13
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0x13
  1136     0033                     	ds	1
  1137     0034                     i1_xtoa$641:
  1138                           
  1139                           ; 2 bytes @ 0x14
  1140     0034                     	ds	1
  1141     0035                     i1dtoa@p:
  1142     0035                     i1otoa@p:	
  1143                           ; 2 bytes @ 0x15
  1144                           
  1145     0035                     i1utoa@w:	
  1146                           ; 2 bytes @ 0x15
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x15
  1150     0035                     	ds	1
  1151     0036                     i1xtoa@a:
  1152                           
  1153                           ; 1 bytes @ 0x16
  1154     0036                     	ds	1
  1155     0037                     i1dtoa@w:
  1156     0037                     i1otoa@w:	
  1157                           ; 2 bytes @ 0x17
  1158                           
  1159     0037                     i1utoa@i:	
  1160                           ; 2 bytes @ 0x17
  1161                           
  1162     0037                     i1xtoa@p:	
  1163                           ; 2 bytes @ 0x17
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x17
  1167     0037                     	ds	2
  1168     0039                     i1dtoa@s:
  1169     0039                     i1otoa@t:	
  1170                           ; 1 bytes @ 0x19
  1171                           
  1172     0039                     i1xtoa@w:	
  1173                           ; 1 bytes @ 0x19
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x19
  1177     0039                     	ds	1
  1178     003A                     i1dtoa@i:
  1179     003A                     i1otoa@i:	
  1180                           ; 2 bytes @ 0x1A
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x1A
  1184     003A                     	ds	1
  1185     003B                     i1xtoa@d_nonzero:
  1186                           
  1187                           ; 1 bytes @ 0x1B
  1188     003B                     	ds	1
  1189     003C                     i1xtoa@c:
  1190                           
  1191                           ; 1 bytes @ 0x1C
  1192     003C                     	ds	1
  1193     003D                     i1xtoa@i:
  1194                           
  1195                           ; 2 bytes @ 0x1D
  1196     003D                     	ds	2
  1197     003F                     ?i1_vfpfcnvrt:
  1198     003F                     i1vfpfcnvrt@fp:	
  1199                           ; 2 bytes @ 0x1F
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x1F
  1203     003F                     	ds	2
  1204     0041                     i1vfpfcnvrt@fmt:
  1205                           
  1206                           ; 1 bytes @ 0x21
  1207     0041                     	ds	1
  1208     0042                     i1vfpfcnvrt@ap:
  1209                           
  1210                           ; 2 bytes @ 0x22
  1211     0042                     	ds	2
  1212     0044                     ??i1_vfpfcnvrt:
  1213                           
  1214                           ; 1 bytes @ 0x24
  1215     0044                     	ds	4
  1216     0048                     i1vfpfcnvrt@done:
  1217                           
  1218                           ; 1 bytes @ 0x28
  1219     0048                     	ds	1
  1220     0049                     i1vfpfcnvrt@convarg:
  1221                           
  1222                           ; 4 bytes @ 0x29
  1223     0049                     	ds	4
  1224     004D                     i1vfpfcnvrt@c:
  1225                           
  1226                           ; 1 bytes @ 0x2D
  1227     004D                     	ds	1
  1228     004E                     i1vfpfcnvrt@cp:
  1229                           
  1230                           ; 2 bytes @ 0x2E
  1231     004E                     	ds	2
  1232     0050                     ?i1_vfprintf:
  1233     0050                     i1vfprintf@fp:	
  1234                           ; 2 bytes @ 0x30
  1235                           
  1236                           
  1237                           ; 2 bytes @ 0x30
  1238     0050                     	ds	2
  1239     0052                     i1vfprintf@fmt:
  1240                           
  1241                           ; 2 bytes @ 0x32
  1242     0052                     	ds	2
  1243     0054                     i1vfprintf@ap:
  1244                           
  1245                           ; 2 bytes @ 0x34
  1246     0054                     	ds	2
  1247     0056                     i1vfprintf@cfmt:
  1248                           
  1249                           ; 2 bytes @ 0x36
  1250     0056                     	ds	2
  1251     0058                     ?i1_sprintf:
  1252     0058                     i1sprintf@s:	
  1253                           ; 2 bytes @ 0x38
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x38
  1257     0058                     	ds	2
  1258     005A                     i1sprintf@fmt:
  1259                           
  1260                           ; 2 bytes @ 0x3A
  1261     005A                     	ds	4
  1262     005E                     ??i1_sprintf:
  1263                           
  1264                           ; 1 bytes @ 0x3E
  1265     005E                     	ds	3
  1266     0061                     i1sprintf@f:
  1267                           
  1268                           ; 11 bytes @ 0x41
  1269     0061                     	ds	11
  1270     006C                     i1sprintf@ap:
  1271                           
  1272                           ; 2 bytes @ 0x4C
  1273     006C                     	ds	2
  1274                           
  1275                           	psect	maintext
  1276     0EBB                     __pmaintext:	
  1277 ;;
  1278 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1279 ;;
  1280 ;; *************** function _main *****************
  1281 ;; Defined at:
  1282 ;;		line 31 in file "newmain.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  i               2   85[BANK3 ] int 
  1287 ;;  i               2   83[BANK3 ] int 
  1288 ;;  b              10   67[BANK3 ] unsigned char [10]
  1289 ;;  a              10   57[BANK3 ] unsigned char [10]
  1290 ;;  c              10    0        unsigned char [10]
  1291 ;;  bits            2   81[BANK3 ] int 
  1292 ;;  high_bits       2   79[BANK3 ] int 
  1293 ;;  Low_bits        2   77[BANK3 ] int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : B00/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         0       0       0      30       0
  1305 ;;      Temps:          0       0       0       3       0
  1306 ;;      Totals:         0       0       0      33       0
  1307 ;;Total ram usage:       33 bytes
  1308 ;; Hardware stack levels required when called: 17
  1309 ;; This function calls:
  1310 ;;		_display
  1311 ;;		_sprintf
  1312 ;; This function is called by:
  1313 ;;		Startup code after reset
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317     0EBB                     _main:	
  1318                           ;psect for function _main
  1319                           
  1320                           
  1321                           ;newmain.c: 33:     TRISC=0;
  1322                           
  1323                           ;incstack = 0
  1324 ;; hardware stack exceeded
  1325                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1326     0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  1327     0EBC  0187               	clrf	7	;volatile
  1328                           
  1329                           ;newmain.c: 34:     PORTC=0;
  1330     0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0EBE  0187               	clrf	7	;volatile
  1332                           
  1333                           ;newmain.c: 35:     TRISD=0;
  1334     0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  1335     0EC0  0188               	clrf	8	;volatile
  1336                           
  1337                           ;newmain.c: 36:     PORTD=0;
  1338     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  1339     0EC2  0188               	clrf	8	;volatile
  1340                           
  1341                           ;newmain.c: 37:     ADCON0=0x01;
  1342     0EC3  3001               	movlw	1
  1343     0EC4  009F               	movwf	31	;volatile
  1344                           
  1345                           ;newmain.c: 38:     ADCON1=0x80;
  1346     0EC5  3080               	movlw	128
  1347     0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  1348     0EC7  009F               	movwf	31	;volatile
  1349                           
  1350                           ;newmain.c: 39:     INTE=1;
  1351     0EC8  160B               	bsf	11,4	;volatile
  1352                           
  1353                           ;newmain.c: 40:     GIE=1;
  1354     0EC9  178B               	bsf	11,7	;volatile
  1355                           
  1356                           ;newmain.c: 42:     OPTION_REG =0;
  1357     0ECA  0181               	clrf	1	;volatile
  1358                           
  1359                           ;newmain.c: 46:     int Low_bits;;newmain.c: 47:     int high_bits;;newmain.c: 48:     i
      +                          nt bits;;newmain.c: 49:     char a[10];;newmain.c: 50:     char b[10];;newmain.c: 51:   
      +                            char c[10];;newmain.c: 55:     display(0, 0x0e);
  1360     0ECB  3000               	movlw	0
  1361     0ECC  00B2               	movwf	display@RS^(0+128)
  1362     0ECD  00B3               	movwf	(display@RS+1)^(0+128)
  1363     0ECE  300E               	movlw	14
  1364     0ECF  00B4               	movwf	display@DC^(0+128)
  1365     0ED0  3000               	movlw	0
  1366     0ED1  00B5               	movwf	(display@DC^(0+128)+1)
  1367     0ED2  160A  118A  2187  120A  158A  	fcall	_display
  1368                           
  1369                           ;newmain.c: 56:     display(0, 0x38);
  1370     0ED7  3000               	movlw	0
  1371     0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  1372     0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  1373     0EDA  00B2               	movwf	display@RS^(0+128)
  1374     0EDB  00B3               	movwf	(display@RS+1)^(0+128)
  1375     0EDC  3038               	movlw	56
  1376     0EDD  00B4               	movwf	display@DC^(0+128)
  1377     0EDE  3000               	movlw	0
  1378     0EDF  00B5               	movwf	(display@DC^(0+128)+1)
  1379     0EE0  160A  118A  2187  120A  158A  	fcall	_display
  1380     0EE5                     l4403:
  1381                           
  1382                           ;newmain.c: 59:     {;newmain.c: 61:     ADCON0=0x01;
  1383     0EE5  3001               	movlw	1
  1384     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0EE8  009F               	movwf	31	;volatile
  1387                           
  1388                           ;newmain.c: 62:     _delay((unsigned long)((10)*(10000000/4000.0)));
  1389     0EE9  3021               	movlw	33
  1390     0EEA  1683               	bsf	3,5	;RP0=1, select bank3
  1391     0EEB  1703               	bsf	3,6	;RP1=1, select bank3
  1392     0EEC  00C7               	movwf	(??_main^(0+384)+1)
  1393     0EED  3075               	movlw	117
  1394     0EEE  00C6               	movwf	??_main^(0+384)
  1395     0EEF                     u6167:
  1396     0EEF  0BC6               	decfsz	??_main^(0+384),f
  1397     0EF0  2EEF               	goto	u6167
  1398     0EF1  0BC7               	decfsz	(??_main^(0+384)+1),f
  1399     0EF2  2EEF               	goto	u6167
  1400     0EF3  2EF4               	nop2
  1401                           
  1402                           ;newmain.c: 63:     GO_nDONE=1;
  1403     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  1404     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  1405     0EF6  151F               	bsf	31,2	;volatile
  1406     0EF7                     l44:	
  1407                           ;newmain.c: 64:     while(GO_nDONE==1){}
  1408                           
  1409     0EF7  191F               	btfsc	31,2	;volatile
  1410     0EF8  2EF7               	goto	l44
  1411                           
  1412                           ;newmain.c: 65:     Low_bits= ADRESL;
  1413     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1414     0EFA  081E               	movf	30,w	;volatile
  1415     0EFB  1703               	bsf	3,6	;RP1=1, select bank3
  1416     0EFC  00C6               	movwf	??_main^(0+384)
  1417     0EFD  01C7               	clrf	(??_main^(0+384)+1)
  1418     0EFE  0846               	movf	??_main^(0+384),w
  1419     0EFF  00DD               	movwf	main@Low_bits^(0+384)
  1420     0F00  0847               	movf	(??_main+1)^(0+384),w
  1421     0F01  00DE               	movwf	(main@Low_bits+1)^(0+384)
  1422                           
  1423                           ;newmain.c: 66:     high_bits= ADRESH;
  1424     0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1425     0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1426     0F04  081E               	movf	30,w	;volatile
  1427     0F05  1683               	bsf	3,5	;RP0=1, select bank3
  1428     0F06  1703               	bsf	3,6	;RP1=1, select bank3
  1429     0F07  00C6               	movwf	??_main^(0+384)
  1430     0F08  01C7               	clrf	(??_main^(0+384)+1)
  1431     0F09  0846               	movf	??_main^(0+384),w
  1432     0F0A  00DF               	movwf	main@high_bits^(0+384)
  1433     0F0B  0847               	movf	(??_main+1)^(0+384),w
  1434     0F0C  00E0               	movwf	(main@high_bits+1)^(0+384)
  1435                           
  1436                           ;newmain.c: 67:     bits = Low_bits | high_bits << 8;
  1437     0F0D  0860               	movf	(main@high_bits+1)^(0+384),w
  1438     0F0E  00C7               	movwf	(??_main^(0+384)+1)
  1439     0F0F  085F               	movf	main@high_bits^(0+384),w
  1440     0F10  00C6               	movwf	??_main^(0+384)
  1441     0F11  0846               	movf	??_main^(0+384),w
  1442     0F12  00C7               	movwf	(??_main^(0+384)+1)
  1443     0F13  01C6               	clrf	??_main^(0+384)
  1444     0F14  085D               	movf	main@Low_bits^(0+384),w
  1445     0F15  0446               	iorwf	??_main^(0+384),w
  1446     0F16  00E1               	movwf	main@bits^(0+384)
  1447     0F17  085E               	movf	(main@Low_bits+1)^(0+384),w
  1448     0F18  0447               	iorwf	(??_main+1)^(0+384),w
  1449     0F19  00E2               	movwf	(main@bits+1)^(0+384)
  1450                           
  1451                           ;newmain.c: 68:     sprintf(a,"%04d",bits);
  1452     0F1A  30C9               	movlw	(low (main@a| (0+256)))& (0+255)
  1453     0F1B  00B1               	movwf	sprintf@s^(0+384)
  1454     0F1C  3001               	movlw	1
  1455     0F1D  00B2               	movwf	(sprintf@s+1)^(0+384)
  1456     0F1E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1457     0F1F  00B3               	movwf	sprintf@fmt^(0+384)
  1458     0F20  3080               	movlw	128
  1459     0F21  00B4               	movwf	(sprintf@fmt+1)^(0+384)
  1460     0F22  0862               	movf	(main@bits+1)^(0+384),w
  1461     0F23  00B6               	movwf	((?_sprintf+1)^(0+384)+4)
  1462     0F24  0861               	movf	main@bits^(0+384),w
  1463     0F25  00B5               	movwf	(?_sprintf^(0+384)+4)
  1464     0F26  160A  118A  21AF  120A  158A  	fcall	_sprintf
  1465                           
  1466                           ;newmain.c: 69:     display(0, 0x80);
  1467     0F2B  3000               	movlw	0
  1468     0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  1469     0F2D  00B2               	movwf	display@RS^(0+128)
  1470     0F2E  00B3               	movwf	(display@RS+1)^(0+128)
  1471     0F2F  3080               	movlw	128
  1472     0F30  00B4               	movwf	display@DC^(0+128)
  1473     0F31  3000               	movlw	0
  1474     0F32  00B5               	movwf	(display@DC^(0+128)+1)
  1475     0F33  160A  118A  2187  120A  158A  	fcall	_display
  1476                           
  1477                           ;newmain.c: 70:     for(int i=0;a[i]!='\0';i++)
  1478     0F38  1683               	bsf	3,5	;RP0=1, select bank3
  1479     0F39  1703               	bsf	3,6	;RP1=1, select bank3
  1480     0F3A  01E3               	clrf	main@i^(0+384)
  1481     0F3B  01E4               	clrf	(main@i+1)^(0+384)
  1482     0F3C                     l4423:
  1483     0F3C  0863               	movf	main@i^(0+384),w
  1484     0F3D  3EC9               	addlw	(low (main@a| (0+256)))& (0+255)
  1485     0F3E  0084               	movwf	4
  1486     0F3F  1783               	bsf	3,7	;select IRP bank3
  1487     0F40  0800               	movf	0,w
  1488     0F41  1903               	btfsc	3,2
  1489     0F42  2F64               	goto	l4425
  1490                           
  1491                           ;newmain.c: 71:     {;newmain.c: 72:         display(1, a[i]);
  1492     0F43  3001               	movlw	1
  1493     0F44  1303               	bcf	3,6	;RP1=0, select bank1
  1494     0F45  00B2               	movwf	display@RS^(0+128)
  1495     0F46  3000               	movlw	0
  1496     0F47  00B3               	movwf	(display@RS^(0+128)+1)
  1497     0F48  1703               	bsf	3,6	;RP1=1, select bank3
  1498     0F49  0863               	movf	main@i^(0+384),w
  1499     0F4A  3EC9               	addlw	(low (main@a| (0+256)))& (0+255)
  1500     0F4B  0084               	movwf	4
  1501     0F4C  0800               	movf	0,w
  1502     0F4D  00C6               	movwf	??_main^(0+384)
  1503     0F4E  01C7               	clrf	(??_main^(0+384)+1)
  1504     0F4F  0846               	movf	??_main^(0+384),w
  1505     0F50  1303               	bcf	3,6	;RP1=0, select bank1
  1506     0F51  00B4               	movwf	display@DC^(0+128)
  1507     0F52  1703               	bsf	3,6	;RP1=1, select bank3
  1508     0F53  0847               	movf	(??_main+1)^(0+384),w
  1509     0F54  1303               	bcf	3,6	;RP1=0, select bank1
  1510     0F55  00B5               	movwf	(display@DC+1)^(0+128)
  1511     0F56  160A  118A  2187  120A  158A  	fcall	_display
  1512                           
  1513                           ;newmain.c: 73:     }
  1514     0F5B  3001               	movlw	1
  1515     0F5C  1683               	bsf	3,5	;RP0=1, select bank3
  1516     0F5D  1703               	bsf	3,6	;RP1=1, select bank3
  1517     0F5E  07E3               	addwf	main@i^(0+384),f
  1518     0F5F  1803               	skipnc
  1519     0F60  0AE4               	incf	(main@i+1)^(0+384),f
  1520     0F61  3000               	movlw	0
  1521     0F62  07E4               	addwf	(main@i+1)^(0+384),f
  1522     0F63  2F3C               	goto	l4423
  1523     0F64                     l4425:
  1524                           
  1525                           ;newmain.c: 74:     _delay((unsigned long)((300)*(10000000/4000.0)));
  1526     0F64  3004               	movlw	4
  1527     0F65  1683               	bsf	3,5	;RP0=1, select bank3
  1528     0F66  1703               	bsf	3,6	;RP1=1, select bank3
  1529     0F67  00C8               	movwf	(??_main^(0+384)+2)
  1530     0F68  30CF               	movlw	207
  1531     0F69  00C7               	movwf	(??_main^(0+384)+1)
  1532     0F6A  3001               	movlw	1
  1533     0F6B  00C6               	movwf	??_main^(0+384)
  1534     0F6C                     u6177:
  1535     0F6C  0BC6               	decfsz	??_main^(0+384),f
  1536     0F6D  2F6C               	goto	u6177
  1537     0F6E  0BC7               	decfsz	(??_main^(0+384)+1),f
  1538     0F6F  2F6C               	goto	u6177
  1539     0F70  0BC8               	decfsz	(??_main^(0+384)+2),f
  1540     0F71  2F6C               	goto	u6177
  1541                           
  1542                           ;newmain.c: 76:     ADCON0=0x09;
  1543     0F72  3009               	movlw	9
  1544     0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0F75  009F               	movwf	31	;volatile
  1547                           
  1548                           ;newmain.c: 77:     _delay((unsigned long)((10)*(10000000/4000.0)));
  1549     0F76  3021               	movlw	33
  1550     0F77  1683               	bsf	3,5	;RP0=1, select bank3
  1551     0F78  1703               	bsf	3,6	;RP1=1, select bank3
  1552     0F79  00C7               	movwf	(??_main^(0+384)+1)
  1553     0F7A  3075               	movlw	117
  1554     0F7B  00C6               	movwf	??_main^(0+384)
  1555     0F7C                     u6187:
  1556     0F7C  0BC6               	decfsz	??_main^(0+384),f
  1557     0F7D  2F7C               	goto	u6187
  1558     0F7E  0BC7               	decfsz	(??_main^(0+384)+1),f
  1559     0F7F  2F7C               	goto	u6187
  1560     0F80  2F81               	nop2
  1561                           
  1562                           ;newmain.c: 79:     GO_nDONE=1;
  1563     0F81  1283               	bcf	3,5	;RP0=0, select bank0
  1564     0F82  1303               	bcf	3,6	;RP1=0, select bank0
  1565     0F83  151F               	bsf	31,2	;volatile
  1566     0F84                     l50:	
  1567                           ;newmain.c: 80:     while(GO_nDONE==1){}
  1568                           
  1569     0F84  191F               	btfsc	31,2	;volatile
  1570     0F85  2F84               	goto	l50
  1571                           
  1572                           ;newmain.c: 81:     Low_bits= ADRESL;
  1573     0F86  1683               	bsf	3,5	;RP0=1, select bank1
  1574     0F87  081E               	movf	30,w	;volatile
  1575     0F88  1703               	bsf	3,6	;RP1=1, select bank3
  1576     0F89  00C6               	movwf	??_main^(0+384)
  1577     0F8A  01C7               	clrf	(??_main^(0+384)+1)
  1578     0F8B  0846               	movf	??_main^(0+384),w
  1579     0F8C  00DD               	movwf	main@Low_bits^(0+384)
  1580     0F8D  0847               	movf	(??_main+1)^(0+384),w
  1581     0F8E  00DE               	movwf	(main@Low_bits+1)^(0+384)
  1582                           
  1583                           ;newmain.c: 82:     high_bits= ADRESH;
  1584     0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  1585     0F90  1303               	bcf	3,6	;RP1=0, select bank0
  1586     0F91  081E               	movf	30,w	;volatile
  1587     0F92  1683               	bsf	3,5	;RP0=1, select bank3
  1588     0F93  1703               	bsf	3,6	;RP1=1, select bank3
  1589     0F94  00C6               	movwf	??_main^(0+384)
  1590     0F95  01C7               	clrf	(??_main^(0+384)+1)
  1591     0F96  0846               	movf	??_main^(0+384),w
  1592     0F97  00DF               	movwf	main@high_bits^(0+384)
  1593     0F98  0847               	movf	(??_main+1)^(0+384),w
  1594     0F99  00E0               	movwf	(main@high_bits+1)^(0+384)
  1595                           
  1596                           ;newmain.c: 83:     bits = Low_bits | high_bits << 8;
  1597     0F9A  0860               	movf	(main@high_bits+1)^(0+384),w
  1598     0F9B  00C7               	movwf	(??_main^(0+384)+1)
  1599     0F9C  085F               	movf	main@high_bits^(0+384),w
  1600     0F9D  00C6               	movwf	??_main^(0+384)
  1601     0F9E  0846               	movf	??_main^(0+384),w
  1602     0F9F  00C7               	movwf	(??_main^(0+384)+1)
  1603     0FA0  01C6               	clrf	??_main^(0+384)
  1604     0FA1  085D               	movf	main@Low_bits^(0+384),w
  1605     0FA2  0446               	iorwf	??_main^(0+384),w
  1606     0FA3  00E1               	movwf	main@bits^(0+384)
  1607     0FA4  085E               	movf	(main@Low_bits+1)^(0+384),w
  1608     0FA5  0447               	iorwf	(??_main+1)^(0+384),w
  1609     0FA6  00E2               	movwf	(main@bits+1)^(0+384)
  1610                           
  1611                           ;newmain.c: 84:     sprintf(b ,"%04d", bits);
  1612     0FA7  30D3               	movlw	(low (main@b| (0+256)))& (0+255)
  1613     0FA8  00B1               	movwf	sprintf@s^(0+384)
  1614     0FA9  3001               	movlw	1
  1615     0FAA  00B2               	movwf	(sprintf@s+1)^(0+384)
  1616     0FAB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1617     0FAC  00B3               	movwf	sprintf@fmt^(0+384)
  1618     0FAD  3080               	movlw	128
  1619     0FAE  00B4               	movwf	(sprintf@fmt+1)^(0+384)
  1620     0FAF  0862               	movf	(main@bits+1)^(0+384),w
  1621     0FB0  00B6               	movwf	((?_sprintf+1)^(0+384)+4)
  1622     0FB1  0861               	movf	main@bits^(0+384),w
  1623     0FB2  00B5               	movwf	(?_sprintf^(0+384)+4)
  1624     0FB3  160A  118A  21AF  120A  158A  	fcall	_sprintf
  1625                           
  1626                           ;newmain.c: 86:     display(0, 0xc0);
  1627     0FB8  3000               	movlw	0
  1628     0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  1629     0FBA  00B2               	movwf	display@RS^(0+128)
  1630     0FBB  00B3               	movwf	(display@RS+1)^(0+128)
  1631     0FBC  30C0               	movlw	192
  1632     0FBD  00B4               	movwf	display@DC^(0+128)
  1633     0FBE  3000               	movlw	0
  1634     0FBF  00B5               	movwf	(display@DC^(0+128)+1)
  1635     0FC0  160A  118A  2187  120A  158A  	fcall	_display
  1636                           
  1637                           ;newmain.c: 87:     for(int i=0;b[i]!='\0';i++)
  1638     0FC5  1683               	bsf	3,5	;RP0=1, select bank3
  1639     0FC6  1703               	bsf	3,6	;RP1=1, select bank3
  1640     0FC7  01E5               	clrf	main@i_70^(0+384)
  1641     0FC8  01E6               	clrf	(main@i_70+1)^(0+384)
  1642     0FC9                     l4445:
  1643     0FC9  0865               	movf	main@i_70^(0+384),w
  1644     0FCA  3ED3               	addlw	(low (main@b| (0+256)))& (0+255)
  1645     0FCB  0084               	movwf	4
  1646     0FCC  1783               	bsf	3,7	;select IRP bank3
  1647     0FCD  0800               	movf	0,w
  1648     0FCE  1903               	btfsc	3,2
  1649     0FCF  2FF1               	goto	l4447
  1650                           
  1651                           ;newmain.c: 88:     {;newmain.c: 89:         display(1, b[i]);
  1652     0FD0  3001               	movlw	1
  1653     0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  1654     0FD2  00B2               	movwf	display@RS^(0+128)
  1655     0FD3  3000               	movlw	0
  1656     0FD4  00B3               	movwf	(display@RS^(0+128)+1)
  1657     0FD5  1703               	bsf	3,6	;RP1=1, select bank3
  1658     0FD6  0865               	movf	main@i_70^(0+384),w
  1659     0FD7  3ED3               	addlw	(low (main@b| (0+256)))& (0+255)
  1660     0FD8  0084               	movwf	4
  1661     0FD9  0800               	movf	0,w
  1662     0FDA  00C6               	movwf	??_main^(0+384)
  1663     0FDB  01C7               	clrf	(??_main^(0+384)+1)
  1664     0FDC  0846               	movf	??_main^(0+384),w
  1665     0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  1666     0FDE  00B4               	movwf	display@DC^(0+128)
  1667     0FDF  1703               	bsf	3,6	;RP1=1, select bank3
  1668     0FE0  0847               	movf	(??_main+1)^(0+384),w
  1669     0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  1670     0FE2  00B5               	movwf	(display@DC+1)^(0+128)
  1671     0FE3  160A  118A  2187  120A  158A  	fcall	_display
  1672                           
  1673                           ;newmain.c: 90:     }
  1674     0FE8  3001               	movlw	1
  1675     0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  1676     0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  1677     0FEB  07E5               	addwf	main@i_70^(0+384),f
  1678     0FEC  1803               	skipnc
  1679     0FED  0AE6               	incf	(main@i_70+1)^(0+384),f
  1680     0FEE  3000               	movlw	0
  1681     0FEF  07E6               	addwf	(main@i_70+1)^(0+384),f
  1682     0FF0  2FC9               	goto	l4445
  1683     0FF1                     l4447:
  1684                           
  1685                           ;newmain.c: 91:     _delay((unsigned long)((300)*(10000000/4000.0)));
  1686     0FF1  3004               	movlw	4
  1687     0FF2  1683               	bsf	3,5	;RP0=1, select bank3
  1688     0FF3  1703               	bsf	3,6	;RP1=1, select bank3
  1689     0FF4  00C8               	movwf	(??_main^(0+384)+2)
  1690     0FF5  30CF               	movlw	207
  1691     0FF6  00C7               	movwf	(??_main^(0+384)+1)
  1692     0FF7  3001               	movlw	1
  1693     0FF8  00C6               	movwf	??_main^(0+384)
  1694     0FF9                     u6197:
  1695     0FF9  0BC6               	decfsz	??_main^(0+384),f
  1696     0FFA  2FF9               	goto	u6197
  1697     0FFB  0BC7               	decfsz	(??_main^(0+384)+1),f
  1698     0FFC  2FF9               	goto	u6197
  1699     0FFD  0BC8               	decfsz	(??_main^(0+384)+2),f
  1700     0FFE  2FF9               	goto	u6197
  1701     0FFF  2EE5               	goto	l4403
  1702     1000                     __end_of_main:
  1703                           
  1704                           	psect	text1
  1705     11AF                     __ptext1:	
  1706 ;; *************** function _sprintf *****************
  1707 ;; Defined at:
  1708 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  s               2   33[BANK3 ] PTR unsigned char 
  1711 ;;		 -> ISR@c(10), main@b(10), main@a(10), 
  1712 ;;  fmt             2   35[BANK3 ] PTR const unsigned char 
  1713 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  f              11   42[BANK3 ] struct _IO_FILE
  1716 ;;  ret             2    0        int 
  1717 ;;  ap              1   53[BANK3 ] PTR void [1]
  1718 ;;		 -> ?_sprintf(2), 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2   33[BANK3 ] int 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 300/300
  1725 ;;		On exit  : 300/300
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       6       0
  1729 ;;      Locals:         0       0       0      12       0
  1730 ;;      Temps:          0       0       0       3       0
  1731 ;;      Totals:         0       0       0      21       0
  1732 ;;Total ram usage:       21 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 16
  1735 ;; This function calls:
  1736 ;;		_vfprintf
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742     11AF                     _sprintf:	
  1743                           ;psect for function _sprintf
  1744                           
  1745                           
  1746                           ;incstack = 0
  1747 ;; hardware stack exceeded
  1748                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1749     11AF  30B5               	movlw	(low ((?_sprintf| (0+256)+4)))& (0+255)
  1750     11B0  00C5               	movwf	sprintf@ap^(0+384)
  1751     11B1  0831               	movf	sprintf@s^(0+384),w
  1752     11B2  00BA               	movwf	sprintf@f^(0+384)
  1753     11B3  0832               	movf	(sprintf@s+1)^(0+384),w
  1754     11B4  00BB               	movwf	(sprintf@f+1)^(0+384)
  1755     11B5  01BC               	clrf	(sprintf@f^(0+384)+2)
  1756     11B6  01BD               	clrf	((sprintf@f+1)^(0+384)+2)
  1757     11B7  01C3               	clrf	(sprintf@f^(0+384)+9)
  1758     11B8  01C4               	clrf	((sprintf@f+1)^(0+384)+9)
  1759     11B9  30BA               	movlw	low sprintf@f
  1760     11BA  00AC               	movwf	vfprintf@fp^(0+384)
  1761     11BB  3001               	movlw	high sprintf@f
  1762     11BC  00AD               	movwf	(vfprintf@fp^(0+384)+1)
  1763     11BD  0833               	movf	sprintf@fmt^(0+384),w
  1764     11BE  00AE               	movwf	vfprintf@fmt^(0+384)
  1765     11BF  0834               	movf	(sprintf@fmt+1)^(0+384),w
  1766     11C0  00AF               	movwf	(vfprintf@fmt+1)^(0+384)
  1767     11C1  30C5               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  1768     11C2  00B0               	movwf	vfprintf@ap^(0+384)
  1769     11C3  160A  118A  229E   	fcall	_vfprintf
  1770     11C6  083C               	movf	(sprintf@f^(0+384)+2),w
  1771     11C7  0731               	addwf	sprintf@s^(0+384),w
  1772     11C8  00B8               	movwf	(??_sprintf+1)^(0+384)
  1773     11C9  0832               	movf	(sprintf@s+1)^(0+384),w
  1774     11CA  00B7               	movwf	??_sprintf^(0+384)
  1775     11CB  1803               	skipnc
  1776     11CC  0AB7               	incf	??_sprintf^(0+384),f
  1777     11CD  1BBC               	btfsc	(sprintf@f^(0+384)+2),7
  1778     11CE  03B7               	decf	??_sprintf^(0+384),f
  1779     11CF  1683               	bsf	3,5	;RP0=1, select bank3
  1780     11D0  1703               	bsf	3,6	;RP1=1, select bank3
  1781     11D1  0837               	movf	??_sprintf^(0+384),w
  1782     11D2  00B9               	movwf	((??_sprintf+1)^(0+384)+1)
  1783     11D3  0838               	movf	(??_sprintf+1)^(0+384),w
  1784     11D4  0084               	movwf	4
  1785     11D5  1783               	bsf	3,7
  1786     11D6  1C39               	btfss	(??_sprintf+2)^(0+384),0
  1787     11D7  1383               	bcf	3,7
  1788     11D8  0180               	clrf	0
  1789     11D9  0008               	return
  1790     11DA                     __end_of_sprintf:
  1791                           
  1792                           	psect	text2
  1793     129E                     __ptext2:	
  1794 ;; *************** function _vfprintf *****************
  1795 ;; Defined at:
  1796 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  fp              2   28[BANK3 ] PTR struct _IO_FILE
  1799 ;;		 -> sprintf@f(11), 
  1800 ;;  fmt             2   30[BANK3 ] PTR const unsigned char 
  1801 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1802 ;;  ap              1   32[BANK3 ] PTR PTR void 
  1803 ;;		 -> sprintf@ap(1), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  cfmt            2   53[BANK1 ] PTR unsigned char 
  1806 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2   28[BANK3 ] int 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 300/300
  1813 ;;		On exit  : 300/300
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       5       0
  1817 ;;      Locals:         0       0       2       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         0       0       2       5       0
  1820 ;;Total ram usage:        7 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 15
  1823 ;; This function calls:
  1824 ;;		_vfpfcnvrt
  1825 ;; This function is called by:
  1826 ;;		_sprintf
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830     129E                     _vfprintf:	
  1831                           ;psect for function _vfprintf
  1832                           
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1835                           
  1836                           ;incstack = 0
  1837 ;; hardware stack exceeded
  1838                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1839     129E  082E               	movf	vfprintf@fmt^(0+384),w
  1840     129F  1303               	bcf	3,6	;RP1=0, select bank1
  1841     12A0  00D5               	movwf	vfprintf@cfmt^(0+128)
  1842     12A1  1703               	bsf	3,6	;RP1=1, select bank3
  1843     12A2  082F               	movf	(vfprintf@fmt+1)^(0+384),w
  1844     12A3  1303               	bcf	3,6	;RP1=0, select bank1
  1845     12A4  00D6               	movwf	(vfprintf@cfmt+1)^(0+128)
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1848     12A5  1703               	bsf	3,6	;RP1=1, select bank3
  1849     12A6  01E7               	clrf	_nout^(0+384)
  1850     12A7  01E8               	clrf	(_nout+1)^(0+384)
  1851     12A8                     l4369:	
  1852                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1853                           
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1856     12A8  1303               	bcf	3,6	;RP1=0, select bank1
  1857     12A9  0856               	movf	(vfprintf@cfmt+1)^(0+128),w
  1858     12AA  1283               	bcf	3,5	;RP0=0, select bank0
  1859     12AB  00FF               	movwf	127
  1860     12AC  1683               	bsf	3,5	;RP0=1, select bank1
  1861     12AD  0855               	movf	vfprintf@cfmt^(0+128),w
  1862     12AE  0084               	movwf	4
  1863     12AF  1283               	bcf	3,5	;RP0=0, select bank0
  1864     12B0  120A  118A  27EA  160A  118A  	fcall	stringtab
  1865     12B5  3A00               	xorlw	0
  1866     12B6  1903               	btfsc	3,2
  1867     12B7  2AD0               	goto	l4371
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1870     12B8  1683               	bsf	3,5	;RP0=1, select bank3
  1871     12B9  1703               	bsf	3,6	;RP1=1, select bank3
  1872     12BA  082C               	movf	vfprintf@fp^(0+384),w
  1873     12BB  009B               	movwf	vfpfcnvrt@fp^(0+384)
  1874     12BC  082D               	movf	(vfprintf@fp+1)^(0+384),w
  1875     12BD  009C               	movwf	(vfpfcnvrt@fp+1)^(0+384)
  1876     12BE  30D5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1877     12BF  009D               	movwf	vfpfcnvrt@fmt^(0+384)
  1878     12C0  0830               	movf	vfprintf@ap^(0+384),w
  1879     12C1  009E               	movwf	vfpfcnvrt@ap^(0+384)
  1880     12C2  3001               	movlw	1
  1881     12C3  009F               	movwf	(vfpfcnvrt@ap+1)^(0+384)
  1882     12C4  120A  118A  202C  160A  118A  	fcall	_vfpfcnvrt
  1883     12C9  081B               	movf	?_vfpfcnvrt^(0+384),w
  1884     12CA  07E7               	addwf	_nout^(0+384),f
  1885     12CB  1803               	skipnc
  1886     12CC  0AE8               	incf	(_nout+1)^(0+384),f
  1887     12CD  081C               	movf	(?_vfpfcnvrt+1)^(0+384),w
  1888     12CE  07E8               	addwf	(_nout+1)^(0+384),f
  1889     12CF  2AA8               	goto	l4369
  1890     12D0                     l4371:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1893     12D0  1683               	bsf	3,5	;RP0=1, select bank3
  1894     12D1  1703               	bsf	3,6	;RP1=1, select bank3
  1895     12D2  01AC               	clrf	?_vfprintf^(0+384)
  1896     12D3  01AD               	clrf	(?_vfprintf+1)^(0+384)
  1897     12D4  0008               	return
  1898     12D5                     __end_of_vfprintf:
  1899                           
  1900                           	psect	text3
  1901     002C                     __ptext3:	
  1902 ;; *************** function _vfpfcnvrt *****************
  1903 ;; Defined at:
  1904 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  fp              2   11[BANK3 ] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(11), 
  1908 ;;  fmt             1   13[BANK3 ] PTR PTR unsigned char 
  1909 ;;		 -> vfprintf@cfmt(2), 
  1910 ;;  ap              2   14[BANK3 ] PTR PTR void 
  1911 ;;		 -> sprintf@ap(1), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  convarg         4   22[BANK3 ] struct .
  1914 ;;  cp              2   26[BANK3 ] PTR unsigned char 
  1915 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1916 ;;  c               1   21[BANK3 ] unsigned char 
  1917 ;;  done            1   20[BANK3 ] _Bool 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2   11[BANK3 ] int 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 300/300
  1924 ;;		On exit  : 300/300
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       5       0
  1928 ;;      Locals:         0       0       0       8       0
  1929 ;;      Temps:          0       0       0       4       0
  1930 ;;      Totals:         0       0       0      17       0
  1931 ;;Total ram usage:       17 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 14
  1934 ;; This function calls:
  1935 ;;		_ctoa
  1936 ;;		_dtoa
  1937 ;;		_fputc
  1938 ;;		_otoa
  1939 ;;		_read_prec_or_width
  1940 ;;		_utoa
  1941 ;;		_xtoa
  1942 ;; This function is called by:
  1943 ;;		_vfprintf
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947     002C                     _vfpfcnvrt:	
  1948                           ;psect for function _vfpfcnvrt
  1949                           
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1952                           
  1953                           ;incstack = 0
  1954 ;; hardware stack exceeded
  1955                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1956     002C  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  1957     002D  0084               	movwf	4
  1958     002E  1383               	bcf	3,7	;select IRP bank0
  1959     002F  0800               	movf	0,w
  1960     0030  00A0               	movwf	??_vfpfcnvrt^(0+384)
  1961     0031  0A84               	incf	4,f
  1962     0032  0800               	movf	0,w
  1963     0033  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  1964     0034  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  1965     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0036  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0037  00FF               	movwf	127
  1968     0038  1683               	bsf	3,5	;RP0=1, select bank3
  1969     0039  1703               	bsf	3,6	;RP1=1, select bank3
  1970     003A  0820               	movf	??_vfpfcnvrt^(0+384),w
  1971     003B  0084               	movwf	4
  1972     003C  1283               	bcf	3,5	;RP0=0, select bank0
  1973     003D  1303               	bcf	3,6	;RP1=0, select bank0
  1974     003E  120A  118A  27EA  120A  118A  	fcall	stringtab
  1975     0043  3A25               	xorlw	37
  1976     0044  1D03               	skipz
  1977     0045  2C18               	goto	l4355
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1980     0046  1683               	bsf	3,5	;RP0=1, select bank3
  1981     0047  1703               	bsf	3,6	;RP1=1, select bank3
  1982     0048  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  1983     0049  0084               	movwf	4
  1984     004A  3001               	movlw	1
  1985     004B  1383               	bcf	3,7	;select IRP bank0
  1986     004C  0780               	addwf	0,f
  1987     004D  0A84               	incf	4,f
  1988     004E  1803               	skipnc
  1989     004F  0A80               	incf	0,f
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1992     0050  1303               	bcf	3,6	;RP1=0, select bank1
  1993     0051  01D7               	clrf	_width^(0+128)
  1994     0052  01D8               	clrf	(_width+1)^(0+128)
  1995     0053  3000               	movlw	0
  1996     0054  00DD               	movwf	_flags^(0+128)
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1999     0055  30FF               	movlw	255
  2000     0056  00D9               	movwf	_prec^(0+128)
  2001     0057  30FF               	movlw	255
  2002     0058  00DA               	movwf	(_prec^(0+128)+1)
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2005     0059  1703               	bsf	3,6	;RP1=1, select bank3
  2006     005A  01A4               	clrf	vfpfcnvrt@done^(0+384)
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2009     005B  2878               	goto	l4203
  2010     005C                     l766:	
  2011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1213:            
      +                               case '-' :
  2012                           
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  2015     005C  1683               	bsf	3,5	;RP0=1, select bank1
  2016     005D  145D               	bsf	_flags^(0+128),0
  2017     005E                     l4189:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  2020     005E  1703               	bsf	3,6	;RP1=1, select bank3
  2021     005F  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2022     0060  0084               	movwf	4
  2023     0061  3001               	movlw	1
  2024     0062  1383               	bcf	3,7	;select IRP bank0
  2025     0063  0780               	addwf	0,f
  2026     0064  0A84               	incf	4,f
  2027     0065  1803               	skipnc
  2028     0066  0A80               	incf	0,f
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  2031     0067  2878               	goto	l4203
  2032     0068                     l768:	
  2033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  2034                           
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2037     0068  1683               	bsf	3,5	;RP0=1, select bank1
  2038     0069  14DD               	bsf	_flags^(0+128),1
  2039     006A  285E               	goto	l4189
  2040     006B                     l769:	
  2041                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1225:            
      +                               case '+' :
  2042                           
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  2045     006B  1683               	bsf	3,5	;RP0=1, select bank1
  2046     006C  155D               	bsf	_flags^(0+128),2
  2047     006D  285E               	goto	l4189
  2048     006E                     l770:	
  2049                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1231:            
      +                               case ' ' :
  2050                           
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  2053     006E  1683               	bsf	3,5	;RP0=1, select bank1
  2054     006F  15DD               	bsf	_flags^(0+128),3
  2055     0070  285E               	goto	l4189
  2056     0071                     l771:	
  2057                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1237:            
      +                               case '#' :
  2058                           
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  2061     0071  1683               	bsf	3,5	;RP0=1, select bank1
  2062     0072  165D               	bsf	_flags^(0+128),4
  2063     0073  285E               	goto	l4189
  2064     0074                     l772:	
  2065                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  2066                           
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2069     0074  3001               	movlw	1
  2070     0075  1683               	bsf	3,5	;RP0=1, select bank3
  2071     0076  1703               	bsf	3,6	;RP1=1, select bank3
  2072     0077  00A4               	movwf	vfpfcnvrt@done^(0+384)
  2073     0078                     l4203:	
  2074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2075                           
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2078     0078  0824               	movf	vfpfcnvrt@done^(0+384),w
  2079     0079  1D03               	btfss	3,2
  2080     007A  28A3               	goto	l773
  2081     007B  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2082     007C  0084               	movwf	4
  2083     007D  1383               	bcf	3,7	;select IRP bank0
  2084     007E  0800               	movf	0,w
  2085     007F  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2086     0080  0A84               	incf	4,f
  2087     0081  0800               	movf	0,w
  2088     0082  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2089     0083  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2090     0084  1283               	bcf	3,5	;RP0=0, select bank0
  2091     0085  1303               	bcf	3,6	;RP1=0, select bank0
  2092     0086  00FF               	movwf	127
  2093     0087  1683               	bsf	3,5	;RP0=1, select bank3
  2094     0088  1703               	bsf	3,6	;RP1=1, select bank3
  2095     0089  0820               	movf	??_vfpfcnvrt^(0+384),w
  2096     008A  0084               	movwf	4
  2097     008B  1283               	bcf	3,5	;RP0=0, select bank0
  2098     008C  1303               	bcf	3,6	;RP1=0, select bank0
  2099     008D  120A  118A  27EA  120A  118A  	fcall	stringtab
  2100                           
  2101                           ; Switch size 1, requested type "simple"
  2102                           ; Number of cases is 5, Range of values is 32 to 48
  2103                           ; switch strategies available:
  2104                           ; Name         Instructions Cycles
  2105                           ; simple_byte           16     9 (average)
  2106                           ; direct_byte           62    11 (fixed)
  2107                           ; jumptable            263     9 (fixed)
  2108                           ;	Chosen strategy is simple_byte
  2109     0092  3A20               	xorlw	32	; case 32
  2110     0093  1903               	skipnz
  2111     0094  286E               	goto	l770
  2112     0095  3A03               	xorlw	3	; case 35
  2113     0096  1903               	skipnz
  2114     0097  2871               	goto	l771
  2115     0098  3A08               	xorlw	8	; case 43
  2116     0099  1903               	skipnz
  2117     009A  286B               	goto	l769
  2118     009B  3A06               	xorlw	6	; case 45
  2119     009C  1903               	skipnz
  2120     009D  285C               	goto	l766
  2121     009E  3A1D               	xorlw	29	; case 48
  2122     009F  1903               	skipnz
  2123     00A0  2868               	goto	l768
  2124     00A1  2874               	goto	l772
  2125     00A2  2878               	goto	l4203
  2126     00A3                     l773:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  2129     00A3  1303               	bcf	3,6	;RP1=0, select bank1
  2130     00A4  1C5D               	btfss	_flags^(0+128),0
  2131     00A5  28A8               	goto	l4207
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  2134     00A6  30FD               	movlw	253
  2135     00A7  05DD               	andwf	_flags^(0+128),f
  2136     00A8                     l4207:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2139     00A8  1703               	bsf	3,6	;RP1=1, select bank3
  2140     00A9  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2141     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  2142     00AB  00B8               	movwf	read_prec_or_width@fmt^(0+128)
  2143     00AC  1703               	bsf	3,6	;RP1=1, select bank3
  2144     00AD  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2145     00AE  1303               	bcf	3,6	;RP1=0, select bank1
  2146     00AF  00B9               	movwf	read_prec_or_width@ap^(0+128)
  2147     00B0  160A  118A  25FD  120A  118A  	fcall	_read_prec_or_width
  2148     00B5  0839               	movf	(?_read_prec_or_width+1)^(0+128),w
  2149     00B6  00D8               	movwf	(_width+1)^(0+128)
  2150     00B7  0838               	movf	?_read_prec_or_width^(0+128),w
  2151     00B8  00D7               	movwf	_width^(0+128)
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2154     00B9  1FD8               	btfss	(_width+1)^(0+128),7
  2155     00BA  28C1               	goto	l4215
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2158     00BB  145D               	bsf	_flags^(0+128),0
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2161     00BC  09D7               	comf	_width^(0+128),f
  2162     00BD  09D8               	comf	(_width+1)^(0+128),f
  2163     00BE  0AD7               	incf	_width^(0+128),f
  2164     00BF  1903               	skipnz
  2165     00C0  0AD8               	incf	(_width+1)^(0+128),f
  2166     00C1                     l4215:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2169     00C1  1703               	bsf	3,6	;RP1=1, select bank3
  2170     00C2  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2171     00C3  0084               	movwf	4
  2172     00C4  1383               	bcf	3,7	;select IRP bank0
  2173     00C5  0800               	movf	0,w
  2174     00C6  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2175     00C7  0A84               	incf	4,f
  2176     00C8  0800               	movf	0,w
  2177     00C9  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2178     00CA  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2179     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2180     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2181     00CD  00FF               	movwf	127
  2182     00CE  1683               	bsf	3,5	;RP0=1, select bank3
  2183     00CF  1703               	bsf	3,6	;RP1=1, select bank3
  2184     00D0  0820               	movf	??_vfpfcnvrt^(0+384),w
  2185     00D1  0084               	movwf	4
  2186     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2187     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2188     00D4  120A  118A  27EA  120A  118A  	fcall	stringtab
  2189     00D9  3A2E               	xorlw	46
  2190     00DA  1D03               	skipz
  2191     00DB  28F6               	goto	l4221
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2194     00DC  1683               	bsf	3,5	;RP0=1, select bank3
  2195     00DD  1703               	bsf	3,6	;RP1=1, select bank3
  2196     00DE  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2197     00DF  0084               	movwf	4
  2198     00E0  3001               	movlw	1
  2199     00E1  1383               	bcf	3,7	;select IRP bank0
  2200     00E2  0780               	addwf	0,f
  2201     00E3  0A84               	incf	4,f
  2202     00E4  1803               	skipnc
  2203     00E5  0A80               	incf	0,f
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2206     00E6  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2207     00E7  1303               	bcf	3,6	;RP1=0, select bank1
  2208     00E8  00B8               	movwf	read_prec_or_width@fmt^(0+128)
  2209     00E9  1703               	bsf	3,6	;RP1=1, select bank3
  2210     00EA  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2211     00EB  1303               	bcf	3,6	;RP1=0, select bank1
  2212     00EC  00B9               	movwf	read_prec_or_width@ap^(0+128)
  2213     00ED  160A  118A  25FD  120A  118A  	fcall	_read_prec_or_width
  2214     00F2  0839               	movf	(?_read_prec_or_width+1)^(0+128),w
  2215     00F3  00DA               	movwf	(_prec+1)^(0+128)
  2216     00F4  0838               	movf	?_read_prec_or_width^(0+128),w
  2217     00F5  00D9               	movwf	_prec^(0+128)
  2218     00F6                     l4221:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  2221     00F6  1683               	bsf	3,5	;RP0=1, select bank3
  2222     00F7  1703               	bsf	3,6	;RP1=1, select bank3
  2223     00F8  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2224     00F9  0084               	movwf	4
  2225     00FA  1383               	bcf	3,7	;select IRP bank0
  2226     00FB  0800               	movf	0,w
  2227     00FC  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2228     00FD  0A84               	incf	4,f
  2229     00FE  0800               	movf	0,w
  2230     00FF  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2231     0100  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2232     0101  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0102  1303               	bcf	3,6	;RP1=0, select bank0
  2234     0103  00FF               	movwf	127
  2235     0104  1683               	bsf	3,5	;RP0=1, select bank3
  2236     0105  1703               	bsf	3,6	;RP1=1, select bank3
  2237     0106  0820               	movf	??_vfpfcnvrt^(0+384),w
  2238     0107  0084               	movwf	4
  2239     0108  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0109  1303               	bcf	3,6	;RP1=0, select bank0
  2241     010A  120A  118A  27EA  120A  118A  	fcall	stringtab
  2242     010F  3A63               	xorlw	99
  2243     0110  1D03               	skipz
  2244     0111  2940               	goto	l4231
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  2247     0112  1683               	bsf	3,5	;RP0=1, select bank3
  2248     0113  1703               	bsf	3,6	;RP1=1, select bank3
  2249     0114  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2250     0115  0084               	movwf	4
  2251     0116  3001               	movlw	1
  2252     0117  1383               	bcf	3,7	;select IRP bank0
  2253     0118  0780               	addwf	0,f
  2254     0119  0A84               	incf	4,f
  2255     011A  1803               	skipnc
  2256     011B  0A80               	incf	0,f
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2259     011C  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2260     011D  0084               	movwf	4
  2261     011E  1783               	bsf	3,7
  2262     011F  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2263     0120  1383               	bcf	3,7
  2264     0121  0800               	movf	0,w
  2265     0122  00FF               	movwf	127
  2266     0123  3002               	movlw	2
  2267     0124  0780               	addwf	0,f
  2268     0125  087F               	movf	127,w
  2269     0126  0084               	movwf	4
  2270     0127  1783               	bsf	3,7	;select IRP bank2
  2271     0128  0800               	movf	0,w
  2272     0129  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  2275     012A  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2276     012B  1303               	bcf	3,6	;RP1=0, select bank1
  2277     012C  00BF               	movwf	ctoa@fp^(0+128)
  2278     012D  1703               	bsf	3,6	;RP1=1, select bank3
  2279     012E  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2280     012F  1303               	bcf	3,6	;RP1=0, select bank1
  2281     0130  00C0               	movwf	(ctoa@fp+1)^(0+128)
  2282     0131  1703               	bsf	3,6	;RP1=1, select bank3
  2283     0132  0825               	movf	vfpfcnvrt@c^(0+384),w
  2284     0133  1303               	bcf	3,6	;RP1=0, select bank1
  2285     0134  00C1               	movwf	ctoa@c^(0+128)
  2286     0135  160A  118A  2591   	fcall	_ctoa
  2287     0138  0840               	movf	(?_ctoa+1)^(0+128),w
  2288     0139  1703               	bsf	3,6	;RP1=1, select bank3
  2289     013A  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2290     013B  1303               	bcf	3,6	;RP1=0, select bank1
  2291     013C  083F               	movf	?_ctoa^(0+128),w
  2292     013D  1703               	bsf	3,6	;RP1=1, select bank3
  2293     013E  009B               	movwf	?_vfpfcnvrt^(0+384)
  2294     013F  0008               	return
  2295     0140                     l4231:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2298     0140  1683               	bsf	3,5	;RP0=1, select bank3
  2299     0141  1703               	bsf	3,6	;RP1=1, select bank3
  2300     0142  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2301     0143  0084               	movwf	4
  2302     0144  1383               	bcf	3,7	;select IRP bank0
  2303     0145  0800               	movf	0,w
  2304     0146  00AA               	movwf	vfpfcnvrt@cp^(0+384)
  2305     0147  0A84               	incf	4,f
  2306     0148  0800               	movf	0,w
  2307     0149  0384               	decf	4,f
  2308     014A  00AB               	movwf	(vfpfcnvrt@cp+1)^(0+384)
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  2311     014B  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2312     014C  1283               	bcf	3,5	;RP0=0, select bank0
  2313     014D  1303               	bcf	3,6	;RP1=0, select bank0
  2314     014E  00FF               	movwf	127
  2315     014F  1683               	bsf	3,5	;RP0=1, select bank3
  2316     0150  1703               	bsf	3,6	;RP1=1, select bank3
  2317     0151  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2318     0152  0084               	movwf	4
  2319     0153  1283               	bcf	3,5	;RP0=0, select bank0
  2320     0154  1303               	bcf	3,6	;RP1=0, select bank0
  2321     0155  120A  118A  27EA  120A  118A  	fcall	stringtab
  2322     015A  1683               	bsf	3,5	;RP0=1, select bank3
  2323     015B  1703               	bsf	3,6	;RP1=1, select bank3
  2324     015C  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  2327     015D  2986               	goto	l4249
  2328     015E                     l4235:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  2331     015E  3001               	movlw	1
  2332     015F  07AA               	addwf	vfpfcnvrt@cp^(0+384),f
  2333     0160  1803               	skipnc
  2334     0161  0AAB               	incf	(vfpfcnvrt@cp+1)^(0+384),f
  2335     0162  3000               	movlw	0
  2336     0163  07AB               	addwf	(vfpfcnvrt@cp+1)^(0+384),f
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  2339     0164  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2340     0165  1283               	bcf	3,5	;RP0=0, select bank0
  2341     0166  1303               	bcf	3,6	;RP1=0, select bank0
  2342     0167  00FF               	movwf	127
  2343     0168  1683               	bsf	3,5	;RP0=1, select bank3
  2344     0169  1703               	bsf	3,6	;RP1=1, select bank3
  2345     016A  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2346     016B  0084               	movwf	4
  2347     016C  1283               	bcf	3,5	;RP0=0, select bank0
  2348     016D  1303               	bcf	3,6	;RP1=0, select bank0
  2349     016E  120A  118A  27EA  120A  118A  	fcall	stringtab
  2350     0173  3A68               	xorlw	104
  2351     0174  1D03               	skipz
  2352     0175  29A6               	goto	l4251
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  2355     0176  3048               	movlw	72
  2356     0177  1683               	bsf	3,5	;RP0=1, select bank3
  2357     0178  1703               	bsf	3,6	;RP1=1, select bank3
  2358     0179  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2359     017A                     l4241:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  2362     017A  3001               	movlw	1
  2363     017B  07AA               	addwf	vfpfcnvrt@cp^(0+384),f
  2364     017C  1803               	skipnc
  2365     017D  0AAB               	incf	(vfpfcnvrt@cp+1)^(0+384),f
  2366     017E  3000               	movlw	0
  2367     017F  07AB               	addwf	(vfpfcnvrt@cp+1)^(0+384),f
  2368     0180  29A6               	goto	l4251
  2369     0181                     l788:	
  2370                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1339:    case 'd'
      +                          :
  2371                           
  2372     0181                     l791:	
  2373                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1348:    case 'n'
      +                          :
  2374                           
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  2377     0181  3069               	movlw	105
  2378     0182  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
  2381     0183  29A6               	goto	l4251
  2382     0184                     l4245:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  2385     0184  01A5               	clrf	vfpfcnvrt@c^(0+384)
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
  2388     0185  29A6               	goto	l4251
  2389     0186                     l4249:
  2390     0186  0825               	movf	vfpfcnvrt@c^(0+384),w
  2391                           
  2392                           ; Switch size 1, requested type "simple"
  2393                           ; Number of cases is 10, Range of values is 88 to 122
  2394                           ; switch strategies available:
  2395                           ; Name         Instructions Cycles
  2396                           ; simple_byte           31    16 (average)
  2397                           ; direct_byte          116    11 (fixed)
  2398                           ; jumptable            263     9 (fixed)
  2399                           ;	Chosen strategy is simple_byte
  2400     0187  3A58               	xorlw	88	; case 88
  2401     0188  1903               	skipnz
  2402     0189  2981               	goto	l791
  2403     018A  3A3C               	xorlw	60	; case 100
  2404     018B  1903               	skipnz
  2405     018C  2981               	goto	l791
  2406     018D  3A0C               	xorlw	12	; case 104
  2407     018E  1903               	skipnz
  2408     018F  295E               	goto	l4235
  2409     0190  3A01               	xorlw	1	; case 105
  2410     0191  1903               	skipnz
  2411     0192  2981               	goto	l791
  2412     0193  3A07               	xorlw	7	; case 110
  2413     0194  1903               	skipnz
  2414     0195  2981               	goto	l791
  2415     0196  3A01               	xorlw	1	; case 111
  2416     0197  1903               	skipnz
  2417     0198  2981               	goto	l788
  2418     0199  3A1B               	xorlw	27	; case 116
  2419     019A  1903               	skipnz
  2420     019B  297A               	goto	l4241
  2421     019C  3A01               	xorlw	1	; case 117
  2422     019D  1903               	skipnz
  2423     019E  2981               	goto	l791
  2424     019F  3A0D               	xorlw	13	; case 120
  2425     01A0  1903               	skipnz
  2426     01A1  2981               	goto	l791
  2427     01A2  3A02               	xorlw	2	; case 122
  2428     01A3  1903               	skipnz
  2429     01A4  297A               	goto	l4241
  2430     01A5  2984               	goto	l4245
  2431     01A6                     l4251:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2434     01A6  1683               	bsf	3,5	;RP0=1, select bank3
  2435     01A7  1703               	bsf	3,6	;RP1=1, select bank3
  2436     01A8  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2437     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2438     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2439     01AB  00FF               	movwf	127
  2440     01AC  1683               	bsf	3,5	;RP0=1, select bank3
  2441     01AD  1703               	bsf	3,6	;RP1=1, select bank3
  2442     01AE  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2443     01AF  0084               	movwf	4
  2444     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2445     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2446     01B2  120A  118A  27EA  120A  118A  	fcall	stringtab
  2447     01B7  3A64               	xorlw	100
  2448     01B8  1903               	skipnz
  2449     01B9  29F4               	goto	l4267
  2450     01BA  1683               	bsf	3,5	;RP0=1, select bank3
  2451     01BB  1703               	bsf	3,6	;RP1=1, select bank3
  2452     01BC  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2453     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2454     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2455     01BF  00FF               	movwf	127
  2456     01C0  1683               	bsf	3,5	;RP0=1, select bank3
  2457     01C1  1703               	bsf	3,6	;RP1=1, select bank3
  2458     01C2  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2459     01C3  0084               	movwf	4
  2460     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2461     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2462     01C6  120A  118A  27EA  120A  118A  	fcall	stringtab
  2463     01CB  3A69               	xorlw	105
  2464     01CC  1903               	btfsc	3,2
  2465     01CD  29F4               	goto	l4267
  2466     01CE  2A37               	goto	l4275
  2467     01CF                     l4255:
  2468     01CF                     l4257:	
  2469                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2472                           
  2473     01CF  29E2               	goto	l4263
  2474     01D0                     l4259:	
  2475                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1370:      break;
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2478                           
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2481     01D0  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2482     01D1  0084               	movwf	4
  2483     01D2  1783               	bsf	3,7
  2484     01D3  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2485     01D4  1383               	bcf	3,7
  2486     01D5  0800               	movf	0,w
  2487     01D6  00FF               	movwf	127
  2488     01D7  3002               	movlw	2
  2489     01D8  0780               	addwf	0,f
  2490     01D9  087F               	movf	127,w
  2491     01DA  0084               	movwf	4
  2492     01DB  1783               	bsf	3,7	;select IRP bank2
  2493     01DC  0800               	movf	0,w
  2494     01DD  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2495     01DE  01A7               	clrf	(vfpfcnvrt@convarg+1)^(0+384)
  2496     01DF  1BA6               	btfsc	vfpfcnvrt@convarg^(0+384),7
  2497     01E0  03A7               	decf	(vfpfcnvrt@convarg+1)^(0+384),f
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1375:      break;
  2500     01E1  2A07               	goto	l4269
  2501     01E2                     l4261:
  2502     01E2                     l4263:	
  2503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1390:      break;
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2506                           
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2509     01E2  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2510     01E3  0084               	movwf	4
  2511     01E4  1783               	bsf	3,7
  2512     01E5  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2513     01E6  1383               	bcf	3,7
  2514     01E7  0800               	movf	0,w
  2515     01E8  00FF               	movwf	127
  2516     01E9  3002               	movlw	2
  2517     01EA  0780               	addwf	0,f
  2518     01EB  087F               	movf	127,w
  2519     01EC  0084               	movwf	4
  2520     01ED  1783               	bsf	3,7	;select IRP bank2
  2521     01EE  0800               	movf	0,w
  2522     01EF  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2523     01F0  0A84               	incf	4,f
  2524     01F1  0800               	movf	0,w
  2525     01F2  00A7               	movwf	(vfpfcnvrt@convarg+1)^(0+384)
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1400:      break;
  2528     01F3  2A07               	goto	l4269
  2529     01F4                     l4267:
  2530     01F4  1683               	bsf	3,5	;RP0=1, select bank3
  2531     01F5  1703               	bsf	3,6	;RP1=1, select bank3
  2532     01F6  0825               	movf	vfpfcnvrt@c^(0+384),w
  2533                           
  2534                           ; Switch size 1, requested type "simple"
  2535                           ; Number of cases is 5, Range of values is 72 to 122
  2536                           ; switch strategies available:
  2537                           ; Name         Instructions Cycles
  2538                           ; simple_byte           16     9 (average)
  2539                           ; direct_byte          164    11 (fixed)
  2540                           ; jumptable            263     9 (fixed)
  2541                           ;	Chosen strategy is simple_byte
  2542     01F7  3A48               	xorlw	72	; case 72
  2543     01F8  1903               	skipnz
  2544     01F9  29D0               	goto	l4259
  2545     01FA  3A20               	xorlw	32	; case 104
  2546     01FB  1903               	skipnz
  2547     01FC  29CF               	goto	l4257
  2548     01FD  3A01               	xorlw	1	; case 105
  2549     01FE  1903               	skipnz
  2550     01FF  29CF               	goto	l4255
  2551     0200  3A1D               	xorlw	29	; case 116
  2552     0201  1903               	skipnz
  2553     0202  29E2               	goto	l4261
  2554     0203  3A0E               	xorlw	14	; case 122
  2555     0204  1903               	skipnz
  2556     0205  29E2               	goto	l4263
  2557     0206  2A07               	goto	l4269
  2558     0207                     l4269:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2561     0207  3001               	movlw	1
  2562     0208  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2563     0209  0820               	movf	??_vfpfcnvrt^(0+384),w
  2564     020A  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  2565     020B  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  2566     020C  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2567     020D  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  2568     020E  1803               	skipnc
  2569     020F  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  2570     0210  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  2571     0211  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  2572     0212  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2573     0213  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  2574     0214  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2575     0215  0084               	movwf	4
  2576     0216  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  2577     0217  1383               	bcf	3,7	;select IRP bank0
  2578     0218  0080               	movwf	0
  2579     0219  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  2580     021A  0A84               	incf	4,f
  2581     021B  0080               	movwf	0
  2582     021C  0384               	decf	4,f
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  2585     021D  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2586     021E  1303               	bcf	3,6	;RP1=0, select bank1
  2587     021F  00CF               	movwf	dtoa@fp^(0+128)
  2588     0220  1703               	bsf	3,6	;RP1=1, select bank3
  2589     0221  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2590     0222  1303               	bcf	3,6	;RP1=0, select bank1
  2591     0223  00D0               	movwf	(dtoa@fp+1)^(0+128)
  2592     0224  1703               	bsf	3,6	;RP1=1, select bank3
  2593     0225  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2594     0226  1303               	bcf	3,6	;RP1=0, select bank1
  2595     0227  00D2               	movwf	(dtoa@d+1)^(0+128)
  2596     0228  1703               	bsf	3,6	;RP1=1, select bank3
  2597     0229  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2598     022A  1303               	bcf	3,6	;RP1=0, select bank1
  2599     022B  00D1               	movwf	dtoa@d^(0+128)
  2600     022C  120A  158A  25CD   	fcall	_dtoa
  2601     022F  0850               	movf	(?_dtoa+1)^(0+128),w
  2602     0230  1703               	bsf	3,6	;RP1=1, select bank3
  2603     0231  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2604     0232  1303               	bcf	3,6	;RP1=0, select bank1
  2605     0233  084F               	movf	?_dtoa^(0+128),w
  2606     0234  1703               	bsf	3,6	;RP1=1, select bank3
  2607     0235  009B               	movwf	?_vfpfcnvrt^(0+384)
  2608     0236  0008               	return
  2609     0237                     l4275:
  2610     0237  1683               	bsf	3,5	;RP0=1, select bank3
  2611     0238  1703               	bsf	3,6	;RP1=1, select bank3
  2612     0239  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2613     023A  1283               	bcf	3,5	;RP0=0, select bank0
  2614     023B  1303               	bcf	3,6	;RP1=0, select bank0
  2615     023C  00FF               	movwf	127
  2616     023D  1683               	bsf	3,5	;RP0=1, select bank3
  2617     023E  1703               	bsf	3,6	;RP1=1, select bank3
  2618     023F  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2619     0240  0084               	movwf	4
  2620     0241  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0242  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0243  120A  118A  27EA  120A  118A  	fcall	stringtab
  2623     0248  3A78               	xorlw	120
  2624     0249  1903               	skipnz
  2625     024A  2AAE               	goto	l4295
  2626     024B  1683               	bsf	3,5	;RP0=1, select bank3
  2627     024C  1703               	bsf	3,6	;RP1=1, select bank3
  2628     024D  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2629     024E  1283               	bcf	3,5	;RP0=0, select bank0
  2630     024F  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0250  00FF               	movwf	127
  2632     0251  1683               	bsf	3,5	;RP0=1, select bank3
  2633     0252  1703               	bsf	3,6	;RP1=1, select bank3
  2634     0253  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2635     0254  0084               	movwf	4
  2636     0255  1283               	bcf	3,5	;RP0=0, select bank0
  2637     0256  1303               	bcf	3,6	;RP1=0, select bank0
  2638     0257  120A  118A  27EA  120A  118A  	fcall	stringtab
  2639     025C  3A58               	xorlw	88
  2640     025D  1903               	skipnz
  2641     025E  2AAE               	goto	l4295
  2642     025F  1683               	bsf	3,5	;RP0=1, select bank3
  2643     0260  1703               	bsf	3,6	;RP1=1, select bank3
  2644     0261  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2645     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2646     0263  1303               	bcf	3,6	;RP1=0, select bank0
  2647     0264  00FF               	movwf	127
  2648     0265  1683               	bsf	3,5	;RP0=1, select bank3
  2649     0266  1703               	bsf	3,6	;RP1=1, select bank3
  2650     0267  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2651     0268  0084               	movwf	4
  2652     0269  1283               	bcf	3,5	;RP0=0, select bank0
  2653     026A  1303               	bcf	3,6	;RP1=0, select bank0
  2654     026B  120A  118A  27EA  120A  118A  	fcall	stringtab
  2655     0270  3A6F               	xorlw	111
  2656     0271  1903               	skipnz
  2657     0272  2AAE               	goto	l4295
  2658     0273  1683               	bsf	3,5	;RP0=1, select bank3
  2659     0274  1703               	bsf	3,6	;RP1=1, select bank3
  2660     0275  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2661     0276  1283               	bcf	3,5	;RP0=0, select bank0
  2662     0277  1303               	bcf	3,6	;RP1=0, select bank0
  2663     0278  00FF               	movwf	127
  2664     0279  1683               	bsf	3,5	;RP0=1, select bank3
  2665     027A  1703               	bsf	3,6	;RP1=1, select bank3
  2666     027B  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2667     027C  0084               	movwf	4
  2668     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2669     027E  1303               	bcf	3,6	;RP1=0, select bank0
  2670     027F  120A  118A  27EA  120A  118A  	fcall	stringtab
  2671     0284  3A75               	xorlw	117
  2672     0285  1903               	btfsc	3,2
  2673     0286  2AAE               	goto	l4295
  2674     0287  2B5A               	goto	l4315
  2675     0288                     l4283:
  2676     0288                     l4285:	
  2677                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2680                           
  2681     0288  2A9C               	goto	l4291
  2682     0289                     l4287:	
  2683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1461:      break;
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  2686                           
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  2689     0289  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2690     028A  0084               	movwf	4
  2691     028B  1783               	bsf	3,7
  2692     028C  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2693     028D  1383               	bcf	3,7
  2694     028E  0800               	movf	0,w
  2695     028F  00FF               	movwf	127
  2696     0290  3002               	movlw	2
  2697     0291  0780               	addwf	0,f
  2698     0292  087F               	movf	127,w
  2699     0293  0084               	movwf	4
  2700     0294  1783               	bsf	3,7	;select IRP bank2
  2701     0295  0800               	movf	0,w
  2702     0296  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2703     0297  01A1               	clrf	(??_vfpfcnvrt^(0+384)+1)
  2704     0298  0820               	movf	??_vfpfcnvrt^(0+384),w
  2705     0299  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2706     029A  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2707     029B  2AAC               	goto	L3
  2708     029C                     l4289:	
  2709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1466:      break;
  2710                           
  2711     029C                     l4291:	
  2712                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1481:      break;
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2715                           
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2718     029C  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2719     029D  0084               	movwf	4
  2720     029E  1783               	bsf	3,7
  2721     029F  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2722     02A0  1383               	bcf	3,7
  2723     02A1  0800               	movf	0,w
  2724     02A2  00FF               	movwf	127
  2725     02A3  3002               	movlw	2
  2726     02A4  0780               	addwf	0,f
  2727     02A5  087F               	movf	127,w
  2728     02A6  0084               	movwf	4
  2729     02A7  1783               	bsf	3,7	;select IRP bank2
  2730     02A8  0800               	movf	0,w
  2731     02A9  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2732     02AA  0A84               	incf	4,f
  2733     02AB  0800               	movf	0,w
  2734     02AC                     L3:
  2735     02AC  00A7               	movwf	(vfpfcnvrt@convarg+1)^(0+384)
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1491:      break;
  2738     02AD  2AC1               	goto	l4297
  2739     02AE                     l4295:
  2740     02AE  1683               	bsf	3,5	;RP0=1, select bank3
  2741     02AF  1703               	bsf	3,6	;RP1=1, select bank3
  2742     02B0  0825               	movf	vfpfcnvrt@c^(0+384),w
  2743                           
  2744                           ; Switch size 1, requested type "simple"
  2745                           ; Number of cases is 5, Range of values is 72 to 122
  2746                           ; switch strategies available:
  2747                           ; Name         Instructions Cycles
  2748                           ; simple_byte           16     9 (average)
  2749                           ; direct_byte          164    11 (fixed)
  2750                           ; jumptable            263     9 (fixed)
  2751                           ;	Chosen strategy is simple_byte
  2752     02B1  3A48               	xorlw	72	; case 72
  2753     02B2  1903               	skipnz
  2754     02B3  2A89               	goto	l4287
  2755     02B4  3A20               	xorlw	32	; case 104
  2756     02B5  1903               	skipnz
  2757     02B6  2A88               	goto	l4285
  2758     02B7  3A01               	xorlw	1	; case 105
  2759     02B8  1903               	skipnz
  2760     02B9  2A88               	goto	l4283
  2761     02BA  3A1D               	xorlw	29	; case 116
  2762     02BB  1903               	skipnz
  2763     02BC  2A9C               	goto	l4289
  2764     02BD  3A0E               	xorlw	14	; case 122
  2765     02BE  1903               	skipnz
  2766     02BF  2A9C               	goto	l4291
  2767     02C0  2AC1               	goto	l4297
  2768     02C1                     l4297:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2771     02C1  3001               	movlw	1
  2772     02C2  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2773     02C3  0820               	movf	??_vfpfcnvrt^(0+384),w
  2774     02C4  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  2775     02C5  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  2776     02C6  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2777     02C7  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  2778     02C8  1803               	skipnc
  2779     02C9  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  2780     02CA  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  2781     02CB  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  2782     02CC  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2783     02CD  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  2784     02CE  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2785     02CF  0084               	movwf	4
  2786     02D0  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  2787     02D1  1383               	bcf	3,7	;select IRP bank0
  2788     02D2  0080               	movwf	0
  2789     02D3  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  2790     02D4  0A84               	incf	4,f
  2791     02D5  0080               	movwf	0
  2792     02D6  0384               	decf	4,f
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2795     02D7  2B3E               	goto	l4313
  2796     02D8                     l4299:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  2799     02D8  1683               	bsf	3,5	;RP0=1, select bank3
  2800     02D9  1703               	bsf	3,6	;RP1=1, select bank3
  2801     02DA  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2802     02DB  1303               	bcf	3,6	;RP1=0, select bank1
  2803     02DC  00CF               	movwf	otoa@fp^(0+128)
  2804     02DD  1703               	bsf	3,6	;RP1=1, select bank3
  2805     02DE  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2806     02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2807     02E0  00D0               	movwf	(otoa@fp+1)^(0+128)
  2808     02E1  1703               	bsf	3,6	;RP1=1, select bank3
  2809     02E2  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2810     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2811     02E4  00D2               	movwf	(otoa@d+1)^(0+128)
  2812     02E5  1703               	bsf	3,6	;RP1=1, select bank3
  2813     02E6  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2814     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2815     02E8  00D1               	movwf	otoa@d^(0+128)
  2816     02E9  120A  158A  2265   	fcall	_otoa
  2817     02EC  0850               	movf	(?_otoa+1)^(0+128),w
  2818     02ED  1703               	bsf	3,6	;RP1=1, select bank3
  2819     02EE  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2820     02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2821     02F0  084F               	movf	?_otoa^(0+128),w
  2822     02F1  1703               	bsf	3,6	;RP1=1, select bank3
  2823     02F2  009B               	movwf	?_vfpfcnvrt^(0+384)
  2824     02F3  0008               	return
  2825     02F4                     l4303:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  2828     02F4  1683               	bsf	3,5	;RP0=1, select bank3
  2829     02F5  1703               	bsf	3,6	;RP1=1, select bank3
  2830     02F6  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2831     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2832     02F8  00CF               	movwf	utoa@fp^(0+128)
  2833     02F9  1703               	bsf	3,6	;RP1=1, select bank3
  2834     02FA  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2835     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2836     02FC  00D0               	movwf	(utoa@fp+1)^(0+128)
  2837     02FD  1703               	bsf	3,6	;RP1=1, select bank3
  2838     02FE  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2839     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2840     0300  00D2               	movwf	(utoa@d+1)^(0+128)
  2841     0301  1703               	bsf	3,6	;RP1=1, select bank3
  2842     0302  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2843     0303  1303               	bcf	3,6	;RP1=0, select bank1
  2844     0304  00D1               	movwf	utoa@d^(0+128)
  2845     0305  120A  158A  210E   	fcall	_utoa
  2846     0308  0850               	movf	(?_utoa+1)^(0+128),w
  2847     0309  1703               	bsf	3,6	;RP1=1, select bank3
  2848     030A  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2849     030B  1303               	bcf	3,6	;RP1=0, select bank1
  2850     030C  084F               	movf	?_utoa^(0+128),w
  2851     030D  1703               	bsf	3,6	;RP1=1, select bank3
  2852     030E  009B               	movwf	?_vfpfcnvrt^(0+384)
  2853     030F  0008               	return
  2854     0310                     l4307:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  2857     0310  1683               	bsf	3,5	;RP0=1, select bank3
  2858     0311  1703               	bsf	3,6	;RP1=1, select bank3
  2859     0312  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2860     0313  1303               	bcf	3,6	;RP1=0, select bank1
  2861     0314  00CF               	movwf	xtoa@fp^(0+128)
  2862     0315  1703               	bsf	3,6	;RP1=1, select bank3
  2863     0316  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2864     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2865     0318  00D0               	movwf	(xtoa@fp+1)^(0+128)
  2866     0319  1703               	bsf	3,6	;RP1=1, select bank3
  2867     031A  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2868     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2869     031C  00D2               	movwf	(xtoa@d+1)^(0+128)
  2870     031D  1703               	bsf	3,6	;RP1=1, select bank3
  2871     031E  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2872     031F  1303               	bcf	3,6	;RP1=0, select bank1
  2873     0320  00D1               	movwf	xtoa@d^(0+128)
  2874     0321  1703               	bsf	3,6	;RP1=1, select bank3
  2875     0322  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2876     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2877     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2878     0325  00FF               	movwf	127
  2879     0326  1683               	bsf	3,5	;RP0=1, select bank3
  2880     0327  1703               	bsf	3,6	;RP1=1, select bank3
  2881     0328  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2882     0329  0084               	movwf	4
  2883     032A  1283               	bcf	3,5	;RP0=0, select bank0
  2884     032B  1303               	bcf	3,6	;RP1=0, select bank0
  2885     032C  120A  118A  27EA  120A  118A  	fcall	stringtab
  2886     0331  1683               	bsf	3,5	;RP0=1, select bank1
  2887     0332  00D3               	movwf	xtoa@x^(0+128)
  2888     0333  120A  158A  24E2   	fcall	_xtoa
  2889     0336  0850               	movf	(?_xtoa+1)^(0+128),w
  2890     0337  1703               	bsf	3,6	;RP1=1, select bank3
  2891     0338  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2892     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2893     033A  084F               	movf	?_xtoa^(0+128),w
  2894     033B  1703               	bsf	3,6	;RP1=1, select bank3
  2895     033C  009B               	movwf	?_vfpfcnvrt^(0+384)
  2896     033D  0008               	return
  2897     033E                     l4313:
  2898     033E  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2899     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2900     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2901     0341  00FF               	movwf	127
  2902     0342  1683               	bsf	3,5	;RP0=1, select bank3
  2903     0343  1703               	bsf	3,6	;RP1=1, select bank3
  2904     0344  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2905     0345  0084               	movwf	4
  2906     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2907     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2908     0348  120A  118A  27EA  120A  118A  	fcall	stringtab
  2909                           
  2910                           ; Switch size 1, requested type "simple"
  2911                           ; Number of cases is 4, Range of values is 88 to 120
  2912                           ; switch strategies available:
  2913                           ; Name         Instructions Cycles
  2914                           ; simple_byte           13     7 (average)
  2915                           ; direct_byte          110    11 (fixed)
  2916                           ; jumptable            263     9 (fixed)
  2917                           ;	Chosen strategy is simple_byte
  2918     034D  3A58               	xorlw	88	; case 88
  2919     034E  1903               	skipnz
  2920     034F  2B10               	goto	l4307
  2921     0350  3A37               	xorlw	55	; case 111
  2922     0351  1903               	skipnz
  2923     0352  2AD8               	goto	l4299
  2924     0353  3A1A               	xorlw	26	; case 117
  2925     0354  1903               	skipnz
  2926     0355  2AF4               	goto	l4303
  2927     0356  3A0D               	xorlw	13	; case 120
  2928     0357  1903               	skipnz
  2929     0358  2B10               	goto	l4307
  2930     0359  2B5A               	goto	l4315
  2931     035A                     l4315:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  2934     035A  1683               	bsf	3,5	;RP0=1, select bank3
  2935     035B  1703               	bsf	3,6	;RP1=1, select bank3
  2936     035C  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2937     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2938     035E  1303               	bcf	3,6	;RP1=0, select bank0
  2939     035F  00FF               	movwf	127
  2940     0360  1683               	bsf	3,5	;RP0=1, select bank3
  2941     0361  1703               	bsf	3,6	;RP1=1, select bank3
  2942     0362  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2943     0363  0084               	movwf	4
  2944     0364  1283               	bcf	3,5	;RP0=0, select bank0
  2945     0365  1303               	bcf	3,6	;RP1=0, select bank0
  2946     0366  120A  118A  27EA  120A  118A  	fcall	stringtab
  2947     036B  3A6E               	xorlw	110
  2948     036C  1903               	btfsc	3,2
  2949     036D  2BA4               	goto	l4331
  2950     036E  2BD0               	goto	l4339
  2951     036F                     l4319:
  2952     036F                     l4321:	
  2953                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1600:      break;
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  2956                           
  2957     036F  2B88               	goto	l4327
  2958     0370                     l4323:	
  2959                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1604:      break;
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  2962                           
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  2965     0370  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2966     0371  0084               	movwf	4
  2967     0372  1783               	bsf	3,7
  2968     0373  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2969     0374  1383               	bcf	3,7
  2970     0375  0800               	movf	0,w
  2971     0376  00FF               	movwf	127
  2972     0377  3002               	movlw	2
  2973     0378  0780               	addwf	0,f
  2974     0379  087F               	movf	127,w
  2975     037A  0084               	movwf	4
  2976     037B  1783               	bsf	3,7	;select IRP bank2
  2977     037C  0800               	movf	0,w
  2978     037D  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2979     037E  0A84               	incf	4,f
  2980     037F  0800               	movf	0,w
  2981     0380  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2982     0381  0820               	movf	??_vfpfcnvrt^(0+384),w
  2983     0382  0084               	movwf	4
  2984     0383  1783               	bsf	3,7
  2985     0384  1C21               	btfss	(??_vfpfcnvrt+1)^(0+384),0
  2986     0385  1383               	bcf	3,7
  2987     0386  0867               	movf	_nout^(0+384),w
  2988     0387  2BA2               	goto	L6
  2989     0388                     l4325:	
  2990                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1609:      break;
  2991                           
  2992     0388                     l4327:	
  2993                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1624:      break;
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  2996                           
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  2999     0388  081E               	movf	vfpfcnvrt@ap^(0+384),w
  3000     0389  0084               	movwf	4
  3001     038A  1783               	bsf	3,7
  3002     038B  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  3003     038C  1383               	bcf	3,7
  3004     038D  0800               	movf	0,w
  3005     038E  00FF               	movwf	127
  3006     038F  3002               	movlw	2
  3007     0390  0780               	addwf	0,f
  3008     0391  087F               	movf	127,w
  3009     0392  0084               	movwf	4
  3010     0393  1783               	bsf	3,7	;select IRP bank2
  3011     0394  0800               	movf	0,w
  3012     0395  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3013     0396  0A84               	incf	4,f
  3014     0397  0800               	movf	0,w
  3015     0398  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3016     0399  0820               	movf	??_vfpfcnvrt^(0+384),w
  3017     039A  0084               	movwf	4
  3018     039B  1783               	bsf	3,7
  3019     039C  1C21               	btfss	(??_vfpfcnvrt+1)^(0+384),0
  3020     039D  1383               	bcf	3,7
  3021     039E  0867               	movf	_nout^(0+384),w
  3022     039F  0080               	movwf	0
  3023     03A0  0A84               	incf	4,f
  3024     03A1  0868               	movf	(_nout+1)^(0+384),w
  3025     03A2                     L6:
  3026     03A2  0080               	movwf	0
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1634:      break;
  3029     03A3  2BB7               	goto	l4333
  3030     03A4                     l4331:
  3031     03A4  1683               	bsf	3,5	;RP0=1, select bank3
  3032     03A5  1703               	bsf	3,6	;RP1=1, select bank3
  3033     03A6  0825               	movf	vfpfcnvrt@c^(0+384),w
  3034                           
  3035                           ; Switch size 1, requested type "simple"
  3036                           ; Number of cases is 5, Range of values is 72 to 122
  3037                           ; switch strategies available:
  3038                           ; Name         Instructions Cycles
  3039                           ; simple_byte           16     9 (average)
  3040                           ; direct_byte          164    11 (fixed)
  3041                           ; jumptable            263     9 (fixed)
  3042                           ;	Chosen strategy is simple_byte
  3043     03A7  3A48               	xorlw	72	; case 72
  3044     03A8  1903               	skipnz
  3045     03A9  2B70               	goto	l4323
  3046     03AA  3A20               	xorlw	32	; case 104
  3047     03AB  1903               	skipnz
  3048     03AC  2B6F               	goto	l4321
  3049     03AD  3A01               	xorlw	1	; case 105
  3050     03AE  1903               	skipnz
  3051     03AF  2B6F               	goto	l4319
  3052     03B0  3A1D               	xorlw	29	; case 116
  3053     03B1  1903               	skipnz
  3054     03B2  2B88               	goto	l4325
  3055     03B3  3A0E               	xorlw	14	; case 122
  3056     03B4  1903               	skipnz
  3057     03B5  2B88               	goto	l4327
  3058     03B6  2BB7               	goto	l4333
  3059     03B7                     l4333:
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  3062     03B7  3001               	movlw	1
  3063     03B8  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3064     03B9  0820               	movf	??_vfpfcnvrt^(0+384),w
  3065     03BA  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  3066     03BB  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  3067     03BC  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  3068     03BD  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  3069     03BE  1803               	skipnc
  3070     03BF  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  3071     03C0  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  3072     03C1  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  3073     03C2  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3074     03C3  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  3075     03C4  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3076     03C5  0084               	movwf	4
  3077     03C6  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  3078     03C7  1383               	bcf	3,7	;select IRP bank0
  3079     03C8  0080               	movwf	0
  3080     03C9  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  3081     03CA  0A84               	incf	4,f
  3082     03CB  0080               	movwf	0
  3083     03CC  0384               	decf	4,f
  3084     03CD                     l4335:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  3087     03CD  019B               	clrf	?_vfpfcnvrt^(0+384)
  3088     03CE  019C               	clrf	(?_vfpfcnvrt+1)^(0+384)
  3089     03CF  0008               	return
  3090     03D0                     l4339:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  3093     03D0  1683               	bsf	3,5	;RP0=1, select bank3
  3094     03D1  1703               	bsf	3,6	;RP1=1, select bank3
  3095     03D2  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3096     03D3  0084               	movwf	4
  3097     03D4  1383               	bcf	3,7	;select IRP bank0
  3098     03D5  0800               	movf	0,w
  3099     03D6  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3100     03D7  0A84               	incf	4,f
  3101     03D8  0800               	movf	0,w
  3102     03D9  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3103     03DA  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3104     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  3105     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  3106     03DD  00FF               	movwf	127
  3107     03DE  1683               	bsf	3,5	;RP0=1, select bank3
  3108     03DF  1703               	bsf	3,6	;RP1=1, select bank3
  3109     03E0  0820               	movf	??_vfpfcnvrt^(0+384),w
  3110     03E1  0084               	movwf	4
  3111     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3112     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3113     03E4  120A  118A  27EA  120A  118A  	fcall	stringtab
  3114     03E9  3A25               	xorlw	37
  3115     03EA  1D03               	skipz
  3116     03EB  2C0D               	goto	l4349
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  3119     03EC  1683               	bsf	3,5	;RP0=1, select bank3
  3120     03ED  1703               	bsf	3,6	;RP1=1, select bank3
  3121     03EE  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3122     03EF  0084               	movwf	4
  3123     03F0  3001               	movlw	1
  3124     03F1  1383               	bcf	3,7	;select IRP bank0
  3125     03F2  0780               	addwf	0,f
  3126     03F3  0A84               	incf	4,f
  3127     03F4  1803               	skipnc
  3128     03F5  0A80               	incf	0,f
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  3131     03F6  3025               	movlw	37
  3132     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  3133     03F8  00B2               	movwf	fputc@c^(0+128)
  3134     03F9  3000               	movlw	0
  3135     03FA  00B3               	movwf	(fputc@c^(0+128)+1)
  3136     03FB  1703               	bsf	3,6	;RP1=1, select bank3
  3137     03FC  081B               	movf	vfpfcnvrt@fp^(0+384),w
  3138     03FD  1303               	bcf	3,6	;RP1=0, select bank1
  3139     03FE  00B4               	movwf	fputc@fp^(0+128)
  3140     03FF  1703               	bsf	3,6	;RP1=1, select bank3
  3141     0400  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  3142     0401  1303               	bcf	3,6	;RP1=0, select bank1
  3143     0402  00B5               	movwf	(fputc@fp+1)^(0+128)
  3144     0403  160A  118A  276D   	fcall	_fputc
  3145     0406                     l4345:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  3148     0406  3001               	movlw	1
  3149     0407  1683               	bsf	3,5	;RP0=1, select bank3
  3150     0408  1703               	bsf	3,6	;RP1=1, select bank3
  3151     0409  009B               	movwf	?_vfpfcnvrt^(0+384)
  3152     040A  3000               	movlw	0
  3153     040B  009C               	movwf	(?_vfpfcnvrt^(0+384)+1)
  3154     040C  0008               	return
  3155     040D                     l4349:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3158     040D  1683               	bsf	3,5	;RP0=1, select bank3
  3159     040E  1703               	bsf	3,6	;RP1=1, select bank3
  3160     040F  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3161     0410  0084               	movwf	4
  3162     0411  3001               	movlw	1
  3163     0412  1383               	bcf	3,7	;select IRP bank0
  3164     0413  0780               	addwf	0,f
  3165     0414  0A84               	incf	4,f
  3166     0415  1803               	skipnc
  3167     0416  0A80               	incf	0,f
  3168     0417  2BCD               	goto	l4335
  3169     0418                     l4355:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3172     0418  1683               	bsf	3,5	;RP0=1, select bank3
  3173     0419  1703               	bsf	3,6	;RP1=1, select bank3
  3174     041A  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3175     041B  0084               	movwf	4
  3176     041C  1383               	bcf	3,7	;select IRP bank0
  3177     041D  0800               	movf	0,w
  3178     041E  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3179     041F  0A84               	incf	4,f
  3180     0420  0800               	movf	0,w
  3181     0421  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3182     0422  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3183     0423  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0424  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0425  00FF               	movwf	127
  3186     0426  1683               	bsf	3,5	;RP0=1, select bank3
  3187     0427  1703               	bsf	3,6	;RP1=1, select bank3
  3188     0428  0820               	movf	??_vfpfcnvrt^(0+384),w
  3189     0429  0084               	movwf	4
  3190     042A  1283               	bcf	3,5	;RP0=0, select bank0
  3191     042B  1303               	bcf	3,6	;RP1=0, select bank0
  3192     042C  120A  118A  27EA  120A  118A  	fcall	stringtab
  3193     0431  1683               	bsf	3,5	;RP0=1, select bank3
  3194     0432  1703               	bsf	3,6	;RP1=1, select bank3
  3195     0433  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  3196     0434  01A3               	clrf	((??_vfpfcnvrt+2)^(0+384)+1)
  3197     0435  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  3198     0436  1303               	bcf	3,6	;RP1=0, select bank1
  3199     0437  00B2               	movwf	fputc@c^(0+128)
  3200     0438  1703               	bsf	3,6	;RP1=1, select bank3
  3201     0439  0823               	movf	(??_vfpfcnvrt+3)^(0+384),w
  3202     043A  1303               	bcf	3,6	;RP1=0, select bank1
  3203     043B  00B3               	movwf	(fputc@c+1)^(0+128)
  3204     043C  1703               	bsf	3,6	;RP1=1, select bank3
  3205     043D  081B               	movf	vfpfcnvrt@fp^(0+384),w
  3206     043E  1303               	bcf	3,6	;RP1=0, select bank1
  3207     043F  00B4               	movwf	fputc@fp^(0+128)
  3208     0440  1703               	bsf	3,6	;RP1=1, select bank3
  3209     0441  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  3210     0442  1303               	bcf	3,6	;RP1=0, select bank1
  3211     0443  00B5               	movwf	(fputc@fp+1)^(0+128)
  3212     0444  160A  118A  276D  120A  118A  	fcall	_fputc
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  3215     0449  1683               	bsf	3,5	;RP0=1, select bank3
  3216     044A  1703               	bsf	3,6	;RP1=1, select bank3
  3217     044B  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3218     044C  0084               	movwf	4
  3219     044D  3001               	movlw	1
  3220     044E  1383               	bcf	3,7	;select IRP bank0
  3221     044F  0780               	addwf	0,f
  3222     0450  0A84               	incf	4,f
  3223     0451  1803               	skipnc
  3224     0452  0A80               	incf	0,f
  3225     0453  2C06               	goto	l4345
  3226     0454                     __end_of_vfpfcnvrt:
  3227                           
  3228                           	psect	text4
  3229     0CE2                     __ptext4:	
  3230 ;; *************** function _xtoa *****************
  3231 ;; Defined at:
  3232 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  3235 ;;		 -> sprintf@f(11), 
  3236 ;;  d               2   49[BANK1 ] unsigned int 
  3237 ;;  x               1   51[BANK1 ] unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  i               2    9[BANK3 ] int 
  3240 ;;  w               2    6[BANK3 ] int 
  3241 ;;  p               2    3[BANK3 ] int 
  3242 ;;  c               1    8[BANK3 ] unsigned char 
  3243 ;;  d_nonzero       1    5[BANK3 ] _Bool 
  3244 ;;  a               1    0[BANK3 ] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2   47[BANK1 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 300/100
  3251 ;;		On exit  : B00/900
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       5       0       0
  3255 ;;      Locals:         0       0       0      11       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       0       5      11       0
  3258 ;;Total ram usage:       16 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 13
  3261 ;; This function calls:
  3262 ;;		_pad
  3263 ;; This function is called by:
  3264 ;;		_vfpfcnvrt
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     0CE2                     _xtoa:	
  3269                           ;psect for function _xtoa
  3270                           
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  3273                           
  3274                           ;incstack = 0
  3275 ;; hardware stack exceeded
  3276                           ; Regs used in _xtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3277     0CE2  1BDA               	btfsc	(_prec+1)^(0+128),7
  3278     0CE3  2CE6               	goto	l4115
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  3281     0CE4  30FD               	movlw	253
  3282     0CE5  05DD               	andwf	_flags^(0+128),f
  3283     0CE6                     l4115:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  3286     0CE6  1FDA               	btfss	(_prec+1)^(0+128),7
  3287     0CE7  2CEE               	goto	l4119
  3288     0CE8  3001               	movlw	1
  3289     0CE9  1703               	bsf	3,6	;RP1=1, select bank3
  3290     0CEA  0093               	movwf	xtoa@p^(0+384)
  3291     0CEB  3000               	movlw	0
  3292     0CEC  0094               	movwf	(xtoa@p^(0+384)+1)
  3293     0CED  2CF5               	goto	l735
  3294     0CEE                     l4119:
  3295     0CEE  085A               	movf	(_prec+1)^(0+128),w
  3296     0CEF  1703               	bsf	3,6	;RP1=1, select bank3
  3297     0CF0  0094               	movwf	(xtoa@p+1)^(0+384)
  3298     0CF1  1303               	bcf	3,6	;RP1=0, select bank1
  3299     0CF2  0859               	movf	_prec^(0+128),w
  3300     0CF3  1703               	bsf	3,6	;RP1=1, select bank3
  3301     0CF4  0093               	movwf	xtoa@p^(0+384)
  3302     0CF5                     l735:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  3305     0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  3306     0CF6  0858               	movf	(_width+1)^(0+128),w
  3307     0CF7  1703               	bsf	3,6	;RP1=1, select bank3
  3308     0CF8  0097               	movwf	(xtoa@w+1)^(0+384)
  3309     0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  3310     0CFA  0857               	movf	_width^(0+128),w
  3311     0CFB  1703               	bsf	3,6	;RP1=1, select bank3
  3312     0CFC  0096               	movwf	xtoa@w^(0+384)
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  3315     0CFD  1303               	bcf	3,6	;RP1=0, select bank1
  3316     0CFE  0851               	movf	xtoa@d^(0+128),w
  3317     0CFF  0452               	iorwf	(xtoa@d+1)^(0+128),w
  3318     0D00  1903               	btfsc	3,2
  3319     0D01  2D04               	goto	u5790
  3320     0D02  3001               	movlw	1
  3321     0D03  2D05               	goto	u5800
  3322     0D04                     u5790:
  3323     0D04  3000               	movlw	0
  3324     0D05                     u5800:
  3325     0D05  1703               	bsf	3,6	;RP1=1, select bank3
  3326     0D06  0095               	movwf	xtoa@d_nonzero^(0+384)
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  3329     0D07  1303               	bcf	3,6	;RP1=0, select bank1
  3330     0D08  1E5D               	btfss	_flags^(0+128),4
  3331     0D09  2D14               	goto	l4129
  3332     0D0A  1703               	bsf	3,6	;RP1=1, select bank3
  3333     0D0B  0815               	movf	xtoa@d_nonzero^(0+384),w
  3334     0D0C  1903               	btfsc	3,2
  3335     0D0D  2D14               	goto	l4129
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  3338     0D0E  30FE               	movlw	254
  3339     0D0F  0796               	addwf	xtoa@w^(0+384),f
  3340     0D10  1803               	skipnc
  3341     0D11  0A97               	incf	(xtoa@w+1)^(0+384),f
  3342     0D12  30FF               	movlw	255
  3343     0D13  0797               	addwf	(xtoa@w+1)^(0+384),f
  3344     0D14                     l4129:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  3347     0D14  3078               	movlw	120
  3348     0D15  1303               	bcf	3,6	;RP1=0, select bank1
  3349     0D16  0653               	xorwf	xtoa@x^(0+128),w
  3350     0D17  1903               	btfsc	3,2
  3351     0D18  2D1B               	goto	l4133
  3352     0D19  3041               	movlw	65
  3353     0D1A  2D1C               	goto	L7
  3354     0D1B                     l4133:
  3355     0D1B  3061               	movlw	97
  3356     0D1C                     L7:
  3357     0D1C  1703               	bsf	3,6	;RP1=1, select bank3
  3358     0D1D  0091               	movwf	_xtoa$641^(0+384)
  3359     0D1E  3000               	movlw	0
  3360     0D1F  0092               	movwf	(_xtoa$641^(0+384)+1)
  3361     0D20  0811               	movf	_xtoa$641^(0+384),w
  3362     0D21  0090               	movwf	xtoa@a^(0+384)
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  3365     0D22  301F               	movlw	31
  3366     0D23  0099               	movwf	xtoa@i^(0+384)
  3367     0D24  3000               	movlw	0
  3368     0D25  009A               	movwf	(xtoa@i^(0+384)+1)
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  3371     0D26  1283               	bcf	3,5	;RP0=0, select bank2
  3372     0D27  01AF               	clrf	(_dbuf^(0+256)+31)
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  3375     0D28  2D5C               	goto	l4155
  3376     0D29                     l4137:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
  3379     0D29  30FF               	movlw	255
  3380     0D2A  1683               	bsf	3,5	;RP0=1, select bank3
  3381     0D2B  1703               	bsf	3,6	;RP1=1, select bank3
  3382     0D2C  0799               	addwf	xtoa@i^(0+384),f
  3383     0D2D  1803               	skipnc
  3384     0D2E  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3385     0D2F  30FF               	movlw	255
  3386     0D30  079A               	addwf	(xtoa@i+1)^(0+384),f
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  3389     0D31  1303               	bcf	3,6	;RP1=0, select bank1
  3390     0D32  0851               	movf	xtoa@d^(0+128),w
  3391     0D33  1703               	bsf	3,6	;RP1=1, select bank3
  3392     0D34  0098               	movwf	xtoa@c^(0+384)
  3393     0D35  300F               	movlw	15
  3394     0D36  0598               	andwf	xtoa@c^(0+384),f
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  3397     0D37  300A               	movlw	10
  3398     0D38  0218               	subwf	xtoa@c^(0+384),w
  3399     0D39  1803               	skipnc
  3400     0D3A  2D3D               	goto	l4145
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  3403     0D3B  3030               	movlw	48
  3404     0D3C  2D3F               	goto	L8
  3405     0D3D                     l4145:	
  3406                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
  3407                           
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  3410     0D3D  0810               	movf	xtoa@a^(0+384),w
  3411     0D3E  3EF6               	addlw	246
  3412     0D3F                     L8:
  3413     0D3F  0798               	addwf	xtoa@c^(0+384),f
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  3416     0D40  0819               	movf	xtoa@i^(0+384),w
  3417     0D41  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3418     0D42  0084               	movwf	4
  3419     0D43  0818               	movf	xtoa@c^(0+384),w
  3420     0D44  1783               	bsf	3,7	;select IRP bank2
  3421     0D45  0080               	movwf	0
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  3424     0D46  30FF               	movlw	255
  3425     0D47  0793               	addwf	xtoa@p^(0+384),f
  3426     0D48  1803               	skipnc
  3427     0D49  0A94               	incf	(xtoa@p+1)^(0+384),f
  3428     0D4A  30FF               	movlw	255
  3429     0D4B  0794               	addwf	(xtoa@p+1)^(0+384),f
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  3432     0D4C  30FF               	movlw	255
  3433     0D4D  0796               	addwf	xtoa@w^(0+384),f
  3434     0D4E  1803               	skipnc
  3435     0D4F  0A97               	incf	(xtoa@w+1)^(0+384),f
  3436     0D50  30FF               	movlw	255
  3437     0D51  0797               	addwf	(xtoa@w+1)^(0+384),f
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  3440     0D52  1303               	bcf	3,6	;RP1=0, select bank1
  3441     0D53  0E51               	swapf	xtoa@d^(0+128),w
  3442     0D54  390F               	andlw	15
  3443     0D55  00D1               	movwf	xtoa@d^(0+128)
  3444     0D56  0E52               	swapf	(xtoa@d+1)^(0+128),w
  3445     0D57  39F0               	andlw	240
  3446     0D58  04D1               	iorwf	xtoa@d^(0+128),f
  3447     0D59  0E52               	swapf	(xtoa@d+1)^(0+128),w
  3448     0D5A  390F               	andlw	15
  3449     0D5B  00D2               	movwf	(xtoa@d^(0+128)+1)
  3450     0D5C                     l4155:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  3453     0D5C  1683               	bsf	3,5	;RP0=1, select bank3
  3454     0D5D  1703               	bsf	3,6	;RP1=1, select bank3
  3455     0D5E  081A               	movf	(xtoa@i+1)^(0+384),w
  3456     0D5F  3A80               	xorlw	128
  3457     0D60  00FF               	movwf	127
  3458     0D61  3080               	movlw	128
  3459     0D62  027F               	subwf	127,w
  3460     0D63  1D03               	skipz
  3461     0D64  2D67               	goto	u5855
  3462     0D65  3002               	movlw	2
  3463     0D66  0219               	subwf	xtoa@i^(0+384),w
  3464     0D67                     u5855:
  3465     0D67  1C03               	skipc
  3466     0D68  2D8C               	goto	l749
  3467     0D69  1683               	bsf	3,5	;RP0=1, select bank1
  3468     0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  3469     0D6B  0851               	movf	xtoa@d^(0+128),w
  3470     0D6C  0452               	iorwf	(xtoa@d+1)^(0+128),w
  3471     0D6D  1D03               	btfss	3,2
  3472     0D6E  2D29               	goto	l4137
  3473     0D6F  1703               	bsf	3,6	;RP1=1, select bank3
  3474     0D70  0814               	movf	(xtoa@p+1)^(0+384),w
  3475     0D71  3A80               	xorlw	128
  3476     0D72  00FF               	movwf	127
  3477     0D73  3080               	movlw	128
  3478     0D74  027F               	subwf	127,w
  3479     0D75  1D03               	skipz
  3480     0D76  2D79               	goto	u5875
  3481     0D77  3001               	movlw	1
  3482     0D78  0213               	subwf	xtoa@p^(0+384),w
  3483     0D79                     u5875:
  3484     0D79  1803               	skipnc
  3485     0D7A  2D29               	goto	l4137
  3486     0D7B  1683               	bsf	3,5	;RP0=1, select bank3
  3487     0D7C  1703               	bsf	3,6	;RP1=1, select bank3
  3488     0D7D  0817               	movf	(xtoa@w+1)^(0+384),w
  3489     0D7E  3A80               	xorlw	128
  3490     0D7F  00FF               	movwf	127
  3491     0D80  3080               	movlw	128
  3492     0D81  027F               	subwf	127,w
  3493     0D82  1D03               	skipz
  3494     0D83  2D86               	goto	u5885
  3495     0D84  3001               	movlw	1
  3496     0D85  0216               	subwf	xtoa@w^(0+384),w
  3497     0D86                     u5885:
  3498     0D86  1C03               	skipc
  3499     0D87  2D8C               	goto	l749
  3500     0D88  1683               	bsf	3,5	;RP0=1, select bank1
  3501     0D89  1303               	bcf	3,6	;RP1=0, select bank1
  3502     0D8A  18DD               	btfsc	_flags^(0+128),1
  3503     0D8B  2D29               	goto	l4137
  3504     0D8C                     l749:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
  3507     0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  3508     0D8D  1303               	bcf	3,6	;RP1=0, select bank1
  3509     0D8E  1E5D               	btfss	_flags^(0+128),4
  3510     0D8F  2DB3               	goto	l4175
  3511     0D90  1703               	bsf	3,6	;RP1=1, select bank3
  3512     0D91  0815               	movf	xtoa@d_nonzero^(0+384),w
  3513     0D92  1903               	btfsc	3,2
  3514     0D93  2DB3               	goto	l4175
  3515     0D94  1303               	bcf	3,6	;RP1=0, select bank1
  3516     0D95  0859               	movf	_prec^(0+128),w
  3517     0D96  045A               	iorwf	(_prec+1)^(0+128),w
  3518     0D97  1903               	btfsc	3,2
  3519     0D98  2DB3               	goto	l4175
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1138:         --i;
  3522     0D99  30FF               	movlw	255
  3523     0D9A  1703               	bsf	3,6	;RP1=1, select bank3
  3524     0D9B  0799               	addwf	xtoa@i^(0+384),f
  3525     0D9C  1803               	skipnc
  3526     0D9D  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3527     0D9E  30FF               	movlw	255
  3528     0D9F  079A               	addwf	(xtoa@i+1)^(0+384),f
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
  3531     0DA0  0819               	movf	xtoa@i^(0+384),w
  3532     0DA1  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3533     0DA2  0084               	movwf	4
  3534     0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  3535     0DA4  0853               	movf	xtoa@x^(0+128),w
  3536     0DA5  1783               	bsf	3,7	;select IRP bank2
  3537     0DA6  0080               	movwf	0
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
  3540     0DA7  30FF               	movlw	255
  3541     0DA8  1703               	bsf	3,6	;RP1=1, select bank3
  3542     0DA9  0799               	addwf	xtoa@i^(0+384),f
  3543     0DAA  1803               	skipnc
  3544     0DAB  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3545     0DAC  30FF               	movlw	255
  3546     0DAD  079A               	addwf	(xtoa@i+1)^(0+384),f
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
  3549     0DAE  0819               	movf	xtoa@i^(0+384),w
  3550     0DAF  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3551     0DB0  0084               	movwf	4
  3552     0DB1  3030               	movlw	48
  3553     0DB2  0080               	movwf	0
  3554     0DB3                     l4175:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3557     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  3558     0DB4  084F               	movf	xtoa@fp^(0+128),w
  3559     0DB5  00C7               	movwf	pad@fp^(0+128)
  3560     0DB6  0850               	movf	(xtoa@fp+1)^(0+128),w
  3561     0DB7  00C8               	movwf	(pad@fp+1)^(0+128)
  3562     0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  3563     0DB9  0819               	movf	xtoa@i^(0+384),w
  3564     0DBA  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3565     0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  3566     0DBC  00C9               	movwf	pad@buf^(0+128)
  3567     0DBD  1703               	bsf	3,6	;RP1=1, select bank3
  3568     0DBE  0817               	movf	(xtoa@w+1)^(0+384),w
  3569     0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  3570     0DC0  00CB               	movwf	(pad@p+1)^(0+128)
  3571     0DC1  1703               	bsf	3,6	;RP1=1, select bank3
  3572     0DC2  0816               	movf	xtoa@w^(0+384),w
  3573     0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  3574     0DC4  00CA               	movwf	pad@p^(0+128)
  3575     0DC5  160A  118A  23DB   	fcall	_pad
  3576     0DC8  0848               	movf	(?_pad+1)^(0+128),w
  3577     0DC9  00D0               	movwf	(?_xtoa+1)^(0+128)
  3578     0DCA  0847               	movf	?_pad^(0+128),w
  3579     0DCB  00CF               	movwf	?_xtoa^(0+128)
  3580     0DCC  0008               	return
  3581     0DCD                     __end_of_xtoa:
  3582                           
  3583                           	psect	text5
  3584     090E                     __ptext5:	
  3585 ;; *************** function _utoa *****************
  3586 ;; Defined at:
  3587 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  3590 ;;		 -> sprintf@f(11), 
  3591 ;;  d               2   49[BANK1 ] unsigned int 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  i               2    4[BANK3 ] int 
  3594 ;;  w               2    2[BANK3 ] int 
  3595 ;;  p               2    0[BANK3 ] int 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  2   47[BANK1 ] int 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 300/100
  3602 ;;		On exit  : B00/900
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       0       4       0       0
  3606 ;;      Locals:         0       0       0       6       0
  3607 ;;      Temps:          0       0       0       0       0
  3608 ;;      Totals:         0       0       4       6       0
  3609 ;;Total ram usage:       10 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 13
  3612 ;; This function calls:
  3613 ;;		___lwdiv
  3614 ;;		___lwmod
  3615 ;;		_pad
  3616 ;; This function is called by:
  3617 ;;		_vfpfcnvrt
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     090E                     _utoa:	
  3622                           ;psect for function _utoa
  3623                           
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
  3626                           
  3627                           ;incstack = 0
  3628 ;; hardware stack exceeded
  3629                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3630     090E  1BDA               	btfsc	(_prec+1)^(0+128),7
  3631     090F  2912               	goto	l4077
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  3634     0910  30FD               	movlw	253
  3635     0911  05DD               	andwf	_flags^(0+128),f
  3636     0912                     l4077:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  3639     0912  1FDA               	btfss	(_prec+1)^(0+128),7
  3640     0913  291A               	goto	l4081
  3641     0914  3001               	movlw	1
  3642     0915  1703               	bsf	3,6	;RP1=1, select bank3
  3643     0916  0090               	movwf	utoa@p^(0+384)
  3644     0917  3000               	movlw	0
  3645     0918  0091               	movwf	(utoa@p^(0+384)+1)
  3646     0919  2921               	goto	l720
  3647     091A                     l4081:
  3648     091A  085A               	movf	(_prec+1)^(0+128),w
  3649     091B  1703               	bsf	3,6	;RP1=1, select bank3
  3650     091C  0091               	movwf	(utoa@p+1)^(0+384)
  3651     091D  1303               	bcf	3,6	;RP1=0, select bank1
  3652     091E  0859               	movf	_prec^(0+128),w
  3653     091F  1703               	bsf	3,6	;RP1=1, select bank3
  3654     0920  0090               	movwf	utoa@p^(0+384)
  3655     0921                     l720:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3658     0921  1303               	bcf	3,6	;RP1=0, select bank1
  3659     0922  0858               	movf	(_width+1)^(0+128),w
  3660     0923  1703               	bsf	3,6	;RP1=1, select bank3
  3661     0924  0093               	movwf	(utoa@w+1)^(0+384)
  3662     0925  1303               	bcf	3,6	;RP1=0, select bank1
  3663     0926  0857               	movf	_width^(0+128),w
  3664     0927  1703               	bsf	3,6	;RP1=1, select bank3
  3665     0928  0092               	movwf	utoa@w^(0+384)
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3668     0929  301F               	movlw	31
  3669     092A  0094               	movwf	utoa@i^(0+384)
  3670     092B  3000               	movlw	0
  3671     092C  0095               	movwf	(utoa@i^(0+384)+1)
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3674     092D  1283               	bcf	3,5	;RP0=0, select bank2
  3675     092E  01AF               	clrf	(_dbuf^(0+256)+31)
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3678     092F  298E               	goto	l4095
  3679     0930                     l4097:
  3680     0930  1303               	bcf	3,6	;RP1=0, select bank1
  3681     0931  0851               	movf	utoa@d^(0+128),w
  3682     0932  0452               	iorwf	(utoa@d+1)^(0+128),w
  3683     0933  1D03               	btfss	3,2
  3684     0934  2952               	goto	l4085
  3685     0935  1703               	bsf	3,6	;RP1=1, select bank3
  3686     0936  0811               	movf	(utoa@p+1)^(0+384),w
  3687     0937  3A80               	xorlw	128
  3688     0938  00FF               	movwf	127
  3689     0939  3080               	movlw	128
  3690     093A  027F               	subwf	127,w
  3691     093B  1D03               	skipz
  3692     093C  293F               	goto	u5745
  3693     093D  3001               	movlw	1
  3694     093E  0210               	subwf	utoa@p^(0+384),w
  3695     093F                     u5745:
  3696     093F  1803               	skipnc
  3697     0940  2952               	goto	l4085
  3698     0941  1683               	bsf	3,5	;RP0=1, select bank3
  3699     0942  1703               	bsf	3,6	;RP1=1, select bank3
  3700     0943  0813               	movf	(utoa@w+1)^(0+384),w
  3701     0944  3A80               	xorlw	128
  3702     0945  00FF               	movwf	127
  3703     0946  3080               	movlw	128
  3704     0947  027F               	subwf	127,w
  3705     0948  1D03               	skipz
  3706     0949  294C               	goto	u5755
  3707     094A  3001               	movlw	1
  3708     094B  0212               	subwf	utoa@w^(0+384),w
  3709     094C                     u5755:
  3710     094C  1C03               	skipc
  3711     094D  2994               	goto	l4105
  3712     094E  1683               	bsf	3,5	;RP0=1, select bank1
  3713     094F  1303               	bcf	3,6	;RP1=0, select bank1
  3714     0950  1CDD               	btfss	_flags^(0+128),1
  3715     0951  2994               	goto	l4105
  3716     0952                     l4085:
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3719     0952  30FF               	movlw	255
  3720     0953  1683               	bsf	3,5	;RP0=1, select bank3
  3721     0954  1703               	bsf	3,6	;RP1=1, select bank3
  3722     0955  0794               	addwf	utoa@i^(0+384),f
  3723     0956  1803               	skipnc
  3724     0957  0A95               	incf	(utoa@i+1)^(0+384),f
  3725     0958  30FF               	movlw	255
  3726     0959  0795               	addwf	(utoa@i+1)^(0+384),f
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3729     095A  0814               	movf	utoa@i^(0+384),w
  3730     095B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3731     095C  0084               	movwf	4
  3732     095D  300A               	movlw	10
  3733     095E  1303               	bcf	3,6	;RP1=0, select bank1
  3734     095F  00B2               	movwf	___lwmod@divisor^(0+128)
  3735     0960  3000               	movlw	0
  3736     0961  00B3               	movwf	(___lwmod@divisor^(0+128)+1)
  3737     0962  0852               	movf	(utoa@d+1)^(0+128),w
  3738     0963  00B5               	movwf	(___lwmod@dividend+1)^(0+128)
  3739     0964  0851               	movf	utoa@d^(0+128),w
  3740     0965  00B4               	movwf	___lwmod@dividend^(0+128)
  3741     0966  160A  118A  2239  120A  158A  	fcall	___lwmod
  3742     096B  0832               	movf	?___lwmod^(0+128),w
  3743     096C  3E30               	addlw	48
  3744     096D  1783               	bsf	3,7	;select IRP bank2
  3745     096E  0080               	movwf	0
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  3748     096F  30FF               	movlw	255
  3749     0970  1703               	bsf	3,6	;RP1=1, select bank3
  3750     0971  0790               	addwf	utoa@p^(0+384),f
  3751     0972  1803               	skipnc
  3752     0973  0A91               	incf	(utoa@p+1)^(0+384),f
  3753     0974  30FF               	movlw	255
  3754     0975  0791               	addwf	(utoa@p+1)^(0+384),f
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3757     0976  30FF               	movlw	255
  3758     0977  0792               	addwf	utoa@w^(0+384),f
  3759     0978  1803               	skipnc
  3760     0979  0A93               	incf	(utoa@w+1)^(0+384),f
  3761     097A  30FF               	movlw	255
  3762     097B  0793               	addwf	(utoa@w+1)^(0+384),f
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3765     097C  300A               	movlw	10
  3766     097D  1303               	bcf	3,6	;RP1=0, select bank1
  3767     097E  00B2               	movwf	___lwdiv@divisor^(0+128)
  3768     097F  3000               	movlw	0
  3769     0980  00B3               	movwf	(___lwdiv@divisor^(0+128)+1)
  3770     0981  0852               	movf	(utoa@d+1)^(0+128),w
  3771     0982  00B5               	movwf	(___lwdiv@dividend+1)^(0+128)
  3772     0983  0851               	movf	utoa@d^(0+128),w
  3773     0984  00B4               	movwf	___lwdiv@dividend^(0+128)
  3774     0985  160A  118A  230F  120A  158A  	fcall	___lwdiv
  3775     098A  0833               	movf	(?___lwdiv+1)^(0+128),w
  3776     098B  00D2               	movwf	(utoa@d+1)^(0+128)
  3777     098C  0832               	movf	?___lwdiv^(0+128),w
  3778     098D  00D1               	movwf	utoa@d^(0+128)
  3779     098E                     l4095:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3782     098E  1683               	bsf	3,5	;RP0=1, select bank3
  3783     098F  1703               	bsf	3,6	;RP1=1, select bank3
  3784     0990  0814               	movf	utoa@i^(0+384),w
  3785     0991  0415               	iorwf	(utoa@i+1)^(0+384),w
  3786     0992  1D03               	btfss	3,2
  3787     0993  2930               	goto	l4097
  3788     0994                     l4105:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3791     0994  1683               	bsf	3,5	;RP0=1, select bank1
  3792     0995  1303               	bcf	3,6	;RP1=0, select bank1
  3793     0996  084F               	movf	utoa@fp^(0+128),w
  3794     0997  00C7               	movwf	pad@fp^(0+128)
  3795     0998  0850               	movf	(utoa@fp+1)^(0+128),w
  3796     0999  00C8               	movwf	(pad@fp+1)^(0+128)
  3797     099A  1703               	bsf	3,6	;RP1=1, select bank3
  3798     099B  0814               	movf	utoa@i^(0+384),w
  3799     099C  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3800     099D  1303               	bcf	3,6	;RP1=0, select bank1
  3801     099E  00C9               	movwf	pad@buf^(0+128)
  3802     099F  1703               	bsf	3,6	;RP1=1, select bank3
  3803     09A0  0813               	movf	(utoa@w+1)^(0+384),w
  3804     09A1  1303               	bcf	3,6	;RP1=0, select bank1
  3805     09A2  00CB               	movwf	(pad@p+1)^(0+128)
  3806     09A3  1703               	bsf	3,6	;RP1=1, select bank3
  3807     09A4  0812               	movf	utoa@w^(0+384),w
  3808     09A5  1303               	bcf	3,6	;RP1=0, select bank1
  3809     09A6  00CA               	movwf	pad@p^(0+128)
  3810     09A7  160A  118A  23DB   	fcall	_pad
  3811     09AA  0848               	movf	(?_pad+1)^(0+128),w
  3812     09AB  00D0               	movwf	(?_utoa+1)^(0+128)
  3813     09AC  0847               	movf	?_pad^(0+128),w
  3814     09AD  00CF               	movwf	?_utoa^(0+128)
  3815     09AE  0008               	return
  3816     09AF                     __end_of_utoa:
  3817                           
  3818                           	psect	text6
  3819     1239                     __ptext6:	
  3820 ;; *************** function ___lwmod *****************
  3821 ;; Defined at:
  3822 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  divisor         2   18[BANK1 ] unsigned int 
  3825 ;;  dividend        2   20[BANK1 ] unsigned int 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  counter         1   22[BANK1 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  2   18[BANK1 ] unsigned int 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 300/100
  3834 ;;		On exit  : 300/100
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       4       0       0
  3838 ;;      Locals:         0       0       1       0       0
  3839 ;;      Temps:          0       0       0       0       0
  3840 ;;      Totals:         0       0       5       0       0
  3841 ;;Total ram usage:        5 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 9
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_utoa
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851     1239                     ___lwmod:	
  3852                           ;psect for function ___lwmod
  3853                           
  3854                           
  3855                           ;incstack = 0
  3856 ;; hardware stack exceeded
  3857                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3858     1239  0832               	movf	___lwmod@divisor^(0+128),w
  3859     123A  0433               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3860     123B  1903               	btfsc	3,2
  3861     123C  2A64               	goto	l3905
  3862     123D  3001               	movlw	1
  3863     123E  00B6               	movwf	___lwmod@counter^(0+128)
  3864     123F                     l3895:
  3865     123F  1BB3               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3866     1240  2A4B               	goto	l3897
  3867     1241  3001               	movlw	1
  3868     1242                     u5315:
  3869     1242  1003               	clrc
  3870     1243  0DB2               	rlf	___lwmod@divisor^(0+128),f
  3871     1244  0DB3               	rlf	(___lwmod@divisor+1)^(0+128),f
  3872     1245  3EFF               	addlw	-1
  3873     1246  1D03               	skipz
  3874     1247  2A42               	goto	u5315
  3875     1248  3001               	movlw	1
  3876     1249  07B6               	addwf	___lwmod@counter^(0+128),f
  3877     124A  2A3F               	goto	l3895
  3878     124B                     l3897:
  3879     124B  0833               	movf	(___lwmod@divisor+1)^(0+128),w
  3880     124C  0235               	subwf	(___lwmod@dividend+1)^(0+128),w
  3881     124D  1D03               	skipz
  3882     124E  2A51               	goto	u5335
  3883     124F  0832               	movf	___lwmod@divisor^(0+128),w
  3884     1250  0234               	subwf	___lwmod@dividend^(0+128),w
  3885     1251                     u5335:
  3886     1251  1C03               	skipc
  3887     1252  2A59               	goto	l3901
  3888     1253  0832               	movf	___lwmod@divisor^(0+128),w
  3889     1254  02B4               	subwf	___lwmod@dividend^(0+128),f
  3890     1255  0833               	movf	(___lwmod@divisor+1)^(0+128),w
  3891     1256  1C03               	skipc
  3892     1257  03B5               	decf	(___lwmod@dividend+1)^(0+128),f
  3893     1258  02B5               	subwf	(___lwmod@dividend+1)^(0+128),f
  3894     1259                     l3901:
  3895     1259  3001               	movlw	1
  3896     125A                     u5345:
  3897     125A  1003               	clrc
  3898     125B  0CB3               	rrf	(___lwmod@divisor+1)^(0+128),f
  3899     125C  0CB2               	rrf	___lwmod@divisor^(0+128),f
  3900     125D  3EFF               	addlw	-1
  3901     125E  1D03               	skipz
  3902     125F  2A5A               	goto	u5345
  3903     1260  3001               	movlw	1
  3904     1261  02B6               	subwf	___lwmod@counter^(0+128),f
  3905     1262  1D03               	btfss	3,2
  3906     1263  2A4B               	goto	l3897
  3907     1264                     l3905:
  3908     1264  0835               	movf	(___lwmod@dividend+1)^(0+128),w
  3909     1265  00B3               	movwf	(?___lwmod+1)^(0+128)
  3910     1266  0834               	movf	___lwmod@dividend^(0+128),w
  3911     1267  00B2               	movwf	?___lwmod^(0+128)
  3912     1268  0008               	return
  3913     1269                     __end_of___lwmod:
  3914                           
  3915                           	psect	text7
  3916     130F                     __ptext7:	
  3917 ;; *************** function ___lwdiv *****************
  3918 ;; Defined at:
  3919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  divisor         2   18[BANK1 ] unsigned int 
  3922 ;;  dividend        2   20[BANK1 ] unsigned int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  quotient        2   23[BANK1 ] unsigned int 
  3925 ;;  counter         1   22[BANK1 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  2   18[BANK1 ] unsigned int 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : B00/900
  3932 ;;		On exit  : B00/900
  3933 ;;		Unchanged: 800/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       4       0       0
  3936 ;;      Locals:         0       0       3       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         0       0       7       0       0
  3939 ;;Total ram usage:        7 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 9
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_utoa
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     130F                     ___lwdiv:	
  3950                           ;psect for function ___lwdiv
  3951                           
  3952                           
  3953                           ;incstack = 0
  3954 ;; hardware stack exceeded
  3955                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3956     130F  01B7               	clrf	___lwdiv@quotient^(0+128)
  3957     1310  01B8               	clrf	(___lwdiv@quotient+1)^(0+128)
  3958     1311  0832               	movf	___lwdiv@divisor^(0+128),w
  3959     1312  0433               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3960     1313  1903               	btfsc	3,2
  3961     1314  2B44               	goto	l3883
  3962     1315  3001               	movlw	1
  3963     1316  00B6               	movwf	___lwdiv@counter^(0+128)
  3964     1317                     l3871:
  3965     1317  1BB3               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3966     1318  2B23               	goto	l3873
  3967     1319  3001               	movlw	1
  3968     131A                     u5245:
  3969     131A  1003               	clrc
  3970     131B  0DB2               	rlf	___lwdiv@divisor^(0+128),f
  3971     131C  0DB3               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3972     131D  3EFF               	addlw	-1
  3973     131E  1D03               	skipz
  3974     131F  2B1A               	goto	u5245
  3975     1320  3001               	movlw	1
  3976     1321  07B6               	addwf	___lwdiv@counter^(0+128),f
  3977     1322  2B17               	goto	l3871
  3978     1323                     l3873:
  3979     1323  3001               	movlw	1
  3980     1324                     u5265:
  3981     1324  1003               	clrc
  3982     1325  0DB7               	rlf	___lwdiv@quotient^(0+128),f
  3983     1326  0DB8               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3984     1327  3EFF               	addlw	-1
  3985     1328  1D03               	skipz
  3986     1329  2B24               	goto	u5265
  3987     132A  0833               	movf	(___lwdiv@divisor+1)^(0+128),w
  3988     132B  0235               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3989     132C  1D03               	skipz
  3990     132D  2B30               	goto	u5275
  3991     132E  0832               	movf	___lwdiv@divisor^(0+128),w
  3992     132F  0234               	subwf	___lwdiv@dividend^(0+128),w
  3993     1330                     u5275:
  3994     1330  1C03               	skipc
  3995     1331  2B39               	goto	l3879
  3996     1332  0832               	movf	___lwdiv@divisor^(0+128),w
  3997     1333  02B4               	subwf	___lwdiv@dividend^(0+128),f
  3998     1334  0833               	movf	(___lwdiv@divisor+1)^(0+128),w
  3999     1335  1C03               	skipc
  4000     1336  03B5               	decf	(___lwdiv@dividend+1)^(0+128),f
  4001     1337  02B5               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4002     1338  1437               	bsf	___lwdiv@quotient^(0+128),0
  4003     1339                     l3879:
  4004     1339  3001               	movlw	1
  4005     133A                     u5285:
  4006     133A  1003               	clrc
  4007     133B  0CB3               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4008     133C  0CB2               	rrf	___lwdiv@divisor^(0+128),f
  4009     133D  3EFF               	addlw	-1
  4010     133E  1D03               	skipz
  4011     133F  2B3A               	goto	u5285
  4012     1340  3001               	movlw	1
  4013     1341  02B6               	subwf	___lwdiv@counter^(0+128),f
  4014     1342  1D03               	btfss	3,2
  4015     1343  2B23               	goto	l3873
  4016     1344                     l3883:
  4017     1344  0838               	movf	(___lwdiv@quotient+1)^(0+128),w
  4018     1345  00B3               	movwf	(?___lwdiv+1)^(0+128)
  4019     1346  0837               	movf	___lwdiv@quotient^(0+128),w
  4020     1347  00B2               	movwf	?___lwdiv^(0+128)
  4021     1348  0008               	return
  4022     1349                     __end_of___lwdiv:
  4023                           
  4024                           	psect	text8
  4025     15FD                     __ptext8:	
  4026 ;; *************** function _read_prec_or_width *****************
  4027 ;; Defined at:
  4028 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  fmt             1   24[BANK1 ] PTR PTR const unsigned c
  4031 ;;		 -> vfprintf@cfmt(2), 
  4032 ;;  ap              1   25[BANK1 ] PTR PTR void [1]
  4033 ;;		 -> sprintf@ap(1), 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  c               1   28[BANK1 ] unsigned char 
  4036 ;;  n               2   29[BANK1 ] int 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2   24[BANK1 ] int 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 300/100
  4043 ;;		On exit  : 300/100
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       2       0       0
  4047 ;;      Locals:         0       0       3       0       0
  4048 ;;      Temps:          0       0       2       0       0
  4049 ;;      Totals:         0       0       7       0       0
  4050 ;;Total ram usage:        7 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 10
  4053 ;; This function calls:
  4054 ;;		___wmul
  4055 ;; This function is called by:
  4056 ;;		_vfpfcnvrt
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     15FD                     _read_prec_or_width:	
  4061                           ;psect for function _read_prec_or_width
  4062                           
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4065                           
  4066                           ;incstack = 0
  4067 ;; hardware stack exceeded
  4068                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4069     15FD  01BD               	clrf	read_prec_or_width@n^(0+128)
  4070     15FE  01BE               	clrf	(read_prec_or_width@n+1)^(0+128)
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4073     15FF  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4074     1600  0084               	movwf	4
  4075     1601  1383               	bcf	3,7	;select IRP bank0
  4076     1602  0800               	movf	0,w
  4077     1603  00BA               	movwf	??_read_prec_or_width^(0+128)
  4078     1604  0A84               	incf	4,f
  4079     1605  0800               	movf	0,w
  4080     1606  00BB               	movwf	(??_read_prec_or_width^(0+128)+1)
  4081     1607  083B               	movf	(??_read_prec_or_width+1)^(0+128),w
  4082     1608  1283               	bcf	3,5	;RP0=0, select bank0
  4083     1609  00FF               	movwf	127
  4084     160A  1683               	bsf	3,5	;RP0=1, select bank1
  4085     160B  083A               	movf	??_read_prec_or_width^(0+128),w
  4086     160C  0084               	movwf	4
  4087     160D  1283               	bcf	3,5	;RP0=0, select bank0
  4088     160E  120A  118A  27EA  160A  118A  	fcall	stringtab
  4089     1613  3A2A               	xorlw	42
  4090     1614  1D03               	skipz
  4091     1615  2E4B               	goto	l2971
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4094     1616  1683               	bsf	3,5	;RP0=1, select bank1
  4095     1617  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4096     1618  0084               	movwf	4
  4097     1619  3001               	movlw	1
  4098     161A  1383               	bcf	3,7	;select IRP bank0
  4099     161B  0780               	addwf	0,f
  4100     161C  0A84               	incf	4,f
  4101     161D  1803               	skipnc
  4102     161E  0A80               	incf	0,f
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4105     161F  0839               	movf	read_prec_or_width@ap^(0+128),w
  4106     1620  0084               	movwf	4
  4107     1621  1783               	bsf	3,7	;select IRP bank2
  4108     1622  0800               	movf	0,w
  4109     1623  00FF               	movwf	127
  4110     1624  3002               	movlw	2
  4111     1625  0780               	addwf	0,f
  4112     1626  087F               	movf	127,w
  4113     1627  0084               	movwf	4
  4114     1628  0800               	movf	0,w
  4115     1629  00BD               	movwf	read_prec_or_width@n^(0+128)
  4116     162A  0A84               	incf	4,f
  4117     162B  0800               	movf	0,w
  4118     162C  00BE               	movwf	(read_prec_or_width@n+1)^(0+128)
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4121     162D  2E67               	goto	l2973
  4122     162E                     l2967:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4125     162E  083E               	movf	(read_prec_or_width@n+1)^(0+128),w
  4126     162F  00B3               	movwf	(___wmul@multiplier+1)^(0+128)
  4127     1630  083D               	movf	read_prec_or_width@n^(0+128),w
  4128     1631  00B2               	movwf	___wmul@multiplier^(0+128)
  4129     1632  300A               	movlw	10
  4130     1633  00B4               	movwf	___wmul@multiplicand^(0+128)
  4131     1634  3000               	movlw	0
  4132     1635  00B5               	movwf	(___wmul@multiplicand^(0+128)+1)
  4133     1636  160A  118A  20F8  160A  118A  	fcall	___wmul
  4134     163B  083C               	movf	read_prec_or_width@c^(0+128),w
  4135     163C  0732               	addwf	?___wmul^(0+128),w
  4136     163D  00BD               	movwf	read_prec_or_width@n^(0+128)
  4137     163E  3000               	movlw	0
  4138     163F  1803               	skipnc
  4139     1640  3001               	movlw	1
  4140     1641  0733               	addwf	(?___wmul+1)^(0+128),w
  4141     1642  00BE               	movwf	(read_prec_or_width@n+1)^(0+128)
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4144     1643  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4145     1644  0084               	movwf	4
  4146     1645  3001               	movlw	1
  4147     1646  1383               	bcf	3,7	;select IRP bank0
  4148     1647  0780               	addwf	0,f
  4149     1648  0A84               	incf	4,f
  4150     1649  1803               	skipnc
  4151     164A  0A80               	incf	0,f
  4152     164B                     l2971:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4155     164B  1683               	bsf	3,5	;RP0=1, select bank1
  4156     164C  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4157     164D  0084               	movwf	4
  4158     164E  1383               	bcf	3,7	;select IRP bank0
  4159     164F  0800               	movf	0,w
  4160     1650  00BA               	movwf	??_read_prec_or_width^(0+128)
  4161     1651  0A84               	incf	4,f
  4162     1652  0800               	movf	0,w
  4163     1653  00BB               	movwf	(??_read_prec_or_width^(0+128)+1)
  4164     1654  083B               	movf	(??_read_prec_or_width+1)^(0+128),w
  4165     1655  1283               	bcf	3,5	;RP0=0, select bank0
  4166     1656  00FF               	movwf	127
  4167     1657  1683               	bsf	3,5	;RP0=1, select bank1
  4168     1658  083A               	movf	??_read_prec_or_width^(0+128),w
  4169     1659  0084               	movwf	4
  4170     165A  1283               	bcf	3,5	;RP0=0, select bank0
  4171     165B  120A  118A  27EA  160A  118A  	fcall	stringtab
  4172     1660  3ED0               	addlw	208
  4173     1661  1683               	bsf	3,5	;RP0=1, select bank1
  4174     1662  00BC               	movwf	read_prec_or_width@c^(0+128)
  4175     1663  300A               	movlw	10
  4176     1664  023C               	subwf	read_prec_or_width@c^(0+128),w
  4177     1665  1C03               	skipc
  4178     1666  2E2E               	goto	l2967
  4179     1667                     l2973:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4182     1667  083E               	movf	(read_prec_or_width@n+1)^(0+128),w
  4183     1668  00B9               	movwf	(?_read_prec_or_width+1)^(0+128)
  4184     1669  083D               	movf	read_prec_or_width@n^(0+128),w
  4185     166A  00B8               	movwf	?_read_prec_or_width^(0+128)
  4186     166B  0008               	return
  4187     166C                     __end_of_read_prec_or_width:
  4188                           
  4189                           	psect	text9
  4190     10F8                     __ptext9:	
  4191 ;; *************** function ___wmul *****************
  4192 ;; Defined at:
  4193 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      2   18[BANK1 ] unsigned int 
  4196 ;;  multiplicand    2   20[BANK1 ] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  product         2   22[BANK1 ] unsigned int 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2   18[BANK1 ] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 300/100
  4205 ;;		On exit  : 300/100
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4208 ;;      Params:         0       0       4       0       0
  4209 ;;      Locals:         0       0       2       0       0
  4210 ;;      Temps:          0       0       0       0       0
  4211 ;;      Totals:         0       0       6       0       0
  4212 ;;Total ram usage:        6 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 9
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_read_prec_or_width
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222     10F8                     ___wmul:	
  4223                           ;psect for function ___wmul
  4224                           
  4225                           
  4226                           ;incstack = 0
  4227 ;; hardware stack exceeded
  4228                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4229     10F8  01B6               	clrf	___wmul@product^(0+128)
  4230     10F9  01B7               	clrf	(___wmul@product+1)^(0+128)
  4231     10FA                     l2377:
  4232     10FA  1C32               	btfss	___wmul@multiplier^(0+128),0
  4233     10FB  2902               	goto	l162
  4234     10FC  0834               	movf	___wmul@multiplicand^(0+128),w
  4235     10FD  07B6               	addwf	___wmul@product^(0+128),f
  4236     10FE  1803               	skipnc
  4237     10FF  0AB7               	incf	(___wmul@product+1)^(0+128),f
  4238     1100  0835               	movf	(___wmul@multiplicand+1)^(0+128),w
  4239     1101  07B7               	addwf	(___wmul@product+1)^(0+128),f
  4240     1102                     l162:
  4241     1102  3001               	movlw	1
  4242     1103                     u2645:
  4243     1103  1003               	clrc
  4244     1104  0DB4               	rlf	___wmul@multiplicand^(0+128),f
  4245     1105  0DB5               	rlf	(___wmul@multiplicand+1)^(0+128),f
  4246     1106  3EFF               	addlw	-1
  4247     1107  1D03               	skipz
  4248     1108  2903               	goto	u2645
  4249     1109  3001               	movlw	1
  4250     110A                     u2655:
  4251     110A  1003               	clrc
  4252     110B  0CB3               	rrf	(___wmul@multiplier+1)^(0+128),f
  4253     110C  0CB2               	rrf	___wmul@multiplier^(0+128),f
  4254     110D  3EFF               	addlw	-1
  4255     110E  1D03               	skipz
  4256     110F  290A               	goto	u2655
  4257     1110  0832               	movf	___wmul@multiplier^(0+128),w
  4258     1111  0433               	iorwf	(___wmul@multiplier+1)^(0+128),w
  4259     1112  1D03               	btfss	3,2
  4260     1113  28FA               	goto	l2377
  4261     1114  0837               	movf	(___wmul@product+1)^(0+128),w
  4262     1115  00B3               	movwf	(?___wmul+1)^(0+128)
  4263     1116  0836               	movf	___wmul@product^(0+128),w
  4264     1117  00B2               	movwf	?___wmul^(0+128)
  4265     1118  0008               	return
  4266     1119                     __end_of___wmul:
  4267                           
  4268                           	psect	text10
  4269     0A65                     __ptext10:	
  4270 ;; *************** function _otoa *****************
  4271 ;; Defined at:
  4272 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  4275 ;;		 -> sprintf@f(11), 
  4276 ;;  d               2   49[BANK1 ] unsigned int 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  i               2    5[BANK3 ] int 
  4279 ;;  w               2    2[BANK3 ] int 
  4280 ;;  p               2    0[BANK3 ] int 
  4281 ;;  t               1    4[BANK3 ] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2   47[BANK1 ] int 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 300/100
  4288 ;;		On exit  : B00/900
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         0       0       4       0       0
  4292 ;;      Locals:         0       0       0       7       0
  4293 ;;      Temps:          0       0       2       0       0
  4294 ;;      Totals:         0       0       6       7       0
  4295 ;;Total ram usage:       13 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 13
  4298 ;; This function calls:
  4299 ;;		_pad
  4300 ;; This function is called by:
  4301 ;;		_vfpfcnvrt
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305     0A65                     _otoa:	
  4306                           ;psect for function _otoa
  4307                           
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
  4310                           
  4311                           ;incstack = 0
  4312 ;; hardware stack exceeded
  4313                           ; Regs used in _otoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4314     0A65  1BDA               	btfsc	(_prec+1)^(0+128),7
  4315     0A66  2A69               	goto	l4027
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
  4318     0A67  30FD               	movlw	253
  4319     0A68  05DD               	andwf	_flags^(0+128),f
  4320     0A69                     l4027:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
  4323     0A69  1FDA               	btfss	(_prec+1)^(0+128),7
  4324     0A6A  2A71               	goto	l4031
  4325     0A6B  3001               	movlw	1
  4326     0A6C  1703               	bsf	3,6	;RP1=1, select bank3
  4327     0A6D  0090               	movwf	otoa@p^(0+384)
  4328     0A6E  3000               	movlw	0
  4329     0A6F  0091               	movwf	(otoa@p^(0+384)+1)
  4330     0A70  2A78               	goto	l702
  4331     0A71                     l4031:
  4332     0A71  085A               	movf	(_prec+1)^(0+128),w
  4333     0A72  1703               	bsf	3,6	;RP1=1, select bank3
  4334     0A73  0091               	movwf	(otoa@p+1)^(0+384)
  4335     0A74  1303               	bcf	3,6	;RP1=0, select bank1
  4336     0A75  0859               	movf	_prec^(0+128),w
  4337     0A76  1703               	bsf	3,6	;RP1=1, select bank3
  4338     0A77  0090               	movwf	otoa@p^(0+384)
  4339     0A78                     l702:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
  4342     0A78  1303               	bcf	3,6	;RP1=0, select bank1
  4343     0A79  0858               	movf	(_width+1)^(0+128),w
  4344     0A7A  1703               	bsf	3,6	;RP1=1, select bank3
  4345     0A7B  0093               	movwf	(otoa@w+1)^(0+384)
  4346     0A7C  1303               	bcf	3,6	;RP1=0, select bank1
  4347     0A7D  0857               	movf	_width^(0+128),w
  4348     0A7E  1703               	bsf	3,6	;RP1=1, select bank3
  4349     0A7F  0092               	movwf	otoa@w^(0+384)
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
  4352     0A80  301F               	movlw	31
  4353     0A81  0095               	movwf	otoa@i^(0+384)
  4354     0A82  3000               	movlw	0
  4355     0A83  0096               	movwf	(otoa@i^(0+384)+1)
  4356                           
  4357                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
  4358     0A84  1283               	bcf	3,5	;RP0=0, select bank2
  4359     0A85  01AF               	clrf	(_dbuf^(0+256)+31)
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 899:     t = 0;
  4362     0A86  1683               	bsf	3,5	;RP0=1, select bank3
  4363     0A87  0194               	clrf	otoa@t^(0+384)
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  4366     0A88  2ADF               	goto	l4049
  4367     0A89                     l4051:
  4368     0A89  1683               	bsf	3,5	;RP0=1, select bank1
  4369     0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  4370     0A8B  0851               	movf	otoa@d^(0+128),w
  4371     0A8C  0452               	iorwf	(otoa@d+1)^(0+128),w
  4372     0A8D  1D03               	btfss	3,2
  4373     0A8E  2AAC               	goto	l4037
  4374     0A8F  1703               	bsf	3,6	;RP1=1, select bank3
  4375     0A90  0811               	movf	(otoa@p+1)^(0+384),w
  4376     0A91  3A80               	xorlw	128
  4377     0A92  00FF               	movwf	127
  4378     0A93  3080               	movlw	128
  4379     0A94  027F               	subwf	127,w
  4380     0A95  1D03               	skipz
  4381     0A96  2A99               	goto	u5645
  4382     0A97  3001               	movlw	1
  4383     0A98  0210               	subwf	otoa@p^(0+384),w
  4384     0A99                     u5645:
  4385     0A99  1803               	skipnc
  4386     0A9A  2AAC               	goto	l4037
  4387     0A9B  1683               	bsf	3,5	;RP0=1, select bank3
  4388     0A9C  1703               	bsf	3,6	;RP1=1, select bank3
  4389     0A9D  0813               	movf	(otoa@w+1)^(0+384),w
  4390     0A9E  3A80               	xorlw	128
  4391     0A9F  00FF               	movwf	127
  4392     0AA0  3080               	movlw	128
  4393     0AA1  027F               	subwf	127,w
  4394     0AA2  1D03               	skipz
  4395     0AA3  2AA6               	goto	u5655
  4396     0AA4  3001               	movlw	1
  4397     0AA5  0212               	subwf	otoa@w^(0+384),w
  4398     0AA6                     u5655:
  4399     0AA6  1C03               	skipc
  4400     0AA7  2AEB               	goto	l4059
  4401     0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  4402     0AA9  1303               	bcf	3,6	;RP1=0, select bank1
  4403     0AAA  1CDD               	btfss	_flags^(0+128),1
  4404     0AAB  2AEB               	goto	l4059
  4405     0AAC                     l4037:
  4406                           
  4407                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 911:         --i;
  4408     0AAC  30FF               	movlw	255
  4409     0AAD  1683               	bsf	3,5	;RP0=1, select bank3
  4410     0AAE  1703               	bsf	3,6	;RP1=1, select bank3
  4411     0AAF  0795               	addwf	otoa@i^(0+384),f
  4412     0AB0  1803               	skipnc
  4413     0AB1  0A96               	incf	(otoa@i+1)^(0+384),f
  4414     0AB2  30FF               	movlw	255
  4415     0AB3  0796               	addwf	(otoa@i+1)^(0+384),f
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
  4418     0AB4  1303               	bcf	3,6	;RP1=0, select bank1
  4419     0AB5  0851               	movf	otoa@d^(0+128),w
  4420     0AB6  1703               	bsf	3,6	;RP1=1, select bank3
  4421     0AB7  0094               	movwf	otoa@t^(0+384)
  4422     0AB8  3007               	movlw	7
  4423     0AB9  0594               	andwf	otoa@t^(0+384),f
  4424                           
  4425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
  4426     0ABA  0815               	movf	otoa@i^(0+384),w
  4427     0ABB  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4428     0ABC  0084               	movwf	4
  4429     0ABD  0814               	movf	otoa@t^(0+384),w
  4430     0ABE  3E30               	addlw	48
  4431     0ABF  1783               	bsf	3,7	;select IRP bank2
  4432     0AC0  0080               	movwf	0
  4433                           
  4434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 919:         --p;
  4435     0AC1  30FF               	movlw	255
  4436     0AC2  0790               	addwf	otoa@p^(0+384),f
  4437     0AC3  1803               	skipnc
  4438     0AC4  0A91               	incf	(otoa@p+1)^(0+384),f
  4439     0AC5  30FF               	movlw	255
  4440     0AC6  0791               	addwf	(otoa@p+1)^(0+384),f
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 923:         --w;
  4443     0AC7  30FF               	movlw	255
  4444     0AC8  0792               	addwf	otoa@w^(0+384),f
  4445     0AC9  1803               	skipnc
  4446     0ACA  0A93               	incf	(otoa@w+1)^(0+384),f
  4447     0ACB  30FF               	movlw	255
  4448     0ACC  0793               	addwf	(otoa@w+1)^(0+384),f
  4449                           
  4450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
  4451     0ACD  1303               	bcf	3,6	;RP1=0, select bank1
  4452     0ACE  0852               	movf	(otoa@d+1)^(0+128),w
  4453     0ACF  00D4               	movwf	(??_otoa^(0+128)+1)
  4454     0AD0  0851               	movf	otoa@d^(0+128),w
  4455     0AD1  00D3               	movwf	??_otoa^(0+128)
  4456     0AD2  1003               	clrc
  4457     0AD3  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4458     0AD4  0CD3               	rrf	??_otoa^(0+128),f
  4459     0AD5  1003               	clrc
  4460     0AD6  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4461     0AD7  0CD3               	rrf	??_otoa^(0+128),f
  4462     0AD8  1003               	clrc
  4463     0AD9  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4464     0ADA  0CD3               	rrf	??_otoa^(0+128),f
  4465     0ADB  0853               	movf	??_otoa^(0+128),w
  4466     0ADC  00D1               	movwf	otoa@d^(0+128)
  4467     0ADD  0854               	movf	(??_otoa+1)^(0+128),w
  4468     0ADE  00D2               	movwf	(otoa@d+1)^(0+128)
  4469     0ADF                     l4049:
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  4472     0ADF  1703               	bsf	3,6	;RP1=1, select bank3
  4473     0AE0  0816               	movf	(otoa@i+1)^(0+384),w
  4474     0AE1  3A80               	xorlw	128
  4475     0AE2  00FF               	movwf	127
  4476     0AE3  3080               	movlw	128
  4477     0AE4  027F               	subwf	127,w
  4478     0AE5  1D03               	skipz
  4479     0AE6  2AE9               	goto	u5625
  4480     0AE7  3001               	movlw	1
  4481     0AE8  0215               	subwf	otoa@i^(0+384),w
  4482     0AE9                     u5625:
  4483     0AE9  1803               	btfsc	3,0
  4484     0AEA  2A89               	goto	l4051
  4485     0AEB                     l4059:
  4486                           
  4487                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  4488     0AEB  1683               	bsf	3,5	;RP0=1, select bank3
  4489     0AEC  1703               	bsf	3,6	;RP1=1, select bank3
  4490     0AED  0814               	movf	otoa@t^(0+384),w
  4491     0AEE  1D03               	btfss	3,2
  4492     0AEF  2AF5               	goto	l712
  4493     0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  4494     0AF1  0859               	movf	_prec^(0+128),w
  4495     0AF2  045A               	iorwf	(_prec+1)^(0+128),w
  4496     0AF3  1D03               	btfss	3,2
  4497     0AF4  2B0B               	goto	l4069
  4498     0AF5                     l712:
  4499     0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  4500     0AF6  1E5D               	btfss	_flags^(0+128),4
  4501     0AF7  2B0B               	goto	l4069
  4502                           
  4503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 930:         --i;
  4504     0AF8  30FF               	movlw	255
  4505     0AF9  1703               	bsf	3,6	;RP1=1, select bank3
  4506     0AFA  0795               	addwf	otoa@i^(0+384),f
  4507     0AFB  1803               	skipnc
  4508     0AFC  0A96               	incf	(otoa@i+1)^(0+384),f
  4509     0AFD  30FF               	movlw	255
  4510     0AFE  0796               	addwf	(otoa@i+1)^(0+384),f
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
  4513     0AFF  0815               	movf	otoa@i^(0+384),w
  4514     0B00  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4515     0B01  0084               	movwf	4
  4516     0B02  3030               	movlw	48
  4517     0B03  1783               	bsf	3,7	;select IRP bank2
  4518     0B04  0080               	movwf	0
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 932:         --w;
  4521     0B05  30FF               	movlw	255
  4522     0B06  0792               	addwf	otoa@w^(0+384),f
  4523     0B07  1803               	skipnc
  4524     0B08  0A93               	incf	(otoa@w+1)^(0+384),f
  4525     0B09  30FF               	movlw	255
  4526     0B0A  0793               	addwf	(otoa@w+1)^(0+384),f
  4527     0B0B                     l4069:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
  4530     0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  4531     0B0C  084F               	movf	otoa@fp^(0+128),w
  4532     0B0D  00C7               	movwf	pad@fp^(0+128)
  4533     0B0E  0850               	movf	(otoa@fp+1)^(0+128),w
  4534     0B0F  00C8               	movwf	(pad@fp+1)^(0+128)
  4535     0B10  1703               	bsf	3,6	;RP1=1, select bank3
  4536     0B11  0815               	movf	otoa@i^(0+384),w
  4537     0B12  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4538     0B13  1303               	bcf	3,6	;RP1=0, select bank1
  4539     0B14  00C9               	movwf	pad@buf^(0+128)
  4540     0B15  1703               	bsf	3,6	;RP1=1, select bank3
  4541     0B16  0813               	movf	(otoa@w+1)^(0+384),w
  4542     0B17  1303               	bcf	3,6	;RP1=0, select bank1
  4543     0B18  00CB               	movwf	(pad@p+1)^(0+128)
  4544     0B19  1703               	bsf	3,6	;RP1=1, select bank3
  4545     0B1A  0812               	movf	otoa@w^(0+384),w
  4546     0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  4547     0B1C  00CA               	movwf	pad@p^(0+128)
  4548     0B1D  160A  118A  23DB   	fcall	_pad
  4549     0B20  0848               	movf	(?_pad+1)^(0+128),w
  4550     0B21  00D0               	movwf	(?_otoa+1)^(0+128)
  4551     0B22  0847               	movf	?_pad^(0+128),w
  4552     0B23  00CF               	movwf	?_otoa^(0+128)
  4553     0B24  0008               	return
  4554     0B25                     __end_of_otoa:
  4555                           
  4556                           	psect	text11
  4557     0DCD                     __ptext11:	
  4558 ;; *************** function _dtoa *****************
  4559 ;; Defined at:
  4560 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  4563 ;;		 -> sprintf@f(11), 
  4564 ;;  d               2   49[BANK1 ] int 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  i               2    7[BANK3 ] int 
  4567 ;;  w               2    4[BANK3 ] int 
  4568 ;;  p               2    2[BANK3 ] int 
  4569 ;;  s               1    6[BANK3 ] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2   47[BANK1 ] int 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : B00/100
  4576 ;;		On exit  : B00/900
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       4       0       0
  4580 ;;      Locals:         0       0       0       9       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         0       0       4       9       0
  4583 ;;Total ram usage:       13 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 13
  4586 ;; This function calls:
  4587 ;;		___awdiv
  4588 ;;		___awmod
  4589 ;;		_abs
  4590 ;;		_pad
  4591 ;; This function is called by:
  4592 ;;		_vfpfcnvrt
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596     0DCD                     _dtoa:	
  4597                           ;psect for function _dtoa
  4598                           
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
  4601                           
  4602                           ;incstack = 0
  4603 ;; hardware stack exceeded
  4604                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4605     0DCD  1FD2               	btfss	(dtoa@d+1)^(0+128),7
  4606     0DCE  2DD1               	goto	u5460
  4607     0DCF  3001               	movlw	1
  4608     0DD0  2DD2               	goto	u5470
  4609     0DD1                     u5460:
  4610     0DD1  3000               	movlw	0
  4611     0DD2                     u5470:
  4612     0DD2  1703               	bsf	3,6	;RP1=1, select bank3
  4613     0DD3  0096               	movwf	dtoa@s^(0+384)
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  4616     0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  4617     0DD5  1BDA               	btfsc	(_prec+1)^(0+128),7
  4618     0DD6  2DD9               	goto	l3969
  4619                           
  4620                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  4621     0DD7  30FD               	movlw	253
  4622     0DD8  05DD               	andwf	_flags^(0+128),f
  4623     0DD9                     l3969:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  4626     0DD9  1FDA               	btfss	(_prec+1)^(0+128),7
  4627     0DDA  2DE1               	goto	l3973
  4628     0DDB  3001               	movlw	1
  4629     0DDC  1703               	bsf	3,6	;RP1=1, select bank3
  4630     0DDD  0092               	movwf	dtoa@p^(0+384)
  4631     0DDE  3000               	movlw	0
  4632     0DDF  0093               	movwf	(dtoa@p^(0+384)+1)
  4633     0DE0  2DE8               	goto	l677
  4634     0DE1                     l3973:
  4635     0DE1  085A               	movf	(_prec+1)^(0+128),w
  4636     0DE2  1703               	bsf	3,6	;RP1=1, select bank3
  4637     0DE3  0093               	movwf	(dtoa@p+1)^(0+384)
  4638     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  4639     0DE5  0859               	movf	_prec^(0+128),w
  4640     0DE6  1703               	bsf	3,6	;RP1=1, select bank3
  4641     0DE7  0092               	movwf	dtoa@p^(0+384)
  4642     0DE8                     l677:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  4645     0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  4646     0DE9  0858               	movf	(_width+1)^(0+128),w
  4647     0DEA  1703               	bsf	3,6	;RP1=1, select bank3
  4648     0DEB  0095               	movwf	(dtoa@w+1)^(0+384)
  4649     0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  4650     0DED  0857               	movf	_width^(0+128),w
  4651     0DEE  1703               	bsf	3,6	;RP1=1, select bank3
  4652     0DEF  0094               	movwf	dtoa@w^(0+384)
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  4655     0DF0  0816               	movf	dtoa@s^(0+384),w
  4656     0DF1  1D03               	btfss	3,2
  4657     0DF2  2DF6               	goto	l3979
  4658     0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  4659     0DF4  1D5D               	btfss	_flags^(0+128),2
  4660     0DF5  2E08               	goto	l678
  4661     0DF6                     l3979:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  4664     0DF6  30FF               	movlw	255
  4665     0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  4666     0DF8  0794               	addwf	dtoa@w^(0+384),f
  4667     0DF9  1803               	skipnc
  4668     0DFA  0A95               	incf	(dtoa@w+1)^(0+384),f
  4669     0DFB  30FF               	movlw	255
  4670     0DFC  0795               	addwf	(dtoa@w+1)^(0+384),f
  4671                           
  4672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  4673     0DFD  0816               	movf	dtoa@s^(0+384),w
  4674     0DFE  1D03               	btfss	3,2
  4675     0DFF  2E02               	goto	l3985
  4676     0E00  302B               	movlw	43
  4677     0E01  2E03               	goto	L9
  4678     0E02                     l3985:
  4679     0E02  302D               	movlw	45
  4680     0E03                     L9:
  4681     0E03  0090               	movwf	_dtoa$616^(0+384)
  4682     0E04  3000               	movlw	0
  4683     0E05  0091               	movwf	(_dtoa$616^(0+384)+1)
  4684     0E06  0810               	movf	_dtoa$616^(0+384),w
  4685     0E07  2E12               	goto	L10
  4686     0E08                     l678:	
  4687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 545:  else if (fl
      +                          ags & (1 << 3)) {
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  4690                           
  4691     0E08  1DDD               	btfss	_flags^(0+128),3
  4692     0E09  2E13               	goto	l685
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 546:         --w;
  4695     0E0A  30FF               	movlw	255
  4696     0E0B  1703               	bsf	3,6	;RP1=1, select bank3
  4697     0E0C  0794               	addwf	dtoa@w^(0+384),f
  4698     0E0D  1803               	skipnc
  4699     0E0E  0A95               	incf	(dtoa@w+1)^(0+384),f
  4700     0E0F  30FF               	movlw	255
  4701     0E10  0795               	addwf	(dtoa@w+1)^(0+384),f
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
  4704     0E11  3020               	movlw	32
  4705     0E12                     L10:
  4706     0E12  0096               	movwf	dtoa@s^(0+384)
  4707     0E13                     l685:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  4710     0E13  301F               	movlw	31
  4711     0E14  1703               	bsf	3,6	;RP1=1, select bank3
  4712     0E15  0097               	movwf	dtoa@i^(0+384)
  4713     0E16  3000               	movlw	0
  4714     0E17  0098               	movwf	(dtoa@i^(0+384)+1)
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  4717     0E18  1283               	bcf	3,5	;RP0=0, select bank2
  4718     0E19  01AF               	clrf	(_dbuf^(0+256)+31)
  4719                           
  4720                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4721     0E1A  2E83               	goto	l4003
  4722     0E1B                     l4005:
  4723     0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  4724     0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  4725     0E1D  0851               	movf	dtoa@d^(0+128),w
  4726     0E1E  0452               	iorwf	(dtoa@d+1)^(0+128),w
  4727     0E1F  1D03               	btfss	3,2
  4728     0E20  2E3E               	goto	l3993
  4729     0E21  1703               	bsf	3,6	;RP1=1, select bank3
  4730     0E22  0813               	movf	(dtoa@p+1)^(0+384),w
  4731     0E23  3A80               	xorlw	128
  4732     0E24  00FF               	movwf	127
  4733     0E25  3080               	movlw	128
  4734     0E26  027F               	subwf	127,w
  4735     0E27  1D03               	skipz
  4736     0E28  2E2B               	goto	u5565
  4737     0E29  3001               	movlw	1
  4738     0E2A  0212               	subwf	dtoa@p^(0+384),w
  4739     0E2B                     u5565:
  4740     0E2B  1803               	skipnc
  4741     0E2C  2E3E               	goto	l3993
  4742     0E2D  1683               	bsf	3,5	;RP0=1, select bank3
  4743     0E2E  1703               	bsf	3,6	;RP1=1, select bank3
  4744     0E2F  0815               	movf	(dtoa@w+1)^(0+384),w
  4745     0E30  3A80               	xorlw	128
  4746     0E31  00FF               	movwf	127
  4747     0E32  3080               	movlw	128
  4748     0E33  027F               	subwf	127,w
  4749     0E34  1D03               	skipz
  4750     0E35  2E38               	goto	u5575
  4751     0E36  3001               	movlw	1
  4752     0E37  0214               	subwf	dtoa@w^(0+384),w
  4753     0E38                     u5575:
  4754     0E38  1C03               	skipc
  4755     0E39  2E90               	goto	l4013
  4756     0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  4757     0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  4758     0E3C  1CDD               	btfss	_flags^(0+128),1
  4759     0E3D  2E90               	goto	l4013
  4760     0E3E                     l3993:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  4763     0E3E  30FF               	movlw	255
  4764     0E3F  1683               	bsf	3,5	;RP0=1, select bank3
  4765     0E40  1703               	bsf	3,6	;RP1=1, select bank3
  4766     0E41  0797               	addwf	dtoa@i^(0+384),f
  4767     0E42  1803               	skipnc
  4768     0E43  0A98               	incf	(dtoa@i+1)^(0+384),f
  4769     0E44  30FF               	movlw	255
  4770     0E45  0798               	addwf	(dtoa@i+1)^(0+384),f
  4771                           
  4772                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4773     0E46  0817               	movf	dtoa@i^(0+384),w
  4774     0E47  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4775     0E48  0084               	movwf	4
  4776     0E49  300A               	movlw	10
  4777     0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  4778     0E4B  00B2               	movwf	___awmod@divisor^(0+128)
  4779     0E4C  3000               	movlw	0
  4780     0E4D  00B3               	movwf	(___awmod@divisor^(0+128)+1)
  4781     0E4E  0852               	movf	(dtoa@d+1)^(0+128),w
  4782     0E4F  00B5               	movwf	(___awmod@dividend+1)^(0+128)
  4783     0E50  0851               	movf	dtoa@d^(0+128),w
  4784     0E51  00B4               	movwf	___awmod@dividend^(0+128)
  4785     0E52  160A  118A  2392  120A  158A  	fcall	___awmod
  4786     0E57  0833               	movf	(?___awmod+1)^(0+128),w
  4787     0E58  00B9               	movwf	(abs@a+1)^(0+128)
  4788     0E59  0832               	movf	?___awmod^(0+128),w
  4789     0E5A  00B8               	movwf	abs@a^(0+128)
  4790     0E5B  160A  118A  20A5  120A  158A  	fcall	_abs
  4791     0E60  0838               	movf	?_abs^(0+128),w
  4792     0E61  3E30               	addlw	48
  4793     0E62  1783               	bsf	3,7	;select IRP bank2
  4794     0E63  0080               	movwf	0
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
  4797     0E64  30FF               	movlw	255
  4798     0E65  1703               	bsf	3,6	;RP1=1, select bank3
  4799     0E66  0792               	addwf	dtoa@p^(0+384),f
  4800     0E67  1803               	skipnc
  4801     0E68  0A93               	incf	(dtoa@p+1)^(0+384),f
  4802     0E69  30FF               	movlw	255
  4803     0E6A  0793               	addwf	(dtoa@p+1)^(0+384),f
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  4806     0E6B  30FF               	movlw	255
  4807     0E6C  0794               	addwf	dtoa@w^(0+384),f
  4808     0E6D  1803               	skipnc
  4809     0E6E  0A95               	incf	(dtoa@w+1)^(0+384),f
  4810     0E6F  30FF               	movlw	255
  4811     0E70  0795               	addwf	(dtoa@w+1)^(0+384),f
  4812                           
  4813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  4814     0E71  300A               	movlw	10
  4815     0E72  1303               	bcf	3,6	;RP1=0, select bank1
  4816     0E73  00B2               	movwf	___awdiv@divisor^(0+128)
  4817     0E74  3000               	movlw	0
  4818     0E75  00B3               	movwf	(___awdiv@divisor^(0+128)+1)
  4819     0E76  0852               	movf	(dtoa@d+1)^(0+128),w
  4820     0E77  00B5               	movwf	(___awdiv@dividend+1)^(0+128)
  4821     0E78  0851               	movf	dtoa@d^(0+128),w
  4822     0E79  00B4               	movwf	___awdiv@dividend^(0+128)
  4823     0E7A  160A  118A  2484  120A  158A  	fcall	___awdiv
  4824     0E7F  0833               	movf	(?___awdiv+1)^(0+128),w
  4825     0E80  00D2               	movwf	(dtoa@d+1)^(0+128)
  4826     0E81  0832               	movf	?___awdiv^(0+128),w
  4827     0E82  00D1               	movwf	dtoa@d^(0+128)
  4828     0E83                     l4003:
  4829                           
  4830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4831     0E83  1683               	bsf	3,5	;RP0=1, select bank3
  4832     0E84  1703               	bsf	3,6	;RP1=1, select bank3
  4833     0E85  0818               	movf	(dtoa@i+1)^(0+384),w
  4834     0E86  3A80               	xorlw	128
  4835     0E87  00FF               	movwf	127
  4836     0E88  3080               	movlw	128
  4837     0E89  027F               	subwf	127,w
  4838     0E8A  1D03               	skipz
  4839     0E8B  2E8E               	goto	u5545
  4840     0E8C  3001               	movlw	1
  4841     0E8D  0217               	subwf	dtoa@i^(0+384),w
  4842     0E8E                     u5545:
  4843     0E8E  1803               	btfsc	3,0
  4844     0E8F  2E1B               	goto	l4005
  4845     0E90                     l4013:
  4846                           
  4847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  4848     0E90  1683               	bsf	3,5	;RP0=1, select bank3
  4849     0E91  1703               	bsf	3,6	;RP1=1, select bank3
  4850     0E92  0816               	movf	dtoa@s^(0+384),w
  4851     0E93  1903               	btfsc	3,2
  4852     0E94  2EA1               	goto	l4019
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  4855     0E95  30FF               	movlw	255
  4856     0E96  0797               	addwf	dtoa@i^(0+384),f
  4857     0E97  1803               	skipnc
  4858     0E98  0A98               	incf	(dtoa@i+1)^(0+384),f
  4859     0E99  30FF               	movlw	255
  4860     0E9A  0798               	addwf	(dtoa@i+1)^(0+384),f
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  4863     0E9B  0817               	movf	dtoa@i^(0+384),w
  4864     0E9C  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4865     0E9D  0084               	movwf	4
  4866     0E9E  0816               	movf	dtoa@s^(0+384),w
  4867     0E9F  1783               	bsf	3,7	;select IRP bank2
  4868     0EA0  0080               	movwf	0
  4869     0EA1                     l4019:
  4870                           
  4871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  4872     0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  4873     0EA2  084F               	movf	dtoa@fp^(0+128),w
  4874     0EA3  00C7               	movwf	pad@fp^(0+128)
  4875     0EA4  0850               	movf	(dtoa@fp+1)^(0+128),w
  4876     0EA5  00C8               	movwf	(pad@fp+1)^(0+128)
  4877     0EA6  1703               	bsf	3,6	;RP1=1, select bank3
  4878     0EA7  0817               	movf	dtoa@i^(0+384),w
  4879     0EA8  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4880     0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  4881     0EAA  00C9               	movwf	pad@buf^(0+128)
  4882     0EAB  1703               	bsf	3,6	;RP1=1, select bank3
  4883     0EAC  0815               	movf	(dtoa@w+1)^(0+384),w
  4884     0EAD  1303               	bcf	3,6	;RP1=0, select bank1
  4885     0EAE  00CB               	movwf	(pad@p+1)^(0+128)
  4886     0EAF  1703               	bsf	3,6	;RP1=1, select bank3
  4887     0EB0  0814               	movf	dtoa@w^(0+384),w
  4888     0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  4889     0EB2  00CA               	movwf	pad@p^(0+128)
  4890     0EB3  160A  118A  23DB   	fcall	_pad
  4891     0EB6  0848               	movf	(?_pad+1)^(0+128),w
  4892     0EB7  00D0               	movwf	(?_dtoa+1)^(0+128)
  4893     0EB8  0847               	movf	?_pad^(0+128),w
  4894     0EB9  00CF               	movwf	?_dtoa^(0+128)
  4895     0EBA  0008               	return
  4896     0EBB                     __end_of_dtoa:
  4897                           
  4898                           	psect	text12
  4899     13DB                     __ptext12:	
  4900 ;; *************** function _pad *****************
  4901 ;; Defined at:
  4902 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  fp              2   39[BANK1 ] PTR struct _IO_FILE
  4905 ;;		 -> sprintf@f(11), 
  4906 ;;  buf             1   41[BANK1 ] PTR unsigned char 
  4907 ;;		 -> dbuf(32), 
  4908 ;;  p               2   42[BANK1 ] int 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  i               2   45[BANK1 ] int 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  2   39[BANK1 ] int 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 300/100
  4917 ;;		On exit  : B00/900
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       5       0       0
  4921 ;;      Locals:         0       0       2       0       0
  4922 ;;      Temps:          0       0       1       0       0
  4923 ;;      Totals:         0       0       8       0       0
  4924 ;;Total ram usage:        8 bytes
  4925 ;; Hardware stack levels used: 1
  4926 ;; Hardware stack levels required when called: 12
  4927 ;; This function calls:
  4928 ;;		_fputc
  4929 ;;		_fputs
  4930 ;;		_strlen
  4931 ;; This function is called by:
  4932 ;;		_dtoa
  4933 ;;		_otoa
  4934 ;;		_utoa
  4935 ;;		_xtoa
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939     13DB                     _pad:	
  4940                           ;psect for function _pad
  4941                           
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  4944                           
  4945                           ;incstack = 0
  4946 ;; hardware stack exceeded
  4947                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4948     13DB  1C5D               	btfss	_flags^(0+128),0
  4949     13DC  2BE8               	goto	l3913
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  4952     13DD  0849               	movf	pad@buf^(0+128),w
  4953     13DE  00BF               	movwf	fputs@s^(0+128)
  4954     13DF  0847               	movf	pad@fp^(0+128),w
  4955     13E0  00C0               	movwf	fputs@fp^(0+128)
  4956     13E1  0848               	movf	(pad@fp+1)^(0+128),w
  4957     13E2  00C1               	movwf	(fputs@fp+1)^(0+128)
  4958     13E3  160A  118A  2161  160A  118A  	fcall	_fputs
  4959     13E8                     l3913:
  4960                           
  4961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  4962     13E8  1FCB               	btfss	(pad@p+1)^(0+128),7
  4963     13E9  2BEC               	goto	l649
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4966     13EA  01CA               	clrf	pad@p^(0+128)
  4967     13EB  01CB               	clrf	(pad@p+1)^(0+128)
  4968     13EC                     l649:	
  4969                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  4970                           
  4971                           
  4972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4973     13EC  01CD               	clrf	pad@i^(0+128)
  4974     13ED  01CE               	clrf	(pad@i+1)^(0+128)
  4975     13EE                     l3921:	
  4976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4977                           
  4978                           
  4979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4980     13EE  084E               	movf	(pad@i+1)^(0+128),w
  4981     13EF  3A80               	xorlw	128
  4982     13F0  00CC               	movwf	??_pad^(0+128)
  4983     13F1  084B               	movf	(pad@p+1)^(0+128),w
  4984     13F2  3A80               	xorlw	128
  4985     13F3  024C               	subwf	??_pad^(0+128),w
  4986     13F4  1D03               	skipz
  4987     13F5  2BF8               	goto	u5385
  4988     13F6  084A               	movf	pad@p^(0+128),w
  4989     13F7  024D               	subwf	pad@i^(0+128),w
  4990     13F8                     u5385:
  4991     13F8  1803               	btfsc	3,0
  4992     13F9  2C12               	goto	l652
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4995     13FA  3020               	movlw	32
  4996     13FB  1683               	bsf	3,5	;RP0=1, select bank1
  4997     13FC  1303               	bcf	3,6	;RP1=0, select bank1
  4998     13FD  00B2               	movwf	fputc@c^(0+128)
  4999     13FE  3000               	movlw	0
  5000     13FF  00B3               	movwf	(fputc@c^(0+128)+1)
  5001     1400  0847               	movf	pad@fp^(0+128),w
  5002     1401  00B4               	movwf	fputc@fp^(0+128)
  5003     1402  0848               	movf	(pad@fp+1)^(0+128),w
  5004     1403  00B5               	movwf	(fputc@fp+1)^(0+128)
  5005     1404  160A  118A  276D  160A  118A  	fcall	_fputc
  5006                           
  5007                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5008     1409  3001               	movlw	1
  5009     140A  1683               	bsf	3,5	;RP0=1, select bank1
  5010     140B  1303               	bcf	3,6	;RP1=0, select bank1
  5011     140C  07CD               	addwf	pad@i^(0+128),f
  5012     140D  1803               	skipnc
  5013     140E  0ACE               	incf	(pad@i+1)^(0+128),f
  5014     140F  3000               	movlw	0
  5015     1410  07CE               	addwf	(pad@i+1)^(0+128),f
  5016     1411  2BEE               	goto	l3921
  5017     1412                     l652:
  5018                           
  5019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  5020     1412  1683               	bsf	3,5	;RP0=1, select bank1
  5021     1413  1303               	bcf	3,6	;RP1=0, select bank1
  5022     1414  185D               	btfsc	_flags^(0+128),0
  5023     1415  2C21               	goto	l653
  5024                           
  5025                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5026     1416  0849               	movf	pad@buf^(0+128),w
  5027     1417  00BF               	movwf	fputs@s^(0+128)
  5028     1418  0847               	movf	pad@fp^(0+128),w
  5029     1419  00C0               	movwf	fputs@fp^(0+128)
  5030     141A  0848               	movf	(pad@fp+1)^(0+128),w
  5031     141B  00C1               	movwf	(fputs@fp+1)^(0+128)
  5032     141C  160A  118A  2161  160A  118A  	fcall	_fputs
  5033     1421                     l653:	
  5034                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 220:     }
  5035                           
  5036                           
  5037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  5038     1421  0849               	movf	pad@buf^(0+128),w
  5039     1422  00B2               	movwf	strlen@s^(0+128)
  5040     1423  160A  118A  20C5   	fcall	_strlen
  5041     1426  084A               	movf	pad@p^(0+128),w
  5042     1427  0732               	addwf	?_strlen^(0+128),w
  5043     1428  00C7               	movwf	?_pad^(0+128)
  5044     1429  084B               	movf	(pad@p+1)^(0+128),w
  5045     142A  1803               	skipnc
  5046     142B  0A4B               	incf	(pad@p+1)^(0+128),w
  5047     142C  0733               	addwf	(?_strlen+1)^(0+128),w
  5048     142D  00C8               	movwf	(?_pad+1)^(0+128)
  5049     142E  0008               	return
  5050     142F                     __end_of_pad:
  5051                           
  5052                           	psect	text13
  5053     10C5                     __ptext13:	
  5054 ;; *************** function _strlen *****************
  5055 ;; Defined at:
  5056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  s               1   18[BANK1 ] PTR const unsigned char 
  5059 ;;		 -> dbuf(32), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  a               1   20[BANK1 ] PTR const unsigned char 
  5062 ;;		 -> dbuf(32), 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2   18[BANK1 ] unsigned int 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 300/100
  5069 ;;		On exit  : B00/900
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         0       0       2       0       0
  5073 ;;      Locals:         0       0       1       0       0
  5074 ;;      Temps:          0       0       0       0       0
  5075 ;;      Totals:         0       0       3       0       0
  5076 ;;Total ram usage:        3 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 9
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_pad
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086     10C5                     _strlen:	
  5087                           ;psect for function _strlen
  5088                           
  5089                           
  5090                           ;incstack = 0
  5091 ;; hardware stack exceeded
  5092                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5093     10C5  0832               	movf	strlen@s^(0+128),w
  5094     10C6  00B4               	movwf	strlen@a^(0+128)
  5095     10C7                     l3773:
  5096     10C7  0832               	movf	strlen@s^(0+128),w
  5097     10C8  0084               	movwf	4
  5098     10C9  1783               	bsf	3,7	;select IRP bank2
  5099     10CA  0800               	movf	0,w
  5100     10CB  1903               	btfsc	3,2
  5101     10CC  28D0               	goto	l3775
  5102     10CD  3001               	movlw	1
  5103     10CE  07B2               	addwf	strlen@s^(0+128),f
  5104     10CF  28C7               	goto	l3773
  5105     10D0                     l3775:
  5106     10D0  0834               	movf	strlen@a^(0+128),w
  5107     10D1  0232               	subwf	strlen@s^(0+128),w
  5108     10D2  00B2               	movwf	?_strlen^(0+128)
  5109     10D3  01B3               	clrf	(?_strlen+1)^(0+128)
  5110     10D4  1BB2               	btfsc	?_strlen^(0+128),7
  5111     10D5  03B3               	decf	(?_strlen+1)^(0+128),f
  5112     10D6  0008               	return
  5113     10D7                     __end_of_strlen:
  5114                           
  5115                           	psect	text14
  5116     1161                     __ptext14:	
  5117 ;; *************** function _fputs *****************
  5118 ;; Defined at:
  5119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  s               1   31[BANK1 ] PTR const unsigned char 
  5122 ;;		 -> dbuf(32), 
  5123 ;;  fp              2   32[BANK1 ] PTR struct _IO_FILE
  5124 ;;		 -> sprintf@f(11), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  i               2   37[BANK1 ] int 
  5127 ;;  c               1   36[BANK1 ] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2   31[BANK1 ] int 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 300/100
  5134 ;;		On exit  : B00/900
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         0       0       3       0       0
  5138 ;;      Locals:         0       0       3       0       0
  5139 ;;      Temps:          0       0       2       0       0
  5140 ;;      Totals:         0       0       8       0       0
  5141 ;;Total ram usage:        8 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 11
  5144 ;; This function calls:
  5145 ;;		_fputc
  5146 ;; This function is called by:
  5147 ;;		_pad
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151     1161                     _fputs:	
  5152                           ;psect for function _fputs
  5153                           
  5154                           
  5155                           ;incstack = 0
  5156 ;; hardware stack exceeded
  5157                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5158     1161  01C5               	clrf	fputs@i^(0+128)
  5159     1162  01C6               	clrf	(fputs@i+1)^(0+128)
  5160     1163                     l3767:
  5161     1163  0845               	movf	fputs@i^(0+128),w
  5162     1164  073F               	addwf	fputs@s^(0+128),w
  5163     1165  00C2               	movwf	??_fputs^(0+128)
  5164     1166  0842               	movf	??_fputs^(0+128),w
  5165     1167  0084               	movwf	4
  5166     1168  1783               	bsf	3,7	;select IRP bank2
  5167     1169  0800               	movf	0,w
  5168     116A  00C4               	movwf	fputs@c^(0+128)
  5169     116B  0844               	movf	fputs@c^(0+128),w
  5170     116C  1903               	btfsc	3,2
  5171     116D  0008               	return
  5172     116E  0844               	movf	fputs@c^(0+128),w
  5173     116F  00C2               	movwf	??_fputs^(0+128)
  5174     1170  01C3               	clrf	(??_fputs^(0+128)+1)
  5175     1171  0842               	movf	??_fputs^(0+128),w
  5176     1172  00B2               	movwf	fputc@c^(0+128)
  5177     1173  0843               	movf	(??_fputs+1)^(0+128),w
  5178     1174  00B3               	movwf	(fputc@c+1)^(0+128)
  5179     1175  0840               	movf	fputs@fp^(0+128),w
  5180     1176  00B4               	movwf	fputc@fp^(0+128)
  5181     1177  0841               	movf	(fputs@fp+1)^(0+128),w
  5182     1178  00B5               	movwf	(fputc@fp+1)^(0+128)
  5183     1179  160A  118A  276D  160A  118A  	fcall	_fputc
  5184     117E  3001               	movlw	1
  5185     117F  1683               	bsf	3,5	;RP0=1, select bank1
  5186     1180  1303               	bcf	3,6	;RP1=0, select bank1
  5187     1181  07C5               	addwf	fputs@i^(0+128),f
  5188     1182  1803               	skipnc
  5189     1183  0AC6               	incf	(fputs@i+1)^(0+128),f
  5190     1184  3000               	movlw	0
  5191     1185  07C6               	addwf	(fputs@i+1)^(0+128),f
  5192     1186  2963               	goto	l3767
  5193     1187                     __end_of_fputs:
  5194                           
  5195                           	psect	text15
  5196     10A5                     __ptext15:	
  5197 ;; *************** function _abs *****************
  5198 ;; Defined at:
  5199 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  a               2   24[BANK1 ] int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  2   24[BANK1 ] int 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 300/100
  5210 ;;		On exit  : 300/100
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         0       0       2       0       0
  5214 ;;      Locals:         0       0       0       0       0
  5215 ;;      Temps:          0       0       2       0       0
  5216 ;;      Totals:         0       0       4       0       0
  5217 ;;Total ram usage:        4 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 9
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_dtoa
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227     10A5                     _abs:	
  5228                           ;psect for function _abs
  5229                           
  5230                           
  5231                           ;incstack = 0
  5232 ;; hardware stack exceeded
  5233                           ; Regs used in _abs: [wreg+status,2+status,0]
  5234     10A5  1FB9               	btfss	(abs@a+1)^(0+128),7
  5235     10A6  0008               	return
  5236     10A7  0938               	comf	abs@a^(0+128),w
  5237     10A8  00BA               	movwf	??_abs^(0+128)
  5238     10A9  0939               	comf	(abs@a+1)^(0+128),w
  5239     10AA  00BB               	movwf	(??_abs^(0+128)+1)
  5240     10AB  0ABA               	incf	??_abs^(0+128),f
  5241     10AC  1903               	skipnz
  5242     10AD  0ABB               	incf	(??_abs^(0+128)+1),f
  5243     10AE  083A               	movf	??_abs^(0+128),w
  5244     10AF  00B8               	movwf	?_abs^(0+128)
  5245     10B0  083B               	movf	(??_abs+1)^(0+128),w
  5246     10B1  00B9               	movwf	(?_abs+1)^(0+128)
  5247     10B2  0008               	return
  5248     10B3                     __end_of_abs:
  5249                           
  5250                           	psect	text16
  5251     1392                     __ptext16:	
  5252 ;; *************** function ___awmod *****************
  5253 ;; Defined at:
  5254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  divisor         2   18[BANK1 ] int 
  5257 ;;  dividend        2   20[BANK1 ] int 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  sign            1   23[BANK1 ] unsigned char 
  5260 ;;  counter         1   22[BANK1 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  2   18[BANK1 ] int 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 300/100
  5267 ;;		On exit  : 300/100
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       0       4       0       0
  5271 ;;      Locals:         0       0       2       0       0
  5272 ;;      Temps:          0       0       0       0       0
  5273 ;;      Totals:         0       0       6       0       0
  5274 ;;Total ram usage:        6 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 9
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_dtoa
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284     1392                     ___awmod:	
  5285                           ;psect for function ___awmod
  5286                           
  5287                           
  5288                           ;incstack = 0
  5289 ;; hardware stack exceeded
  5290                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5291     1392  01B7               	clrf	___awmod@sign^(0+128)
  5292     1393  1FB5               	btfss	(___awmod@dividend+1)^(0+128),7
  5293     1394  2B9C               	goto	l3831
  5294     1395  09B4               	comf	___awmod@dividend^(0+128),f
  5295     1396  09B5               	comf	(___awmod@dividend+1)^(0+128),f
  5296     1397  0AB4               	incf	___awmod@dividend^(0+128),f
  5297     1398  1903               	skipnz
  5298     1399  0AB5               	incf	(___awmod@dividend+1)^(0+128),f
  5299     139A  3001               	movlw	1
  5300     139B  00B7               	movwf	___awmod@sign^(0+128)
  5301     139C                     l3831:
  5302     139C  1FB3               	btfss	(___awmod@divisor+1)^(0+128),7
  5303     139D  2BA3               	goto	l3835
  5304     139E  09B2               	comf	___awmod@divisor^(0+128),f
  5305     139F  09B3               	comf	(___awmod@divisor+1)^(0+128),f
  5306     13A0  0AB2               	incf	___awmod@divisor^(0+128),f
  5307     13A1  1903               	skipnz
  5308     13A2  0AB3               	incf	(___awmod@divisor+1)^(0+128),f
  5309     13A3                     l3835:
  5310     13A3  0832               	movf	___awmod@divisor^(0+128),w
  5311     13A4  0433               	iorwf	(___awmod@divisor+1)^(0+128),w
  5312     13A5  1903               	btfsc	3,2
  5313     13A6  2BCE               	goto	l3853
  5314     13A7  3001               	movlw	1
  5315     13A8  00B6               	movwf	___awmod@counter^(0+128)
  5316     13A9                     l3843:
  5317     13A9  1BB3               	btfsc	(___awmod@divisor+1)^(0+128),7
  5318     13AA  2BB5               	goto	l3845
  5319     13AB  3001               	movlw	1
  5320     13AC                     u5175:
  5321     13AC  1003               	clrc
  5322     13AD  0DB2               	rlf	___awmod@divisor^(0+128),f
  5323     13AE  0DB3               	rlf	(___awmod@divisor+1)^(0+128),f
  5324     13AF  3EFF               	addlw	-1
  5325     13B0  1D03               	skipz
  5326     13B1  2BAC               	goto	u5175
  5327     13B2  3001               	movlw	1
  5328     13B3  07B6               	addwf	___awmod@counter^(0+128),f
  5329     13B4  2BA9               	goto	l3843
  5330     13B5                     l3845:
  5331     13B5  0833               	movf	(___awmod@divisor+1)^(0+128),w
  5332     13B6  0235               	subwf	(___awmod@dividend+1)^(0+128),w
  5333     13B7  1D03               	skipz
  5334     13B8  2BBB               	goto	u5195
  5335     13B9  0832               	movf	___awmod@divisor^(0+128),w
  5336     13BA  0234               	subwf	___awmod@dividend^(0+128),w
  5337     13BB                     u5195:
  5338     13BB  1C03               	skipc
  5339     13BC  2BC3               	goto	l3849
  5340     13BD  0832               	movf	___awmod@divisor^(0+128),w
  5341     13BE  02B4               	subwf	___awmod@dividend^(0+128),f
  5342     13BF  0833               	movf	(___awmod@divisor+1)^(0+128),w
  5343     13C0  1C03               	skipc
  5344     13C1  03B5               	decf	(___awmod@dividend+1)^(0+128),f
  5345     13C2  02B5               	subwf	(___awmod@dividend+1)^(0+128),f
  5346     13C3                     l3849:
  5347     13C3  3001               	movlw	1
  5348     13C4                     u5205:
  5349     13C4  1003               	clrc
  5350     13C5  0CB3               	rrf	(___awmod@divisor+1)^(0+128),f
  5351     13C6  0CB2               	rrf	___awmod@divisor^(0+128),f
  5352     13C7  3EFF               	addlw	-1
  5353     13C8  1D03               	skipz
  5354     13C9  2BC4               	goto	u5205
  5355     13CA  3001               	movlw	1
  5356     13CB  02B6               	subwf	___awmod@counter^(0+128),f
  5357     13CC  1D03               	btfss	3,2
  5358     13CD  2BB5               	goto	l3845
  5359     13CE                     l3853:
  5360     13CE  0837               	movf	___awmod@sign^(0+128),w
  5361     13CF  1903               	btfsc	3,2
  5362     13D0  2BD6               	goto	l3857
  5363     13D1  09B4               	comf	___awmod@dividend^(0+128),f
  5364     13D2  09B5               	comf	(___awmod@dividend+1)^(0+128),f
  5365     13D3  0AB4               	incf	___awmod@dividend^(0+128),f
  5366     13D4  1903               	skipnz
  5367     13D5  0AB5               	incf	(___awmod@dividend+1)^(0+128),f
  5368     13D6                     l3857:
  5369     13D6  0835               	movf	(___awmod@dividend+1)^(0+128),w
  5370     13D7  00B3               	movwf	(?___awmod+1)^(0+128)
  5371     13D8  0834               	movf	___awmod@dividend^(0+128),w
  5372     13D9  00B2               	movwf	?___awmod^(0+128)
  5373     13DA  0008               	return
  5374     13DB                     __end_of___awmod:
  5375                           
  5376                           	psect	text17
  5377     1484                     __ptext17:	
  5378 ;; *************** function ___awdiv *****************
  5379 ;; Defined at:
  5380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  divisor         2   18[BANK1 ] int 
  5383 ;;  dividend        2   20[BANK1 ] int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  quotient        2   24[BANK1 ] int 
  5386 ;;  sign            1   23[BANK1 ] unsigned char 
  5387 ;;  counter         1   22[BANK1 ] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2   18[BANK1 ] int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : B00/900
  5394 ;;		On exit  : B00/900
  5395 ;;		Unchanged: 800/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5397 ;;      Params:         0       0       4       0       0
  5398 ;;      Locals:         0       0       4       0       0
  5399 ;;      Temps:          0       0       0       0       0
  5400 ;;      Totals:         0       0       8       0       0
  5401 ;;Total ram usage:        8 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 9
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_dtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411     1484                     ___awdiv:	
  5412                           ;psect for function ___awdiv
  5413                           
  5414                           
  5415                           ;incstack = 0
  5416 ;; hardware stack exceeded
  5417                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5418     1484  01B7               	clrf	___awdiv@sign^(0+128)
  5419     1485  1FB3               	btfss	(___awdiv@divisor+1)^(0+128),7
  5420     1486  2C8E               	goto	l3787
  5421     1487  09B2               	comf	___awdiv@divisor^(0+128),f
  5422     1488  09B3               	comf	(___awdiv@divisor+1)^(0+128),f
  5423     1489  0AB2               	incf	___awdiv@divisor^(0+128),f
  5424     148A  1903               	skipnz
  5425     148B  0AB3               	incf	(___awdiv@divisor+1)^(0+128),f
  5426     148C  3001               	movlw	1
  5427     148D  00B7               	movwf	___awdiv@sign^(0+128)
  5428     148E                     l3787:
  5429     148E  1FB5               	btfss	(___awdiv@dividend+1)^(0+128),7
  5430     148F  2C97               	goto	l3793
  5431     1490  09B4               	comf	___awdiv@dividend^(0+128),f
  5432     1491  09B5               	comf	(___awdiv@dividend+1)^(0+128),f
  5433     1492  0AB4               	incf	___awdiv@dividend^(0+128),f
  5434     1493  1903               	skipnz
  5435     1494  0AB5               	incf	(___awdiv@dividend+1)^(0+128),f
  5436     1495  3001               	movlw	1
  5437     1496  06B7               	xorwf	___awdiv@sign^(0+128),f
  5438     1497                     l3793:
  5439     1497  01B8               	clrf	___awdiv@quotient^(0+128)
  5440     1498  01B9               	clrf	(___awdiv@quotient+1)^(0+128)
  5441     1499  0832               	movf	___awdiv@divisor^(0+128),w
  5442     149A  0433               	iorwf	(___awdiv@divisor+1)^(0+128),w
  5443     149B  1903               	btfsc	3,2
  5444     149C  2CCC               	goto	l3815
  5445     149D  3001               	movlw	1
  5446     149E  00B6               	movwf	___awdiv@counter^(0+128)
  5447     149F                     l3803:
  5448     149F  1BB3               	btfsc	(___awdiv@divisor+1)^(0+128),7
  5449     14A0  2CAB               	goto	l3805
  5450     14A1  3001               	movlw	1
  5451     14A2                     u5075:
  5452     14A2  1003               	clrc
  5453     14A3  0DB2               	rlf	___awdiv@divisor^(0+128),f
  5454     14A4  0DB3               	rlf	(___awdiv@divisor+1)^(0+128),f
  5455     14A5  3EFF               	addlw	-1
  5456     14A6  1D03               	skipz
  5457     14A7  2CA2               	goto	u5075
  5458     14A8  3001               	movlw	1
  5459     14A9  07B6               	addwf	___awdiv@counter^(0+128),f
  5460     14AA  2C9F               	goto	l3803
  5461     14AB                     l3805:
  5462     14AB  3001               	movlw	1
  5463     14AC                     u5095:
  5464     14AC  1003               	clrc
  5465     14AD  0DB8               	rlf	___awdiv@quotient^(0+128),f
  5466     14AE  0DB9               	rlf	(___awdiv@quotient+1)^(0+128),f
  5467     14AF  3EFF               	addlw	-1
  5468     14B0  1D03               	skipz
  5469     14B1  2CAC               	goto	u5095
  5470     14B2  0833               	movf	(___awdiv@divisor+1)^(0+128),w
  5471     14B3  0235               	subwf	(___awdiv@dividend+1)^(0+128),w
  5472     14B4  1D03               	skipz
  5473     14B5  2CB8               	goto	u5105
  5474     14B6  0832               	movf	___awdiv@divisor^(0+128),w
  5475     14B7  0234               	subwf	___awdiv@dividend^(0+128),w
  5476     14B8                     u5105:
  5477     14B8  1C03               	skipc
  5478     14B9  2CC1               	goto	l3811
  5479     14BA  0832               	movf	___awdiv@divisor^(0+128),w
  5480     14BB  02B4               	subwf	___awdiv@dividend^(0+128),f
  5481     14BC  0833               	movf	(___awdiv@divisor+1)^(0+128),w
  5482     14BD  1C03               	skipc
  5483     14BE  03B5               	decf	(___awdiv@dividend+1)^(0+128),f
  5484     14BF  02B5               	subwf	(___awdiv@dividend+1)^(0+128),f
  5485     14C0  1438               	bsf	___awdiv@quotient^(0+128),0
  5486     14C1                     l3811:
  5487     14C1  3001               	movlw	1
  5488     14C2                     u5115:
  5489     14C2  1003               	clrc
  5490     14C3  0CB3               	rrf	(___awdiv@divisor+1)^(0+128),f
  5491     14C4  0CB2               	rrf	___awdiv@divisor^(0+128),f
  5492     14C5  3EFF               	addlw	-1
  5493     14C6  1D03               	skipz
  5494     14C7  2CC2               	goto	u5115
  5495     14C8  3001               	movlw	1
  5496     14C9  02B6               	subwf	___awdiv@counter^(0+128),f
  5497     14CA  1D03               	btfss	3,2
  5498     14CB  2CAB               	goto	l3805
  5499     14CC                     l3815:
  5500     14CC  0837               	movf	___awdiv@sign^(0+128),w
  5501     14CD  1903               	btfsc	3,2
  5502     14CE  2CD4               	goto	l3819
  5503     14CF  09B8               	comf	___awdiv@quotient^(0+128),f
  5504     14D0  09B9               	comf	(___awdiv@quotient+1)^(0+128),f
  5505     14D1  0AB8               	incf	___awdiv@quotient^(0+128),f
  5506     14D2  1903               	skipnz
  5507     14D3  0AB9               	incf	(___awdiv@quotient+1)^(0+128),f
  5508     14D4                     l3819:
  5509     14D4  0839               	movf	(___awdiv@quotient+1)^(0+128),w
  5510     14D5  00B3               	movwf	(?___awdiv+1)^(0+128)
  5511     14D6  0838               	movf	___awdiv@quotient^(0+128),w
  5512     14D7  00B2               	movwf	?___awdiv^(0+128)
  5513     14D8  0008               	return
  5514     14D9                     __end_of___awdiv:
  5515                           
  5516                           	psect	text18
  5517     1591                     __ptext18:	
  5518 ;; *************** function _ctoa *****************
  5519 ;; Defined at:
  5520 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  fp              2   31[BANK1 ] PTR struct _IO_FILE
  5523 ;;		 -> sprintf@f(11), 
  5524 ;;  c               1   33[BANK1 ] unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  w               2   38[BANK1 ] int 
  5527 ;;  l               2   36[BANK1 ] int 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2   31[BANK1 ] int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : B00/900
  5534 ;;		On exit  : 300/100
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       3       0       0
  5538 ;;      Locals:         0       0       4       0       0
  5539 ;;      Temps:          0       0       2       0       0
  5540 ;;      Totals:         0       0       9       0       0
  5541 ;;Total ram usage:        9 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 11
  5544 ;; This function calls:
  5545 ;;		_fputc
  5546 ;; This function is called by:
  5547 ;;		_vfpfcnvrt
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551     1591                     _ctoa:	
  5552                           ;psect for function _ctoa
  5553                           
  5554                           
  5555                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
  5556                           
  5557                           ;incstack = 0
  5558 ;; hardware stack exceeded
  5559                           ; Regs used in _ctoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5560     1591  0857               	movf	_width^(0+128),w
  5561     1592  0458               	iorwf	(_width+1)^(0+128),w
  5562     1593  1D03               	btfss	3,2
  5563     1594  2D9A               	goto	l3939
  5564     1595  0858               	movf	(_width+1)^(0+128),w
  5565     1596  00C7               	movwf	(ctoa@w+1)^(0+128)
  5566     1597  0857               	movf	_width^(0+128),w
  5567     1598  00C6               	movwf	ctoa@w^(0+128)
  5568     1599  2DA2               	goto	l3941
  5569     159A                     l3939:
  5570     159A  0857               	movf	_width^(0+128),w
  5571     159B  3EFF               	addlw	255
  5572     159C  00C6               	movwf	ctoa@w^(0+128)
  5573     159D  0858               	movf	(_width+1)^(0+128),w
  5574     159E  1803               	skipnc
  5575     159F  3E01               	addlw	1
  5576     15A0  3EFF               	addlw	255
  5577     15A1  00C7               	movwf	(ctoa@w+1)^(0+128)
  5578     15A2                     l3941:
  5579                           
  5580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  5581     15A2  1C5D               	btfss	_flags^(0+128),0
  5582     15A3  2DB4               	goto	l3945
  5583                           
  5584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  5585     15A4  0841               	movf	ctoa@c^(0+128),w
  5586     15A5  00C2               	movwf	??_ctoa^(0+128)
  5587     15A6  01C3               	clrf	(??_ctoa^(0+128)+1)
  5588     15A7  0842               	movf	??_ctoa^(0+128),w
  5589     15A8  00B2               	movwf	fputc@c^(0+128)
  5590     15A9  0843               	movf	(??_ctoa+1)^(0+128),w
  5591     15AA  00B3               	movwf	(fputc@c+1)^(0+128)
  5592     15AB  083F               	movf	ctoa@fp^(0+128),w
  5593     15AC  00B4               	movwf	fputc@fp^(0+128)
  5594     15AD  0840               	movf	(ctoa@fp+1)^(0+128),w
  5595     15AE  00B5               	movwf	(fputc@fp+1)^(0+128)
  5596     15AF  160A  118A  276D  160A  118A  	fcall	_fputc
  5597     15B4                     l3945:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  5600     15B4  1683               	bsf	3,5	;RP0=1, select bank1
  5601     15B5  1303               	bcf	3,6	;RP1=0, select bank1
  5602     15B6  1FC7               	btfss	(ctoa@w+1)^(0+128),7
  5603     15B7  2DBA               	goto	l665
  5604     15B8  01C6               	clrf	ctoa@w^(0+128)
  5605     15B9  01C7               	clrf	(ctoa@w+1)^(0+128)
  5606     15BA                     l665:
  5607                           
  5608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  5609     15BA  01C4               	clrf	ctoa@l^(0+128)
  5610     15BB  01C5               	clrf	(ctoa@l+1)^(0+128)
  5611     15BC                     l3955:	
  5612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  5613                           
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  5616     15BC  0845               	movf	(ctoa@l+1)^(0+128),w
  5617     15BD  3A80               	xorlw	128
  5618     15BE  00C2               	movwf	??_ctoa^(0+128)
  5619     15BF  0847               	movf	(ctoa@w+1)^(0+128),w
  5620     15C0  3A80               	xorlw	128
  5621     15C1  0242               	subwf	??_ctoa^(0+128),w
  5622     15C2  1D03               	skipz
  5623     15C3  2DC6               	goto	u5445
  5624     15C4  0846               	movf	ctoa@w^(0+128),w
  5625     15C5  0244               	subwf	ctoa@l^(0+128),w
  5626     15C6                     u5445:
  5627     15C6  1803               	btfsc	3,0
  5628     15C7  2DE0               	goto	l668
  5629                           
  5630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  5631     15C8  3020               	movlw	32
  5632     15C9  1683               	bsf	3,5	;RP0=1, select bank1
  5633     15CA  1303               	bcf	3,6	;RP1=0, select bank1
  5634     15CB  00B2               	movwf	fputc@c^(0+128)
  5635     15CC  3000               	movlw	0
  5636     15CD  00B3               	movwf	(fputc@c^(0+128)+1)
  5637     15CE  083F               	movf	ctoa@fp^(0+128),w
  5638     15CF  00B4               	movwf	fputc@fp^(0+128)
  5639     15D0  0840               	movf	(ctoa@fp+1)^(0+128),w
  5640     15D1  00B5               	movwf	(fputc@fp+1)^(0+128)
  5641     15D2  160A  118A  276D  160A  118A  	fcall	_fputc
  5642                           
  5643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 495:         ++l;
  5644     15D7  3001               	movlw	1
  5645     15D8  1683               	bsf	3,5	;RP0=1, select bank1
  5646     15D9  1303               	bcf	3,6	;RP1=0, select bank1
  5647     15DA  07C4               	addwf	ctoa@l^(0+128),f
  5648     15DB  1803               	skipnc
  5649     15DC  0AC5               	incf	(ctoa@l+1)^(0+128),f
  5650     15DD  3000               	movlw	0
  5651     15DE  07C5               	addwf	(ctoa@l+1)^(0+128),f
  5652     15DF  2DBC               	goto	l3955
  5653     15E0                     l668:
  5654                           
  5655                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  5656     15E0  1683               	bsf	3,5	;RP0=1, select bank1
  5657     15E1  1303               	bcf	3,6	;RP1=0, select bank1
  5658     15E2  185D               	btfsc	_flags^(0+128),0
  5659     15E3  2DF2               	goto	l3959
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
  5662     15E4  0841               	movf	ctoa@c^(0+128),w
  5663     15E5  00C2               	movwf	??_ctoa^(0+128)
  5664     15E6  01C3               	clrf	(??_ctoa^(0+128)+1)
  5665     15E7  0842               	movf	??_ctoa^(0+128),w
  5666     15E8  00B2               	movwf	fputc@c^(0+128)
  5667     15E9  0843               	movf	(??_ctoa+1)^(0+128),w
  5668     15EA  00B3               	movwf	(fputc@c+1)^(0+128)
  5669     15EB  083F               	movf	ctoa@fp^(0+128),w
  5670     15EC  00B4               	movwf	fputc@fp^(0+128)
  5671     15ED  0840               	movf	(ctoa@fp+1)^(0+128),w
  5672     15EE  00B5               	movwf	(fputc@fp+1)^(0+128)
  5673     15EF  160A  118A  276D   	fcall	_fputc
  5674     15F2                     l3959:
  5675                           
  5676                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
  5677     15F2  1683               	bsf	3,5	;RP0=1, select bank1
  5678     15F3  1303               	bcf	3,6	;RP1=0, select bank1
  5679     15F4  0844               	movf	ctoa@l^(0+128),w
  5680     15F5  3E01               	addlw	1
  5681     15F6  00BF               	movwf	?_ctoa^(0+128)
  5682     15F7  0845               	movf	(ctoa@l+1)^(0+128),w
  5683     15F8  1803               	skipnc
  5684     15F9  3E01               	addlw	1
  5685     15FA  3E00               	addlw	0
  5686     15FB  00C0               	movwf	(?_ctoa+1)^(0+128)
  5687     15FC  0008               	return
  5688     15FD                     __end_of_ctoa:
  5689                           
  5690                           	psect	text19
  5691     176D                     __ptext19:	
  5692 ;; *************** function _fputc *****************
  5693 ;; Defined at:
  5694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  c               2   18[BANK1 ] int 
  5697 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
  5698 ;;		 -> sprintf@f(11), 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2   18[BANK1 ] int 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 300/100
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5710 ;;      Params:         0       0       4       0       0
  5711 ;;      Locals:         0       0       0       0       0
  5712 ;;      Temps:          0       0       9       0       0
  5713 ;;      Totals:         0       0      13       0       0
  5714 ;;Total ram usage:       13 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 10
  5717 ;; This function calls:
  5718 ;;		_putch
  5719 ;; This function is called by:
  5720 ;;		_pad
  5721 ;;		_ctoa
  5722 ;;		_vfpfcnvrt
  5723 ;;		_fputs
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727     176D                     _fputc:	
  5728                           ;psect for function _fputc
  5729                           
  5730                           
  5731                           ;incstack = 0
  5732 ;; hardware stack exceeded
  5733                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5734     176D  0834               	movf	fputc@fp^(0+128),w
  5735     176E  0435               	iorwf	(fputc@fp+1)^(0+128),w
  5736     176F  1903               	btfsc	3,2
  5737     1770  2F75               	goto	l3751
  5738     1771  0834               	movf	fputc@fp^(0+128),w
  5739     1772  0435               	iorwf	(fputc@fp+1)^(0+128),w
  5740     1773  1D03               	btfss	3,2
  5741     1774  2F7A               	goto	l3753
  5742     1775                     l3751:
  5743     1775  0832               	movf	fputc@c^(0+128),w
  5744     1776  120A  118A  27FF   	fcall	_putch
  5745     1779  0008               	return
  5746     177A                     l3753:
  5747     177A  0834               	movf	fputc@fp^(0+128),w
  5748     177B  3E09               	addlw	9
  5749     177C  00B6               	movwf	??_fputc^(0+128)
  5750     177D  0835               	movf	(fputc@fp+1)^(0+128),w
  5751     177E  1803               	skipnc
  5752     177F  3E01               	addlw	1
  5753     1780  3E00               	addlw	0
  5754     1781  00B7               	movwf	(??_fputc+1)^(0+128)
  5755     1782  0836               	movf	??_fputc^(0+128),w
  5756     1783  0084               	movwf	4
  5757     1784  1783               	bsf	3,7
  5758     1785  1C37               	btfss	(??_fputc+1)^(0+128),0
  5759     1786  1383               	bcf	3,7
  5760     1787  0800               	movf	0,w
  5761     1788  00B8               	movwf	(??_fputc+2)^(0+128)
  5762     1789  0A84               	incf	4,f
  5763     178A  0800               	movf	0,w
  5764     178B  00B9               	movwf	((??_fputc+2)^(0+128)+1)
  5765     178C  0838               	movf	(??_fputc+2)^(0+128),w
  5766     178D  0439               	iorwf	((??_fputc+2)^(0+128)+1),w
  5767     178E  1903               	btfsc	3,2
  5768     178F  2FC0               	goto	l3757
  5769     1790  0834               	movf	fputc@fp^(0+128),w
  5770     1791  3E09               	addlw	9
  5771     1792  00B6               	movwf	??_fputc^(0+128)
  5772     1793  0835               	movf	(fputc@fp+1)^(0+128),w
  5773     1794  1803               	skipnc
  5774     1795  3E01               	addlw	1
  5775     1796  3E00               	addlw	0
  5776     1797  00B7               	movwf	(??_fputc+1)^(0+128)
  5777     1798  0836               	movf	??_fputc^(0+128),w
  5778     1799  0084               	movwf	4
  5779     179A  1783               	bsf	3,7
  5780     179B  1C37               	btfss	(??_fputc+1)^(0+128),0
  5781     179C  1383               	bcf	3,7
  5782     179D  0800               	movf	0,w
  5783     179E  00B8               	movwf	(??_fputc+2)^(0+128)
  5784     179F  0A84               	incf	4,f
  5785     17A0  0800               	movf	0,w
  5786     17A1  00B9               	movwf	((??_fputc+2)^(0+128)+1)
  5787     17A2  0834               	movf	fputc@fp^(0+128),w
  5788     17A3  3E02               	addlw	2
  5789     17A4  00BA               	movwf	(??_fputc+4)^(0+128)
  5790     17A5  0835               	movf	(fputc@fp+1)^(0+128),w
  5791     17A6  1803               	skipnc
  5792     17A7  3E01               	addlw	1
  5793     17A8  3E00               	addlw	0
  5794     17A9  00BB               	movwf	(??_fputc+5)^(0+128)
  5795     17AA  083A               	movf	(??_fputc+4)^(0+128),w
  5796     17AB  0084               	movwf	4
  5797     17AC  1783               	bsf	3,7
  5798     17AD  1C3B               	btfss	(??_fputc+5)^(0+128),0
  5799     17AE  1383               	bcf	3,7
  5800     17AF  0800               	movf	0,w
  5801     17B0  00BC               	movwf	(??_fputc+6)^(0+128)
  5802     17B1  0A84               	incf	4,f
  5803     17B2  0800               	movf	0,w
  5804     17B3  00BD               	movwf	((??_fputc+6)^(0+128)+1)
  5805     17B4  083D               	movf	(??_fputc+7)^(0+128),w
  5806     17B5  3A80               	xorlw	128
  5807     17B6  00BE               	movwf	(??_fputc+8)^(0+128)
  5808     17B7  0839               	movf	(??_fputc+3)^(0+128),w
  5809     17B8  3A80               	xorlw	128
  5810     17B9  023E               	subwf	(??_fputc+8)^(0+128),w
  5811     17BA  1D03               	skipz
  5812     17BB  2FBE               	goto	u5005
  5813     17BC  0838               	movf	(??_fputc+2)^(0+128),w
  5814     17BD  023C               	subwf	(??_fputc+6)^(0+128),w
  5815     17BE                     u5005:
  5816     17BE  1803               	skipnc
  5817     17BF  0008               	return
  5818     17C0                     l3757:
  5819     17C0  1683               	bsf	3,5	;RP0=1, select bank1
  5820     17C1  1303               	bcf	3,6	;RP1=0, select bank1
  5821     17C2  0834               	movf	fputc@fp^(0+128),w
  5822     17C3  0084               	movwf	4
  5823     17C4  1783               	bsf	3,7
  5824     17C5  1C35               	btfss	(fputc@fp+1)^(0+128),0
  5825     17C6  1383               	bcf	3,7
  5826     17C7  0800               	movf	0,w
  5827     17C8  00B6               	movwf	??_fputc^(0+128)
  5828     17C9  0A84               	incf	4,f
  5829     17CA  0800               	movf	0,w
  5830     17CB  00B7               	movwf	(??_fputc^(0+128)+1)
  5831     17CC  0834               	movf	fputc@fp^(0+128),w
  5832     17CD  3E02               	addlw	2
  5833     17CE  00B8               	movwf	(??_fputc+2)^(0+128)
  5834     17CF  0835               	movf	(fputc@fp+1)^(0+128),w
  5835     17D0  1803               	skipnc
  5836     17D1  3E01               	addlw	1
  5837     17D2  3E00               	addlw	0
  5838     17D3  00B9               	movwf	(??_fputc+3)^(0+128)
  5839     17D4  0838               	movf	(??_fputc+2)^(0+128),w
  5840     17D5  0084               	movwf	4
  5841     17D6  1783               	bsf	3,7
  5842     17D7  1C39               	btfss	(??_fputc+3)^(0+128),0
  5843     17D8  1383               	bcf	3,7
  5844     17D9  0800               	movf	0,w
  5845     17DA  0736               	addwf	??_fputc^(0+128),w
  5846     17DB  00BB               	movwf	(??_fputc+5)^(0+128)
  5847     17DC  0837               	movf	(??_fputc+1)^(0+128),w
  5848     17DD  00BA               	movwf	(??_fputc+4)^(0+128)
  5849     17DE  1803               	skipnc
  5850     17DF  0ABA               	incf	(??_fputc+4)^(0+128),f
  5851     17E0  1B80               	btfsc	0,7
  5852     17E1  03BA               	decf	(??_fputc+4)^(0+128),f
  5853     17E2  1683               	bsf	3,5	;RP0=1, select bank1
  5854     17E3  1303               	bcf	3,6	;RP1=0, select bank1
  5855     17E4  083A               	movf	(??_fputc+4)^(0+128),w
  5856     17E5  00BC               	movwf	((??_fputc+5)^(0+128)+1)
  5857     17E6  083B               	movf	(??_fputc+5)^(0+128),w
  5858     17E7  0084               	movwf	4
  5859     17E8  1783               	bsf	3,7
  5860     17E9  1C3C               	btfss	(??_fputc+6)^(0+128),0
  5861     17EA  1383               	bcf	3,7
  5862     17EB  0832               	movf	fputc@c^(0+128),w
  5863     17EC  0080               	movwf	0
  5864     17ED  0834               	movf	fputc@fp^(0+128),w
  5865     17EE  3E02               	addlw	2
  5866     17EF  00B6               	movwf	??_fputc^(0+128)
  5867     17F0  0835               	movf	(fputc@fp+1)^(0+128),w
  5868     17F1  1803               	skipnc
  5869     17F2  3E01               	addlw	1
  5870     17F3  3E00               	addlw	0
  5871     17F4  00B7               	movwf	(??_fputc+1)^(0+128)
  5872     17F5  0836               	movf	??_fputc^(0+128),w
  5873     17F6  0084               	movwf	4
  5874     17F7  1783               	bsf	3,7
  5875     17F8  1C37               	btfss	(??_fputc+1)^(0+128),0
  5876     17F9  1383               	bcf	3,7
  5877     17FA  3001               	movlw	1
  5878     17FB  0780               	addwf	0,f
  5879     17FC  0A84               	incf	4,f
  5880     17FD  1803               	skipnc
  5881     17FE  0A80               	incf	0,f
  5882     17FF  0008               	return
  5883     1800                     __end_of_fputc:
  5884                           
  5885                           	psect	text20
  5886     07FF                     __ptext20:	
  5887 ;; *************** function _putch *****************
  5888 ;; Defined at:
  5889 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  c               1    wreg     unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  c               1    0[COMMON] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg
  5898 ;; Tracked objects:
  5899 ;;		On entry : 300/100
  5900 ;;		On exit  : 300/100
  5901 ;;		Unchanged: 300/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5903 ;;      Params:         0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 9
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_fputc
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917     07FF                     _putch:	
  5918                           ;psect for function _putch
  5919                           
  5920                           
  5921                           ;incstack = 0
  5922 ;; hardware stack exceeded
  5923                           ; Regs used in _putch: [wreg]
  5924     07FF  0008               	return
  5925     0800                     __end_of_putch:
  5926                           
  5927                           	psect	text21
  5928     1187                     __ptext21:	
  5929 ;; *************** function _display *****************
  5930 ;; Defined at:
  5931 ;;		line 106 in file "newmain.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  RS              2   18[BANK1 ] int 
  5934 ;;  DC              2   20[BANK1 ] int 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg
  5941 ;; Tracked objects:
  5942 ;;		On entry : 300/100
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5946 ;;      Params:         0       0       4       0       0
  5947 ;;      Locals:         0       0       0       0       0
  5948 ;;      Temps:          0       0       2       0       0
  5949 ;;      Totals:         0       0       6       0       0
  5950 ;;Total ram usage:        6 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 9
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960     1187                     _display:	
  5961                           ;psect for function _display
  5962                           
  5963                           
  5964                           ;newmain.c: 106: void display(int RS, int DC);newmain.c: 107: {;newmain.c: 108:     RD0=
      +                          RS;
  5965                           
  5966                           ;incstack = 0
  5967 ;; hardware stack exceeded
  5968                           ; Regs used in _display: [wreg]
  5969     1187  1C32               	btfss	display@RS^(0+128),0
  5970     1188  298D               	goto	u4850
  5971     1189  1283               	bcf	3,5	;RP0=0, select bank0
  5972     118A  1303               	bcf	3,6	;RP1=0, select bank0
  5973     118B  1408               	bsf	8,0	;volatile
  5974     118C  2990               	goto	l3631
  5975     118D                     u4850:
  5976     118D  1283               	bcf	3,5	;RP0=0, select bank0
  5977     118E  1303               	bcf	3,6	;RP1=0, select bank0
  5978     118F  1008               	bcf	8,0	;volatile
  5979     1190                     l3631:
  5980                           
  5981                           ;newmain.c: 109:     PORTC=DC;
  5982     1190  1683               	bsf	3,5	;RP0=1, select bank1
  5983     1191  0834               	movf	display@DC^(0+128),w
  5984     1192  1283               	bcf	3,5	;RP0=0, select bank0
  5985     1193  0087               	movwf	7	;volatile
  5986                           
  5987                           ;newmain.c: 110:     RD1=1;
  5988     1194  1488               	bsf	8,1	;volatile
  5989                           
  5990                           ;newmain.c: 111:     _delay((unsigned long)((10)*(10000000/4000.0)));
  5991     1195  3021               	movlw	33
  5992     1196  1683               	bsf	3,5	;RP0=1, select bank1
  5993     1197  1303               	bcf	3,6	;RP1=0, select bank1
  5994     1198  00B7               	movwf	(??_display^(0+128)+1)
  5995     1199  3075               	movlw	117
  5996     119A  00B6               	movwf	??_display^(0+128)
  5997     119B                     u6207:
  5998     119B  0BB6               	decfsz	??_display^(0+128),f
  5999     119C  299B               	goto	u6207
  6000     119D  0BB7               	decfsz	(??_display^(0+128)+1),f
  6001     119E  299B               	goto	u6207
  6002     119F  29A0               	nop2
  6003                           
  6004                           ;newmain.c: 112:     RD1=0;
  6005     11A0  1283               	bcf	3,5	;RP0=0, select bank0
  6006     11A1  1303               	bcf	3,6	;RP1=0, select bank0
  6007     11A2  1088               	bcf	8,1	;volatile
  6008                           
  6009                           ;newmain.c: 113:     _delay((unsigned long)((10)*(10000000/4000.0)));
  6010     11A3  3021               	movlw	33
  6011     11A4  1683               	bsf	3,5	;RP0=1, select bank1
  6012     11A5  1303               	bcf	3,6	;RP1=0, select bank1
  6013     11A6  00B7               	movwf	(??_display^(0+128)+1)
  6014     11A7  3075               	movlw	117
  6015     11A8  00B6               	movwf	??_display^(0+128)
  6016     11A9                     u6217:
  6017     11A9  0BB6               	decfsz	??_display^(0+128),f
  6018     11AA  29A9               	goto	u6217
  6019     11AB  0BB7               	decfsz	(??_display^(0+128)+1),f
  6020     11AC  29A9               	goto	u6217
  6021     11AD  29AE               	nop2
  6022     11AE  0008               	return
  6023     11AF                     __end_of_display:
  6024                           
  6025                           	psect	text22
  6026     1532                     __ptext22:	
  6027 ;; *************** function _ISR *****************
  6028 ;; Defined at:
  6029 ;;		line 115 in file "newmain.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  i               2   16[BANK1 ] int 
  6034 ;;  c              10    6[BANK1 ] unsigned char [10]
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 300/100
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6044 ;;      Params:         0       0       0       0       0
  6045 ;;      Locals:         0       0      12       0       0
  6046 ;;      Temps:          0       0       6       0       0
  6047 ;;      Totals:         0       0      18       0       0
  6048 ;;Total ram usage:       18 bytes
  6049 ;; Hardware stack levels used: 1
  6050 ;; Hardware stack levels required when called: 8
  6051 ;; This function calls:
  6052 ;;		i1_display
  6053 ;;		i1_sprintf
  6054 ;; This function is called by:
  6055 ;;		Interrupt level 1
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059     1532                     _ISR:	
  6060                           ;psect for function _ISR
  6061                           
  6062                           
  6063                           ;newmain.c: 118:     if(INTF ==1)
  6064     1532  1C8B               	btfss	11,1	;volatile
  6065     1533  2D86               	goto	i1l76
  6066                           
  6067                           ;newmain.c: 119:     {;newmain.c: 120:         char c[10];;newmain.c: 121:         count
      +                           =count+1;
  6068     1534  085B               	movf	_count^(0+128),w
  6069     1535  3E01               	addlw	1
  6070     1536  00DB               	movwf	_count^(0+128)
  6071     1537  085C               	movf	(_count+1)^(0+128),w
  6072     1538  1803               	skipnc
  6073     1539  3E01               	addlw	1
  6074     153A  3E00               	addlw	0
  6075     153B  00DC               	movwf	(_count+1)^(0+128)
  6076                           
  6077                           ;newmain.c: 122:         sprintf(c,'%04d',count);
  6078     153C  30A6               	movlw	(low (ISR@c| 0))& (0+255)
  6079     153D  1283               	bcf	3,5	;RP0=0, select bank0
  6080     153E  00D8               	movwf	i1sprintf@s
  6081     153F  3000               	movlw	0
  6082     1540  00D9               	movwf	i1sprintf@s+1
  6083     1541  3064               	movlw	100
  6084     1542  00DA               	movwf	i1sprintf@fmt
  6085     1543  30B4               	movlw	180
  6086     1544  00DB               	movwf	i1sprintf@fmt+1
  6087     1545  1683               	bsf	3,5	;RP0=1, select bank1
  6088     1546  085C               	movf	(_count+1)^(0+128),w
  6089     1547  1283               	bcf	3,5	;RP0=0, select bank0
  6090     1548  00DD               	movwf	?i1_sprintf+5
  6091     1549  1683               	bsf	3,5	;RP0=1, select bank1
  6092     154A  085B               	movf	_count^(0+128),w
  6093     154B  1283               	bcf	3,5	;RP0=0, select bank0
  6094     154C  00DC               	movwf	?i1_sprintf+4
  6095     154D  160A  118A  21DA  160A  118A  	fcall	i1_sprintf
  6096                           
  6097                           ;newmain.c: 123:         display(0, 0xc9);
  6098     1552  3000               	movlw	0
  6099     1553  00F0               	movwf	i1display@RS
  6100     1554  00F1               	movwf	i1display@RS+1
  6101     1555  30C9               	movlw	201
  6102     1556  00F2               	movwf	i1display@DC
  6103     1557  3000               	movlw	0
  6104     1558  00F3               	movwf	i1display@DC+1
  6105     1559  160A  118A  2119  160A  118A  	fcall	i1_display
  6106                           
  6107                           ;newmain.c: 124:         for(int i=0;c[i]!='\0';i++)
  6108     155E  1683               	bsf	3,5	;RP0=1, select bank1
  6109     155F  1303               	bcf	3,6	;RP1=0, select bank1
  6110     1560  01B0               	clrf	ISR@i^(0+128)
  6111     1561  01B1               	clrf	(ISR@i+1)^(0+128)
  6112     1562                     i1l4463:
  6113     1562  0830               	movf	ISR@i^(0+128),w
  6114     1563  3EA6               	addlw	(low (ISR@c| 0))& (0+255)
  6115     1564  0084               	movwf	4
  6116     1565  1383               	bcf	3,7	;select IRP bank1
  6117     1566  0800               	movf	0,w
  6118     1567  1903               	btfsc	3,2
  6119     1568  2D85               	goto	i1l75
  6120                           
  6121                           ;newmain.c: 125:         {;newmain.c: 126:             display(1, c[i]);
  6122     1569  3001               	movlw	1
  6123     156A  00F0               	movwf	i1display@RS
  6124     156B  3000               	movlw	0
  6125     156C  00F1               	movwf	i1display@RS+1
  6126     156D  0830               	movf	ISR@i^(0+128),w
  6127     156E  3EA6               	addlw	(low (ISR@c| 0))& (0+255)
  6128     156F  0084               	movwf	4
  6129     1570  0800               	movf	0,w
  6130     1571  00A0               	movwf	??_ISR^(0+128)
  6131     1572  01A1               	clrf	(??_ISR^(0+128)+1)
  6132     1573  0820               	movf	??_ISR^(0+128),w
  6133     1574  00F2               	movwf	i1display@DC
  6134     1575  0821               	movf	(??_ISR+1)^(0+128),w
  6135     1576  00F3               	movwf	i1display@DC+1
  6136     1577  160A  118A  2119  160A  118A  	fcall	i1_display
  6137                           
  6138                           ;newmain.c: 128:         }
  6139     157C  3001               	movlw	1
  6140     157D  1683               	bsf	3,5	;RP0=1, select bank1
  6141     157E  1303               	bcf	3,6	;RP1=0, select bank1
  6142     157F  07B0               	addwf	ISR@i^(0+128),f
  6143     1580  1803               	skipnc
  6144     1581  0AB1               	incf	(ISR@i+1)^(0+128),f
  6145     1582  3000               	movlw	0
  6146     1583  07B1               	addwf	(ISR@i+1)^(0+128),f
  6147     1584  2D62               	goto	i1l4463
  6148     1585                     i1l75:
  6149                           
  6150                           ;newmain.c: 129:         INTF =0;
  6151     1585  108B               	bcf	11,1	;volatile
  6152     1586                     i1l76:
  6153     1586  0825               	movf	(??_ISR+5)^(0+128),w
  6154     1587  00FF               	movwf	127
  6155     1588  0824               	movf	(??_ISR+4)^(0+128),w
  6156     1589  008A               	movwf	10
  6157     158A  0823               	movf	(??_ISR+3)^(0+128),w
  6158     158B  0084               	movwf	4
  6159     158C  0E22               	swapf	(??_ISR+2)^(0+128),w
  6160     158D  0083               	movwf	3
  6161     158E  0EFE               	swapf	126,f
  6162     158F  0E7E               	swapf	126,w
  6163     1590  0009               	retfie
  6164     1591                     __end_of_ISR:
  6165                           
  6166                           	psect	intentry
  6167     0004                     __pintentry:	
  6168                           ;incstack = 0
  6169 ;; hardware stack exceeded
  6170                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6171                           
  6172     0004                     interrupt_function:
  6173     007E                     saved_w         set	btemp
  6174     0004  00FE               	movwf	btemp
  6175     0005  0E03               	swapf	3,w
  6176     0006  1683               	bsf	3,5	;RP0=1, select bank1
  6177     0007  1303               	bcf	3,6	;RP1=0, select bank1
  6178     0008  00A2               	movwf	(??_ISR+2)^(0+128)
  6179     0009  0804               	movf	4,w
  6180     000A  00A3               	movwf	(??_ISR+3)^(0+128)
  6181     000B  080A               	movf	10,w
  6182     000C  00A4               	movwf	(??_ISR+4)^(0+128)
  6183     000D  087F               	movf	btemp+1,w
  6184     000E  00A5               	movwf	(??_ISR+5)^(0+128)
  6185     000F  160A  118A  2D32   	ljmp	_ISR
  6186                           
  6187                           	psect	text23
  6188     11DA                     __ptext23:	
  6189 ;; *************** function i1_sprintf *****************
  6190 ;; Defined at:
  6191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  s               2   56[BANK0 ] PTR unsigned char 
  6194 ;;		 -> ISR@c(10), main@b(10), main@a(10), 
  6195 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  6196 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  f              11   65[BANK0 ] struct _IO_FILE
  6199 ;;  ap              2   76[BANK0 ] PTR void [1]
  6200 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6201 ;;  ret             2    0        int 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  2   56[BANK0 ] int 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 300/0
  6208 ;;		On exit  : 300/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6211 ;;      Params:         0       6       0       0       0
  6212 ;;      Locals:         0      13       0       0       0
  6213 ;;      Temps:          0       3       0       0       0
  6214 ;;      Totals:         0      22       0       0       0
  6215 ;;Total ram usage:       22 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 7
  6218 ;; This function calls:
  6219 ;;		i1_vfprintf
  6220 ;; This function is called by:
  6221 ;;		_ISR
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225     11DA                     i1_sprintf:	
  6226                           ;psect for function i1_sprintf
  6227                           
  6228                           
  6229                           ;incstack = 0
  6230 ;; hardware stack exceeded
  6231                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6232     11DA  305C               	movlw	(low ((?i1_sprintf| 0+4)))& (0+255)
  6233     11DB  00EC               	movwf	i1sprintf@ap
  6234     11DC  3000               	movlw	0
  6235     11DD  00ED               	movwf	i1sprintf@ap+1
  6236     11DE  0858               	movf	i1sprintf@s,w
  6237     11DF  00E1               	movwf	i1sprintf@f
  6238     11E0  0859               	movf	i1sprintf@s+1,w
  6239     11E1  00E2               	movwf	i1sprintf@f+1
  6240     11E2  01E3               	clrf	i1sprintf@f+2
  6241     11E3  01E4               	clrf	i1sprintf@f+3
  6242     11E4  01EA               	clrf	i1sprintf@f+9
  6243     11E5  01EB               	clrf	i1sprintf@f+10
  6244     11E6  3061               	movlw	low i1sprintf@f
  6245     11E7  00D0               	movwf	i1vfprintf@fp
  6246     11E8  3000               	movlw	high i1sprintf@f
  6247     11E9  00D1               	movwf	i1vfprintf@fp+1
  6248     11EA  085A               	movf	i1sprintf@fmt,w
  6249     11EB  00D2               	movwf	i1vfprintf@fmt
  6250     11EC  085B               	movf	i1sprintf@fmt+1,w
  6251     11ED  00D3               	movwf	i1vfprintf@fmt+1
  6252     11EE  306C               	movlw	(low (i1sprintf@ap| 0))& (0+255)
  6253     11EF  00D4               	movwf	i1vfprintf@ap
  6254     11F0  3000               	movlw	0
  6255     11F1  00D5               	movwf	i1vfprintf@ap+1
  6256     11F2  160A  118A  2269   	fcall	i1_vfprintf
  6257     11F5  0863               	movf	i1sprintf@f+2,w
  6258     11F6  0758               	addwf	i1sprintf@s,w
  6259     11F7  00DF               	movwf	??i1_sprintf+1
  6260     11F8  0859               	movf	i1sprintf@s+1,w
  6261     11F9  00DE               	movwf	??i1_sprintf
  6262     11FA  1803               	skipnc
  6263     11FB  0ADE               	incf	??i1_sprintf,f
  6264     11FC  1BE3               	btfsc	i1sprintf@f+2,7
  6265     11FD  03DE               	decf	??i1_sprintf,f
  6266     11FE  1283               	bcf	3,5	;RP0=0, select bank0
  6267     11FF  1303               	bcf	3,6	;RP1=0, select bank0
  6268     1200  085E               	movf	??i1_sprintf,w
  6269     1201  00E0               	movwf	??i1_sprintf+2
  6270     1202  085F               	movf	??i1_sprintf+1,w
  6271     1203  0084               	movwf	4
  6272     1204  1783               	bsf	3,7
  6273     1205  1C60               	btfss	??i1_sprintf+2,0
  6274     1206  1383               	bcf	3,7
  6275     1207  0180               	clrf	0
  6276     1208  0008               	return
  6277     1209                     __end_ofi1_sprintf:
  6278                           
  6279                           	psect	text24
  6280     1269                     __ptext24:	
  6281 ;; *************** function i1_vfprintf *****************
  6282 ;; Defined at:
  6283 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  6286 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  6287 ;;  fmt             2   50[BANK0 ] PTR const unsigned char 
  6288 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6289 ;;  ap              2   52[BANK0 ] PTR PTR void 
  6290 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  cfmt            2   54[BANK0 ] PTR unsigned char 
  6293 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  2   48[BANK0 ] int 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 300/0
  6300 ;;		On exit  : 300/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6303 ;;      Params:         0       6       0       0       0
  6304 ;;      Locals:         0       2       0       0       0
  6305 ;;      Temps:          0       0       0       0       0
  6306 ;;      Totals:         0       8       0       0       0
  6307 ;;Total ram usage:        8 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 6
  6310 ;; This function calls:
  6311 ;;		i1_vfpfcnvrt
  6312 ;; This function is called by:
  6313 ;;		i1_sprintf
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317     1269                     i1_vfprintf:	
  6318                           ;psect for function i1_vfprintf
  6319                           
  6320                           
  6321                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6322                           
  6323                           ;incstack = 0
  6324 ;; hardware stack exceeded
  6325                           ; Regs used in i1_vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6326     1269  0852               	movf	i1vfprintf@fmt,w
  6327     126A  00D6               	movwf	i1vfprintf@cfmt
  6328     126B  0853               	movf	i1vfprintf@fmt+1,w
  6329     126C  00D7               	movwf	i1vfprintf@cfmt+1
  6330                           
  6331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  6332     126D  1683               	bsf	3,5	;RP0=1, select bank3
  6333     126E  1703               	bsf	3,6	;RP1=1, select bank3
  6334     126F  01E7               	clrf	_nout^(0+384)
  6335     1270  01E8               	clrf	(_nout+1)^(0+384)
  6336     1271                     i1l3623:	
  6337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6338                           
  6339                           
  6340                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6341     1271  1283               	bcf	3,5	;RP0=0, select bank0
  6342     1272  1303               	bcf	3,6	;RP1=0, select bank0
  6343     1273  0857               	movf	i1vfprintf@cfmt+1,w
  6344     1274  00FF               	movwf	127
  6345     1275  0856               	movf	i1vfprintf@cfmt,w
  6346     1276  0084               	movwf	4
  6347     1277  120A  118A  27EA  160A  118A  	fcall	stringtab
  6348     127C  3A00               	xorlw	0
  6349     127D  1903               	btfsc	3,2
  6350     127E  2A9B               	goto	i1l3625
  6351                           
  6352                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  6353     127F  0850               	movf	i1vfprintf@fp,w
  6354     1280  00BF               	movwf	i1vfpfcnvrt@fp
  6355     1281  0851               	movf	i1vfprintf@fp+1,w
  6356     1282  00C0               	movwf	i1vfpfcnvrt@fp+1
  6357     1283  3056               	movlw	(low (i1vfprintf@cfmt| 0))& (0+255)
  6358     1284  00C1               	movwf	i1vfpfcnvrt@fmt
  6359     1285  0854               	movf	i1vfprintf@ap,w
  6360     1286  00C2               	movwf	i1vfpfcnvrt@ap
  6361     1287  0855               	movf	i1vfprintf@ap+1,w
  6362     1288  00C3               	movwf	i1vfpfcnvrt@ap+1
  6363     1289  120A  118A  2454  160A  118A  	fcall	i1_vfpfcnvrt
  6364     128E  083F               	movf	?i1_vfpfcnvrt,w
  6365     128F  1683               	bsf	3,5	;RP0=1, select bank3
  6366     1290  1703               	bsf	3,6	;RP1=1, select bank3
  6367     1291  07E7               	addwf	_nout^(0+384),f
  6368     1292  1803               	skipnc
  6369     1293  0AE8               	incf	(_nout+1)^(0+384),f
  6370     1294  1283               	bcf	3,5	;RP0=0, select bank0
  6371     1295  1303               	bcf	3,6	;RP1=0, select bank0
  6372     1296  0840               	movf	?i1_vfpfcnvrt+1,w
  6373     1297  1683               	bsf	3,5	;RP0=1, select bank3
  6374     1298  1703               	bsf	3,6	;RP1=1, select bank3
  6375     1299  07E8               	addwf	(_nout+1)^(0+384),f
  6376     129A  2A71               	goto	i1l3623
  6377     129B                     i1l3625:
  6378                           
  6379                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6380     129B  01D0               	clrf	?i1_vfprintf
  6381     129C  01D1               	clrf	?i1_vfprintf+1
  6382     129D  0008               	return
  6383     129E                     __end_ofi1_vfprintf:
  6384                           
  6385                           	psect	text25
  6386     0454                     __ptext25:	
  6387 ;; *************** function i1_vfpfcnvrt *****************
  6388 ;; Defined at:
  6389 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  6392 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  6393 ;;  fmt             1   33[BANK0 ] PTR PTR unsigned char 
  6394 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6395 ;;  ap              2   34[BANK0 ] PTR PTR void 
  6396 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  convarg         4   41[BANK0 ] struct .
  6399 ;;  cp              2   46[BANK0 ] PTR unsigned char 
  6400 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6401 ;;  c               1   45[BANK0 ] unsigned char 
  6402 ;;  done            1   40[BANK0 ] _Bool 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2   31[BANK0 ] int 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 300/0
  6409 ;;		On exit  : 300/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6412 ;;      Params:         0       5       0       0       0
  6413 ;;      Locals:         0       8       0       0       0
  6414 ;;      Temps:          0       4       0       0       0
  6415 ;;      Totals:         0      17       0       0       0
  6416 ;;Total ram usage:       17 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 5
  6419 ;; This function calls:
  6420 ;;		i1_ctoa
  6421 ;;		i1_dtoa
  6422 ;;		i1_fputc
  6423 ;;		i1_otoa
  6424 ;;		i1_read_prec_or_width
  6425 ;;		i1_utoa
  6426 ;;		i1_xtoa
  6427 ;; This function is called by:
  6428 ;;		i1_vfprintf
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432     0454                     i1_vfpfcnvrt:	
  6433                           ;psect for function i1_vfpfcnvrt
  6434                           
  6435                           
  6436                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6437                           
  6438                           ;incstack = 0
  6439 ;; hardware stack exceeded
  6440                           ; Regs used in i1_vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6441     0454  0841               	movf	i1vfpfcnvrt@fmt,w
  6442     0455  0084               	movwf	4
  6443     0456  1383               	bcf	3,7	;select IRP bank0
  6444     0457  0800               	movf	0,w
  6445     0458  00C4               	movwf	??i1_vfpfcnvrt
  6446     0459  0A84               	incf	4,f
  6447     045A  0800               	movf	0,w
  6448     045B  00C5               	movwf	??i1_vfpfcnvrt+1
  6449     045C  0845               	movf	??i1_vfpfcnvrt+1,w
  6450     045D  00FF               	movwf	127
  6451     045E  0844               	movf	??i1_vfpfcnvrt,w
  6452     045F  0084               	movwf	4
  6453     0460  120A  118A  27EA  120A  118A  	fcall	stringtab
  6454     0465  3A25               	xorlw	37
  6455     0466  1D03               	skipz
  6456     0467  2FBF               	goto	i1l3597
  6457                           
  6458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6459     0468  0841               	movf	i1vfpfcnvrt@fmt,w
  6460     0469  0084               	movwf	4
  6461     046A  3001               	movlw	1
  6462     046B  1383               	bcf	3,7	;select IRP bank0
  6463     046C  0780               	addwf	0,f
  6464     046D  0A84               	incf	4,f
  6465     046E  1803               	skipnc
  6466     046F  0A80               	incf	0,f
  6467                           
  6468                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6469     0470  1683               	bsf	3,5	;RP0=1, select bank1
  6470     0471  01D7               	clrf	_width^(0+128)
  6471     0472  01D8               	clrf	(_width+1)^(0+128)
  6472     0473  3000               	movlw	0
  6473     0474  00DD               	movwf	_flags^(0+128)
  6474                           
  6475                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6476     0475  30FF               	movlw	255
  6477     0476  00D9               	movwf	_prec^(0+128)
  6478     0477  30FF               	movlw	255
  6479     0478  00DA               	movwf	(_prec^(0+128)+1)
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6482     0479  1283               	bcf	3,5	;RP0=0, select bank0
  6483     047A  01C8               	clrf	i1vfpfcnvrt@done
  6484                           
  6485                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6486     047B  2C96               	goto	i1l3445
  6487     047C                     i1l766:	
  6488                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1213:            
      +                               case '-' :
  6489                           
  6490                           
  6491                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  6492     047C  1683               	bsf	3,5	;RP0=1, select bank1
  6493     047D  145D               	bsf	_flags^(0+128),0
  6494     047E                     i1l3431:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  6497     047E  1283               	bcf	3,5	;RP0=0, select bank0
  6498     047F  0841               	movf	i1vfpfcnvrt@fmt,w
  6499     0480  0084               	movwf	4
  6500     0481  3001               	movlw	1
  6501     0482  1383               	bcf	3,7	;select IRP bank0
  6502     0483  0780               	addwf	0,f
  6503     0484  0A84               	incf	4,f
  6504     0485  1803               	skipnc
  6505     0486  0A80               	incf	0,f
  6506                           
  6507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  6508     0487  2C96               	goto	i1l3445
  6509     0488                     i1l768:	
  6510                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  6511                           
  6512                           
  6513                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  6514     0488  1683               	bsf	3,5	;RP0=1, select bank1
  6515     0489  14DD               	bsf	_flags^(0+128),1
  6516     048A  2C7E               	goto	i1l3431
  6517     048B                     i1l769:	
  6518                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1225:            
      +                               case '+' :
  6519                           
  6520                           
  6521                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  6522     048B  1683               	bsf	3,5	;RP0=1, select bank1
  6523     048C  155D               	bsf	_flags^(0+128),2
  6524     048D  2C7E               	goto	i1l3431
  6525     048E                     i1l770:	
  6526                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1231:            
      +                               case ' ' :
  6527                           
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  6530     048E  1683               	bsf	3,5	;RP0=1, select bank1
  6531     048F  15DD               	bsf	_flags^(0+128),3
  6532     0490  2C7E               	goto	i1l3431
  6533     0491                     i1l771:	
  6534                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1237:            
      +                               case '#' :
  6535                           
  6536                           
  6537                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  6538     0491  1683               	bsf	3,5	;RP0=1, select bank1
  6539     0492  165D               	bsf	_flags^(0+128),4
  6540     0493  2C7E               	goto	i1l3431
  6541     0494                     i1l772:	
  6542                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  6543                           
  6544                           
  6545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6546     0494  3001               	movlw	1
  6547     0495  00C8               	movwf	i1vfpfcnvrt@done
  6548     0496                     i1l3445:	
  6549                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6550                           
  6551                           
  6552                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6553     0496  0848               	movf	i1vfpfcnvrt@done,w
  6554     0497  1D03               	btfss	3,2
  6555     0498  2CBB               	goto	i1l773
  6556     0499  0841               	movf	i1vfpfcnvrt@fmt,w
  6557     049A  0084               	movwf	4
  6558     049B  1383               	bcf	3,7	;select IRP bank0
  6559     049C  0800               	movf	0,w
  6560     049D  00C4               	movwf	??i1_vfpfcnvrt
  6561     049E  0A84               	incf	4,f
  6562     049F  0800               	movf	0,w
  6563     04A0  00C5               	movwf	??i1_vfpfcnvrt+1
  6564     04A1  0845               	movf	??i1_vfpfcnvrt+1,w
  6565     04A2  00FF               	movwf	127
  6566     04A3  0844               	movf	??i1_vfpfcnvrt,w
  6567     04A4  0084               	movwf	4
  6568     04A5  120A  118A  27EA  120A  118A  	fcall	stringtab
  6569                           
  6570                           ; Switch size 1, requested type "simple"
  6571                           ; Number of cases is 5, Range of values is 32 to 48
  6572                           ; switch strategies available:
  6573                           ; Name         Instructions Cycles
  6574                           ; simple_byte           16     9 (average)
  6575                           ; direct_byte           62    11 (fixed)
  6576                           ; jumptable            263     9 (fixed)
  6577                           ;	Chosen strategy is simple_byte
  6578     04AA  3A20               	xorlw	32	; case 32
  6579     04AB  1903               	skipnz
  6580     04AC  2C8E               	goto	i1l770
  6581     04AD  3A03               	xorlw	3	; case 35
  6582     04AE  1903               	skipnz
  6583     04AF  2C91               	goto	i1l771
  6584     04B0  3A08               	xorlw	8	; case 43
  6585     04B1  1903               	skipnz
  6586     04B2  2C8B               	goto	i1l769
  6587     04B3  3A06               	xorlw	6	; case 45
  6588     04B4  1903               	skipnz
  6589     04B5  2C7C               	goto	i1l766
  6590     04B6  3A1D               	xorlw	29	; case 48
  6591     04B7  1903               	skipnz
  6592     04B8  2C88               	goto	i1l768
  6593     04B9  2C94               	goto	i1l772
  6594     04BA  2C96               	goto	i1l3445
  6595     04BB                     i1l773:
  6596                           
  6597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  6598     04BB  1683               	bsf	3,5	;RP0=1, select bank1
  6599     04BC  1C5D               	btfss	_flags^(0+128),0
  6600     04BD  2CC0               	goto	i1l3449
  6601                           
  6602                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  6603     04BE  30FD               	movlw	253
  6604     04BF  05DD               	andwf	_flags^(0+128),f
  6605     04C0                     i1l3449:
  6606                           
  6607                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6608     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  6609     04C1  0841               	movf	i1vfpfcnvrt@fmt,w
  6610     04C2  00F6               	movwf	i1read_prec_or_width@fmt
  6611     04C3  0842               	movf	i1vfpfcnvrt@ap,w
  6612     04C4  00F7               	movwf	i1read_prec_or_width@ap
  6613     04C5  0843               	movf	i1vfpfcnvrt@ap+1,w
  6614     04C6  00F8               	movwf	i1read_prec_or_width@ap+1
  6615     04C7  160A  118A  266C  120A  118A  	fcall	i1_read_prec_or_width
  6616     04CC  0877               	movf	?i1_read_prec_or_width+1,w
  6617     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  6618     04CE  00D8               	movwf	(_width+1)^(0+128)
  6619     04CF  0876               	movf	?i1_read_prec_or_width,w
  6620     04D0  00D7               	movwf	_width^(0+128)
  6621                           
  6622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6623     04D1  1FD8               	btfss	(_width+1)^(0+128),7
  6624     04D2  2CD9               	goto	i1l3457
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6627     04D3  145D               	bsf	_flags^(0+128),0
  6628                           
  6629                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6630     04D4  09D7               	comf	_width^(0+128),f
  6631     04D5  09D8               	comf	(_width+1)^(0+128),f
  6632     04D6  0AD7               	incf	_width^(0+128),f
  6633     04D7  1903               	skipnz
  6634     04D8  0AD8               	incf	(_width+1)^(0+128),f
  6635     04D9                     i1l3457:
  6636                           
  6637                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  6638     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  6639     04DA  0841               	movf	i1vfpfcnvrt@fmt,w
  6640     04DB  0084               	movwf	4
  6641     04DC  1383               	bcf	3,7	;select IRP bank0
  6642     04DD  0800               	movf	0,w
  6643     04DE  00C4               	movwf	??i1_vfpfcnvrt
  6644     04DF  0A84               	incf	4,f
  6645     04E0  0800               	movf	0,w
  6646     04E1  00C5               	movwf	??i1_vfpfcnvrt+1
  6647     04E2  0845               	movf	??i1_vfpfcnvrt+1,w
  6648     04E3  00FF               	movwf	127
  6649     04E4  0844               	movf	??i1_vfpfcnvrt,w
  6650     04E5  0084               	movwf	4
  6651     04E6  120A  118A  27EA  120A  118A  	fcall	stringtab
  6652     04EB  3A2E               	xorlw	46
  6653     04EC  1D03               	skipz
  6654     04ED  2D06               	goto	i1l3463
  6655                           
  6656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  6657     04EE  0841               	movf	i1vfpfcnvrt@fmt,w
  6658     04EF  0084               	movwf	4
  6659     04F0  3001               	movlw	1
  6660     04F1  1383               	bcf	3,7	;select IRP bank0
  6661     04F2  0780               	addwf	0,f
  6662     04F3  0A84               	incf	4,f
  6663     04F4  1803               	skipnc
  6664     04F5  0A80               	incf	0,f
  6665                           
  6666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6667     04F6  0841               	movf	i1vfpfcnvrt@fmt,w
  6668     04F7  00F6               	movwf	i1read_prec_or_width@fmt
  6669     04F8  0842               	movf	i1vfpfcnvrt@ap,w
  6670     04F9  00F7               	movwf	i1read_prec_or_width@ap
  6671     04FA  0843               	movf	i1vfpfcnvrt@ap+1,w
  6672     04FB  00F8               	movwf	i1read_prec_or_width@ap+1
  6673     04FC  160A  118A  266C  120A  118A  	fcall	i1_read_prec_or_width
  6674     0501  0877               	movf	?i1_read_prec_or_width+1,w
  6675     0502  1683               	bsf	3,5	;RP0=1, select bank1
  6676     0503  00DA               	movwf	(_prec+1)^(0+128)
  6677     0504  0876               	movf	?i1_read_prec_or_width,w
  6678     0505  00D9               	movwf	_prec^(0+128)
  6679     0506                     i1l3463:
  6680                           
  6681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  6682     0506  1283               	bcf	3,5	;RP0=0, select bank0
  6683     0507  0841               	movf	i1vfpfcnvrt@fmt,w
  6684     0508  0084               	movwf	4
  6685     0509  1383               	bcf	3,7	;select IRP bank0
  6686     050A  0800               	movf	0,w
  6687     050B  00C4               	movwf	??i1_vfpfcnvrt
  6688     050C  0A84               	incf	4,f
  6689     050D  0800               	movf	0,w
  6690     050E  00C5               	movwf	??i1_vfpfcnvrt+1
  6691     050F  0845               	movf	??i1_vfpfcnvrt+1,w
  6692     0510  00FF               	movwf	127
  6693     0511  0844               	movf	??i1_vfpfcnvrt,w
  6694     0512  0084               	movwf	4
  6695     0513  120A  118A  27EA  120A  118A  	fcall	stringtab
  6696     0518  3A63               	xorlw	99
  6697     0519  1D03               	skipz
  6698     051A  2D48               	goto	i1l3473
  6699                           
  6700                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  6701     051B  0841               	movf	i1vfpfcnvrt@fmt,w
  6702     051C  0084               	movwf	4
  6703     051D  3001               	movlw	1
  6704     051E  1383               	bcf	3,7	;select IRP bank0
  6705     051F  0780               	addwf	0,f
  6706     0520  0A84               	incf	4,f
  6707     0521  1803               	skipnc
  6708     0522  0A80               	incf	0,f
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6711     0523  0842               	movf	i1vfpfcnvrt@ap,w
  6712     0524  0084               	movwf	4
  6713     0525  1783               	bsf	3,7
  6714     0526  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  6715     0527  1383               	bcf	3,7
  6716     0528  0800               	movf	0,w
  6717     0529  00C4               	movwf	??i1_vfpfcnvrt
  6718     052A  3002               	movlw	2
  6719     052B  0780               	addwf	0,f
  6720     052C  0A84               	incf	4,f
  6721     052D  0800               	movf	0,w
  6722     052E  00C5               	movwf	??i1_vfpfcnvrt+1
  6723     052F  3000               	movlw	0
  6724     0530  1803               	skipnc
  6725     0531  0A80               	incf	0,f
  6726     0532  0780               	addwf	0,f
  6727     0533  0844               	movf	??i1_vfpfcnvrt,w
  6728     0534  0084               	movwf	4
  6729     0535  1783               	bsf	3,7
  6730     0536  1C45               	btfss	??i1_vfpfcnvrt+1,0
  6731     0537  1383               	bcf	3,7
  6732     0538  0800               	movf	0,w
  6733     0539  00CD               	movwf	i1vfpfcnvrt@c
  6734                           
  6735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  6736     053A  083F               	movf	i1vfpfcnvrt@fp,w
  6737     053B  00A0               	movwf	i1ctoa@fp
  6738     053C  0840               	movf	i1vfpfcnvrt@fp+1,w
  6739     053D  00A1               	movwf	i1ctoa@fp+1
  6740     053E  084D               	movf	i1vfpfcnvrt@c,w
  6741     053F  00A2               	movwf	i1ctoa@c
  6742     0540  120A  158A  2002   	fcall	i1_ctoa
  6743     0543  0821               	movf	?i1_ctoa+1,w
  6744     0544  00C0               	movwf	?i1_vfpfcnvrt+1
  6745     0545  0820               	movf	?i1_ctoa,w
  6746     0546  00BF               	movwf	?i1_vfpfcnvrt
  6747     0547  0008               	return
  6748     0548                     i1l3473:
  6749                           
  6750                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6751     0548  0841               	movf	i1vfpfcnvrt@fmt,w
  6752     0549  0084               	movwf	4
  6753     054A  1383               	bcf	3,7	;select IRP bank0
  6754     054B  0800               	movf	0,w
  6755     054C  00CE               	movwf	i1vfpfcnvrt@cp
  6756     054D  0A84               	incf	4,f
  6757     054E  0800               	movf	0,w
  6758     054F  0384               	decf	4,f
  6759     0550  00CF               	movwf	i1vfpfcnvrt@cp+1
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  6762     0551  084F               	movf	i1vfpfcnvrt@cp+1,w
  6763     0552  00FF               	movwf	127
  6764     0553  084E               	movf	i1vfpfcnvrt@cp,w
  6765     0554  0084               	movwf	4
  6766     0555  120A  118A  27EA  120A  118A  	fcall	stringtab
  6767     055A  00CD               	movwf	i1vfpfcnvrt@c
  6768                           
  6769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  6770     055B  2D7C               	goto	i1l3491
  6771     055C                     i1l3477:
  6772                           
  6773                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  6774     055C  3001               	movlw	1
  6775     055D  07CE               	addwf	i1vfpfcnvrt@cp,f
  6776     055E  1803               	skipnc
  6777     055F  0ACF               	incf	i1vfpfcnvrt@cp+1,f
  6778     0560  3000               	movlw	0
  6779     0561  07CF               	addwf	i1vfpfcnvrt@cp+1,f
  6780                           
  6781                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  6782     0562  084F               	movf	i1vfpfcnvrt@cp+1,w
  6783     0563  00FF               	movwf	127
  6784     0564  084E               	movf	i1vfpfcnvrt@cp,w
  6785     0565  0084               	movwf	4
  6786     0566  120A  118A  27EA  120A  118A  	fcall	stringtab
  6787     056B  3A68               	xorlw	104
  6788     056C  1D03               	skipz
  6789     056D  2D9C               	goto	i1l3493
  6790                           
  6791                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  6792     056E  3048               	movlw	72
  6793     056F  00CD               	movwf	i1vfpfcnvrt@c
  6794     0570                     i1l3483:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  6797     0570  3001               	movlw	1
  6798     0571  07CE               	addwf	i1vfpfcnvrt@cp,f
  6799     0572  1803               	skipnc
  6800     0573  0ACF               	incf	i1vfpfcnvrt@cp+1,f
  6801     0574  3000               	movlw	0
  6802     0575  07CF               	addwf	i1vfpfcnvrt@cp+1,f
  6803     0576  2D9C               	goto	i1l3493
  6804     0577                     i1l788:	
  6805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1339:    case 'd'
      +                          :
  6806                           
  6807     0577                     i1l791:	
  6808                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1348:    case 'n'
      +                          :
  6809                           
  6810                           
  6811                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  6812     0577  3069               	movlw	105
  6813     0578  00CD               	movwf	i1vfpfcnvrt@c
  6814                           
  6815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
  6816     0579  2D9C               	goto	i1l3493
  6817     057A                     i1l3487:
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  6820     057A  01CD               	clrf	i1vfpfcnvrt@c
  6821                           
  6822                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
  6823     057B  2D9C               	goto	i1l3493
  6824     057C                     i1l3491:
  6825     057C  084D               	movf	i1vfpfcnvrt@c,w
  6826                           
  6827                           ; Switch size 1, requested type "simple"
  6828                           ; Number of cases is 10, Range of values is 88 to 122
  6829                           ; switch strategies available:
  6830                           ; Name         Instructions Cycles
  6831                           ; simple_byte           31    16 (average)
  6832                           ; direct_byte          116    11 (fixed)
  6833                           ; jumptable            263     9 (fixed)
  6834                           ;	Chosen strategy is simple_byte
  6835     057D  3A58               	xorlw	88	; case 88
  6836     057E  1903               	skipnz
  6837     057F  2D77               	goto	i1l791
  6838     0580  3A3C               	xorlw	60	; case 100
  6839     0581  1903               	skipnz
  6840     0582  2D77               	goto	i1l791
  6841     0583  3A0C               	xorlw	12	; case 104
  6842     0584  1903               	skipnz
  6843     0585  2D5C               	goto	i1l3477
  6844     0586  3A01               	xorlw	1	; case 105
  6845     0587  1903               	skipnz
  6846     0588  2D77               	goto	i1l791
  6847     0589  3A07               	xorlw	7	; case 110
  6848     058A  1903               	skipnz
  6849     058B  2D77               	goto	i1l791
  6850     058C  3A01               	xorlw	1	; case 111
  6851     058D  1903               	skipnz
  6852     058E  2D77               	goto	i1l788
  6853     058F  3A1B               	xorlw	27	; case 116
  6854     0590  1903               	skipnz
  6855     0591  2D70               	goto	i1l3483
  6856     0592  3A01               	xorlw	1	; case 117
  6857     0593  1903               	skipnz
  6858     0594  2D77               	goto	i1l791
  6859     0595  3A0D               	xorlw	13	; case 120
  6860     0596  1903               	skipnz
  6861     0597  2D77               	goto	i1l791
  6862     0598  3A02               	xorlw	2	; case 122
  6863     0599  1903               	skipnz
  6864     059A  2D70               	goto	i1l3483
  6865     059B  2D7A               	goto	i1l3487
  6866     059C                     i1l3493:
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6869     059C  084F               	movf	i1vfpfcnvrt@cp+1,w
  6870     059D  00FF               	movwf	127
  6871     059E  084E               	movf	i1vfpfcnvrt@cp,w
  6872     059F  0084               	movwf	4
  6873     05A0  120A  118A  27EA  120A  118A  	fcall	stringtab
  6874     05A5  3A64               	xorlw	100
  6875     05A6  1903               	skipnz
  6876     05A7  2DEC               	goto	i1l3509
  6877     05A8  084F               	movf	i1vfpfcnvrt@cp+1,w
  6878     05A9  00FF               	movwf	127
  6879     05AA  084E               	movf	i1vfpfcnvrt@cp,w
  6880     05AB  0084               	movwf	4
  6881     05AC  120A  118A  27EA  120A  118A  	fcall	stringtab
  6882     05B1  3A69               	xorlw	105
  6883     05B2  1903               	btfsc	3,2
  6884     05B3  2DEC               	goto	i1l3509
  6885     05B4  2E23               	goto	i1l3517
  6886     05B5                     i1l3497:
  6887     05B5                     i1l3499:	
  6888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
  6889                           
  6890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6891                           
  6892     05B5  2DD1               	goto	i1l3505
  6893     05B6                     i1l3501:	
  6894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1370:      break;
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6897                           
  6898                           
  6899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6900     05B6  0842               	movf	i1vfpfcnvrt@ap,w
  6901     05B7  0084               	movwf	4
  6902     05B8  1783               	bsf	3,7
  6903     05B9  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  6904     05BA  1383               	bcf	3,7
  6905     05BB  0800               	movf	0,w
  6906     05BC  00C4               	movwf	??i1_vfpfcnvrt
  6907     05BD  3002               	movlw	2
  6908     05BE  0780               	addwf	0,f
  6909     05BF  0A84               	incf	4,f
  6910     05C0  0800               	movf	0,w
  6911     05C1  00C5               	movwf	??i1_vfpfcnvrt+1
  6912     05C2  3000               	movlw	0
  6913     05C3  1803               	skipnc
  6914     05C4  0A80               	incf	0,f
  6915     05C5  0780               	addwf	0,f
  6916     05C6  0844               	movf	??i1_vfpfcnvrt,w
  6917     05C7  0084               	movwf	4
  6918     05C8  1783               	bsf	3,7
  6919     05C9  1C45               	btfss	??i1_vfpfcnvrt+1,0
  6920     05CA  1383               	bcf	3,7
  6921     05CB  0800               	movf	0,w
  6922     05CC  00C9               	movwf	i1vfpfcnvrt@convarg
  6923     05CD  01CA               	clrf	i1vfpfcnvrt@convarg+1
  6924     05CE  1BC9               	btfsc	i1vfpfcnvrt@convarg,7
  6925     05CF  03CA               	decf	i1vfpfcnvrt@convarg+1,f
  6926                           
  6927                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1375:      break;
  6928     05D0  2DFD               	goto	i1l3511
  6929     05D1                     i1l3503:
  6930     05D1                     i1l3505:	
  6931                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1390:      break;
  6932                           
  6933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  6934                           
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6937     05D1  0842               	movf	i1vfpfcnvrt@ap,w
  6938     05D2  0084               	movwf	4
  6939     05D3  1783               	bsf	3,7
  6940     05D4  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  6941     05D5  1383               	bcf	3,7
  6942     05D6  0800               	movf	0,w
  6943     05D7  00C4               	movwf	??i1_vfpfcnvrt
  6944     05D8  3002               	movlw	2
  6945     05D9  0780               	addwf	0,f
  6946     05DA  0A84               	incf	4,f
  6947     05DB  0800               	movf	0,w
  6948     05DC  00C5               	movwf	??i1_vfpfcnvrt+1
  6949     05DD  3000               	movlw	0
  6950     05DE  1803               	skipnc
  6951     05DF  0A80               	incf	0,f
  6952     05E0  0780               	addwf	0,f
  6953     05E1  0844               	movf	??i1_vfpfcnvrt,w
  6954     05E2  0084               	movwf	4
  6955     05E3  1783               	bsf	3,7
  6956     05E4  1C45               	btfss	??i1_vfpfcnvrt+1,0
  6957     05E5  1383               	bcf	3,7
  6958     05E6  0800               	movf	0,w
  6959     05E7  00C9               	movwf	i1vfpfcnvrt@convarg
  6960     05E8  0A84               	incf	4,f
  6961     05E9  0800               	movf	0,w
  6962     05EA  00CA               	movwf	i1vfpfcnvrt@convarg+1
  6963                           
  6964                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1400:      break;
  6965     05EB  2DFD               	goto	i1l3511
  6966     05EC                     i1l3509:
  6967     05EC  084D               	movf	i1vfpfcnvrt@c,w
  6968                           
  6969                           ; Switch size 1, requested type "simple"
  6970                           ; Number of cases is 5, Range of values is 72 to 122
  6971                           ; switch strategies available:
  6972                           ; Name         Instructions Cycles
  6973                           ; simple_byte           16     9 (average)
  6974                           ; direct_byte          164    11 (fixed)
  6975                           ; jumptable            263     9 (fixed)
  6976                           ;	Chosen strategy is simple_byte
  6977     05ED  3A48               	xorlw	72	; case 72
  6978     05EE  1903               	skipnz
  6979     05EF  2DB6               	goto	i1l3501
  6980     05F0  3A20               	xorlw	32	; case 104
  6981     05F1  1903               	skipnz
  6982     05F2  2DB5               	goto	i1l3499
  6983     05F3  3A01               	xorlw	1	; case 105
  6984     05F4  1903               	skipnz
  6985     05F5  2DB5               	goto	i1l3497
  6986     05F6  3A1D               	xorlw	29	; case 116
  6987     05F7  1903               	skipnz
  6988     05F8  2DD1               	goto	i1l3503
  6989     05F9  3A0E               	xorlw	14	; case 122
  6990     05FA  1903               	skipnz
  6991     05FB  2DD1               	goto	i1l3505
  6992     05FC  2DFD               	goto	i1l3511
  6993     05FD                     i1l3511:
  6994                           
  6995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6996     05FD  3001               	movlw	1
  6997     05FE  00C4               	movwf	??i1_vfpfcnvrt
  6998     05FF  0844               	movf	??i1_vfpfcnvrt,w
  6999     0600  074E               	addwf	i1vfpfcnvrt@cp,w
  7000     0601  00C6               	movwf	??i1_vfpfcnvrt+2
  7001     0602  084F               	movf	i1vfpfcnvrt@cp+1,w
  7002     0603  00C5               	movwf	??i1_vfpfcnvrt+1
  7003     0604  1803               	skipnc
  7004     0605  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7005     0606  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7006     0607  03C5               	decf	??i1_vfpfcnvrt+1,f
  7007     0608  0845               	movf	??i1_vfpfcnvrt+1,w
  7008     0609  00C7               	movwf	??i1_vfpfcnvrt+3
  7009     060A  0841               	movf	i1vfpfcnvrt@fmt,w
  7010     060B  0084               	movwf	4
  7011     060C  0846               	movf	??i1_vfpfcnvrt+2,w
  7012     060D  1383               	bcf	3,7	;select IRP bank0
  7013     060E  0080               	movwf	0
  7014     060F  0847               	movf	??i1_vfpfcnvrt+3,w
  7015     0610  0A84               	incf	4,f
  7016     0611  0080               	movwf	0
  7017     0612  0384               	decf	4,f
  7018                           
  7019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  7020     0613  083F               	movf	i1vfpfcnvrt@fp,w
  7021     0614  00AF               	movwf	i1dtoa@fp
  7022     0615  0840               	movf	i1vfpfcnvrt@fp+1,w
  7023     0616  00B0               	movwf	i1dtoa@fp+1
  7024     0617  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7025     0618  00B2               	movwf	i1dtoa@d+1
  7026     0619  0849               	movf	i1vfpfcnvrt@convarg,w
  7027     061A  00B1               	movwf	i1dtoa@d
  7028     061B  120A  158A  2401   	fcall	i1_dtoa
  7029     061E  0830               	movf	?i1_dtoa+1,w
  7030     061F  00C0               	movwf	?i1_vfpfcnvrt+1
  7031     0620  082F               	movf	?i1_dtoa,w
  7032     0621  00BF               	movwf	?i1_vfpfcnvrt
  7033     0622  0008               	return
  7034     0623                     i1l3517:
  7035     0623  084F               	movf	i1vfpfcnvrt@cp+1,w
  7036     0624  00FF               	movwf	127
  7037     0625  084E               	movf	i1vfpfcnvrt@cp,w
  7038     0626  0084               	movwf	4
  7039     0627  120A  118A  27EA  120A  118A  	fcall	stringtab
  7040     062C  3A78               	xorlw	120
  7041     062D  1903               	skipnz
  7042     062E  2E8C               	goto	i1l3537
  7043     062F  084F               	movf	i1vfpfcnvrt@cp+1,w
  7044     0630  00FF               	movwf	127
  7045     0631  084E               	movf	i1vfpfcnvrt@cp,w
  7046     0632  0084               	movwf	4
  7047     0633  120A  118A  27EA  120A  118A  	fcall	stringtab
  7048     0638  3A58               	xorlw	88
  7049     0639  1903               	skipnz
  7050     063A  2E8C               	goto	i1l3537
  7051     063B  084F               	movf	i1vfpfcnvrt@cp+1,w
  7052     063C  00FF               	movwf	127
  7053     063D  084E               	movf	i1vfpfcnvrt@cp,w
  7054     063E  0084               	movwf	4
  7055     063F  120A  118A  27EA  120A  118A  	fcall	stringtab
  7056     0644  3A6F               	xorlw	111
  7057     0645  1903               	skipnz
  7058     0646  2E8C               	goto	i1l3537
  7059     0647  084F               	movf	i1vfpfcnvrt@cp+1,w
  7060     0648  00FF               	movwf	127
  7061     0649  084E               	movf	i1vfpfcnvrt@cp,w
  7062     064A  0084               	movwf	4
  7063     064B  120A  118A  27EA  120A  118A  	fcall	stringtab
  7064     0650  3A75               	xorlw	117
  7065     0651  1903               	btfsc	3,2
  7066     0652  2E8C               	goto	i1l3537
  7067     0653  2F04               	goto	i1l3557
  7068     0654                     i1l3525:
  7069     0654                     i1l3527:	
  7070                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
  7071                           
  7072                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  7073                           
  7074     0654  2E71               	goto	i1l3533
  7075     0655                     i1l3529:	
  7076                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1461:      break;
  7077                           
  7078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  7079                           
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  7082     0655  0842               	movf	i1vfpfcnvrt@ap,w
  7083     0656  0084               	movwf	4
  7084     0657  1783               	bsf	3,7
  7085     0658  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7086     0659  1383               	bcf	3,7
  7087     065A  0800               	movf	0,w
  7088     065B  00C4               	movwf	??i1_vfpfcnvrt
  7089     065C  3002               	movlw	2
  7090     065D  0780               	addwf	0,f
  7091     065E  0A84               	incf	4,f
  7092     065F  0800               	movf	0,w
  7093     0660  00C5               	movwf	??i1_vfpfcnvrt+1
  7094     0661  3000               	movlw	0
  7095     0662  1803               	skipnc
  7096     0663  0A80               	incf	0,f
  7097     0664  0780               	addwf	0,f
  7098     0665  0844               	movf	??i1_vfpfcnvrt,w
  7099     0666  0084               	movwf	4
  7100     0667  1783               	bsf	3,7
  7101     0668  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7102     0669  1383               	bcf	3,7
  7103     066A  0800               	movf	0,w
  7104     066B  00C6               	movwf	??i1_vfpfcnvrt+2
  7105     066C  01C7               	clrf	??i1_vfpfcnvrt+3
  7106     066D  0846               	movf	??i1_vfpfcnvrt+2,w
  7107     066E  00C9               	movwf	i1vfpfcnvrt@convarg
  7108     066F  0847               	movf	??i1_vfpfcnvrt+3,w
  7109     0670  2E8A               	goto	L13
  7110     0671                     i1l3531:	
  7111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1466:      break;
  7112                           
  7113     0671                     i1l3533:	
  7114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1481:      break;
  7115                           
  7116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  7117                           
  7118                           
  7119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7120     0671  0842               	movf	i1vfpfcnvrt@ap,w
  7121     0672  0084               	movwf	4
  7122     0673  1783               	bsf	3,7
  7123     0674  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7124     0675  1383               	bcf	3,7
  7125     0676  0800               	movf	0,w
  7126     0677  00C4               	movwf	??i1_vfpfcnvrt
  7127     0678  3002               	movlw	2
  7128     0679  0780               	addwf	0,f
  7129     067A  0A84               	incf	4,f
  7130     067B  0800               	movf	0,w
  7131     067C  00C5               	movwf	??i1_vfpfcnvrt+1
  7132     067D  3000               	movlw	0
  7133     067E  1803               	skipnc
  7134     067F  0A80               	incf	0,f
  7135     0680  0780               	addwf	0,f
  7136     0681  0844               	movf	??i1_vfpfcnvrt,w
  7137     0682  0084               	movwf	4
  7138     0683  1783               	bsf	3,7
  7139     0684  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7140     0685  1383               	bcf	3,7
  7141     0686  0800               	movf	0,w
  7142     0687  00C9               	movwf	i1vfpfcnvrt@convarg
  7143     0688  0A84               	incf	4,f
  7144     0689  0800               	movf	0,w
  7145     068A                     L13:
  7146     068A  00CA               	movwf	i1vfpfcnvrt@convarg+1
  7147                           
  7148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1491:      break;
  7149     068B  2E9D               	goto	i1l3539
  7150     068C                     i1l3537:
  7151     068C  084D               	movf	i1vfpfcnvrt@c,w
  7152                           
  7153                           ; Switch size 1, requested type "simple"
  7154                           ; Number of cases is 5, Range of values is 72 to 122
  7155                           ; switch strategies available:
  7156                           ; Name         Instructions Cycles
  7157                           ; simple_byte           16     9 (average)
  7158                           ; direct_byte          164    11 (fixed)
  7159                           ; jumptable            263     9 (fixed)
  7160                           ;	Chosen strategy is simple_byte
  7161     068D  3A48               	xorlw	72	; case 72
  7162     068E  1903               	skipnz
  7163     068F  2E55               	goto	i1l3529
  7164     0690  3A20               	xorlw	32	; case 104
  7165     0691  1903               	skipnz
  7166     0692  2E54               	goto	i1l3527
  7167     0693  3A01               	xorlw	1	; case 105
  7168     0694  1903               	skipnz
  7169     0695  2E54               	goto	i1l3525
  7170     0696  3A1D               	xorlw	29	; case 116
  7171     0697  1903               	skipnz
  7172     0698  2E71               	goto	i1l3531
  7173     0699  3A0E               	xorlw	14	; case 122
  7174     069A  1903               	skipnz
  7175     069B  2E71               	goto	i1l3533
  7176     069C  2E9D               	goto	i1l3539
  7177     069D                     i1l3539:
  7178                           
  7179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  7180     069D  3001               	movlw	1
  7181     069E  00C4               	movwf	??i1_vfpfcnvrt
  7182     069F  0844               	movf	??i1_vfpfcnvrt,w
  7183     06A0  074E               	addwf	i1vfpfcnvrt@cp,w
  7184     06A1  00C6               	movwf	??i1_vfpfcnvrt+2
  7185     06A2  084F               	movf	i1vfpfcnvrt@cp+1,w
  7186     06A3  00C5               	movwf	??i1_vfpfcnvrt+1
  7187     06A4  1803               	skipnc
  7188     06A5  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7189     06A6  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7190     06A7  03C5               	decf	??i1_vfpfcnvrt+1,f
  7191     06A8  0845               	movf	??i1_vfpfcnvrt+1,w
  7192     06A9  00C7               	movwf	??i1_vfpfcnvrt+3
  7193     06AA  0841               	movf	i1vfpfcnvrt@fmt,w
  7194     06AB  0084               	movwf	4
  7195     06AC  0846               	movf	??i1_vfpfcnvrt+2,w
  7196     06AD  1383               	bcf	3,7	;select IRP bank0
  7197     06AE  0080               	movwf	0
  7198     06AF  0847               	movf	??i1_vfpfcnvrt+3,w
  7199     06B0  0A84               	incf	4,f
  7200     06B1  0080               	movwf	0
  7201     06B2  0384               	decf	4,f
  7202                           
  7203                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  7204     06B3  2EEE               	goto	i1l3555
  7205     06B4                     i1l3541:
  7206                           
  7207                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  7208     06B4  083F               	movf	i1vfpfcnvrt@fp,w
  7209     06B5  00AF               	movwf	i1otoa@fp
  7210     06B6  0840               	movf	i1vfpfcnvrt@fp+1,w
  7211     06B7  00B0               	movwf	i1otoa@fp+1
  7212     06B8  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7213     06B9  00B2               	movwf	i1otoa@d+1
  7214     06BA  0849               	movf	i1vfpfcnvrt@convarg,w
  7215     06BB  00B1               	movwf	i1otoa@d
  7216     06BC  120A  158A  21AF   	fcall	i1_otoa
  7217     06BF  0830               	movf	?i1_otoa+1,w
  7218     06C0  00C0               	movwf	?i1_vfpfcnvrt+1
  7219     06C1  082F               	movf	?i1_otoa,w
  7220     06C2  00BF               	movwf	?i1_vfpfcnvrt
  7221     06C3  0008               	return
  7222     06C4                     i1l3545:
  7223                           
  7224                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  7225     06C4  083F               	movf	i1vfpfcnvrt@fp,w
  7226     06C5  00AF               	movwf	i1utoa@fp
  7227     06C6  0840               	movf	i1vfpfcnvrt@fp+1,w
  7228     06C7  00B0               	movwf	i1utoa@fp+1
  7229     06C8  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7230     06C9  00B2               	movwf	i1utoa@d+1
  7231     06CA  0849               	movf	i1vfpfcnvrt@convarg,w
  7232     06CB  00B1               	movwf	i1utoa@d
  7233     06CC  120A  158A  2078   	fcall	i1_utoa
  7234     06CF  0830               	movf	?i1_utoa+1,w
  7235     06D0  00C0               	movwf	?i1_vfpfcnvrt+1
  7236     06D1  082F               	movf	?i1_utoa,w
  7237     06D2  00BF               	movwf	?i1_vfpfcnvrt
  7238     06D3  0008               	return
  7239     06D4                     i1l3549:
  7240                           
  7241                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  7242     06D4  083F               	movf	i1vfpfcnvrt@fp,w
  7243     06D5  00AF               	movwf	i1xtoa@fp
  7244     06D6  0840               	movf	i1vfpfcnvrt@fp+1,w
  7245     06D7  00B0               	movwf	i1xtoa@fp+1
  7246     06D8  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7247     06D9  00B2               	movwf	i1xtoa@d+1
  7248     06DA  0849               	movf	i1vfpfcnvrt@convarg,w
  7249     06DB  00B1               	movwf	i1xtoa@d
  7250     06DC  084F               	movf	i1vfpfcnvrt@cp+1,w
  7251     06DD  00FF               	movwf	127
  7252     06DE  084E               	movf	i1vfpfcnvrt@cp,w
  7253     06DF  0084               	movwf	4
  7254     06E0  120A  118A  27EA  120A  118A  	fcall	stringtab
  7255     06E5  00B3               	movwf	i1xtoa@x
  7256     06E6  120A  158A  2325   	fcall	i1_xtoa
  7257     06E9  0830               	movf	?i1_xtoa+1,w
  7258     06EA  00C0               	movwf	?i1_vfpfcnvrt+1
  7259     06EB  082F               	movf	?i1_xtoa,w
  7260     06EC  00BF               	movwf	?i1_vfpfcnvrt
  7261     06ED  0008               	return
  7262     06EE                     i1l3555:
  7263     06EE  084F               	movf	i1vfpfcnvrt@cp+1,w
  7264     06EF  00FF               	movwf	127
  7265     06F0  084E               	movf	i1vfpfcnvrt@cp,w
  7266     06F1  0084               	movwf	4
  7267     06F2  120A  118A  27EA  120A  118A  	fcall	stringtab
  7268                           
  7269                           ; Switch size 1, requested type "simple"
  7270                           ; Number of cases is 4, Range of values is 88 to 120
  7271                           ; switch strategies available:
  7272                           ; Name         Instructions Cycles
  7273                           ; simple_byte           13     7 (average)
  7274                           ; direct_byte          110    11 (fixed)
  7275                           ; jumptable            263     9 (fixed)
  7276                           ;	Chosen strategy is simple_byte
  7277     06F7  3A58               	xorlw	88	; case 88
  7278     06F8  1903               	skipnz
  7279     06F9  2ED4               	goto	i1l3549
  7280     06FA  3A37               	xorlw	55	; case 111
  7281     06FB  1903               	skipnz
  7282     06FC  2EB4               	goto	i1l3541
  7283     06FD  3A1A               	xorlw	26	; case 117
  7284     06FE  1903               	skipnz
  7285     06FF  2EC4               	goto	i1l3545
  7286     0700  3A0D               	xorlw	13	; case 120
  7287     0701  1903               	skipnz
  7288     0702  2ED4               	goto	i1l3549
  7289     0703  2F04               	goto	i1l3557
  7290     0704                     i1l3557:
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  7293     0704  084F               	movf	i1vfpfcnvrt@cp+1,w
  7294     0705  00FF               	movwf	127
  7295     0706  084E               	movf	i1vfpfcnvrt@cp,w
  7296     0707  0084               	movwf	4
  7297     0708  120A  118A  27EA  120A  118A  	fcall	stringtab
  7298     070D  3A6E               	xorlw	110
  7299     070E  1903               	btfsc	3,2
  7300     070F  2F5C               	goto	i1l3573
  7301     0710  2F88               	goto	i1l3581
  7302     0711                     i1l3561:
  7303     0711                     i1l3563:	
  7304                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1600:      break;
  7305                           
  7306                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  7307                           
  7308     0711  2F35               	goto	i1l3569
  7309     0712                     i1l3565:	
  7310                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1604:      break;
  7311                           
  7312                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  7313                           
  7314                           
  7315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  7316     0712  0842               	movf	i1vfpfcnvrt@ap,w
  7317     0713  0084               	movwf	4
  7318     0714  1783               	bsf	3,7
  7319     0715  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7320     0716  1383               	bcf	3,7
  7321     0717  0800               	movf	0,w
  7322     0718  00C4               	movwf	??i1_vfpfcnvrt
  7323     0719  3002               	movlw	2
  7324     071A  0780               	addwf	0,f
  7325     071B  0A84               	incf	4,f
  7326     071C  0800               	movf	0,w
  7327     071D  00C5               	movwf	??i1_vfpfcnvrt+1
  7328     071E  3000               	movlw	0
  7329     071F  1803               	skipnc
  7330     0720  0A80               	incf	0,f
  7331     0721  0780               	addwf	0,f
  7332     0722  0844               	movf	??i1_vfpfcnvrt,w
  7333     0723  0084               	movwf	4
  7334     0724  1783               	bsf	3,7
  7335     0725  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7336     0726  1383               	bcf	3,7
  7337     0727  0800               	movf	0,w
  7338     0728  00C6               	movwf	??i1_vfpfcnvrt+2
  7339     0729  0A84               	incf	4,f
  7340     072A  0800               	movf	0,w
  7341     072B  00C7               	movwf	??i1_vfpfcnvrt+3
  7342     072C  0846               	movf	??i1_vfpfcnvrt+2,w
  7343     072D  0084               	movwf	4
  7344     072E  1783               	bsf	3,7
  7345     072F  1C47               	btfss	??i1_vfpfcnvrt+3,0
  7346     0730  1383               	bcf	3,7
  7347     0731  1683               	bsf	3,5	;RP0=1, select bank3
  7348     0732  1703               	bsf	3,6	;RP1=1, select bank3
  7349     0733  0867               	movf	_nout^(0+384),w
  7350     0734  2F5A               	goto	L16
  7351     0735                     i1l3567:	
  7352                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1609:      break;
  7353                           
  7354     0735                     i1l3569:	
  7355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1624:      break;
  7356                           
  7357                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  7358                           
  7359                           
  7360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  7361     0735  0842               	movf	i1vfpfcnvrt@ap,w
  7362     0736  0084               	movwf	4
  7363     0737  1783               	bsf	3,7
  7364     0738  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7365     0739  1383               	bcf	3,7
  7366     073A  0800               	movf	0,w
  7367     073B  00C4               	movwf	??i1_vfpfcnvrt
  7368     073C  3002               	movlw	2
  7369     073D  0780               	addwf	0,f
  7370     073E  0A84               	incf	4,f
  7371     073F  0800               	movf	0,w
  7372     0740  00C5               	movwf	??i1_vfpfcnvrt+1
  7373     0741  3000               	movlw	0
  7374     0742  1803               	skipnc
  7375     0743  0A80               	incf	0,f
  7376     0744  0780               	addwf	0,f
  7377     0745  0844               	movf	??i1_vfpfcnvrt,w
  7378     0746  0084               	movwf	4
  7379     0747  1783               	bsf	3,7
  7380     0748  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7381     0749  1383               	bcf	3,7
  7382     074A  0800               	movf	0,w
  7383     074B  00C6               	movwf	??i1_vfpfcnvrt+2
  7384     074C  0A84               	incf	4,f
  7385     074D  0800               	movf	0,w
  7386     074E  00C7               	movwf	??i1_vfpfcnvrt+3
  7387     074F  0846               	movf	??i1_vfpfcnvrt+2,w
  7388     0750  0084               	movwf	4
  7389     0751  1783               	bsf	3,7
  7390     0752  1C47               	btfss	??i1_vfpfcnvrt+3,0
  7391     0753  1383               	bcf	3,7
  7392     0754  1683               	bsf	3,5	;RP0=1, select bank3
  7393     0755  1703               	bsf	3,6	;RP1=1, select bank3
  7394     0756  0867               	movf	_nout^(0+384),w
  7395     0757  0080               	movwf	0
  7396     0758  0A84               	incf	4,f
  7397     0759  0868               	movf	(_nout+1)^(0+384),w
  7398     075A                     L16:
  7399     075A  0080               	movwf	0
  7400                           
  7401                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1634:      break;
  7402     075B  2F6D               	goto	i1l3575
  7403     075C                     i1l3573:
  7404     075C  084D               	movf	i1vfpfcnvrt@c,w
  7405                           
  7406                           ; Switch size 1, requested type "simple"
  7407                           ; Number of cases is 5, Range of values is 72 to 122
  7408                           ; switch strategies available:
  7409                           ; Name         Instructions Cycles
  7410                           ; simple_byte           16     9 (average)
  7411                           ; direct_byte          164    11 (fixed)
  7412                           ; jumptable            263     9 (fixed)
  7413                           ;	Chosen strategy is simple_byte
  7414     075D  3A48               	xorlw	72	; case 72
  7415     075E  1903               	skipnz
  7416     075F  2F12               	goto	i1l3565
  7417     0760  3A20               	xorlw	32	; case 104
  7418     0761  1903               	skipnz
  7419     0762  2F11               	goto	i1l3563
  7420     0763  3A01               	xorlw	1	; case 105
  7421     0764  1903               	skipnz
  7422     0765  2F11               	goto	i1l3561
  7423     0766  3A1D               	xorlw	29	; case 116
  7424     0767  1903               	skipnz
  7425     0768  2F35               	goto	i1l3567
  7426     0769  3A0E               	xorlw	14	; case 122
  7427     076A  1903               	skipnz
  7428     076B  2F35               	goto	i1l3569
  7429     076C  2F6D               	goto	i1l3575
  7430     076D                     i1l3575:
  7431                           
  7432                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  7433     076D  3001               	movlw	1
  7434     076E  1283               	bcf	3,5	;RP0=0, select bank0
  7435     076F  1303               	bcf	3,6	;RP1=0, select bank0
  7436     0770  00C4               	movwf	??i1_vfpfcnvrt
  7437     0771  0844               	movf	??i1_vfpfcnvrt,w
  7438     0772  074E               	addwf	i1vfpfcnvrt@cp,w
  7439     0773  00C6               	movwf	??i1_vfpfcnvrt+2
  7440     0774  084F               	movf	i1vfpfcnvrt@cp+1,w
  7441     0775  00C5               	movwf	??i1_vfpfcnvrt+1
  7442     0776  1803               	skipnc
  7443     0777  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7444     0778  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7445     0779  03C5               	decf	??i1_vfpfcnvrt+1,f
  7446     077A  0845               	movf	??i1_vfpfcnvrt+1,w
  7447     077B  00C7               	movwf	??i1_vfpfcnvrt+3
  7448     077C  0841               	movf	i1vfpfcnvrt@fmt,w
  7449     077D  0084               	movwf	4
  7450     077E  0846               	movf	??i1_vfpfcnvrt+2,w
  7451     077F  1383               	bcf	3,7	;select IRP bank0
  7452     0780  0080               	movwf	0
  7453     0781  0847               	movf	??i1_vfpfcnvrt+3,w
  7454     0782  0A84               	incf	4,f
  7455     0783  0080               	movwf	0
  7456     0784  0384               	decf	4,f
  7457     0785                     i1l3577:
  7458                           
  7459                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  7460     0785  01BF               	clrf	?i1_vfpfcnvrt
  7461     0786  01C0               	clrf	?i1_vfpfcnvrt+1
  7462     0787  0008               	return
  7463     0788                     i1l3581:
  7464                           
  7465                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  7466     0788  0841               	movf	i1vfpfcnvrt@fmt,w
  7467     0789  0084               	movwf	4
  7468     078A  1383               	bcf	3,7	;select IRP bank0
  7469     078B  0800               	movf	0,w
  7470     078C  00C4               	movwf	??i1_vfpfcnvrt
  7471     078D  0A84               	incf	4,f
  7472     078E  0800               	movf	0,w
  7473     078F  00C5               	movwf	??i1_vfpfcnvrt+1
  7474     0790  0845               	movf	??i1_vfpfcnvrt+1,w
  7475     0791  00FF               	movwf	127
  7476     0792  0844               	movf	??i1_vfpfcnvrt,w
  7477     0793  0084               	movwf	4
  7478     0794  120A  118A  27EA  120A  118A  	fcall	stringtab
  7479     0799  3A25               	xorlw	37
  7480     079A  1D03               	skipz
  7481     079B  2FB6               	goto	i1l3591
  7482                           
  7483                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  7484     079C  0841               	movf	i1vfpfcnvrt@fmt,w
  7485     079D  0084               	movwf	4
  7486     079E  3001               	movlw	1
  7487     079F  1383               	bcf	3,7	;select IRP bank0
  7488     07A0  0780               	addwf	0,f
  7489     07A1  0A84               	incf	4,f
  7490     07A2  1803               	skipnc
  7491     07A3  0A80               	incf	0,f
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  7494     07A4  3025               	movlw	37
  7495     07A5  00F0               	movwf	i1fputc@c
  7496     07A6  3000               	movlw	0
  7497     07A7  00F1               	movwf	i1fputc@c+1
  7498     07A8  083F               	movf	i1vfpfcnvrt@fp,w
  7499     07A9  00F2               	movwf	i1fputc@fp
  7500     07AA  0840               	movf	i1vfpfcnvrt@fp+1,w
  7501     07AB  00F3               	movwf	i1fputc@fp+1
  7502     07AC  160A  118A  26DE   	fcall	i1_fputc
  7503     07AF                     i1l3587:
  7504                           
  7505                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  7506     07AF  3001               	movlw	1
  7507     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  7508     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  7509     07B2  00BF               	movwf	?i1_vfpfcnvrt
  7510     07B3  3000               	movlw	0
  7511     07B4  00C0               	movwf	?i1_vfpfcnvrt+1
  7512     07B5  0008               	return
  7513     07B6                     i1l3591:
  7514                           
  7515                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7516     07B6  0841               	movf	i1vfpfcnvrt@fmt,w
  7517     07B7  0084               	movwf	4
  7518     07B8  3001               	movlw	1
  7519     07B9  1383               	bcf	3,7	;select IRP bank0
  7520     07BA  0780               	addwf	0,f
  7521     07BB  0A84               	incf	4,f
  7522     07BC  1803               	skipnc
  7523     07BD  0A80               	incf	0,f
  7524     07BE  2F85               	goto	i1l3577
  7525     07BF                     i1l3597:
  7526                           
  7527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7528     07BF  0841               	movf	i1vfpfcnvrt@fmt,w
  7529     07C0  0084               	movwf	4
  7530     07C1  1383               	bcf	3,7	;select IRP bank0
  7531     07C2  0800               	movf	0,w
  7532     07C3  00C4               	movwf	??i1_vfpfcnvrt
  7533     07C4  0A84               	incf	4,f
  7534     07C5  0800               	movf	0,w
  7535     07C6  00C5               	movwf	??i1_vfpfcnvrt+1
  7536     07C7  0845               	movf	??i1_vfpfcnvrt+1,w
  7537     07C8  00FF               	movwf	127
  7538     07C9  0844               	movf	??i1_vfpfcnvrt,w
  7539     07CA  0084               	movwf	4
  7540     07CB  120A  118A  27EA  120A  118A  	fcall	stringtab
  7541     07D0  00C6               	movwf	??i1_vfpfcnvrt+2
  7542     07D1  01C7               	clrf	??i1_vfpfcnvrt+3
  7543     07D2  0846               	movf	??i1_vfpfcnvrt+2,w
  7544     07D3  00F0               	movwf	i1fputc@c
  7545     07D4  0847               	movf	??i1_vfpfcnvrt+3,w
  7546     07D5  00F1               	movwf	i1fputc@c+1
  7547     07D6  083F               	movf	i1vfpfcnvrt@fp,w
  7548     07D7  00F2               	movwf	i1fputc@fp
  7549     07D8  0840               	movf	i1vfpfcnvrt@fp+1,w
  7550     07D9  00F3               	movwf	i1fputc@fp+1
  7551     07DA  160A  118A  26DE  120A  118A  	fcall	i1_fputc
  7552                           
  7553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  7554     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  7555     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  7556     07E1  0841               	movf	i1vfpfcnvrt@fmt,w
  7557     07E2  0084               	movwf	4
  7558     07E3  3001               	movlw	1
  7559     07E4  1383               	bcf	3,7	;select IRP bank0
  7560     07E5  0780               	addwf	0,f
  7561     07E6  0A84               	incf	4,f
  7562     07E7  1803               	skipnc
  7563     07E8  0A80               	incf	0,f
  7564     07E9  2FAF               	goto	i1l3587
  7565     07EA                     __end_ofi1_vfpfcnvrt:
  7566                           
  7567                           	psect	text26
  7568     0B25                     __ptext26:	
  7569 ;; *************** function i1_xtoa *****************
  7570 ;; Defined at:
  7571 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  7574 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  7575 ;;  d               2   17[BANK0 ] unsigned int 
  7576 ;;  x               1   19[BANK0 ] unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  i               2   29[BANK0 ] int 
  7579 ;;  w               2   25[BANK0 ] int 
  7580 ;;  p               2   23[BANK0 ] int 
  7581 ;;  c               1   28[BANK0 ] unsigned char 
  7582 ;;  d_nonzero       1   27[BANK0 ] _Bool 
  7583 ;;  a               1   22[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  2   15[BANK0 ] int 
  7586 ;; Registers used:
  7587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 300/0
  7590 ;;		On exit  : B00/800
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7593 ;;      Params:         0       5       0       0       0
  7594 ;;      Locals:         0      11       0       0       0
  7595 ;;      Temps:          0       0       0       0       0
  7596 ;;      Totals:         0      16       0       0       0
  7597 ;;Total ram usage:       16 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 4
  7600 ;; This function calls:
  7601 ;;		i1_pad
  7602 ;; This function is called by:
  7603 ;;		i1_vfpfcnvrt
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607     0B25                     i1_xtoa:	
  7608                           ;psect for function i1_xtoa
  7609                           
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  7612                           
  7613                           ;incstack = 0
  7614 ;; hardware stack exceeded
  7615                           ; Regs used in i1_xtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7616     0B25  1683               	bsf	3,5	;RP0=1, select bank1
  7617     0B26  1BDA               	btfsc	(_prec+1)^(0+128),7
  7618     0B27  2B2A               	goto	i1l3157
  7619                           
  7620                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  7621     0B28  30FD               	movlw	253
  7622     0B29  05DD               	andwf	_flags^(0+128),f
  7623     0B2A                     i1l3157:
  7624                           
  7625                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  7626     0B2A  1FDA               	btfss	(_prec+1)^(0+128),7
  7627     0B2B  2B32               	goto	i1l3161
  7628     0B2C  3001               	movlw	1
  7629     0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  7630     0B2E  00B7               	movwf	i1xtoa@p
  7631     0B2F  3000               	movlw	0
  7632     0B30  00B8               	movwf	i1xtoa@p+1
  7633     0B31  2B39               	goto	i1l735
  7634     0B32                     i1l3161:
  7635     0B32  085A               	movf	(_prec+1)^(0+128),w
  7636     0B33  1283               	bcf	3,5	;RP0=0, select bank0
  7637     0B34  00B8               	movwf	i1xtoa@p+1
  7638     0B35  1683               	bsf	3,5	;RP0=1, select bank1
  7639     0B36  0859               	movf	_prec^(0+128),w
  7640     0B37  1283               	bcf	3,5	;RP0=0, select bank0
  7641     0B38  00B7               	movwf	i1xtoa@p
  7642     0B39                     i1l735:
  7643                           
  7644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  7645     0B39  1683               	bsf	3,5	;RP0=1, select bank1
  7646     0B3A  0858               	movf	(_width+1)^(0+128),w
  7647     0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7648     0B3C  00BA               	movwf	i1xtoa@w+1
  7649     0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  7650     0B3E  0857               	movf	_width^(0+128),w
  7651     0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7652     0B40  00B9               	movwf	i1xtoa@w
  7653                           
  7654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  7655     0B41  0831               	movf	i1xtoa@d,w
  7656     0B42  0432               	iorwf	i1xtoa@d+1,w
  7657     0B43  1903               	btfsc	3,2
  7658     0B44  2B47               	goto	u437_20
  7659     0B45  3001               	movlw	1
  7660     0B46  2B48               	goto	u438_20
  7661     0B47                     u437_20:
  7662     0B47  3000               	movlw	0
  7663     0B48                     u438_20:
  7664     0B48  00BB               	movwf	i1xtoa@d_nonzero
  7665                           
  7666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  7667     0B49  1683               	bsf	3,5	;RP0=1, select bank1
  7668     0B4A  1E5D               	btfss	_flags^(0+128),4
  7669     0B4B  2B56               	goto	i1l3171
  7670     0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  7671     0B4D  083B               	movf	i1xtoa@d_nonzero,w
  7672     0B4E  1903               	btfsc	3,2
  7673     0B4F  2B56               	goto	i1l3171
  7674                           
  7675                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  7676     0B50  30FE               	movlw	254
  7677     0B51  07B9               	addwf	i1xtoa@w,f
  7678     0B52  1803               	skipnc
  7679     0B53  0ABA               	incf	i1xtoa@w+1,f
  7680     0B54  30FF               	movlw	255
  7681     0B55  07BA               	addwf	i1xtoa@w+1,f
  7682     0B56                     i1l3171:
  7683                           
  7684                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  7685     0B56  3078               	movlw	120
  7686     0B57  1283               	bcf	3,5	;RP0=0, select bank0
  7687     0B58  0633               	xorwf	i1xtoa@x,w
  7688     0B59  1903               	btfsc	3,2
  7689     0B5A  2B5D               	goto	i1l3175
  7690     0B5B  3041               	movlw	65
  7691     0B5C  2B5E               	goto	L17
  7692     0B5D                     i1l3175:
  7693     0B5D  3061               	movlw	97
  7694     0B5E                     L17:
  7695     0B5E  00B4               	movwf	i1_xtoa$641
  7696     0B5F  3000               	movlw	0
  7697     0B60  00B5               	movwf	i1_xtoa$641+1
  7698     0B61  0834               	movf	i1_xtoa$641,w
  7699     0B62  00B6               	movwf	i1xtoa@a
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  7702     0B63  301F               	movlw	31
  7703     0B64  00BD               	movwf	i1xtoa@i
  7704     0B65  3000               	movlw	0
  7705     0B66  00BE               	movwf	i1xtoa@i+1
  7706                           
  7707                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  7708     0B67  1703               	bsf	3,6	;RP1=1, select bank2
  7709     0B68  01AF               	clrf	(_dbuf^(0+256)+31)
  7710                           
  7711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  7712     0B69  2B9A               	goto	i1l3197
  7713     0B6A                     i1l3179:
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
  7716     0B6A  30FF               	movlw	255
  7717     0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7718     0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7719     0B6D  07BD               	addwf	i1xtoa@i,f
  7720     0B6E  1803               	skipnc
  7721     0B6F  0ABE               	incf	i1xtoa@i+1,f
  7722     0B70  30FF               	movlw	255
  7723     0B71  07BE               	addwf	i1xtoa@i+1,f
  7724                           
  7725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  7726     0B72  0831               	movf	i1xtoa@d,w
  7727     0B73  00BC               	movwf	i1xtoa@c
  7728     0B74  300F               	movlw	15
  7729     0B75  05BC               	andwf	i1xtoa@c,f
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  7732     0B76  300A               	movlw	10
  7733     0B77  023C               	subwf	i1xtoa@c,w
  7734     0B78  1803               	skipnc
  7735     0B79  2B7C               	goto	i1l3187
  7736                           
  7737                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  7738     0B7A  3030               	movlw	48
  7739     0B7B  2B7E               	goto	L18
  7740     0B7C                     i1l3187:	
  7741                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
  7742                           
  7743                           
  7744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  7745     0B7C  0836               	movf	i1xtoa@a,w
  7746     0B7D  3EF6               	addlw	246
  7747     0B7E                     L18:
  7748     0B7E  07BC               	addwf	i1xtoa@c,f
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  7751     0B7F  083D               	movf	i1xtoa@i,w
  7752     0B80  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7753     0B81  0084               	movwf	4
  7754     0B82  083C               	movf	i1xtoa@c,w
  7755     0B83  1783               	bsf	3,7	;select IRP bank2
  7756     0B84  0080               	movwf	0
  7757                           
  7758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  7759     0B85  30FF               	movlw	255
  7760     0B86  07B7               	addwf	i1xtoa@p,f
  7761     0B87  1803               	skipnc
  7762     0B88  0AB8               	incf	i1xtoa@p+1,f
  7763     0B89  30FF               	movlw	255
  7764     0B8A  07B8               	addwf	i1xtoa@p+1,f
  7765                           
  7766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  7767     0B8B  30FF               	movlw	255
  7768     0B8C  07B9               	addwf	i1xtoa@w,f
  7769     0B8D  1803               	skipnc
  7770     0B8E  0ABA               	incf	i1xtoa@w+1,f
  7771     0B8F  30FF               	movlw	255
  7772     0B90  07BA               	addwf	i1xtoa@w+1,f
  7773                           
  7774                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  7775     0B91  0E31               	swapf	i1xtoa@d,w
  7776     0B92  390F               	andlw	15
  7777     0B93  00B1               	movwf	i1xtoa@d
  7778     0B94  0E32               	swapf	i1xtoa@d+1,w
  7779     0B95  39F0               	andlw	240
  7780     0B96  04B1               	iorwf	i1xtoa@d,f
  7781     0B97  0E32               	swapf	i1xtoa@d+1,w
  7782     0B98  390F               	andlw	15
  7783     0B99  00B2               	movwf	i1xtoa@d+1
  7784     0B9A                     i1l3197:
  7785                           
  7786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  7787     0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  7788     0B9B  083E               	movf	i1xtoa@i+1,w
  7789     0B9C  3A80               	xorlw	128
  7790     0B9D  00FF               	movwf	127
  7791     0B9E  3080               	movlw	128
  7792     0B9F  027F               	subwf	127,w
  7793     0BA0  1D03               	skipz
  7794     0BA1  2BA4               	goto	u443_25
  7795     0BA2  3002               	movlw	2
  7796     0BA3  023D               	subwf	i1xtoa@i,w
  7797     0BA4                     u443_25:
  7798     0BA4  1C03               	skipc
  7799     0BA5  2BC8               	goto	i1l749
  7800     0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  7801     0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  7802     0BA8  0831               	movf	i1xtoa@d,w
  7803     0BA9  0432               	iorwf	i1xtoa@d+1,w
  7804     0BAA  1D03               	btfss	3,2
  7805     0BAB  2B6A               	goto	i1l3179
  7806     0BAC  0838               	movf	i1xtoa@p+1,w
  7807     0BAD  3A80               	xorlw	128
  7808     0BAE  00FF               	movwf	127
  7809     0BAF  3080               	movlw	128
  7810     0BB0  027F               	subwf	127,w
  7811     0BB1  1D03               	skipz
  7812     0BB2  2BB5               	goto	u445_25
  7813     0BB3  3001               	movlw	1
  7814     0BB4  0237               	subwf	i1xtoa@p,w
  7815     0BB5                     u445_25:
  7816     0BB5  1803               	skipnc
  7817     0BB6  2B6A               	goto	i1l3179
  7818     0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  7819     0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  7820     0BB9  083A               	movf	i1xtoa@w+1,w
  7821     0BBA  3A80               	xorlw	128
  7822     0BBB  00FF               	movwf	127
  7823     0BBC  3080               	movlw	128
  7824     0BBD  027F               	subwf	127,w
  7825     0BBE  1D03               	skipz
  7826     0BBF  2BC2               	goto	u446_25
  7827     0BC0  3001               	movlw	1
  7828     0BC1  0239               	subwf	i1xtoa@w,w
  7829     0BC2                     u446_25:
  7830     0BC2  1C03               	skipc
  7831     0BC3  2BC8               	goto	i1l749
  7832     0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  7833     0BC5  1303               	bcf	3,6	;RP1=0, select bank1
  7834     0BC6  18DD               	btfsc	_flags^(0+128),1
  7835     0BC7  2B6A               	goto	i1l3179
  7836     0BC8                     i1l749:
  7837                           
  7838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
  7839     0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  7840     0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  7841     0BCA  1E5D               	btfss	_flags^(0+128),4
  7842     0BCB  2BED               	goto	i1l3217
  7843     0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  7844     0BCD  083B               	movf	i1xtoa@d_nonzero,w
  7845     0BCE  1903               	btfsc	3,2
  7846     0BCF  2BED               	goto	i1l3217
  7847     0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  7848     0BD1  0859               	movf	_prec^(0+128),w
  7849     0BD2  045A               	iorwf	(_prec+1)^(0+128),w
  7850     0BD3  1903               	btfsc	3,2
  7851     0BD4  2BED               	goto	i1l3217
  7852                           
  7853                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1138:         --i;
  7854     0BD5  30FF               	movlw	255
  7855     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  7856     0BD7  07BD               	addwf	i1xtoa@i,f
  7857     0BD8  1803               	skipnc
  7858     0BD9  0ABE               	incf	i1xtoa@i+1,f
  7859     0BDA  30FF               	movlw	255
  7860     0BDB  07BE               	addwf	i1xtoa@i+1,f
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
  7863     0BDC  083D               	movf	i1xtoa@i,w
  7864     0BDD  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7865     0BDE  0084               	movwf	4
  7866     0BDF  0833               	movf	i1xtoa@x,w
  7867     0BE0  1783               	bsf	3,7	;select IRP bank2
  7868     0BE1  0080               	movwf	0
  7869                           
  7870                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
  7871     0BE2  30FF               	movlw	255
  7872     0BE3  07BD               	addwf	i1xtoa@i,f
  7873     0BE4  1803               	skipnc
  7874     0BE5  0ABE               	incf	i1xtoa@i+1,f
  7875     0BE6  30FF               	movlw	255
  7876     0BE7  07BE               	addwf	i1xtoa@i+1,f
  7877                           
  7878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
  7879     0BE8  083D               	movf	i1xtoa@i,w
  7880     0BE9  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7881     0BEA  0084               	movwf	4
  7882     0BEB  3030               	movlw	48
  7883     0BEC  0080               	movwf	0
  7884     0BED                     i1l3217:
  7885                           
  7886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  7887     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7888     0BEE  082F               	movf	i1xtoa@fp,w
  7889     0BEF  00A8               	movwf	i1pad@fp
  7890     0BF0  0830               	movf	i1xtoa@fp+1,w
  7891     0BF1  00A9               	movwf	i1pad@fp+1
  7892     0BF2  083D               	movf	i1xtoa@i,w
  7893     0BF3  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7894     0BF4  00AA               	movwf	i1pad@buf
  7895     0BF5  083A               	movf	i1xtoa@w+1,w
  7896     0BF6  00AC               	movwf	i1pad@p+1
  7897     0BF7  0839               	movf	i1xtoa@w,w
  7898     0BF8  00AB               	movwf	i1pad@p
  7899     0BF9  160A  118A  24D9   	fcall	i1_pad
  7900     0BFC  0829               	movf	?i1_pad+1,w
  7901     0BFD  00B0               	movwf	?i1_xtoa+1
  7902     0BFE  0828               	movf	?i1_pad,w
  7903     0BFF  00AF               	movwf	?i1_xtoa
  7904     0C00  0008               	return
  7905     0C01                     __end_ofi1_xtoa:
  7906                           
  7907                           	psect	text27
  7908     0878                     __ptext27:	
  7909 ;; *************** function i1_utoa *****************
  7910 ;; Defined at:
  7911 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  7914 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  7915 ;;  d               2   17[BANK0 ] unsigned int 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  i               2   23[BANK0 ] int 
  7918 ;;  w               2   21[BANK0 ] int 
  7919 ;;  p               2   19[BANK0 ] int 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  2   15[BANK0 ] int 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 300/0
  7926 ;;		On exit  : B00/800
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7929 ;;      Params:         0       4       0       0       0
  7930 ;;      Locals:         0       6       0       0       0
  7931 ;;      Temps:          0       0       0       0       0
  7932 ;;      Totals:         0      10       0       0       0
  7933 ;;Total ram usage:       10 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 4
  7936 ;; This function calls:
  7937 ;;		i1___lwdiv
  7938 ;;		i1___lwmod
  7939 ;;		i1_pad
  7940 ;; This function is called by:
  7941 ;;		i1_vfpfcnvrt
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     0878                     i1_utoa:	
  7946                           ;psect for function i1_utoa
  7947                           
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
  7950                           
  7951                           ;incstack = 0
  7952 ;; hardware stack exceeded
  7953                           ; Regs used in i1_utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7954     0878  1683               	bsf	3,5	;RP0=1, select bank1
  7955     0879  1BDA               	btfsc	(_prec+1)^(0+128),7
  7956     087A  287D               	goto	i1l3119
  7957                           
  7958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  7959     087B  30FD               	movlw	253
  7960     087C  05DD               	andwf	_flags^(0+128),f
  7961     087D                     i1l3119:
  7962                           
  7963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  7964     087D  1FDA               	btfss	(_prec+1)^(0+128),7
  7965     087E  2885               	goto	i1l3123
  7966     087F  3001               	movlw	1
  7967     0880  1283               	bcf	3,5	;RP0=0, select bank0
  7968     0881  00B3               	movwf	i1utoa@p
  7969     0882  3000               	movlw	0
  7970     0883  00B4               	movwf	i1utoa@p+1
  7971     0884  288C               	goto	i1l720
  7972     0885                     i1l3123:
  7973     0885  085A               	movf	(_prec+1)^(0+128),w
  7974     0886  1283               	bcf	3,5	;RP0=0, select bank0
  7975     0887  00B4               	movwf	i1utoa@p+1
  7976     0888  1683               	bsf	3,5	;RP0=1, select bank1
  7977     0889  0859               	movf	_prec^(0+128),w
  7978     088A  1283               	bcf	3,5	;RP0=0, select bank0
  7979     088B  00B3               	movwf	i1utoa@p
  7980     088C                     i1l720:
  7981                           
  7982                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  7983     088C  1683               	bsf	3,5	;RP0=1, select bank1
  7984     088D  0858               	movf	(_width+1)^(0+128),w
  7985     088E  1283               	bcf	3,5	;RP0=0, select bank0
  7986     088F  00B6               	movwf	i1utoa@w+1
  7987     0890  1683               	bsf	3,5	;RP0=1, select bank1
  7988     0891  0857               	movf	_width^(0+128),w
  7989     0892  1283               	bcf	3,5	;RP0=0, select bank0
  7990     0893  00B5               	movwf	i1utoa@w
  7991                           
  7992                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  7993     0894  301F               	movlw	31
  7994     0895  00B7               	movwf	i1utoa@i
  7995     0896  3000               	movlw	0
  7996     0897  00B8               	movwf	i1utoa@i+1
  7997                           
  7998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  7999     0898  1703               	bsf	3,6	;RP1=1, select bank2
  8000     0899  01AF               	clrf	(_dbuf^(0+256)+31)
  8001                           
  8002                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8003     089A  28F4               	goto	i1l3137
  8004     089B                     i1l3139:
  8005     089B  0831               	movf	i1utoa@d,w
  8006     089C  0432               	iorwf	i1utoa@d+1,w
  8007     089D  1D03               	btfss	3,2
  8008     089E  28BB               	goto	i1l3127
  8009     089F  0834               	movf	i1utoa@p+1,w
  8010     08A0  3A80               	xorlw	128
  8011     08A1  00FF               	movwf	127
  8012     08A2  3080               	movlw	128
  8013     08A3  027F               	subwf	127,w
  8014     08A4  1D03               	skipz
  8015     08A5  28A8               	goto	u432_25
  8016     08A6  3001               	movlw	1
  8017     08A7  0233               	subwf	i1utoa@p,w
  8018     08A8                     u432_25:
  8019     08A8  1803               	skipnc
  8020     08A9  28BB               	goto	i1l3127
  8021     08AA  1283               	bcf	3,5	;RP0=0, select bank0
  8022     08AB  1303               	bcf	3,6	;RP1=0, select bank0
  8023     08AC  0836               	movf	i1utoa@w+1,w
  8024     08AD  3A80               	xorlw	128
  8025     08AE  00FF               	movwf	127
  8026     08AF  3080               	movlw	128
  8027     08B0  027F               	subwf	127,w
  8028     08B1  1D03               	skipz
  8029     08B2  28B5               	goto	u433_25
  8030     08B3  3001               	movlw	1
  8031     08B4  0235               	subwf	i1utoa@w,w
  8032     08B5                     u433_25:
  8033     08B5  1C03               	skipc
  8034     08B6  28F9               	goto	i1l3147
  8035     08B7  1683               	bsf	3,5	;RP0=1, select bank1
  8036     08B8  1303               	bcf	3,6	;RP1=0, select bank1
  8037     08B9  1CDD               	btfss	_flags^(0+128),1
  8038     08BA  28F9               	goto	i1l3147
  8039     08BB                     i1l3127:
  8040                           
  8041                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  8042     08BB  30FF               	movlw	255
  8043     08BC  1283               	bcf	3,5	;RP0=0, select bank0
  8044     08BD  1303               	bcf	3,6	;RP1=0, select bank0
  8045     08BE  07B7               	addwf	i1utoa@i,f
  8046     08BF  1803               	skipnc
  8047     08C0  0AB8               	incf	i1utoa@i+1,f
  8048     08C1  30FF               	movlw	255
  8049     08C2  07B8               	addwf	i1utoa@i+1,f
  8050                           
  8051                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  8052     08C3  0837               	movf	i1utoa@i,w
  8053     08C4  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8054     08C5  0084               	movwf	4
  8055     08C6  300A               	movlw	10
  8056     08C7  00F0               	movwf	i1___lwmod@divisor
  8057     08C8  3000               	movlw	0
  8058     08C9  00F1               	movwf	i1___lwmod@divisor+1
  8059     08CA  0832               	movf	i1utoa@d+1,w
  8060     08CB  00F3               	movwf	i1___lwmod@dividend+1
  8061     08CC  0831               	movf	i1utoa@d,w
  8062     08CD  00F2               	movwf	i1___lwmod@dividend
  8063     08CE  160A  118A  2209  120A  158A  	fcall	i1___lwmod
  8064     08D3  0870               	movf	?i1___lwmod,w
  8065     08D4  3E30               	addlw	48
  8066     08D5  1783               	bsf	3,7	;select IRP bank2
  8067     08D6  0080               	movwf	0
  8068                           
  8069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  8070     08D7  30FF               	movlw	255
  8071     08D8  07B3               	addwf	i1utoa@p,f
  8072     08D9  1803               	skipnc
  8073     08DA  0AB4               	incf	i1utoa@p+1,f
  8074     08DB  30FF               	movlw	255
  8075     08DC  07B4               	addwf	i1utoa@p+1,f
  8076                           
  8077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  8078     08DD  30FF               	movlw	255
  8079     08DE  07B5               	addwf	i1utoa@w,f
  8080     08DF  1803               	skipnc
  8081     08E0  0AB6               	incf	i1utoa@w+1,f
  8082     08E1  30FF               	movlw	255
  8083     08E2  07B6               	addwf	i1utoa@w+1,f
  8084                           
  8085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  8086     08E3  300A               	movlw	10
  8087     08E4  00F0               	movwf	i1___lwdiv@divisor
  8088     08E5  3000               	movlw	0
  8089     08E6  00F1               	movwf	i1___lwdiv@divisor+1
  8090     08E7  0832               	movf	i1utoa@d+1,w
  8091     08E8  00F3               	movwf	i1___lwdiv@dividend+1
  8092     08E9  0831               	movf	i1utoa@d,w
  8093     08EA  00F2               	movwf	i1___lwdiv@dividend
  8094     08EB  160A  118A  22D5  120A  158A  	fcall	i1___lwdiv
  8095     08F0  0871               	movf	?i1___lwdiv+1,w
  8096     08F1  00B2               	movwf	i1utoa@d+1
  8097     08F2  0870               	movf	?i1___lwdiv,w
  8098     08F3  00B1               	movwf	i1utoa@d
  8099     08F4                     i1l3137:
  8100                           
  8101                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8102     08F4  1303               	bcf	3,6	;RP1=0, select bank0
  8103     08F5  0837               	movf	i1utoa@i,w
  8104     08F6  0438               	iorwf	i1utoa@i+1,w
  8105     08F7  1D03               	btfss	3,2
  8106     08F8  289B               	goto	i1l3139
  8107     08F9                     i1l3147:
  8108                           
  8109                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  8110     08F9  1283               	bcf	3,5	;RP0=0, select bank0
  8111     08FA  1303               	bcf	3,6	;RP1=0, select bank0
  8112     08FB  082F               	movf	i1utoa@fp,w
  8113     08FC  00A8               	movwf	i1pad@fp
  8114     08FD  0830               	movf	i1utoa@fp+1,w
  8115     08FE  00A9               	movwf	i1pad@fp+1
  8116     08FF  0837               	movf	i1utoa@i,w
  8117     0900  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8118     0901  00AA               	movwf	i1pad@buf
  8119     0902  0836               	movf	i1utoa@w+1,w
  8120     0903  00AC               	movwf	i1pad@p+1
  8121     0904  0835               	movf	i1utoa@w,w
  8122     0905  00AB               	movwf	i1pad@p
  8123     0906  160A  118A  24D9   	fcall	i1_pad
  8124     0909  0829               	movf	?i1_pad+1,w
  8125     090A  00B0               	movwf	?i1_utoa+1
  8126     090B  0828               	movf	?i1_pad,w
  8127     090C  00AF               	movwf	?i1_utoa
  8128     090D  0008               	return
  8129     090E                     __end_ofi1_utoa:
  8130                           
  8131                           	psect	text28
  8132     1209                     __ptext28:	
  8133 ;; *************** function i1___lwmod *****************
  8134 ;; Defined at:
  8135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  divisor         2    0[COMMON] unsigned int 
  8138 ;;  dividend        2    2[COMMON] unsigned int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  counter         1    4[COMMON] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2    0[COMMON] unsigned int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 300/0
  8147 ;;		On exit  : 300/0
  8148 ;;		Unchanged: 300/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8150 ;;      Params:         4       0       0       0       0
  8151 ;;      Locals:         1       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0
  8153 ;;      Totals:         5       0       0       0       0
  8154 ;;Total ram usage:        5 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		i1_utoa
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163     1209                     i1___lwmod:	
  8164                           ;psect for function i1___lwmod
  8165                           
  8166                           
  8167                           ;incstack = 0
  8168 ;; hardware stack exceeded
  8169                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8170     1209  0870               	movf	i1___lwmod@divisor,w
  8171     120A  0471               	iorwf	i1___lwmod@divisor+1,w
  8172     120B  1903               	btfsc	3,2
  8173     120C  2A34               	goto	i1l2685
  8174     120D  3001               	movlw	1
  8175     120E  00F4               	movwf	i1___lwmod@counter
  8176     120F                     i1l2675:
  8177     120F  1BF1               	btfsc	i1___lwmod@divisor+1,7
  8178     1210  2A1B               	goto	i1l2677
  8179     1211  3001               	movlw	1
  8180     1212                     u335_25:
  8181     1212  1003               	clrc
  8182     1213  0DF0               	rlf	i1___lwmod@divisor,f
  8183     1214  0DF1               	rlf	i1___lwmod@divisor+1,f
  8184     1215  3EFF               	addlw	-1
  8185     1216  1D03               	skipz
  8186     1217  2A12               	goto	u335_25
  8187     1218  3001               	movlw	1
  8188     1219  07F4               	addwf	i1___lwmod@counter,f
  8189     121A  2A0F               	goto	i1l2675
  8190     121B                     i1l2677:
  8191     121B  0871               	movf	i1___lwmod@divisor+1,w
  8192     121C  0273               	subwf	i1___lwmod@dividend+1,w
  8193     121D  1D03               	skipz
  8194     121E  2A21               	goto	u337_25
  8195     121F  0870               	movf	i1___lwmod@divisor,w
  8196     1220  0272               	subwf	i1___lwmod@dividend,w
  8197     1221                     u337_25:
  8198     1221  1C03               	skipc
  8199     1222  2A29               	goto	i1l2681
  8200     1223  0870               	movf	i1___lwmod@divisor,w
  8201     1224  02F2               	subwf	i1___lwmod@dividend,f
  8202     1225  0871               	movf	i1___lwmod@divisor+1,w
  8203     1226  1C03               	skipc
  8204     1227  03F3               	decf	i1___lwmod@dividend+1,f
  8205     1228  02F3               	subwf	i1___lwmod@dividend+1,f
  8206     1229                     i1l2681:
  8207     1229  3001               	movlw	1
  8208     122A                     u338_25:
  8209     122A  1003               	clrc
  8210     122B  0CF1               	rrf	i1___lwmod@divisor+1,f
  8211     122C  0CF0               	rrf	i1___lwmod@divisor,f
  8212     122D  3EFF               	addlw	-1
  8213     122E  1D03               	skipz
  8214     122F  2A2A               	goto	u338_25
  8215     1230  3001               	movlw	1
  8216     1231  02F4               	subwf	i1___lwmod@counter,f
  8217     1232  1D03               	btfss	3,2
  8218     1233  2A1B               	goto	i1l2677
  8219     1234                     i1l2685:
  8220     1234  0873               	movf	i1___lwmod@dividend+1,w
  8221     1235  00F1               	movwf	?i1___lwmod+1
  8222     1236  0872               	movf	i1___lwmod@dividend,w
  8223     1237  00F0               	movwf	?i1___lwmod
  8224     1238  0008               	return
  8225     1239                     __end_ofi1___lwmod:
  8226                           
  8227                           	psect	text29
  8228     12D5                     __ptext29:	
  8229 ;; *************** function i1___lwdiv *****************
  8230 ;; Defined at:
  8231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  divisor         2    0[COMMON] unsigned int 
  8234 ;;  dividend        2    2[COMMON] unsigned int 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;  quotient        2    4[COMMON] unsigned int 
  8237 ;;  counter         1    6[COMMON] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  2    0[COMMON] unsigned int 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0
  8242 ;; Tracked objects:
  8243 ;;		On entry : B00/800
  8244 ;;		On exit  : B00/800
  8245 ;;		Unchanged: B00/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8247 ;;      Params:         4       0       0       0       0
  8248 ;;      Locals:         3       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0
  8250 ;;      Totals:         7       0       0       0       0
  8251 ;;Total ram usage:        7 bytes
  8252 ;; Hardware stack levels used: 1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		i1_utoa
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260     12D5                     i1___lwdiv:	
  8261                           ;psect for function i1___lwdiv
  8262                           
  8263                           
  8264                           ;incstack = 0
  8265 ;; hardware stack exceeded
  8266                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8267     12D5  01F4               	clrf	i1___lwdiv@quotient
  8268     12D6  01F5               	clrf	i1___lwdiv@quotient+1
  8269     12D7  0870               	movf	i1___lwdiv@divisor,w
  8270     12D8  0471               	iorwf	i1___lwdiv@divisor+1,w
  8271     12D9  1903               	btfsc	3,2
  8272     12DA  2B0A               	goto	i1l2663
  8273     12DB  3001               	movlw	1
  8274     12DC  00F6               	movwf	i1___lwdiv@counter
  8275     12DD                     i1l2651:
  8276     12DD  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8277     12DE  2AE9               	goto	i1l2653
  8278     12DF  3001               	movlw	1
  8279     12E0                     u328_25:
  8280     12E0  1003               	clrc
  8281     12E1  0DF0               	rlf	i1___lwdiv@divisor,f
  8282     12E2  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8283     12E3  3EFF               	addlw	-1
  8284     12E4  1D03               	skipz
  8285     12E5  2AE0               	goto	u328_25
  8286     12E6  3001               	movlw	1
  8287     12E7  07F6               	addwf	i1___lwdiv@counter,f
  8288     12E8  2ADD               	goto	i1l2651
  8289     12E9                     i1l2653:
  8290     12E9  3001               	movlw	1
  8291     12EA                     u330_25:
  8292     12EA  1003               	clrc
  8293     12EB  0DF4               	rlf	i1___lwdiv@quotient,f
  8294     12EC  0DF5               	rlf	i1___lwdiv@quotient+1,f
  8295     12ED  3EFF               	addlw	-1
  8296     12EE  1D03               	skipz
  8297     12EF  2AEA               	goto	u330_25
  8298     12F0  0871               	movf	i1___lwdiv@divisor+1,w
  8299     12F1  0273               	subwf	i1___lwdiv@dividend+1,w
  8300     12F2  1D03               	skipz
  8301     12F3  2AF6               	goto	u331_25
  8302     12F4  0870               	movf	i1___lwdiv@divisor,w
  8303     12F5  0272               	subwf	i1___lwdiv@dividend,w
  8304     12F6                     u331_25:
  8305     12F6  1C03               	skipc
  8306     12F7  2AFF               	goto	i1l2659
  8307     12F8  0870               	movf	i1___lwdiv@divisor,w
  8308     12F9  02F2               	subwf	i1___lwdiv@dividend,f
  8309     12FA  0871               	movf	i1___lwdiv@divisor+1,w
  8310     12FB  1C03               	skipc
  8311     12FC  03F3               	decf	i1___lwdiv@dividend+1,f
  8312     12FD  02F3               	subwf	i1___lwdiv@dividend+1,f
  8313     12FE  1474               	bsf	i1___lwdiv@quotient,0
  8314     12FF                     i1l2659:
  8315     12FF  3001               	movlw	1
  8316     1300                     u332_25:
  8317     1300  1003               	clrc
  8318     1301  0CF1               	rrf	i1___lwdiv@divisor+1,f
  8319     1302  0CF0               	rrf	i1___lwdiv@divisor,f
  8320     1303  3EFF               	addlw	-1
  8321     1304  1D03               	skipz
  8322     1305  2B00               	goto	u332_25
  8323     1306  3001               	movlw	1
  8324     1307  02F6               	subwf	i1___lwdiv@counter,f
  8325     1308  1D03               	btfss	3,2
  8326     1309  2AE9               	goto	i1l2653
  8327     130A                     i1l2663:
  8328     130A  0875               	movf	i1___lwdiv@quotient+1,w
  8329     130B  00F1               	movwf	?i1___lwdiv+1
  8330     130C  0874               	movf	i1___lwdiv@quotient,w
  8331     130D  00F0               	movwf	?i1___lwdiv
  8332     130E  0008               	return
  8333     130F                     __end_ofi1___lwdiv:
  8334                           
  8335                           	psect	text30
  8336     166C                     __ptext30:	
  8337 ;; *************** function i1_read_prec_or_width *****************
  8338 ;; Defined at:
  8339 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  8342 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  8343 ;;  ap              2    7[COMMON] PTR PTR void [1]
  8344 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  n               2   12[COMMON] int 
  8347 ;;  c               1   11[COMMON] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  2    6[COMMON] int 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 300/0
  8354 ;;		On exit  : 300/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8357 ;;      Params:         3       0       0       0       0
  8358 ;;      Locals:         3       0       0       0       0
  8359 ;;      Temps:          2       0       0       0       0
  8360 ;;      Totals:         8       0       0       0       0
  8361 ;;Total ram usage:        8 bytes
  8362 ;; Hardware stack levels used: 1
  8363 ;; Hardware stack levels required when called: 1
  8364 ;; This function calls:
  8365 ;;		i1___wmul
  8366 ;; This function is called by:
  8367 ;;		i1_vfpfcnvrt
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371     166C                     i1_read_prec_or_width:	
  8372                           ;psect for function i1_read_prec_or_width
  8373                           
  8374                           
  8375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  8376                           
  8377                           ;incstack = 0
  8378 ;; hardware stack exceeded
  8379                           ; Regs used in i1_read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8380     166C  01FC               	clrf	i1read_prec_or_width@n
  8381     166D  01FD               	clrf	i1read_prec_or_width@n+1
  8382                           
  8383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  8384     166E  0876               	movf	i1read_prec_or_width@fmt,w
  8385     166F  0084               	movwf	4
  8386     1670  1383               	bcf	3,7	;select IRP bank0
  8387     1671  0800               	movf	0,w
  8388     1672  00F9               	movwf	??i1_read_prec_or_width
  8389     1673  0A84               	incf	4,f
  8390     1674  0800               	movf	0,w
  8391     1675  00FA               	movwf	??i1_read_prec_or_width+1
  8392     1676  087A               	movf	??i1_read_prec_or_width+1,w
  8393     1677  00FF               	movwf	127
  8394     1678  0879               	movf	??i1_read_prec_or_width,w
  8395     1679  0084               	movwf	4
  8396     167A  120A  118A  27EA  160A  118A  	fcall	stringtab
  8397     167F  3A2A               	xorlw	42
  8398     1680  1D03               	skipz
  8399     1681  2EC2               	goto	i1l3231
  8400                           
  8401                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  8402     1682  0876               	movf	i1read_prec_or_width@fmt,w
  8403     1683  0084               	movwf	4
  8404     1684  3001               	movlw	1
  8405     1685  1383               	bcf	3,7	;select IRP bank0
  8406     1686  0780               	addwf	0,f
  8407     1687  0A84               	incf	4,f
  8408     1688  1803               	skipnc
  8409     1689  0A80               	incf	0,f
  8410                           
  8411                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  8412     168A  0877               	movf	i1read_prec_or_width@ap,w
  8413     168B  0084               	movwf	4
  8414     168C  1783               	bsf	3,7
  8415     168D  1C78               	btfss	i1read_prec_or_width@ap+1,0
  8416     168E  1383               	bcf	3,7
  8417     168F  0800               	movf	0,w
  8418     1690  00F9               	movwf	??i1_read_prec_or_width
  8419     1691  3002               	movlw	2
  8420     1692  0780               	addwf	0,f
  8421     1693  0A84               	incf	4,f
  8422     1694  0800               	movf	0,w
  8423     1695  00FA               	movwf	??i1_read_prec_or_width+1
  8424     1696  3000               	movlw	0
  8425     1697  1803               	skipnc
  8426     1698  0A80               	incf	0,f
  8427     1699  0780               	addwf	0,f
  8428     169A  0879               	movf	??i1_read_prec_or_width,w
  8429     169B  0084               	movwf	4
  8430     169C  1783               	bsf	3,7
  8431     169D  1C7A               	btfss	??i1_read_prec_or_width+1,0
  8432     169E  1383               	bcf	3,7
  8433     169F  0800               	movf	0,w
  8434     16A0  00FC               	movwf	i1read_prec_or_width@n
  8435     16A1  0A84               	incf	4,f
  8436     16A2  0800               	movf	0,w
  8437     16A3  00FD               	movwf	i1read_prec_or_width@n+1
  8438                           
  8439                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  8440     16A4  2ED9               	goto	i1l3233
  8441     16A5                     i1l3227:
  8442                           
  8443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  8444     16A5  087D               	movf	i1read_prec_or_width@n+1,w
  8445     16A6  00F1               	movwf	i1___wmul@multiplier+1
  8446     16A7  087C               	movf	i1read_prec_or_width@n,w
  8447     16A8  00F0               	movwf	i1___wmul@multiplier
  8448     16A9  300A               	movlw	10
  8449     16AA  00F2               	movwf	i1___wmul@multiplicand
  8450     16AB  3000               	movlw	0
  8451     16AC  00F3               	movwf	i1___wmul@multiplicand+1
  8452     16AD  160A  118A  20D7  160A  118A  	fcall	i1___wmul
  8453     16B2  087B               	movf	i1read_prec_or_width@c,w
  8454     16B3  0770               	addwf	?i1___wmul,w
  8455     16B4  00FC               	movwf	i1read_prec_or_width@n
  8456     16B5  3000               	movlw	0
  8457     16B6  1803               	skipnc
  8458     16B7  3001               	movlw	1
  8459     16B8  0771               	addwf	?i1___wmul+1,w
  8460     16B9  00FD               	movwf	i1read_prec_or_width@n+1
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  8463     16BA  0876               	movf	i1read_prec_or_width@fmt,w
  8464     16BB  0084               	movwf	4
  8465     16BC  3001               	movlw	1
  8466     16BD  1383               	bcf	3,7	;select IRP bank0
  8467     16BE  0780               	addwf	0,f
  8468     16BF  0A84               	incf	4,f
  8469     16C0  1803               	skipnc
  8470     16C1  0A80               	incf	0,f
  8471     16C2                     i1l3231:
  8472                           
  8473                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  8474     16C2  0876               	movf	i1read_prec_or_width@fmt,w
  8475     16C3  0084               	movwf	4
  8476     16C4  1383               	bcf	3,7	;select IRP bank0
  8477     16C5  0800               	movf	0,w
  8478     16C6  00F9               	movwf	??i1_read_prec_or_width
  8479     16C7  0A84               	incf	4,f
  8480     16C8  0800               	movf	0,w
  8481     16C9  00FA               	movwf	??i1_read_prec_or_width+1
  8482     16CA  087A               	movf	??i1_read_prec_or_width+1,w
  8483     16CB  00FF               	movwf	127
  8484     16CC  0879               	movf	??i1_read_prec_or_width,w
  8485     16CD  0084               	movwf	4
  8486     16CE  120A  118A  27EA  160A  118A  	fcall	stringtab
  8487     16D3  3ED0               	addlw	208
  8488     16D4  00FB               	movwf	i1read_prec_or_width@c
  8489     16D5  300A               	movlw	10
  8490     16D6  027B               	subwf	i1read_prec_or_width@c,w
  8491     16D7  1C03               	skipc
  8492     16D8  2EA5               	goto	i1l3227
  8493     16D9                     i1l3233:
  8494                           
  8495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  8496     16D9  087D               	movf	i1read_prec_or_width@n+1,w
  8497     16DA  00F7               	movwf	?i1_read_prec_or_width+1
  8498     16DB  087C               	movf	i1read_prec_or_width@n,w
  8499     16DC  00F6               	movwf	?i1_read_prec_or_width
  8500     16DD  0008               	return
  8501     16DE                     __end_ofi1_read_prec_or_width:
  8502                           
  8503                           	psect	text31
  8504     10D7                     __ptext31:	
  8505 ;; *************** function i1___wmul *****************
  8506 ;; Defined at:
  8507 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  multiplier      2    0[COMMON] unsigned int 
  8510 ;;  multiplicand    2    2[COMMON] unsigned int 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  product         2    4[COMMON] unsigned int 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  2    0[COMMON] unsigned int 
  8515 ;; Registers used:
  8516 ;;		wreg, status,2, status,0
  8517 ;; Tracked objects:
  8518 ;;		On entry : 300/0
  8519 ;;		On exit  : 300/0
  8520 ;;		Unchanged: 300/0
  8521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8522 ;;      Params:         4       0       0       0       0
  8523 ;;      Locals:         2       0       0       0       0
  8524 ;;      Temps:          0       0       0       0       0
  8525 ;;      Totals:         6       0       0       0       0
  8526 ;;Total ram usage:        6 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		i1_read_prec_or_width
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535     10D7                     i1___wmul:	
  8536                           ;psect for function i1___wmul
  8537                           
  8538                           
  8539                           ;incstack = 0
  8540 ;; hardware stack exceeded
  8541                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  8542     10D7  01F4               	clrf	i1___wmul@product
  8543     10D8  01F5               	clrf	i1___wmul@product+1
  8544     10D9                     i1l2547:
  8545     10D9  1C70               	btfss	i1___wmul@multiplier,0
  8546     10DA  28E1               	goto	i1l162
  8547     10DB  0872               	movf	i1___wmul@multiplicand,w
  8548     10DC  07F4               	addwf	i1___wmul@product,f
  8549     10DD  1803               	skipnc
  8550     10DE  0AF5               	incf	i1___wmul@product+1,f
  8551     10DF  0873               	movf	i1___wmul@multiplicand+1,w
  8552     10E0  07F5               	addwf	i1___wmul@product+1,f
  8553     10E1                     i1l162:
  8554     10E1  3001               	movlw	1
  8555     10E2                     u305_25:
  8556     10E2  1003               	clrc
  8557     10E3  0DF2               	rlf	i1___wmul@multiplicand,f
  8558     10E4  0DF3               	rlf	i1___wmul@multiplicand+1,f
  8559     10E5  3EFF               	addlw	-1
  8560     10E6  1D03               	skipz
  8561     10E7  28E2               	goto	u305_25
  8562     10E8  3001               	movlw	1
  8563     10E9                     u306_25:
  8564     10E9  1003               	clrc
  8565     10EA  0CF1               	rrf	i1___wmul@multiplier+1,f
  8566     10EB  0CF0               	rrf	i1___wmul@multiplier,f
  8567     10EC  3EFF               	addlw	-1
  8568     10ED  1D03               	skipz
  8569     10EE  28E9               	goto	u306_25
  8570     10EF  0870               	movf	i1___wmul@multiplier,w
  8571     10F0  0471               	iorwf	i1___wmul@multiplier+1,w
  8572     10F1  1D03               	btfss	3,2
  8573     10F2  28D9               	goto	i1l2547
  8574     10F3  0875               	movf	i1___wmul@product+1,w
  8575     10F4  00F1               	movwf	?i1___wmul+1
  8576     10F5  0874               	movf	i1___wmul@product,w
  8577     10F6  00F0               	movwf	?i1___wmul
  8578     10F7  0008               	return
  8579     10F8                     __end_ofi1___wmul:
  8580                           
  8581                           	psect	text32
  8582     09AF                     __ptext32:	
  8583 ;; *************** function i1_otoa *****************
  8584 ;; Defined at:
  8585 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  8588 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  8589 ;;  d               2   17[BANK0 ] unsigned int 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  i               2   26[BANK0 ] int 
  8592 ;;  w               2   23[BANK0 ] int 
  8593 ;;  p               2   21[BANK0 ] int 
  8594 ;;  t               1   25[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  2   15[BANK0 ] int 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 300/0
  8601 ;;		On exit  : B00/800
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         0       4       0       0       0
  8605 ;;      Locals:         0       7       0       0       0
  8606 ;;      Temps:          0       2       0       0       0
  8607 ;;      Totals:         0      13       0       0       0
  8608 ;;Total ram usage:       13 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; Hardware stack levels required when called: 4
  8611 ;; This function calls:
  8612 ;;		i1_pad
  8613 ;; This function is called by:
  8614 ;;		i1_vfpfcnvrt
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618     09AF                     i1_otoa:	
  8619                           ;psect for function i1_otoa
  8620                           
  8621                           
  8622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
  8623                           
  8624                           ;incstack = 0
  8625 ;; hardware stack exceeded
  8626                           ; Regs used in i1_otoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8627     09AF  1683               	bsf	3,5	;RP0=1, select bank1
  8628     09B0  1BDA               	btfsc	(_prec+1)^(0+128),7
  8629     09B1  29B4               	goto	i1l3069
  8630                           
  8631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
  8632     09B2  30FD               	movlw	253
  8633     09B3  05DD               	andwf	_flags^(0+128),f
  8634     09B4                     i1l3069:
  8635                           
  8636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
  8637     09B4  1FDA               	btfss	(_prec+1)^(0+128),7
  8638     09B5  29BC               	goto	i1l3073
  8639     09B6  3001               	movlw	1
  8640     09B7  1283               	bcf	3,5	;RP0=0, select bank0
  8641     09B8  00B5               	movwf	i1otoa@p
  8642     09B9  3000               	movlw	0
  8643     09BA  00B6               	movwf	i1otoa@p+1
  8644     09BB  29C3               	goto	i1l702
  8645     09BC                     i1l3073:
  8646     09BC  085A               	movf	(_prec+1)^(0+128),w
  8647     09BD  1283               	bcf	3,5	;RP0=0, select bank0
  8648     09BE  00B6               	movwf	i1otoa@p+1
  8649     09BF  1683               	bsf	3,5	;RP0=1, select bank1
  8650     09C0  0859               	movf	_prec^(0+128),w
  8651     09C1  1283               	bcf	3,5	;RP0=0, select bank0
  8652     09C2  00B5               	movwf	i1otoa@p
  8653     09C3                     i1l702:
  8654                           
  8655                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
  8656     09C3  1683               	bsf	3,5	;RP0=1, select bank1
  8657     09C4  0858               	movf	(_width+1)^(0+128),w
  8658     09C5  1283               	bcf	3,5	;RP0=0, select bank0
  8659     09C6  00B8               	movwf	i1otoa@w+1
  8660     09C7  1683               	bsf	3,5	;RP0=1, select bank1
  8661     09C8  0857               	movf	_width^(0+128),w
  8662     09C9  1283               	bcf	3,5	;RP0=0, select bank0
  8663     09CA  00B7               	movwf	i1otoa@w
  8664                           
  8665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
  8666     09CB  301F               	movlw	31
  8667     09CC  00BA               	movwf	i1otoa@i
  8668     09CD  3000               	movlw	0
  8669     09CE  00BB               	movwf	i1otoa@i+1
  8670                           
  8671                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
  8672     09CF  1703               	bsf	3,6	;RP1=1, select bank2
  8673     09D0  01AF               	clrf	(_dbuf^(0+256)+31)
  8674                           
  8675                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 899:     t = 0;
  8676     09D1  1303               	bcf	3,6	;RP1=0, select bank0
  8677     09D2  01B9               	clrf	i1otoa@t
  8678                           
  8679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  8680     09D3  2A26               	goto	i1l3091
  8681     09D4                     i1l3093:
  8682     09D4  1283               	bcf	3,5	;RP0=0, select bank0
  8683     09D5  1303               	bcf	3,6	;RP1=0, select bank0
  8684     09D6  0831               	movf	i1otoa@d,w
  8685     09D7  0432               	iorwf	i1otoa@d+1,w
  8686     09D8  1D03               	btfss	3,2
  8687     09D9  29F6               	goto	i1l3079
  8688     09DA  0836               	movf	i1otoa@p+1,w
  8689     09DB  3A80               	xorlw	128
  8690     09DC  00FF               	movwf	127
  8691     09DD  3080               	movlw	128
  8692     09DE  027F               	subwf	127,w
  8693     09DF  1D03               	skipz
  8694     09E0  29E3               	goto	u422_25
  8695     09E1  3001               	movlw	1
  8696     09E2  0235               	subwf	i1otoa@p,w
  8697     09E3                     u422_25:
  8698     09E3  1803               	skipnc
  8699     09E4  29F6               	goto	i1l3079
  8700     09E5  1283               	bcf	3,5	;RP0=0, select bank0
  8701     09E6  1303               	bcf	3,6	;RP1=0, select bank0
  8702     09E7  0838               	movf	i1otoa@w+1,w
  8703     09E8  3A80               	xorlw	128
  8704     09E9  00FF               	movwf	127
  8705     09EA  3080               	movlw	128
  8706     09EB  027F               	subwf	127,w
  8707     09EC  1D03               	skipz
  8708     09ED  29F0               	goto	u423_25
  8709     09EE  3001               	movlw	1
  8710     09EF  0237               	subwf	i1otoa@w,w
  8711     09F0                     u423_25:
  8712     09F0  1C03               	skipc
  8713     09F1  2A31               	goto	i1l3101
  8714     09F2  1683               	bsf	3,5	;RP0=1, select bank1
  8715     09F3  1303               	bcf	3,6	;RP1=0, select bank1
  8716     09F4  1CDD               	btfss	_flags^(0+128),1
  8717     09F5  2A31               	goto	i1l3101
  8718     09F6                     i1l3079:
  8719                           
  8720                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 911:         --i;
  8721     09F6  30FF               	movlw	255
  8722     09F7  1283               	bcf	3,5	;RP0=0, select bank0
  8723     09F8  1303               	bcf	3,6	;RP1=0, select bank0
  8724     09F9  07BA               	addwf	i1otoa@i,f
  8725     09FA  1803               	skipnc
  8726     09FB  0ABB               	incf	i1otoa@i+1,f
  8727     09FC  30FF               	movlw	255
  8728     09FD  07BB               	addwf	i1otoa@i+1,f
  8729                           
  8730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
  8731     09FE  0831               	movf	i1otoa@d,w
  8732     09FF  00B9               	movwf	i1otoa@t
  8733     0A00  3007               	movlw	7
  8734     0A01  05B9               	andwf	i1otoa@t,f
  8735                           
  8736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
  8737     0A02  083A               	movf	i1otoa@i,w
  8738     0A03  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8739     0A04  0084               	movwf	4
  8740     0A05  0839               	movf	i1otoa@t,w
  8741     0A06  3E30               	addlw	48
  8742     0A07  1783               	bsf	3,7	;select IRP bank2
  8743     0A08  0080               	movwf	0
  8744                           
  8745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 919:         --p;
  8746     0A09  30FF               	movlw	255
  8747     0A0A  07B5               	addwf	i1otoa@p,f
  8748     0A0B  1803               	skipnc
  8749     0A0C  0AB6               	incf	i1otoa@p+1,f
  8750     0A0D  30FF               	movlw	255
  8751     0A0E  07B6               	addwf	i1otoa@p+1,f
  8752                           
  8753                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 923:         --w;
  8754     0A0F  30FF               	movlw	255
  8755     0A10  07B7               	addwf	i1otoa@w,f
  8756     0A11  1803               	skipnc
  8757     0A12  0AB8               	incf	i1otoa@w+1,f
  8758     0A13  30FF               	movlw	255
  8759     0A14  07B8               	addwf	i1otoa@w+1,f
  8760                           
  8761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
  8762     0A15  0832               	movf	i1otoa@d+1,w
  8763     0A16  00B4               	movwf	??i1_otoa+1
  8764     0A17  0831               	movf	i1otoa@d,w
  8765     0A18  00B3               	movwf	??i1_otoa
  8766     0A19  1003               	clrc
  8767     0A1A  0CB4               	rrf	??i1_otoa+1,f
  8768     0A1B  0CB3               	rrf	??i1_otoa,f
  8769     0A1C  1003               	clrc
  8770     0A1D  0CB4               	rrf	??i1_otoa+1,f
  8771     0A1E  0CB3               	rrf	??i1_otoa,f
  8772     0A1F  1003               	clrc
  8773     0A20  0CB4               	rrf	??i1_otoa+1,f
  8774     0A21  0CB3               	rrf	??i1_otoa,f
  8775     0A22  0833               	movf	??i1_otoa,w
  8776     0A23  00B1               	movwf	i1otoa@d
  8777     0A24  0834               	movf	??i1_otoa+1,w
  8778     0A25  00B2               	movwf	i1otoa@d+1
  8779     0A26                     i1l3091:
  8780                           
  8781                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  8782     0A26  083B               	movf	i1otoa@i+1,w
  8783     0A27  3A80               	xorlw	128
  8784     0A28  00FF               	movwf	127
  8785     0A29  3080               	movlw	128
  8786     0A2A  027F               	subwf	127,w
  8787     0A2B  1D03               	skipz
  8788     0A2C  2A2F               	goto	u420_25
  8789     0A2D  3001               	movlw	1
  8790     0A2E  023A               	subwf	i1otoa@i,w
  8791     0A2F                     u420_25:
  8792     0A2F  1803               	btfsc	3,0
  8793     0A30  29D4               	goto	i1l3093
  8794     0A31                     i1l3101:
  8795                           
  8796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  8797     0A31  1283               	bcf	3,5	;RP0=0, select bank0
  8798     0A32  1303               	bcf	3,6	;RP1=0, select bank0
  8799     0A33  0839               	movf	i1otoa@t,w
  8800     0A34  1D03               	btfss	3,2
  8801     0A35  2A3B               	goto	i1l712
  8802     0A36  1683               	bsf	3,5	;RP0=1, select bank1
  8803     0A37  0859               	movf	_prec^(0+128),w
  8804     0A38  045A               	iorwf	(_prec+1)^(0+128),w
  8805     0A39  1D03               	btfss	3,2
  8806     0A3A  2A51               	goto	i1l3111
  8807     0A3B                     i1l712:
  8808     0A3B  1683               	bsf	3,5	;RP0=1, select bank1
  8809     0A3C  1E5D               	btfss	_flags^(0+128),4
  8810     0A3D  2A51               	goto	i1l3111
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 930:         --i;
  8813     0A3E  30FF               	movlw	255
  8814     0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  8815     0A40  07BA               	addwf	i1otoa@i,f
  8816     0A41  1803               	skipnc
  8817     0A42  0ABB               	incf	i1otoa@i+1,f
  8818     0A43  30FF               	movlw	255
  8819     0A44  07BB               	addwf	i1otoa@i+1,f
  8820                           
  8821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
  8822     0A45  083A               	movf	i1otoa@i,w
  8823     0A46  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8824     0A47  0084               	movwf	4
  8825     0A48  3030               	movlw	48
  8826     0A49  1783               	bsf	3,7	;select IRP bank2
  8827     0A4A  0080               	movwf	0
  8828                           
  8829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 932:         --w;
  8830     0A4B  30FF               	movlw	255
  8831     0A4C  07B7               	addwf	i1otoa@w,f
  8832     0A4D  1803               	skipnc
  8833     0A4E  0AB8               	incf	i1otoa@w+1,f
  8834     0A4F  30FF               	movlw	255
  8835     0A50  07B8               	addwf	i1otoa@w+1,f
  8836     0A51                     i1l3111:
  8837                           
  8838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
  8839     0A51  1283               	bcf	3,5	;RP0=0, select bank0
  8840     0A52  082F               	movf	i1otoa@fp,w
  8841     0A53  00A8               	movwf	i1pad@fp
  8842     0A54  0830               	movf	i1otoa@fp+1,w
  8843     0A55  00A9               	movwf	i1pad@fp+1
  8844     0A56  083A               	movf	i1otoa@i,w
  8845     0A57  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8846     0A58  00AA               	movwf	i1pad@buf
  8847     0A59  0838               	movf	i1otoa@w+1,w
  8848     0A5A  00AC               	movwf	i1pad@p+1
  8849     0A5B  0837               	movf	i1otoa@w,w
  8850     0A5C  00AB               	movwf	i1pad@p
  8851     0A5D  160A  118A  24D9   	fcall	i1_pad
  8852     0A60  0829               	movf	?i1_pad+1,w
  8853     0A61  00B0               	movwf	?i1_otoa+1
  8854     0A62  0828               	movf	?i1_pad,w
  8855     0A63  00AF               	movwf	?i1_otoa
  8856     0A64  0008               	return
  8857     0A65                     __end_ofi1_otoa:
  8858                           
  8859                           	psect	text33
  8860     0C01                     __ptext33:	
  8861 ;; *************** function i1_dtoa *****************
  8862 ;; Defined at:
  8863 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  8866 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  8867 ;;  d               2   17[BANK0 ] int 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  i               2   26[BANK0 ] int 
  8870 ;;  w               2   23[BANK0 ] int 
  8871 ;;  p               2   21[BANK0 ] int 
  8872 ;;  s               1   25[BANK0 ] unsigned char 
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  2   15[BANK0 ] int 
  8875 ;; Registers used:
  8876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : B00/0
  8879 ;;		On exit  : B00/800
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8882 ;;      Params:         0       4       0       0       0
  8883 ;;      Locals:         0       9       0       0       0
  8884 ;;      Temps:          0       0       0       0       0
  8885 ;;      Totals:         0      13       0       0       0
  8886 ;;Total ram usage:       13 bytes
  8887 ;; Hardware stack levels used: 1
  8888 ;; Hardware stack levels required when called: 4
  8889 ;; This function calls:
  8890 ;;		i1___awdiv
  8891 ;;		i1___awmod
  8892 ;;		i1_abs
  8893 ;;		i1_pad
  8894 ;; This function is called by:
  8895 ;;		i1_vfpfcnvrt
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899     0C01                     i1_dtoa:	
  8900                           ;psect for function i1_dtoa
  8901                           
  8902                           
  8903                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
  8904                           
  8905                           ;incstack = 0
  8906 ;; hardware stack exceeded
  8907                           ; Regs used in i1_dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8908     0C01  1FB2               	btfss	i1dtoa@d+1,7
  8909     0C02  2C05               	goto	u404_20
  8910     0C03  3001               	movlw	1
  8911     0C04  2C06               	goto	u405_20
  8912     0C05                     u404_20:
  8913     0C05  3000               	movlw	0
  8914     0C06                     u405_20:
  8915     0C06  00B9               	movwf	i1dtoa@s
  8916                           
  8917                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  8918     0C07  1683               	bsf	3,5	;RP0=1, select bank1
  8919     0C08  1BDA               	btfsc	(_prec+1)^(0+128),7
  8920     0C09  2C0C               	goto	i1l3011
  8921                           
  8922                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  8923     0C0A  30FD               	movlw	253
  8924     0C0B  05DD               	andwf	_flags^(0+128),f
  8925     0C0C                     i1l3011:
  8926                           
  8927                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  8928     0C0C  1FDA               	btfss	(_prec+1)^(0+128),7
  8929     0C0D  2C14               	goto	i1l3015
  8930     0C0E  3001               	movlw	1
  8931     0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  8932     0C10  00B5               	movwf	i1dtoa@p
  8933     0C11  3000               	movlw	0
  8934     0C12  00B6               	movwf	i1dtoa@p+1
  8935     0C13  2C1B               	goto	i1l677
  8936     0C14                     i1l3015:
  8937     0C14  085A               	movf	(_prec+1)^(0+128),w
  8938     0C15  1283               	bcf	3,5	;RP0=0, select bank0
  8939     0C16  00B6               	movwf	i1dtoa@p+1
  8940     0C17  1683               	bsf	3,5	;RP0=1, select bank1
  8941     0C18  0859               	movf	_prec^(0+128),w
  8942     0C19  1283               	bcf	3,5	;RP0=0, select bank0
  8943     0C1A  00B5               	movwf	i1dtoa@p
  8944     0C1B                     i1l677:
  8945                           
  8946                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  8947     0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  8948     0C1C  0858               	movf	(_width+1)^(0+128),w
  8949     0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  8950     0C1E  00B8               	movwf	i1dtoa@w+1
  8951     0C1F  1683               	bsf	3,5	;RP0=1, select bank1
  8952     0C20  0857               	movf	_width^(0+128),w
  8953     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  8954     0C22  00B7               	movwf	i1dtoa@w
  8955                           
  8956                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  8957     0C23  0839               	movf	i1dtoa@s,w
  8958     0C24  1D03               	btfss	3,2
  8959     0C25  2C29               	goto	i1l3021
  8960     0C26  1683               	bsf	3,5	;RP0=1, select bank1
  8961     0C27  1D5D               	btfss	_flags^(0+128),2
  8962     0C28  2C3B               	goto	i1l678
  8963     0C29                     i1l3021:
  8964                           
  8965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  8966     0C29  30FF               	movlw	255
  8967     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  8968     0C2B  07B7               	addwf	i1dtoa@w,f
  8969     0C2C  1803               	skipnc
  8970     0C2D  0AB8               	incf	i1dtoa@w+1,f
  8971     0C2E  30FF               	movlw	255
  8972     0C2F  07B8               	addwf	i1dtoa@w+1,f
  8973                           
  8974                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  8975     0C30  0839               	movf	i1dtoa@s,w
  8976     0C31  1D03               	btfss	3,2
  8977     0C32  2C35               	goto	i1l3027
  8978     0C33  302B               	movlw	43
  8979     0C34  2C36               	goto	L19
  8980     0C35                     i1l3027:
  8981     0C35  302D               	movlw	45
  8982     0C36                     L19:
  8983     0C36  00B3               	movwf	i1_dtoa$616
  8984     0C37  3000               	movlw	0
  8985     0C38  00B4               	movwf	i1_dtoa$616+1
  8986     0C39  0833               	movf	i1_dtoa$616,w
  8987     0C3A  2C45               	goto	L20
  8988     0C3B                     i1l678:	
  8989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 545:  else if (fl
      +                          ags & (1 << 3)) {
  8990                           
  8991                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  8992                           
  8993     0C3B  1DDD               	btfss	_flags^(0+128),3
  8994     0C3C  2C46               	goto	i1l685
  8995                           
  8996                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 546:         --w;
  8997     0C3D  30FF               	movlw	255
  8998     0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  8999     0C3F  07B7               	addwf	i1dtoa@w,f
  9000     0C40  1803               	skipnc
  9001     0C41  0AB8               	incf	i1dtoa@w+1,f
  9002     0C42  30FF               	movlw	255
  9003     0C43  07B8               	addwf	i1dtoa@w+1,f
  9004                           
  9005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
  9006     0C44  3020               	movlw	32
  9007     0C45                     L20:
  9008     0C45  00B9               	movwf	i1dtoa@s
  9009     0C46                     i1l685:
  9010                           
  9011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  9012     0C46  301F               	movlw	31
  9013     0C47  1283               	bcf	3,5	;RP0=0, select bank0
  9014     0C48  00BA               	movwf	i1dtoa@i
  9015     0C49  3000               	movlw	0
  9016     0C4A  00BB               	movwf	i1dtoa@i+1
  9017                           
  9018                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  9019     0C4B  1703               	bsf	3,6	;RP1=1, select bank2
  9020     0C4C  01AF               	clrf	(_dbuf^(0+256)+31)
  9021                           
  9022                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9023     0C4D  2CB2               	goto	i1l3045
  9024     0C4E                     i1l3047:
  9025     0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  9026     0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  9027     0C50  0831               	movf	i1dtoa@d,w
  9028     0C51  0432               	iorwf	i1dtoa@d+1,w
  9029     0C52  1D03               	btfss	3,2
  9030     0C53  2C70               	goto	i1l3035
  9031     0C54  0836               	movf	i1dtoa@p+1,w
  9032     0C55  3A80               	xorlw	128
  9033     0C56  00FF               	movwf	127
  9034     0C57  3080               	movlw	128
  9035     0C58  027F               	subwf	127,w
  9036     0C59  1D03               	skipz
  9037     0C5A  2C5D               	goto	u414_25
  9038     0C5B  3001               	movlw	1
  9039     0C5C  0235               	subwf	i1dtoa@p,w
  9040     0C5D                     u414_25:
  9041     0C5D  1803               	skipnc
  9042     0C5E  2C70               	goto	i1l3035
  9043     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  9044     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  9045     0C61  0838               	movf	i1dtoa@w+1,w
  9046     0C62  3A80               	xorlw	128
  9047     0C63  00FF               	movwf	127
  9048     0C64  3080               	movlw	128
  9049     0C65  027F               	subwf	127,w
  9050     0C66  1D03               	skipz
  9051     0C67  2C6A               	goto	u415_25
  9052     0C68  3001               	movlw	1
  9053     0C69  0237               	subwf	i1dtoa@w,w
  9054     0C6A                     u415_25:
  9055     0C6A  1C03               	skipc
  9056     0C6B  2CBE               	goto	i1l3055
  9057     0C6C  1683               	bsf	3,5	;RP0=1, select bank1
  9058     0C6D  1303               	bcf	3,6	;RP1=0, select bank1
  9059     0C6E  1CDD               	btfss	_flags^(0+128),1
  9060     0C6F  2CBE               	goto	i1l3055
  9061     0C70                     i1l3035:
  9062                           
  9063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  9064     0C70  30FF               	movlw	255
  9065     0C71  1283               	bcf	3,5	;RP0=0, select bank0
  9066     0C72  1303               	bcf	3,6	;RP1=0, select bank0
  9067     0C73  07BA               	addwf	i1dtoa@i,f
  9068     0C74  1803               	skipnc
  9069     0C75  0ABB               	incf	i1dtoa@i+1,f
  9070     0C76  30FF               	movlw	255
  9071     0C77  07BB               	addwf	i1dtoa@i+1,f
  9072                           
  9073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  9074     0C78  083A               	movf	i1dtoa@i,w
  9075     0C79  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9076     0C7A  0084               	movwf	4
  9077     0C7B  300A               	movlw	10
  9078     0C7C  00F0               	movwf	i1___awmod@divisor
  9079     0C7D  3000               	movlw	0
  9080     0C7E  00F1               	movwf	i1___awmod@divisor+1
  9081     0C7F  0832               	movf	i1dtoa@d+1,w
  9082     0C80  00F3               	movwf	i1___awmod@dividend+1
  9083     0C81  0831               	movf	i1dtoa@d,w
  9084     0C82  00F2               	movwf	i1___awmod@dividend
  9085     0C83  160A  118A  2349  120A  158A  	fcall	i1___awmod
  9086     0C88  0871               	movf	?i1___awmod+1,w
  9087     0C89  00F7               	movwf	i1abs@a+1
  9088     0C8A  0870               	movf	?i1___awmod,w
  9089     0C8B  00F6               	movwf	i1abs@a
  9090     0C8C  160A  118A  2097  120A  158A  	fcall	i1_abs
  9091     0C91  0876               	movf	?i1_abs,w
  9092     0C92  3E30               	addlw	48
  9093     0C93  1783               	bsf	3,7	;select IRP bank2
  9094     0C94  0080               	movwf	0
  9095                           
  9096                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
  9097     0C95  30FF               	movlw	255
  9098     0C96  07B5               	addwf	i1dtoa@p,f
  9099     0C97  1803               	skipnc
  9100     0C98  0AB6               	incf	i1dtoa@p+1,f
  9101     0C99  30FF               	movlw	255
  9102     0C9A  07B6               	addwf	i1dtoa@p+1,f
  9103                           
  9104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  9105     0C9B  30FF               	movlw	255
  9106     0C9C  07B7               	addwf	i1dtoa@w,f
  9107     0C9D  1803               	skipnc
  9108     0C9E  0AB8               	incf	i1dtoa@w+1,f
  9109     0C9F  30FF               	movlw	255
  9110     0CA0  07B8               	addwf	i1dtoa@w+1,f
  9111                           
  9112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  9113     0CA1  300A               	movlw	10
  9114     0CA2  00F0               	movwf	i1___awdiv@divisor
  9115     0CA3  3000               	movlw	0
  9116     0CA4  00F1               	movwf	i1___awdiv@divisor+1
  9117     0CA5  0832               	movf	i1dtoa@d+1,w
  9118     0CA6  00F3               	movwf	i1___awdiv@dividend+1
  9119     0CA7  0831               	movf	i1dtoa@d,w
  9120     0CA8  00F2               	movwf	i1___awdiv@dividend
  9121     0CA9  160A  118A  242F  120A  158A  	fcall	i1___awdiv
  9122     0CAE  0871               	movf	?i1___awdiv+1,w
  9123     0CAF  00B2               	movwf	i1dtoa@d+1
  9124     0CB0  0870               	movf	?i1___awdiv,w
  9125     0CB1  00B1               	movwf	i1dtoa@d
  9126     0CB2                     i1l3045:
  9127                           
  9128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9129     0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  9130     0CB3  083B               	movf	i1dtoa@i+1,w
  9131     0CB4  3A80               	xorlw	128
  9132     0CB5  00FF               	movwf	127
  9133     0CB6  3080               	movlw	128
  9134     0CB7  027F               	subwf	127,w
  9135     0CB8  1D03               	skipz
  9136     0CB9  2CBC               	goto	u412_25
  9137     0CBA  3001               	movlw	1
  9138     0CBB  023A               	subwf	i1dtoa@i,w
  9139     0CBC                     u412_25:
  9140     0CBC  1803               	btfsc	3,0
  9141     0CBD  2C4E               	goto	i1l3047
  9142     0CBE                     i1l3055:
  9143                           
  9144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  9145     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  9146     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  9147     0CC0  0839               	movf	i1dtoa@s,w
  9148     0CC1  1903               	btfsc	3,2
  9149     0CC2  2CCF               	goto	i1l3061
  9150                           
  9151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  9152     0CC3  30FF               	movlw	255
  9153     0CC4  07BA               	addwf	i1dtoa@i,f
  9154     0CC5  1803               	skipnc
  9155     0CC6  0ABB               	incf	i1dtoa@i+1,f
  9156     0CC7  30FF               	movlw	255
  9157     0CC8  07BB               	addwf	i1dtoa@i+1,f
  9158                           
  9159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  9160     0CC9  083A               	movf	i1dtoa@i,w
  9161     0CCA  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9162     0CCB  0084               	movwf	4
  9163     0CCC  0839               	movf	i1dtoa@s,w
  9164     0CCD  1783               	bsf	3,7	;select IRP bank2
  9165     0CCE  0080               	movwf	0
  9166     0CCF                     i1l3061:
  9167                           
  9168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  9169     0CCF  082F               	movf	i1dtoa@fp,w
  9170     0CD0  00A8               	movwf	i1pad@fp
  9171     0CD1  0830               	movf	i1dtoa@fp+1,w
  9172     0CD2  00A9               	movwf	i1pad@fp+1
  9173     0CD3  083A               	movf	i1dtoa@i,w
  9174     0CD4  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9175     0CD5  00AA               	movwf	i1pad@buf
  9176     0CD6  0838               	movf	i1dtoa@w+1,w
  9177     0CD7  00AC               	movwf	i1pad@p+1
  9178     0CD8  0837               	movf	i1dtoa@w,w
  9179     0CD9  00AB               	movwf	i1pad@p
  9180     0CDA  160A  118A  24D9   	fcall	i1_pad
  9181     0CDD  0829               	movf	?i1_pad+1,w
  9182     0CDE  00B0               	movwf	?i1_dtoa+1
  9183     0CDF  0828               	movf	?i1_pad,w
  9184     0CE0  00AF               	movwf	?i1_dtoa
  9185     0CE1  0008               	return
  9186     0CE2                     __end_ofi1_dtoa:
  9187                           
  9188                           	psect	text34
  9189     14D9                     __ptext34:	
  9190 ;; *************** function i1_pad *****************
  9191 ;; Defined at:
  9192 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  9195 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9196 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  9197 ;;		 -> dbuf(32), 
  9198 ;;  p               2   11[BANK0 ] int 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  i               2   13[BANK0 ] int 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  2    8[BANK0 ] int 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 300/0
  9207 ;;		On exit  : B00/800
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9210 ;;      Params:         0       5       0       0       0
  9211 ;;      Locals:         0       2       0       0       0
  9212 ;;      Temps:          1       0       0       0       0
  9213 ;;      Totals:         1       7       0       0       0
  9214 ;;Total ram usage:        8 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 3
  9217 ;; This function calls:
  9218 ;;		i1_fputc
  9219 ;;		i1_fputs
  9220 ;;		i1_strlen
  9221 ;; This function is called by:
  9222 ;;		i1_dtoa
  9223 ;;		i1_otoa
  9224 ;;		i1_utoa
  9225 ;;		i1_xtoa
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229     14D9                     i1_pad:	
  9230                           ;psect for function i1_pad
  9231                           
  9232                           
  9233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  9234                           
  9235                           ;incstack = 0
  9236 ;; hardware stack exceeded
  9237                           ; Regs used in i1_pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9238     14D9  1683               	bsf	3,5	;RP0=1, select bank1
  9239     14DA  1C5D               	btfss	_flags^(0+128),0
  9240     14DB  2CE8               	goto	i1l2693
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9243     14DC  1283               	bcf	3,5	;RP0=0, select bank0
  9244     14DD  082A               	movf	i1pad@buf,w
  9245     14DE  00A0               	movwf	i1fputs@s
  9246     14DF  0828               	movf	i1pad@fp,w
  9247     14E0  00A1               	movwf	i1fputs@fp
  9248     14E1  0829               	movf	i1pad@fp+1,w
  9249     14E2  00A2               	movwf	i1fputs@fp+1
  9250     14E3  160A  118A  213B  160A  118A  	fcall	i1_fputs
  9251     14E8                     i1l2693:
  9252                           
  9253                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9254     14E8  1283               	bcf	3,5	;RP0=0, select bank0
  9255     14E9  1FAC               	btfss	i1pad@p+1,7
  9256     14EA  2CED               	goto	i1l649
  9257                           
  9258                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9259     14EB  01AB               	clrf	i1pad@p
  9260     14EC  01AC               	clrf	i1pad@p+1
  9261     14ED                     i1l649:	
  9262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  9263                           
  9264                           
  9265                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9266     14ED  01AD               	clrf	i1pad@i
  9267     14EE  01AE               	clrf	i1pad@i+1
  9268     14EF                     i1l2701:	
  9269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9270                           
  9271                           
  9272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9273     14EF  082E               	movf	i1pad@i+1,w
  9274     14F0  3A80               	xorlw	128
  9275     14F1  00FD               	movwf	??i1_pad
  9276     14F2  082C               	movf	i1pad@p+1,w
  9277     14F3  3A80               	xorlw	128
  9278     14F4  027D               	subwf	??i1_pad,w
  9279     14F5  1D03               	skipz
  9280     14F6  2CF9               	goto	u342_25
  9281     14F7  082B               	movf	i1pad@p,w
  9282     14F8  022D               	subwf	i1pad@i,w
  9283     14F9                     u342_25:
  9284     14F9  1803               	btfsc	3,0
  9285     14FA  2D13               	goto	i1l652
  9286                           
  9287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9288     14FB  3020               	movlw	32
  9289     14FC  00F0               	movwf	i1fputc@c
  9290     14FD  3000               	movlw	0
  9291     14FE  00F1               	movwf	i1fputc@c+1
  9292     14FF  1283               	bcf	3,5	;RP0=0, select bank0
  9293     1500  1303               	bcf	3,6	;RP1=0, select bank0
  9294     1501  0828               	movf	i1pad@fp,w
  9295     1502  00F2               	movwf	i1fputc@fp
  9296     1503  0829               	movf	i1pad@fp+1,w
  9297     1504  00F3               	movwf	i1fputc@fp+1
  9298     1505  160A  118A  26DE  160A  118A  	fcall	i1_fputc
  9299                           
  9300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9301     150A  3001               	movlw	1
  9302     150B  1283               	bcf	3,5	;RP0=0, select bank0
  9303     150C  1303               	bcf	3,6	;RP1=0, select bank0
  9304     150D  07AD               	addwf	i1pad@i,f
  9305     150E  1803               	skipnc
  9306     150F  0AAE               	incf	i1pad@i+1,f
  9307     1510  3000               	movlw	0
  9308     1511  07AE               	addwf	i1pad@i+1,f
  9309     1512  2CEF               	goto	i1l2701
  9310     1513                     i1l652:
  9311                           
  9312                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9313     1513  1683               	bsf	3,5	;RP0=1, select bank1
  9314     1514  1303               	bcf	3,6	;RP1=0, select bank1
  9315     1515  185D               	btfsc	_flags^(0+128),0
  9316     1516  2D23               	goto	i1l653
  9317                           
  9318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9319     1517  1283               	bcf	3,5	;RP0=0, select bank0
  9320     1518  082A               	movf	i1pad@buf,w
  9321     1519  00A0               	movwf	i1fputs@s
  9322     151A  0828               	movf	i1pad@fp,w
  9323     151B  00A1               	movwf	i1fputs@fp
  9324     151C  0829               	movf	i1pad@fp+1,w
  9325     151D  00A2               	movwf	i1fputs@fp+1
  9326     151E  160A  118A  213B  160A  118A  	fcall	i1_fputs
  9327     1523                     i1l653:	
  9328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 220:     }
  9329                           
  9330                           
  9331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  9332     1523  1283               	bcf	3,5	;RP0=0, select bank0
  9333     1524  082A               	movf	i1pad@buf,w
  9334     1525  00F0               	movwf	i1strlen@s
  9335     1526  160A  118A  20B3   	fcall	i1_strlen
  9336     1529  082B               	movf	i1pad@p,w
  9337     152A  0770               	addwf	?i1_strlen,w
  9338     152B  00A8               	movwf	?i1_pad
  9339     152C  082C               	movf	i1pad@p+1,w
  9340     152D  1803               	skipnc
  9341     152E  0A2C               	incf	i1pad@p+1,w
  9342     152F  0771               	addwf	?i1_strlen+1,w
  9343     1530  00A9               	movwf	?i1_pad+1
  9344     1531  0008               	return
  9345     1532                     __end_ofi1_pad:
  9346                           
  9347                           	psect	text35
  9348     10B3                     __ptext35:	
  9349 ;; *************** function i1_strlen *****************
  9350 ;; Defined at:
  9351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  s               1    0[COMMON] PTR const unsigned char 
  9354 ;;		 -> dbuf(32), 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  a               1    2[COMMON] PTR const unsigned char 
  9357 ;;		 -> dbuf(32), 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  2    0[COMMON] unsigned int 
  9360 ;; Registers used:
  9361 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 300/0
  9364 ;;		On exit  : B00/800
  9365 ;;		Unchanged: 300/0
  9366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9367 ;;      Params:         2       0       0       0       0
  9368 ;;      Locals:         1       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0
  9370 ;;      Totals:         3       0       0       0       0
  9371 ;;Total ram usage:        3 bytes
  9372 ;; Hardware stack levels used: 1
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		i1_pad
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380     10B3                     i1_strlen:	
  9381                           ;psect for function i1_strlen
  9382                           
  9383                           
  9384                           ;incstack = 0
  9385 ;; hardware stack exceeded
  9386                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  9387     10B3  0870               	movf	i1strlen@s,w
  9388     10B4  00F2               	movwf	i1strlen@a
  9389     10B5                     i1l2369:
  9390     10B5  0870               	movf	i1strlen@s,w
  9391     10B6  0084               	movwf	4
  9392     10B7  1783               	bsf	3,7	;select IRP bank2
  9393     10B8  0800               	movf	0,w
  9394     10B9  1903               	btfsc	3,2
  9395     10BA  28BE               	goto	i1l2371
  9396     10BB  3001               	movlw	1
  9397     10BC  07F0               	addwf	i1strlen@s,f
  9398     10BD  28B5               	goto	i1l2369
  9399     10BE                     i1l2371:
  9400     10BE  0872               	movf	i1strlen@a,w
  9401     10BF  0270               	subwf	i1strlen@s,w
  9402     10C0  00F0               	movwf	?i1_strlen
  9403     10C1  01F1               	clrf	?i1_strlen+1
  9404     10C2  1BF0               	btfsc	?i1_strlen,7
  9405     10C3  03F1               	decf	?i1_strlen+1,f
  9406     10C4  0008               	return
  9407     10C5                     __end_ofi1_strlen:
  9408                           
  9409                           	psect	text36
  9410     113B                     __ptext36:	
  9411 ;; *************** function i1_fputs *****************
  9412 ;; Defined at:
  9413 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  9416 ;;		 -> dbuf(32), 
  9417 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  9418 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  i               2    6[BANK0 ] int 
  9421 ;;  c               1    5[BANK0 ] unsigned char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  2    0[BANK0 ] int 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 300/0
  9428 ;;		On exit  : B00/800
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         0       3       0       0       0
  9432 ;;      Locals:         0       3       0       0       0
  9433 ;;      Temps:          0       2       0       0       0
  9434 ;;      Totals:         0       8       0       0       0
  9435 ;;Total ram usage:        8 bytes
  9436 ;; Hardware stack levels used: 1
  9437 ;; Hardware stack levels required when called: 2
  9438 ;; This function calls:
  9439 ;;		i1_fputc
  9440 ;; This function is called by:
  9441 ;;		i1_pad
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445     113B                     i1_fputs:	
  9446                           ;psect for function i1_fputs
  9447                           
  9448                           
  9449                           ;incstack = 0
  9450 ;; hardware stack exceeded
  9451                           ; Regs used in i1_fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9452     113B  01A6               	clrf	i1fputs@i
  9453     113C  01A7               	clrf	i1fputs@i+1
  9454     113D                     i1l2363:
  9455     113D  0826               	movf	i1fputs@i,w
  9456     113E  0720               	addwf	i1fputs@s,w
  9457     113F  00A3               	movwf	??i1_fputs
  9458     1140  0823               	movf	??i1_fputs,w
  9459     1141  0084               	movwf	4
  9460     1142  1783               	bsf	3,7	;select IRP bank2
  9461     1143  0800               	movf	0,w
  9462     1144  00A5               	movwf	i1fputs@c
  9463     1145  0825               	movf	i1fputs@c,w
  9464     1146  1903               	btfsc	3,2
  9465     1147  0008               	return
  9466     1148  0825               	movf	i1fputs@c,w
  9467     1149  00A3               	movwf	??i1_fputs
  9468     114A  01A4               	clrf	??i1_fputs+1
  9469     114B  0823               	movf	??i1_fputs,w
  9470     114C  00F0               	movwf	i1fputc@c
  9471     114D  0824               	movf	??i1_fputs+1,w
  9472     114E  00F1               	movwf	i1fputc@c+1
  9473     114F  0821               	movf	i1fputs@fp,w
  9474     1150  00F2               	movwf	i1fputc@fp
  9475     1151  0822               	movf	i1fputs@fp+1,w
  9476     1152  00F3               	movwf	i1fputc@fp+1
  9477     1153  160A  118A  26DE  160A  118A  	fcall	i1_fputc
  9478     1158  3001               	movlw	1
  9479     1159  1283               	bcf	3,5	;RP0=0, select bank0
  9480     115A  1303               	bcf	3,6	;RP1=0, select bank0
  9481     115B  07A6               	addwf	i1fputs@i,f
  9482     115C  1803               	skipnc
  9483     115D  0AA7               	incf	i1fputs@i+1,f
  9484     115E  3000               	movlw	0
  9485     115F  07A7               	addwf	i1fputs@i+1,f
  9486     1160  293D               	goto	i1l2363
  9487     1161                     __end_ofi1_fputs:
  9488                           
  9489                           	psect	text37
  9490     1097                     __ptext37:	
  9491 ;; *************** function i1_abs *****************
  9492 ;; Defined at:
  9493 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  a               2    6[COMMON] int 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  2    6[COMMON] int 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 300/0
  9504 ;;		On exit  : 300/0
  9505 ;;		Unchanged: 300/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9507 ;;      Params:         2       0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0
  9509 ;;      Temps:          2       0       0       0       0
  9510 ;;      Totals:         4       0       0       0       0
  9511 ;;Total ram usage:        4 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		i1_dtoa
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520     1097                     i1_abs:	
  9521                           ;psect for function i1_abs
  9522                           
  9523                           
  9524                           ;incstack = 0
  9525 ;; hardware stack exceeded
  9526                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  9527     1097  1FF7               	btfss	i1abs@a+1,7
  9528     1098  0008               	return
  9529     1099  0976               	comf	i1abs@a,w
  9530     109A  00F8               	movwf	??i1_abs
  9531     109B  0977               	comf	i1abs@a+1,w
  9532     109C  00F9               	movwf	??i1_abs+1
  9533     109D  0AF8               	incf	??i1_abs,f
  9534     109E  1903               	skipnz
  9535     109F  0AF9               	incf	??i1_abs+1,f
  9536     10A0  0878               	movf	??i1_abs,w
  9537     10A1  00F6               	movwf	?i1_abs
  9538     10A2  0879               	movf	??i1_abs+1,w
  9539     10A3  00F7               	movwf	?i1_abs+1
  9540     10A4  0008               	return
  9541     10A5                     __end_ofi1_abs:
  9542                           
  9543                           	psect	text38
  9544     1349                     __ptext38:	
  9545 ;; *************** function i1___awmod *****************
  9546 ;; Defined at:
  9547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  divisor         2    0[COMMON] int 
  9550 ;;  dividend        2    2[COMMON] int 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  sign            1    5[COMMON] unsigned char 
  9553 ;;  counter         1    4[COMMON] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  2    0[COMMON] int 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 300/0
  9560 ;;		On exit  : 300/0
  9561 ;;		Unchanged: 300/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9563 ;;      Params:         4       0       0       0       0
  9564 ;;      Locals:         2       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0
  9566 ;;      Totals:         6       0       0       0       0
  9567 ;;Total ram usage:        6 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		i1_dtoa
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576     1349                     i1___awmod:	
  9577                           ;psect for function i1___awmod
  9578                           
  9579                           
  9580                           ;incstack = 0
  9581 ;; hardware stack exceeded
  9582                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  9583     1349  01F5               	clrf	i1___awmod@sign
  9584     134A  1FF3               	btfss	i1___awmod@dividend+1,7
  9585     134B  2B53               	goto	i1l2611
  9586     134C  09F2               	comf	i1___awmod@dividend,f
  9587     134D  09F3               	comf	i1___awmod@dividend+1,f
  9588     134E  0AF2               	incf	i1___awmod@dividend,f
  9589     134F  1903               	skipnz
  9590     1350  0AF3               	incf	i1___awmod@dividend+1,f
  9591     1351  3001               	movlw	1
  9592     1352  00F5               	movwf	i1___awmod@sign
  9593     1353                     i1l2611:
  9594     1353  1FF1               	btfss	i1___awmod@divisor+1,7
  9595     1354  2B5A               	goto	i1l2615
  9596     1355  09F0               	comf	i1___awmod@divisor,f
  9597     1356  09F1               	comf	i1___awmod@divisor+1,f
  9598     1357  0AF0               	incf	i1___awmod@divisor,f
  9599     1358  1903               	skipnz
  9600     1359  0AF1               	incf	i1___awmod@divisor+1,f
  9601     135A                     i1l2615:
  9602     135A  0870               	movf	i1___awmod@divisor,w
  9603     135B  0471               	iorwf	i1___awmod@divisor+1,w
  9604     135C  1903               	btfsc	3,2
  9605     135D  2B85               	goto	i1l2633
  9606     135E  3001               	movlw	1
  9607     135F  00F4               	movwf	i1___awmod@counter
  9608     1360                     i1l2623:
  9609     1360  1BF1               	btfsc	i1___awmod@divisor+1,7
  9610     1361  2B6C               	goto	i1l2625
  9611     1362  3001               	movlw	1
  9612     1363                     u321_25:
  9613     1363  1003               	clrc
  9614     1364  0DF0               	rlf	i1___awmod@divisor,f
  9615     1365  0DF1               	rlf	i1___awmod@divisor+1,f
  9616     1366  3EFF               	addlw	-1
  9617     1367  1D03               	skipz
  9618     1368  2B63               	goto	u321_25
  9619     1369  3001               	movlw	1
  9620     136A  07F4               	addwf	i1___awmod@counter,f
  9621     136B  2B60               	goto	i1l2623
  9622     136C                     i1l2625:
  9623     136C  0871               	movf	i1___awmod@divisor+1,w
  9624     136D  0273               	subwf	i1___awmod@dividend+1,w
  9625     136E  1D03               	skipz
  9626     136F  2B72               	goto	u323_25
  9627     1370  0870               	movf	i1___awmod@divisor,w
  9628     1371  0272               	subwf	i1___awmod@dividend,w
  9629     1372                     u323_25:
  9630     1372  1C03               	skipc
  9631     1373  2B7A               	goto	i1l2629
  9632     1374  0870               	movf	i1___awmod@divisor,w
  9633     1375  02F2               	subwf	i1___awmod@dividend,f
  9634     1376  0871               	movf	i1___awmod@divisor+1,w
  9635     1377  1C03               	skipc
  9636     1378  03F3               	decf	i1___awmod@dividend+1,f
  9637     1379  02F3               	subwf	i1___awmod@dividend+1,f
  9638     137A                     i1l2629:
  9639     137A  3001               	movlw	1
  9640     137B                     u324_25:
  9641     137B  1003               	clrc
  9642     137C  0CF1               	rrf	i1___awmod@divisor+1,f
  9643     137D  0CF0               	rrf	i1___awmod@divisor,f
  9644     137E  3EFF               	addlw	-1
  9645     137F  1D03               	skipz
  9646     1380  2B7B               	goto	u324_25
  9647     1381  3001               	movlw	1
  9648     1382  02F4               	subwf	i1___awmod@counter,f
  9649     1383  1D03               	btfss	3,2
  9650     1384  2B6C               	goto	i1l2625
  9651     1385                     i1l2633:
  9652     1385  0875               	movf	i1___awmod@sign,w
  9653     1386  1903               	btfsc	3,2
  9654     1387  2B8D               	goto	i1l2637
  9655     1388  09F2               	comf	i1___awmod@dividend,f
  9656     1389  09F3               	comf	i1___awmod@dividend+1,f
  9657     138A  0AF2               	incf	i1___awmod@dividend,f
  9658     138B  1903               	skipnz
  9659     138C  0AF3               	incf	i1___awmod@dividend+1,f
  9660     138D                     i1l2637:
  9661     138D  0873               	movf	i1___awmod@dividend+1,w
  9662     138E  00F1               	movwf	?i1___awmod+1
  9663     138F  0872               	movf	i1___awmod@dividend,w
  9664     1390  00F0               	movwf	?i1___awmod
  9665     1391  0008               	return
  9666     1392                     __end_ofi1___awmod:
  9667                           
  9668                           	psect	text39
  9669     142F                     __ptext39:	
  9670 ;; *************** function i1___awdiv *****************
  9671 ;; Defined at:
  9672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;  divisor         2    0[COMMON] int 
  9675 ;;  dividend        2    2[COMMON] int 
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  quotient        2    6[COMMON] int 
  9678 ;;  sign            1    5[COMMON] unsigned char 
  9679 ;;  counter         1    4[COMMON] unsigned char 
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  2    0[COMMON] int 
  9682 ;; Registers used:
  9683 ;;		wreg, status,2, status,0
  9684 ;; Tracked objects:
  9685 ;;		On entry : B00/800
  9686 ;;		On exit  : B00/800
  9687 ;;		Unchanged: B00/0
  9688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9689 ;;      Params:         4       0       0       0       0
  9690 ;;      Locals:         4       0       0       0       0
  9691 ;;      Temps:          0       0       0       0       0
  9692 ;;      Totals:         8       0       0       0       0
  9693 ;;Total ram usage:        8 bytes
  9694 ;; Hardware stack levels used: 1
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		i1_dtoa
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702     142F                     i1___awdiv:	
  9703                           ;psect for function i1___awdiv
  9704                           
  9705                           
  9706                           ;incstack = 0
  9707 ;; hardware stack exceeded
  9708                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  9709     142F  01F5               	clrf	i1___awdiv@sign
  9710     1430  1FF1               	btfss	i1___awdiv@divisor+1,7
  9711     1431  2C39               	goto	i1l2567
  9712     1432  09F0               	comf	i1___awdiv@divisor,f
  9713     1433  09F1               	comf	i1___awdiv@divisor+1,f
  9714     1434  0AF0               	incf	i1___awdiv@divisor,f
  9715     1435  1903               	skipnz
  9716     1436  0AF1               	incf	i1___awdiv@divisor+1,f
  9717     1437  3001               	movlw	1
  9718     1438  00F5               	movwf	i1___awdiv@sign
  9719     1439                     i1l2567:
  9720     1439  1FF3               	btfss	i1___awdiv@dividend+1,7
  9721     143A  2C42               	goto	i1l2573
  9722     143B  09F2               	comf	i1___awdiv@dividend,f
  9723     143C  09F3               	comf	i1___awdiv@dividend+1,f
  9724     143D  0AF2               	incf	i1___awdiv@dividend,f
  9725     143E  1903               	skipnz
  9726     143F  0AF3               	incf	i1___awdiv@dividend+1,f
  9727     1440  3001               	movlw	1
  9728     1441  06F5               	xorwf	i1___awdiv@sign,f
  9729     1442                     i1l2573:
  9730     1442  01F6               	clrf	i1___awdiv@quotient
  9731     1443  01F7               	clrf	i1___awdiv@quotient+1
  9732     1444  0870               	movf	i1___awdiv@divisor,w
  9733     1445  0471               	iorwf	i1___awdiv@divisor+1,w
  9734     1446  1903               	btfsc	3,2
  9735     1447  2C77               	goto	i1l2595
  9736     1448  3001               	movlw	1
  9737     1449  00F4               	movwf	i1___awdiv@counter
  9738     144A                     i1l2583:
  9739     144A  1BF1               	btfsc	i1___awdiv@divisor+1,7
  9740     144B  2C56               	goto	i1l2585
  9741     144C  3001               	movlw	1
  9742     144D                     u311_25:
  9743     144D  1003               	clrc
  9744     144E  0DF0               	rlf	i1___awdiv@divisor,f
  9745     144F  0DF1               	rlf	i1___awdiv@divisor+1,f
  9746     1450  3EFF               	addlw	-1
  9747     1451  1D03               	skipz
  9748     1452  2C4D               	goto	u311_25
  9749     1453  3001               	movlw	1
  9750     1454  07F4               	addwf	i1___awdiv@counter,f
  9751     1455  2C4A               	goto	i1l2583
  9752     1456                     i1l2585:
  9753     1456  3001               	movlw	1
  9754     1457                     u313_25:
  9755     1457  1003               	clrc
  9756     1458  0DF6               	rlf	i1___awdiv@quotient,f
  9757     1459  0DF7               	rlf	i1___awdiv@quotient+1,f
  9758     145A  3EFF               	addlw	-1
  9759     145B  1D03               	skipz
  9760     145C  2C57               	goto	u313_25
  9761     145D  0871               	movf	i1___awdiv@divisor+1,w
  9762     145E  0273               	subwf	i1___awdiv@dividend+1,w
  9763     145F  1D03               	skipz
  9764     1460  2C63               	goto	u314_25
  9765     1461  0870               	movf	i1___awdiv@divisor,w
  9766     1462  0272               	subwf	i1___awdiv@dividend,w
  9767     1463                     u314_25:
  9768     1463  1C03               	skipc
  9769     1464  2C6C               	goto	i1l2591
  9770     1465  0870               	movf	i1___awdiv@divisor,w
  9771     1466  02F2               	subwf	i1___awdiv@dividend,f
  9772     1467  0871               	movf	i1___awdiv@divisor+1,w
  9773     1468  1C03               	skipc
  9774     1469  03F3               	decf	i1___awdiv@dividend+1,f
  9775     146A  02F3               	subwf	i1___awdiv@dividend+1,f
  9776     146B  1476               	bsf	i1___awdiv@quotient,0
  9777     146C                     i1l2591:
  9778     146C  3001               	movlw	1
  9779     146D                     u315_25:
  9780     146D  1003               	clrc
  9781     146E  0CF1               	rrf	i1___awdiv@divisor+1,f
  9782     146F  0CF0               	rrf	i1___awdiv@divisor,f
  9783     1470  3EFF               	addlw	-1
  9784     1471  1D03               	skipz
  9785     1472  2C6D               	goto	u315_25
  9786     1473  3001               	movlw	1
  9787     1474  02F4               	subwf	i1___awdiv@counter,f
  9788     1475  1D03               	btfss	3,2
  9789     1476  2C56               	goto	i1l2585
  9790     1477                     i1l2595:
  9791     1477  0875               	movf	i1___awdiv@sign,w
  9792     1478  1903               	btfsc	3,2
  9793     1479  2C7F               	goto	i1l2599
  9794     147A  09F6               	comf	i1___awdiv@quotient,f
  9795     147B  09F7               	comf	i1___awdiv@quotient+1,f
  9796     147C  0AF6               	incf	i1___awdiv@quotient,f
  9797     147D  1903               	skipnz
  9798     147E  0AF7               	incf	i1___awdiv@quotient+1,f
  9799     147F                     i1l2599:
  9800     147F  0877               	movf	i1___awdiv@quotient+1,w
  9801     1480  00F1               	movwf	?i1___awdiv+1
  9802     1481  0876               	movf	i1___awdiv@quotient,w
  9803     1482  00F0               	movwf	?i1___awdiv
  9804     1483  0008               	return
  9805     1484                     __end_ofi1___awdiv:
  9806                           
  9807                           	psect	text40
  9808     0802                     __ptext40:	
  9809 ;; *************** function i1_ctoa *****************
  9810 ;; Defined at:
  9811 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9814 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9815 ;;  c               1    2[BANK0 ] unsigned char 
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;  w               2    7[BANK0 ] int 
  9818 ;;  l               2    5[BANK0 ] int 
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  2    0[BANK0 ] int 
  9821 ;; Registers used:
  9822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 300/0
  9825 ;;		On exit  : 300/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9828 ;;      Params:         0       3       0       0       0
  9829 ;;      Locals:         0       4       0       0       0
  9830 ;;      Temps:          0       2       0       0       0
  9831 ;;      Totals:         0       9       0       0       0
  9832 ;;Total ram usage:        9 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 2
  9835 ;; This function calls:
  9836 ;;		i1_fputc
  9837 ;; This function is called by:
  9838 ;;		i1_vfpfcnvrt
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842     0802                     i1_ctoa:	
  9843                           ;psect for function i1_ctoa
  9844                           
  9845                           
  9846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
  9847                           
  9848                           ;incstack = 0
  9849 ;; hardware stack exceeded
  9850                           ; Regs used in i1_ctoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9851     0802  1683               	bsf	3,5	;RP0=1, select bank1
  9852     0803  0857               	movf	_width^(0+128),w
  9853     0804  0458               	iorwf	(_width+1)^(0+128),w
  9854     0805  1D03               	btfss	3,2
  9855     0806  280F               	goto	i1l2981
  9856     0807  0858               	movf	(_width+1)^(0+128),w
  9857     0808  1283               	bcf	3,5	;RP0=0, select bank0
  9858     0809  00A8               	movwf	i1ctoa@w+1
  9859     080A  1683               	bsf	3,5	;RP0=1, select bank1
  9860     080B  0857               	movf	_width^(0+128),w
  9861     080C  1283               	bcf	3,5	;RP0=0, select bank0
  9862     080D  00A7               	movwf	i1ctoa@w
  9863     080E  281A               	goto	i1l2983
  9864     080F                     i1l2981:
  9865     080F  0857               	movf	_width^(0+128),w
  9866     0810  3EFF               	addlw	255
  9867     0811  1283               	bcf	3,5	;RP0=0, select bank0
  9868     0812  00A7               	movwf	i1ctoa@w
  9869     0813  1683               	bsf	3,5	;RP0=1, select bank1
  9870     0814  0858               	movf	(_width+1)^(0+128),w
  9871     0815  1803               	skipnc
  9872     0816  3E01               	addlw	1
  9873     0817  3EFF               	addlw	255
  9874     0818  1283               	bcf	3,5	;RP0=0, select bank0
  9875     0819  00A8               	movwf	i1ctoa@w+1
  9876     081A                     i1l2983:
  9877                           
  9878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  9879     081A  1683               	bsf	3,5	;RP0=1, select bank1
  9880     081B  1C5D               	btfss	_flags^(0+128),0
  9881     081C  282E               	goto	i1l2987
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  9884     081D  1283               	bcf	3,5	;RP0=0, select bank0
  9885     081E  0822               	movf	i1ctoa@c,w
  9886     081F  00A3               	movwf	??i1_ctoa
  9887     0820  01A4               	clrf	??i1_ctoa+1
  9888     0821  0823               	movf	??i1_ctoa,w
  9889     0822  00F0               	movwf	i1fputc@c
  9890     0823  0824               	movf	??i1_ctoa+1,w
  9891     0824  00F1               	movwf	i1fputc@c+1
  9892     0825  0820               	movf	i1ctoa@fp,w
  9893     0826  00F2               	movwf	i1fputc@fp
  9894     0827  0821               	movf	i1ctoa@fp+1,w
  9895     0828  00F3               	movwf	i1fputc@fp+1
  9896     0829  160A  118A  26DE  120A  158A  	fcall	i1_fputc
  9897     082E                     i1l2987:
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  9900     082E  1283               	bcf	3,5	;RP0=0, select bank0
  9901     082F  1303               	bcf	3,6	;RP1=0, select bank0
  9902     0830  1FA8               	btfss	i1ctoa@w+1,7
  9903     0831  2834               	goto	i1l665
  9904     0832  01A7               	clrf	i1ctoa@w
  9905     0833  01A8               	clrf	i1ctoa@w+1
  9906     0834                     i1l665:
  9907                           
  9908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  9909     0834  01A5               	clrf	i1ctoa@l
  9910     0835  01A6               	clrf	i1ctoa@l+1
  9911     0836                     i1l2997:	
  9912                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  9913                           
  9914                           
  9915                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  9916     0836  0826               	movf	i1ctoa@l+1,w
  9917     0837  3A80               	xorlw	128
  9918     0838  00A3               	movwf	??i1_ctoa
  9919     0839  0828               	movf	i1ctoa@w+1,w
  9920     083A  3A80               	xorlw	128
  9921     083B  0223               	subwf	??i1_ctoa,w
  9922     083C  1D03               	skipz
  9923     083D  2840               	goto	u402_25
  9924     083E  0827               	movf	i1ctoa@w,w
  9925     083F  0225               	subwf	i1ctoa@l,w
  9926     0840                     u402_25:
  9927     0840  1803               	btfsc	3,0
  9928     0841  285A               	goto	i1l668
  9929                           
  9930                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  9931     0842  3020               	movlw	32
  9932     0843  00F0               	movwf	i1fputc@c
  9933     0844  3000               	movlw	0
  9934     0845  00F1               	movwf	i1fputc@c+1
  9935     0846  1283               	bcf	3,5	;RP0=0, select bank0
  9936     0847  1303               	bcf	3,6	;RP1=0, select bank0
  9937     0848  0820               	movf	i1ctoa@fp,w
  9938     0849  00F2               	movwf	i1fputc@fp
  9939     084A  0821               	movf	i1ctoa@fp+1,w
  9940     084B  00F3               	movwf	i1fputc@fp+1
  9941     084C  160A  118A  26DE  120A  158A  	fcall	i1_fputc
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 495:         ++l;
  9944     0851  3001               	movlw	1
  9945     0852  1283               	bcf	3,5	;RP0=0, select bank0
  9946     0853  1303               	bcf	3,6	;RP1=0, select bank0
  9947     0854  07A5               	addwf	i1ctoa@l,f
  9948     0855  1803               	skipnc
  9949     0856  0AA6               	incf	i1ctoa@l+1,f
  9950     0857  3000               	movlw	0
  9951     0858  07A6               	addwf	i1ctoa@l+1,f
  9952     0859  2836               	goto	i1l2997
  9953     085A                     i1l668:
  9954                           
  9955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  9956     085A  1683               	bsf	3,5	;RP0=1, select bank1
  9957     085B  1303               	bcf	3,6	;RP1=0, select bank1
  9958     085C  185D               	btfsc	_flags^(0+128),0
  9959     085D  286D               	goto	i1l3001
  9960                           
  9961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
  9962     085E  1283               	bcf	3,5	;RP0=0, select bank0
  9963     085F  0822               	movf	i1ctoa@c,w
  9964     0860  00A3               	movwf	??i1_ctoa
  9965     0861  01A4               	clrf	??i1_ctoa+1
  9966     0862  0823               	movf	??i1_ctoa,w
  9967     0863  00F0               	movwf	i1fputc@c
  9968     0864  0824               	movf	??i1_ctoa+1,w
  9969     0865  00F1               	movwf	i1fputc@c+1
  9970     0866  0820               	movf	i1ctoa@fp,w
  9971     0867  00F2               	movwf	i1fputc@fp
  9972     0868  0821               	movf	i1ctoa@fp+1,w
  9973     0869  00F3               	movwf	i1fputc@fp+1
  9974     086A  160A  118A  26DE   	fcall	i1_fputc
  9975     086D                     i1l3001:
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
  9978     086D  1283               	bcf	3,5	;RP0=0, select bank0
  9979     086E  1303               	bcf	3,6	;RP1=0, select bank0
  9980     086F  0825               	movf	i1ctoa@l,w
  9981     0870  3E01               	addlw	1
  9982     0871  00A0               	movwf	?i1_ctoa
  9983     0872  0826               	movf	i1ctoa@l+1,w
  9984     0873  1803               	skipnc
  9985     0874  3E01               	addlw	1
  9986     0875  3E00               	addlw	0
  9987     0876  00A1               	movwf	?i1_ctoa+1
  9988     0877  0008               	return
  9989     0878                     __end_ofi1_ctoa:
  9990                           
  9991                           	psect	text41
  9992     16DE                     __ptext41:	
  9993 ;; *************** function i1_fputc *****************
  9994 ;; Defined at:
  9995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  c               2    0[COMMON] int 
  9998 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  9999 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  2    0[COMMON] int 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 300/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10011 ;;      Params:         4       0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0
 10013 ;;      Temps:          9       0       0       0       0
 10014 ;;      Totals:        13       0       0       0       0
 10015 ;;Total ram usage:       13 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; Hardware stack levels required when called: 1
 10018 ;; This function calls:
 10019 ;;		i1_putch
 10020 ;; This function is called by:
 10021 ;;		i1_pad
 10022 ;;		i1_ctoa
 10023 ;;		i1_vfpfcnvrt
 10024 ;;		i1_fputs
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028     16DE                     i1_fputc:	
 10029                           ;psect for function i1_fputc
 10030                           
 10031                           
 10032                           ;incstack = 0
 10033 ;; hardware stack exceeded
 10034                           ; Regs used in i1_fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10035     16DE  0872               	movf	i1fputc@fp,w
 10036     16DF  0473               	iorwf	i1fputc@fp+1,w
 10037     16E0  1903               	btfsc	3,2
 10038     16E1  2EE6               	goto	i1l2329
 10039     16E2  0872               	movf	i1fputc@fp,w
 10040     16E3  0473               	iorwf	i1fputc@fp+1,w
 10041     16E4  1D03               	btfss	3,2
 10042     16E5  2EEB               	goto	i1l2331
 10043     16E6                     i1l2329:
 10044     16E6  0870               	movf	i1fputc@c,w
 10045     16E7  120A  118A  2003   	fcall	i1_putch
 10046     16EA  0008               	return
 10047     16EB                     i1l2331:
 10048     16EB  0872               	movf	i1fputc@fp,w
 10049     16EC  3E09               	addlw	9
 10050     16ED  00F4               	movwf	??i1_fputc
 10051     16EE  0873               	movf	i1fputc@fp+1,w
 10052     16EF  1803               	skipnc
 10053     16F0  3E01               	addlw	1
 10054     16F1  3E00               	addlw	0
 10055     16F2  00F5               	movwf	??i1_fputc+1
 10056     16F3  0874               	movf	??i1_fputc,w
 10057     16F4  0084               	movwf	4
 10058     16F5  1783               	bsf	3,7
 10059     16F6  1C75               	btfss	??i1_fputc+1,0
 10060     16F7  1383               	bcf	3,7
 10061     16F8  0800               	movf	0,w
 10062     16F9  00F6               	movwf	??i1_fputc+2
 10063     16FA  0A84               	incf	4,f
 10064     16FB  0800               	movf	0,w
 10065     16FC  00F7               	movwf	??i1_fputc+3
 10066     16FD  0876               	movf	??i1_fputc+2,w
 10067     16FE  0477               	iorwf	??i1_fputc+3,w
 10068     16FF  1903               	btfsc	3,2
 10069     1700  2F31               	goto	i1l2335
 10070     1701  0872               	movf	i1fputc@fp,w
 10071     1702  3E09               	addlw	9
 10072     1703  00F4               	movwf	??i1_fputc
 10073     1704  0873               	movf	i1fputc@fp+1,w
 10074     1705  1803               	skipnc
 10075     1706  3E01               	addlw	1
 10076     1707  3E00               	addlw	0
 10077     1708  00F5               	movwf	??i1_fputc+1
 10078     1709  0874               	movf	??i1_fputc,w
 10079     170A  0084               	movwf	4
 10080     170B  1783               	bsf	3,7
 10081     170C  1C75               	btfss	??i1_fputc+1,0
 10082     170D  1383               	bcf	3,7
 10083     170E  0800               	movf	0,w
 10084     170F  00F6               	movwf	??i1_fputc+2
 10085     1710  0A84               	incf	4,f
 10086     1711  0800               	movf	0,w
 10087     1712  00F7               	movwf	??i1_fputc+3
 10088     1713  0872               	movf	i1fputc@fp,w
 10089     1714  3E02               	addlw	2
 10090     1715  00F8               	movwf	??i1_fputc+4
 10091     1716  0873               	movf	i1fputc@fp+1,w
 10092     1717  1803               	skipnc
 10093     1718  3E01               	addlw	1
 10094     1719  3E00               	addlw	0
 10095     171A  00F9               	movwf	??i1_fputc+5
 10096     171B  0878               	movf	??i1_fputc+4,w
 10097     171C  0084               	movwf	4
 10098     171D  1783               	bsf	3,7
 10099     171E  1C79               	btfss	??i1_fputc+5,0
 10100     171F  1383               	bcf	3,7
 10101     1720  0800               	movf	0,w
 10102     1721  00FA               	movwf	??i1_fputc+6
 10103     1722  0A84               	incf	4,f
 10104     1723  0800               	movf	0,w
 10105     1724  00FB               	movwf	??i1_fputc+7
 10106     1725  087B               	movf	??i1_fputc+7,w
 10107     1726  3A80               	xorlw	128
 10108     1727  00FC               	movwf	??i1_fputc+8
 10109     1728  0877               	movf	??i1_fputc+3,w
 10110     1729  3A80               	xorlw	128
 10111     172A  027C               	subwf	??i1_fputc+8,w
 10112     172B  1D03               	skipz
 10113     172C  2F2F               	goto	u257_25
 10114     172D  0876               	movf	??i1_fputc+2,w
 10115     172E  027A               	subwf	??i1_fputc+6,w
 10116     172F                     u257_25:
 10117     172F  1803               	skipnc
 10118     1730  0008               	return
 10119     1731                     i1l2335:
 10120     1731  0872               	movf	i1fputc@fp,w
 10121     1732  0084               	movwf	4
 10122     1733  1783               	bsf	3,7
 10123     1734  1C73               	btfss	i1fputc@fp+1,0
 10124     1735  1383               	bcf	3,7
 10125     1736  0800               	movf	0,w
 10126     1737  00F4               	movwf	??i1_fputc
 10127     1738  0A84               	incf	4,f
 10128     1739  0800               	movf	0,w
 10129     173A  00F5               	movwf	??i1_fputc+1
 10130     173B  0872               	movf	i1fputc@fp,w
 10131     173C  3E02               	addlw	2
 10132     173D  00F6               	movwf	??i1_fputc+2
 10133     173E  0873               	movf	i1fputc@fp+1,w
 10134     173F  1803               	skipnc
 10135     1740  3E01               	addlw	1
 10136     1741  3E00               	addlw	0
 10137     1742  00F7               	movwf	??i1_fputc+3
 10138     1743  0876               	movf	??i1_fputc+2,w
 10139     1744  0084               	movwf	4
 10140     1745  1783               	bsf	3,7
 10141     1746  1C77               	btfss	??i1_fputc+3,0
 10142     1747  1383               	bcf	3,7
 10143     1748  0800               	movf	0,w
 10144     1749  0774               	addwf	??i1_fputc,w
 10145     174A  00F9               	movwf	??i1_fputc+5
 10146     174B  0875               	movf	??i1_fputc+1,w
 10147     174C  00F8               	movwf	??i1_fputc+4
 10148     174D  1803               	skipnc
 10149     174E  0AF8               	incf	??i1_fputc+4,f
 10150     174F  1B80               	btfsc	0,7
 10151     1750  03F8               	decf	??i1_fputc+4,f
 10152     1751  0878               	movf	??i1_fputc+4,w
 10153     1752  00FA               	movwf	??i1_fputc+6
 10154     1753  0879               	movf	??i1_fputc+5,w
 10155     1754  0084               	movwf	4
 10156     1755  1783               	bsf	3,7
 10157     1756  1C7A               	btfss	??i1_fputc+6,0
 10158     1757  1383               	bcf	3,7
 10159     1758  0870               	movf	i1fputc@c,w
 10160     1759  0080               	movwf	0
 10161     175A  0872               	movf	i1fputc@fp,w
 10162     175B  3E02               	addlw	2
 10163     175C  00F4               	movwf	??i1_fputc
 10164     175D  0873               	movf	i1fputc@fp+1,w
 10165     175E  1803               	skipnc
 10166     175F  3E01               	addlw	1
 10167     1760  3E00               	addlw	0
 10168     1761  00F5               	movwf	??i1_fputc+1
 10169     1762  0874               	movf	??i1_fputc,w
 10170     1763  0084               	movwf	4
 10171     1764  1783               	bsf	3,7
 10172     1765  1C75               	btfss	??i1_fputc+1,0
 10173     1766  1383               	bcf	3,7
 10174     1767  3001               	movlw	1
 10175     1768  0780               	addwf	0,f
 10176     1769  0A84               	incf	4,f
 10177     176A  1803               	skipnc
 10178     176B  0A80               	incf	0,f
 10179     176C  0008               	return
 10180     176D                     __end_ofi1_fputc:
 10181                           
 10182                           	psect	text42
 10183     0003                     __ptext42:	
 10184 ;; *************** function i1_putch *****************
 10185 ;; Defined at:
 10186 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  c               1    wreg     unsigned char 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  c               1  (no storage) unsigned char 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		wreg
 10195 ;; Tracked objects:
 10196 ;;		On entry : 300/0
 10197 ;;		On exit  : 300/0
 10198 ;;		Unchanged: 300/0
 10199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10200 ;;      Params:         0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		i1_fputc
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213     0003                     i1_putch:	
 10214                           ;psect for function i1_putch
 10215                           
 10216                           
 10217                           ;incstack = 0
 10218 ;; hardware stack exceeded
 10219                           ; Regs used in i1_putch: [wreg]
 10220     0003  0008               	return
 10221     0004                     __end_ofi1_putch:
 10222                           
 10223                           	psect	text43
 10224     1119                     __ptext43:	
 10225 ;; *************** function i1_display *****************
 10226 ;; Defined at:
 10227 ;;		line 106 in file "newmain.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  RS              2    0[COMMON] int 
 10230 ;;  DC              2    2[COMMON] int 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		wreg
 10237 ;; Tracked objects:
 10238 ;;		On entry : 200/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10242 ;;      Params:         4       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0
 10244 ;;      Temps:          2       0       0       0       0
 10245 ;;      Totals:         6       0       0       0       0
 10246 ;;Total ram usage:        6 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_ISR
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255     1119                     i1_display:	
 10256                           ;psect for function i1_display
 10257                           
 10258                           
 10259                           ;newmain.c: 106: void display(int RS, int DC);newmain.c: 107: {;newmain.c: 108:     RD0=
      +                          RS;
 10260                           
 10261                           ;incstack = 0
 10262 ;; hardware stack exceeded
 10263                           ; Regs used in i1_display: [wreg]
 10264     1119  1C70               	btfss	i1display@RS,0
 10265     111A  291F               	goto	u488_20
 10266     111B  1283               	bcf	3,5	;RP0=0, select bank0
 10267     111C  1303               	bcf	3,6	;RP1=0, select bank0
 10268     111D  1408               	bsf	8,0	;volatile
 10269     111E  2922               	goto	i1l3653
 10270     111F                     u488_20:
 10271     111F  1283               	bcf	3,5	;RP0=0, select bank0
 10272     1120  1303               	bcf	3,6	;RP1=0, select bank0
 10273     1121  1008               	bcf	8,0	;volatile
 10274     1122                     i1l3653:
 10275                           
 10276                           ;newmain.c: 109:     PORTC=DC;
 10277     1122  0872               	movf	i1display@DC,w
 10278     1123  0087               	movwf	7	;volatile
 10279                           
 10280                           ;newmain.c: 110:     RD1=1;
 10281     1124  1488               	bsf	8,1	;volatile
 10282                           
 10283                           ;newmain.c: 111:     _delay((unsigned long)((10)*(10000000/4000.0)));
 10284     1125  3021               	movlw	33
 10285     1126  00F5               	movwf	??i1_display+1
 10286     1127  3076               	movlw	118
 10287     1128  00F4               	movwf	??i1_display
 10288     1129                     u622_27:
 10289     1129  0BF4               	decfsz	??i1_display,f
 10290     112A  2929               	goto	u622_27
 10291     112B  0BF5               	decfsz	??i1_display+1,f
 10292     112C  2929               	goto	u622_27
 10293     112D  0000               	nop
 10294                           
 10295                           ;newmain.c: 112:     RD1=0;
 10296     112E  1283               	bcf	3,5	;RP0=0, select bank0
 10297     112F  1303               	bcf	3,6	;RP1=0, select bank0
 10298     1130  1088               	bcf	8,1	;volatile
 10299                           
 10300                           ;newmain.c: 113:     _delay((unsigned long)((10)*(10000000/4000.0)));
 10301     1131  3021               	movlw	33
 10302     1132  00F5               	movwf	??i1_display+1
 10303     1133  3076               	movlw	118
 10304     1134  00F4               	movwf	??i1_display
 10305     1135                     u623_27:
 10306     1135  0BF4               	decfsz	??i1_display,f
 10307     1136  2935               	goto	u623_27
 10308     1137  0BF5               	decfsz	??i1_display+1,f
 10309     1138  2935               	goto	u623_27
 10310     1139  0000               	nop
 10311     113A  0008               	return
 10312     113B                     __end_ofi1_display:
 10313     0002                     ___latbits      equ	2
 10314     007E                     btemp           set	126	;btemp
 10315     007E                     wtemp0          set	126
 10316                           
 10317                           	psect	config
 10318                           
 10319                           ;Config register CONFIG @ 0x2007
 10320                           ;	Oscillator Selection bits
 10321                           ;	FOSC = HS, HS oscillator
 10322                           ;	Watchdog Timer Enable bit
 10323                           ;	WDTE = OFF, WDT disabled
 10324                           ;	Power-up Timer Enable bit
 10325                           ;	PWRTE = OFF, PWRT disabled
 10326                           ;	Brown-out Reset Enable bit
 10327                           ;	BOREN = OFF, BOR disabled
 10328                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10329                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10330                           ;	Data EEPROM Memory Code Protection bit
 10331                           ;	CPD = OFF, Data EEPROM code protection off
 10332                           ;	Flash Program Memory Write Enable bits
 10333                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10334                           ;	In-Circuit Debugger Mode bit
 10335                           ;	DEBUG = 0x1, unprogrammed default
 10336                           ;	Flash Program Memory Code Protection bit
 10337                           ;	CP = OFF, Code protection off
 10338     2007                     	org	8199
 10339     2007  3F3A               	dw	16186

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     55      62
    BANK3            96     87      89
    BANK2            96      0      32

Pointer List with Targets:

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    i1sprintf@f$.$source	PTR const unsigned char  size(1) Largest target is 0

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S526$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    S526$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_vfpfcnvrt->i1_read_prec_or_width
    i1_xtoa->i1_pad
    i1_utoa->i1_pad
    i1_read_prec_or_width->i1___wmul
    i1_otoa->i1_pad
    i1_dtoa->i1_pad
    i1_pad->i1_fputc
    i1_fputs->i1_fputc
    i1_abs->i1___awmod
    i1_ctoa->i1_fputc

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_xtoa
    i1_xtoa->i1_pad
    i1_utoa->i1_pad
    i1_otoa->i1_pad
    i1_dtoa->i1_pad
    i1_pad->i1_fputs

Critical Paths under _main in BANK1

    _sprintf->_vfprintf
    _vfpfcnvrt->_otoa
    _xtoa->_pad
    _utoa->_pad
    _read_prec_or_width->___wmul
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ctoa->_fputc

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   14315
                                             54 BANK3     33    33      0
                            _display
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6   13673
                                             33 BANK3     21    15      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5   13129
                                             53 BANK1      2     2      0
                                             28 BANK3      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           17    12      5   12716
                                             11 BANK3     17    12      5
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                16    11      5    2109
                                             47 BANK1      5     0      5
                                              0 BANK3     11    11      0
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     6      4    2214
                                             47 BANK1      4     0      4
                                              0 BANK3      6     6      0
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     238
                                             18 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     247
                                             18 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     278
                                             24 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _otoa                                                13     9      4    1837
                                             47 BANK1      6     2      4
                                              0 BANK3      7     7      0
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    2956
                                             47 BANK1      4     0      4
                                              0 BANK3      9     9      0
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1358
                                             39 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2     133
                                             18 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     511
                                             31 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                             24 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                             18 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 9     6      3     659
                                             31 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                               13     9      4     359
                                             18 BANK1     13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4      56
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 18    18      0    9318
                                              0 BANK1     18    18      0
                          i1_display
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (10) i1_sprintf                                          24    18      6    9079
                                             56 BANK0     22    16      6
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (11) i1_vfprintf                                          8     2      6    8842
                                             48 BANK0      8     2      6
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i1_vfpfcnvrt                                        17    12      5    8687
                                             31 BANK0     17    12      5
                             i1_ctoa
                             i1_dtoa
                            i1_fputc
                             i1_otoa
               i1_read_prec_or_width
                             i1_utoa
                             i1_xtoa
 ---------------------------------------------------------------------------------
 (13) i1_xtoa                                             16    11      5    1414
                                             15 BANK0     16    11      5
                              i1_pad
 ---------------------------------------------------------------------------------
 (13) i1_utoa                                             10     6      4    1484
                                             15 BANK0     10     6      4
                          i1___lwdiv
                          i1___lwmod
                              i1_pad
 ---------------------------------------------------------------------------------
 (14) i1___lwmod                                           5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (14) i1___lwdiv                                           7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (13) i1_read_prec_or_width                                8     5      3     278
                                              6 COMMON     8     5      3
                           i1___wmul
 ---------------------------------------------------------------------------------
 (14) i1___wmul                                            6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) i1_otoa                                             13     9      4    1230
                                             15 BANK0     13     9      4
                              i1_pad
 ---------------------------------------------------------------------------------
 (13) i1_dtoa                                             13     9      4    1988
                                             15 BANK0     13     9      4
                          i1___awdiv
                          i1___awmod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (14) i1_pad                                               8     3      5     907
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                            i1_fputc
                            i1_fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (15) i1_strlen                                            3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (15) i1_fputs                                             8     5      3     341
                                              0 BANK0      8     5      3
                            i1_fputc
 ---------------------------------------------------------------------------------
 (14) i1_abs                                               4     2      2      67
                                              6 COMMON     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___awmod                                           6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (13) i1_ctoa                                              9     6      3     445
                                              0 BANK0      9     6      3
                            i1_fputc
 ---------------------------------------------------------------------------------
 (16) i1_fputc                                            13     9      4     240
                                              0 COMMON    13     9      4
                            i1_putch
 ---------------------------------------------------------------------------------
 (17) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (10) i1_display                                           6     2      4      48
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
         _otoa
           _pad
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
         _xtoa
           _pad

 _ISR (ROOT)
   i1_display
   i1_sprintf
     i1_vfprintf
       i1_vfpfcnvrt
         i1_ctoa
           i1_fputc
             i1_putch
         i1_dtoa
           i1___awdiv
           i1___awmod
           i1_abs
             i1___awmod (ARG)
           i1_pad
             i1_fputc
             i1_fputs
               i1_fputc
             i1_strlen
         i1_fputc
         i1_otoa
           i1_pad
         i1_read_prec_or_width
           i1___wmul
         i1_utoa
           i1___lwdiv
           i1___lwmod
           i1_pad
         i1_xtoa
           i1_pad

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     78      78     97.5%
BANK1               80     55      62     77.5%
BANK3               96     87      89     92.7%
BANK2               96      0      32     33.3%
STACK                0      0       0      0.0%
DATA                 0      0     269      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Dec 21 20:58:07 2024

                           pc 0002                            l50 0F84                            l44 0EF7  
                ___awdiv@sign 00B7                            fsr 0004           __end_ofi1_vfpfcnvrt 07EA  
         ___wmul@multiplicand 00B4              i1___wmul@product 0074  __end_ofi1_read_prec_or_width 16DE  
                         l162 1102                           l702 0A78                           l712 0AF5  
                         l720 0921                           l652 1412                           l653 1421  
                         l735 0CF5                           l665 15BA                           l649 13EC  
                         l770 006E                           l771 0071                           l668 15E0  
                         l772 0074                           l685 0E13                           l677 0DE8  
                         l749 0D8C                           l773 00A3                           l678 0E08  
                         l766 005C                           l791 0181                           l768 0068  
                         l769 006B                           l788 0181                           _GIE 005F  
                         _RD0 0040                           _RD1 0041                           _ISR 1532  
                  i1_dtoa$616 0033                           _abs 10A5                           _pad 13DB  
                         fsr0 0004                           indf 0000                  ___awmod@sign 00B7  
                main@Low_bits 01DD                          ?_ISR 0070                          ISR@c 00A6  
                        ISR@i 00B0                          ?_abs 00B8                          l4003 0E83  
                        l4005 0E1B                          l4013 0E90                          l4031 0A71  
                        l4105 0994                          l4019 0EA1                          l4051 0A89  
                        l4027 0A69                          l4115 0CE6                          l4203 0078  
                        l4037 0AAC                          l4133 0D1B                          l4221 00F6  
                        l4119 0CEE                          l4303 02F4                          l4231 0140  
                        l4215 00C1                          l4207 00A8                          l4049 0ADF  
                        l2377 10FA                          l4081 091A                          l4145 0D3D  
                        l4137 0D29                          l4129 0D14                          l4321 036F  
                        l4313 033E                          l4241 017A                          l4059 0AEB  
                        l4155 0D5C                          l4323 0370                          l4331 03A4  
                        l4307 0310                          l4315 035A                          l4251 01A6  
                        l4235 015E                          l4403 0EE5                          l4069 0B0B  
                        l4085 0952                          l4077 0912                          l4325 0388  
                        l4333 03B7                          l4261 01E2                          l4245 0184  
                        l3631 1190                          l4095 098E                          l4175 0DB3  
                        l4335 03CD                          l4327 0388                          l4319 036F  
                        l4263 01E2                          l4255 01CF                          l4423 0F3C  
                        l4097 0930                          l4345 0406                          l4257 01CF  
                        l4249 0186                          l4425 0F64                          l3811 14C1  
                        l3803 149F                          l4339 03D0                          l4291 029C  
                        l4283 0288                          l4259 01D0                          l4275 0237  
                        l4267 01F4                          l4355 0418                          l4371 12D0  
                        l3805 14AB                          l3901 1259                          l4349 040D  
                        l4285 0288                          l4269 0207                          l4189 005E  
                        l4445 0FC9                          ?_pad 00C7                          l3751 1775  
                        l3815 14CC                          l3831 139C                          l4287 0289  
                        l4295 02AE                          l4447 0FF1                          l3753 177A  
                        l3921 13EE                          l3913 13E8                          l3905 1264  
                        l4289 029C                          l4297 02C1                          l4369 12A8  
                        l3819 14D4                          l3843 13A9                          l3835 13A3  
                        l2971 164B                          l4299 02D8                          l3757 17C0  
                        l3941 15A2                          l3845 13B5                          l3853 13CE  
                        l3773 10C7                          l2973 1667                          l3767 1163  
                        l3775 10D0                          l2967 162E                          l3871 1317  
                        l3945 15B4                          l3793 1497                          l3857 13D6  
                        l3849 13C3                          l3873 1323                          l3955 15BC  
                        l3939 159A                          l3787 148E                          l3883 1344  
                        l3973 0DE1                          l3959 15F2                          l3879 1339  
                        l3895 123F                          l3993 0E3E                          l3985 0E02  
                        l3969 0DD9                          l3897 124B                          l3979 0DF6  
                        STR_1 07FA                          STR_2 07FA                          u5005 17BE  
                        u5105 14B8                          u5115 14C2                          u5205 13C4  
                        u2645 1103                          u2655 110A                          u5075 14A2  
                        u5315 1242                          u5245 131A                          _INTE 005C  
                        _INTF 0059                          u6207 119B                          u5095 14AC  
                        u5175 13AC                          u5335 1251                          u6217 11A9  
                        u5265 1324                          u5345 125A                          u5195 13BB  
                        u5275 1330                          u5460 0DD1                          u5445 15C6  
                        u5285 133A                          u5470 0DD2                          u6167 0EEF  
                        u5800 0D05                          u5385 13F8                          u5545 0E8E  
                        u5625 0AE9                          u6177 0F6C                          u4850 118D  
                        i1l75 1585                          u6187 0F7C                          i1l76 1586  
                        u5565 0E2B                          u5645 0A99                          u6197 0FF9  
                        u5575 0E38                          u5655 0AA6                          u5745 093F  
                        u5755 094C                          u5790 0D04                          u5855 0D67  
                        u5875 0D79                          u5885 0D86                          abs@a 00B8  
                        _dbuf 0110               i1xtoa@d_nonzero 003B                          _ctoa 1591  
                        _main 0EBB                          _dtoa 0DCD                          _prec 00D9  
                        _otoa 0A65                          _nout 01E7                          pad@i 00CD  
                        pad@p 00CA                          btemp 007E                          _utoa 090E  
                        _xtoa 0CE2                          start 0012               __end_ofi1_fputc 176D  
             __end_ofi1_fputs 1161               __end_ofi1_putch 0004                    i1_xtoa$641 0034  
                  i1_vfprintf 1269                         ??_ISR 00A0                         ??_abs 00BA  
                       ??_pad 00CC                 i1vfpfcnvrt@ap 0042                 i1vfpfcnvrt@cp 004E  
               i1vfpfcnvrt@fp 003F                         ?_ctoa 00BF                         ?_main 0070  
                       ?_dtoa 00CF                i1___awdiv@sign 0075               __end_of___awdiv 14D9  
             __end_of___awmod 13DB                         ?_otoa 00CF                         ?_utoa 00CF  
             ___awdiv@divisor 00B2                         ?_xtoa 00CF               __end_of___lwdiv 1349  
                       i1l162 10E1               __end_of___lwmod 1269                         i1l702 09C3  
                       i1l712 0A3B                         i1l720 088C                         i1l652 1513  
                       i1l653 1523                         i1l735 0B39                         i1l665 0834  
                       i1l649 14ED                         i1l770 048E                         i1l771 0491  
                       i1l668 085A                         i1l772 0494                         i1l685 0C46  
                       i1l677 0C1B                         i1l749 0BC8                         i1l773 04BB  
                       i1l678 0C3B                         i1l766 047C                         i1l791 0577  
                       i1l768 0488                         i1l769 048B                         i1l788 0577  
             ___awdiv@counter 00B6                  vfpfcnvrt@fmt 019D                         _PORTC 0007  
                       _PORTD 0008                         _TRISC 0087                         _TRISD 0088  
                       i1_abs 1097                         i1_pad 14D9            i1___lwmod@dividend 0072  
             __end_of_display 11AF                i1___awmod@sign 0075                         _flags 00DD  
                       _count 00DB           read_prec_or_width@c 00BC           read_prec_or_width@n 00BD  
                       _fputc 176D                         _fputs 1161                         pad@fp 00C7  
                       _width 00D7                         ctoa@c 00C1                         _putch 07FF  
                       ctoa@l 00C4                         main@a 01C9                         main@b 01D3  
                       ctoa@w 00C6                         main@i 01E3                         dtoa@d 00D1  
                       dtoa@i 0197                         dtoa@p 0192                         dtoa@s 0196  
                       dtoa@w 0194                         pclath 000A              __end_ofi1___wmul 10F8  
                       otoa@d 00D1                         otoa@i 0195                         otoa@p 0190  
                       otoa@t 0194                         otoa@w 0192                         utoa@d 00D1  
                       utoa@i 0194                         utoa@p 0190                         utoa@w 0192  
                       status 0003           i1___wmul@multiplier 0070                         wtemp0 007E  
             __end_of_sprintf 11DA                         xtoa@a 0190                         xtoa@c 0198  
                       xtoa@d 00D1                         xtoa@i 0199                         xtoa@p 0193  
                       xtoa@w 0196                         xtoa@x 00D3              __end_ofi1_strlen 10C5  
                 i1_vfpfcnvrt 0454               __initialization 0015                  __end_of_ctoa 15FD  
                __end_of_main 1000                  __end_of_dtoa 0EBB                 i1vfprintf@fmt 0052  
                __end_of_otoa 0B25                  __end_of_utoa 09AF                  __end_of_xtoa 0DCD  
      i1read_prec_or_width@ap 0077                   i1display@DC 0072                   i1display@RS 0070  
                  i1sprintf@f 0061                    i1sprintf@s 0058                        ??_ctoa 00C2  
                      ??_main 01C6                        ??_dtoa 00D3                        ??_otoa 00D3  
                      ??_utoa 00D3                        ??_xtoa 00D4                        ?i1_abs 0076  
                      ?i1_pad 0028    __end_of_read_prec_or_width 166C                 main@high_bits 01DF  
              i1vfpfcnvrt@fmt 0041                        _ADCON0 001F                        _ADCON1 009F  
                      ?_fputc 00B2                        ?_fputs 00BF                        _ADRESH 001E  
                      _ADRESL 009E              ___awdiv@dividend 00B4                        ?_putch 0070  
                      i1l3001 086D                        i1l3011 0C0C                        i1l3021 0C29  
                      i1l3101 0A31                        i1l3015 0C14                        i1l3111 0A51  
                      i1l2331 16EB                        i1l3035 0C70                        i1l3027 0C35  
                      i1l3123 0885                        i1l3061 0CCF                        i1l3045 0CB2  
                      i1l2335 1731                        i1l3047 0C4E                        i1l3055 0CBE  
                      i1l3231 16C2                        i1l3127 08BB                        i1l3119 087D  
                      i1l2329 16E6                        i1l3073 09BC                        i1l3233 16D9  
                      i1l3137 08F4                        i1l3217 0BED                        i1l3161 0B32  
                      i1l2611 1353                        i1l2363 113D                        i1l2371 10BE  
                      i1l3091 0A26                        i1l3227 16A5                        i1l3139 089B  
                      i1l3147 08F9                        i1l3171 0B56                        i1l2701 14EF  
                      i1l3093 09D4                        i1l3069 09B4                        i1l3157 0B2A  
                      i1l3501 05B6                        i1l2623 1360                        i1l2615 135A  
                      i1l3079 09F6                        i1l3175 0B5D                        i1l3503 05D1  
                      i1l3511 05FD                        i1l3431 047E                        i1l2625 136C  
                      i1l2633 1385                        i1l2369 10B5                        i1l3505 05D1  
                      i1l2547 10D9                        i1l2651 12DD                        i1l3187 0B7C  
                      i1l3179 0B6A                        i1l3531 0671                        i1l2573 1442  
                      i1l2637 138D                        i1l2629 137A                        i1l2653 12E9  
                      i1l3197 0B9A                        i1l3541 06B4                        i1l3533 0671  
                      i1l3525 0654                        i1l3517 0623                        i1l3509 05EC  
                      i1l3445 0496                        i1l2591 146C                        i1l2583 144A  
                      i1l2567 1439                        i1l2663 130A                        i1l3527 0654  
                      i1l3463 0506                        i1l3623 1271                        i1l2585 1456  
                      i1l2681 1229                        i1l3561 0711                        i1l3545 06C4  
                      i1l3529 0655                        i1l3537 068C                        i1l3473 0548  
                      i1l3457 04D9                        i1l3449 04C0                        i1l3625 129B  
                      i1l2595 1477                        i1l2659 12FF                        i1l2675 120F  
                      i1l3563 0711                        i1l3555 06EE                        i1l3539 069D  
                      i1l3483 0570                        i1l3491 057C                        i1l3653 1122  
                      i1l2693 14E8                        i1l2677 121B                        i1l2685 1234  
                      i1l3565 0712                        i1l3573 075C                        i1l3581 0788  
                      i1l3549 06D4                        i1l3557 0704                        i1l3493 059C  
                      i1l3477 055C                        i1l2599 147F                        i1l3591 07B6  
                      i1l3567 0735                        i1l3575 076D                        i1l3487 057A  
                      i1l4463 1562                        i1l3577 0785                        i1l3569 0735  
                      i1l3497 05B5                        i1l3587 07AF                        i1l3499 05B5  
                      i1l2981 080F                        i1l3597 07BF                        i1l2983 081A  
                      i1l2987 082E                        i1l2997 0836                        u311_25 144D  
                   ??i1_fputc 0074                        u313_25 1457                        u321_25 1363  
                      u305_25 10E2                     ??i1_fputs 0023                        u402_25 0840  
                      u314_25 1463                        u306_25 10E9                        u330_25 12EA  
                      u315_25 146D                        u323_25 1372                        u331_25 12F6  
                      u404_20 0C05                        u324_25 137B                        u412_25 0CBC  
                      u420_25 0A2F                        u332_25 1300                        u405_20 0C06  
                      u342_25 14F9                        u414_25 0C5D                        u422_25 09E3  
                      u415_25 0C6A                        u423_25 09F0                        u335_25 1212  
                      u328_25 12E0                        u432_25 08A8                        u257_25 172F  
                      u337_25 1221                        u433_25 08B5                        u338_25 122A  
                      u443_25 0BA4                        u437_20 0B47                        u445_25 0BB5  
                      u438_20 0B48                        u446_25 0BC2                        u622_27 1129  
                      u623_27 1135                     ??i1_putch 0070                        u488_20 111F  
               vfpfcnvrt@done 01A4          i1_read_prec_or_width 166C                        i1abs@a 0076  
                      i1_ctoa 0802                        i1_dtoa 0C01                        i1_otoa 09AF  
                      i1pad@i 002D                        i1pad@p 002B                        i1_utoa 0878  
                      i1_xtoa 0B25                  vfprintf@cfmt 00D5                   ?i1_vfprintf 0050  
                      ___wmul 10F8                     ??___awdiv 00B6                     ??___awmod 00B6  
                   ??___lwdiv 00B6                     ??___lwmod 00B6          read_prec_or_width@ap 00B9  
            ___awdiv@quotient 00B8               ___awmod@divisor 00B2               ___awmod@counter 00B6  
                      pad@buf 00C9                        ctoa@fp 00BF                        dtoa@fp 00CF  
                      _strlen 10C5                     ??_display 00B6             __end_ofi1___awdiv 1484  
           __end_ofi1___awmod 1392                        fputc@c 00B2             __end_ofi1___lwdiv 130F  
                      fputs@c 00C4                        fputs@i 00C5                        fputs@s 00BF  
           __end_ofi1___lwmod 1239                        saved_w 007E                        otoa@fp 00CF  
                      putch@c 0070              __end_of_vfprintf 12D5             __end_ofi1_display 113B  
                      utoa@fp 00CF                     ??_sprintf 01B7                        xtoa@fp 00CF  
     __end_of__initialization 0028         ?i1_read_prec_or_width 0076             __end_ofi1_sprintf 1209  
               __end_ofi1_abs 10A5                 __end_ofi1_pad 1532                __pcstackCOMMON 0070  
              i1vfprintf@cfmt 0056                 __end_of_fputc 1800                 __end_of_fputs 1187  
               __end_of_putch 0800       i1read_prec_or_width@fmt 0076                     ?i1___wmul 0070  
                     ??i1_abs 0078                       ??i1_pad 007D                   i1sprintf@ap 006C  
                   ?i1_strlen 0070                       ??_fputc 00B6                       ??_fputs 00C2  
                     ??_putch 00B2                    __pbssBANK1 00D7                    __pbssBANK2 0110  
                  __pbssBANK3 01E7                       ?i1_ctoa 0020                       ?i1_dtoa 002F  
                     ?i1_otoa 002F                       ?i1_utoa 002F                       ?i1_xtoa 002F  
             i1vfpfcnvrt@done 0048                    __pmaintext 0EBB                       ?___wmul 00B2  
                  __pintentry 0004                    ??i1___wmul 0074                       ?_strlen 00B2  
          i1___awdiv@dividend 0072                    ??i1_strlen 0072                    __stringtab 07EA  
      ??i1_read_prec_or_width 0079                       i1_fputc 16DE                       i1_fputs 113B  
                     i1pad@fp 0028                       i1ctoa@c 0022                       i1_putch 0003  
                     i1ctoa@l 0025                       i1ctoa@w 0027                       i1dtoa@d 0031  
                     i1dtoa@i 003A                       i1dtoa@p 0035                       i1dtoa@s 0039  
                     i1dtoa@w 0037                       i1otoa@d 0031                       i1otoa@i 003A  
                     i1otoa@p 0035                       i1otoa@t 0039                       i1otoa@w 0037  
                     i1utoa@d 0031                       i1utoa@i 0037                       i1utoa@p 0033  
                     i1utoa@w 0035                       i1xtoa@a 0036                       i1xtoa@c 003C  
                     i1xtoa@d 0031                       i1xtoa@i 003D                       i1xtoa@p 0037  
                     i1xtoa@w 0039                       i1xtoa@x 0033                  ?i1_vfpfcnvrt 003F  
          i1___awdiv@quotient 0076                       ___awdiv 1484                       ___awmod 1392  
                     ___lwdiv 130F                       ___lwmod 1239                     ?_vfprintf 01AC  
                     __ptext1 11AF                       __ptext2 129E                       __ptext3 002C  
                     __ptext4 0CE2                       __ptext5 090E                       __ptext6 1239  
                     __ptext7 130F                       __ptext8 15FD                       __ptext9 10F8  
                     _display 1187             i1___lwdiv@divisor 0070         read_prec_or_width@fmt 00B8  
           i1___lwdiv@counter 0076              ___awmod@dividend 00B4                       _sprintf 11AF  
                     clrloop0 1090          end_of_initialization 0028                       fputc@fp 00B4  
                     fputs@fp 00C0            _read_prec_or_width 15FD                  ??i1_vfprintf 007E  
           __end_of_vfpfcnvrt 0454           ?_read_prec_or_width 00B8              vfpfcnvrt@convarg 01A6  
                  ??_vfprintf 00D5         i1___wmul@multiplicand 0072                       strlen@a 00B4  
                     strlen@s 00B2                     i1___awdiv 142F                     i1___awmod 1349  
        ??_read_prec_or_width 00BA                     i1___lwdiv 12D5                     i1___lwmod 1209  
          __end_ofi1_vfprintf 129E                     i1_display 1119                __end_ofi1_ctoa 0878  
              __end_ofi1_dtoa 0CE2                __end_ofi1_otoa 0A65                __end_ofi1_utoa 090E  
              __end_ofi1_xtoa 0C01                     i1_sprintf 11DA                  i1vfpfcnvrt@c 004D  
                 vfpfcnvrt@ap 019E                   vfpfcnvrt@cp 01AA                   vfpfcnvrt@fp 019B  
              __end_of___wmul 1119                     i1fputc@fp 0072                     i1fputs@fp 0021  
           i1___lwmod@divisor 0070             i1___lwmod@counter 0074                __end_of_strlen 10D7  
         start_initialization 0015                   __end_of_ISR 1591                   __end_of_abs 10B3  
                i1vfprintf@ap 0054                   __end_of_pad 142F                  i1vfprintf@fp 0050  
                  ?i1___awdiv 0070                    ?i1___awmod 0070         i1read_prec_or_width@c 007B  
       i1read_prec_or_width@n 007C                    ?i1___lwdiv 0070                    ?i1___lwmod 0070  
                   i1strlen@a 0072                     i1strlen@s 0070                    ?i1_display 0070  
                    ??i1_ctoa 0023                      ??i1_dtoa 007E                      ??i1_otoa 0033  
                    ??i1_utoa 007E                      ??i1_xtoa 007E                  i1sprintf@fmt 005A  
                 vfprintf@fmt 01AE                    ?i1_sprintf 0058                      ??___wmul 00B6  
          i1___awmod@dividend 0072                      ??_strlen 00B4                     ___latbits 0002  
               __pcstackBANK0 0020                 __pcstackBANK1 00A0                 __pcstackBANK3 0190  
                    ?i1_fputc 0070                      ?i1_fputs 0020                      ?i1_putch 0070  
          i1vfpfcnvrt@convarg 0049              ___lwdiv@dividend 00B4                      ?___awdiv 00B2  
                    ?___awmod 00B2                      ?___lwdiv 00B2                      ?___lwmod 00B2  
           i1___awdiv@divisor 0070             i1___awdiv@counter 0074                     __pstrings 07EA  
                    ?_display 00B2                   ??i1___awdiv 0074                   ??i1___awmod 0074  
            ___lwdiv@quotient 00B7                   ??i1___lwdiv 0074                   ??i1___lwmod 0074  
                    ?_sprintf 01B1                   ??i1_display 0074             interrupt_function 0004  
              ___wmul@product 00B6                     clear_ram0 108F                      _GO_nDONE 00FA  
                 ??i1_sprintf 005E                     _vfpfcnvrt 002C                   __stringbase 07F9  
           ___wmul@multiplier 00B2                      i1___wmul 10D7                     display@DC 00B4  
                   display@RS 00B2                      i1pad@buf 002A                      i1ctoa@fp 0020  
                    i1dtoa@fp 002F                      i1_strlen 10B3                    vfpfcnvrt@c 01A5  
                    i1fputc@c 0070                      i1fputs@c 0025                      i1fputs@i 0026  
                    i1fputs@s 0020                      i1otoa@fp 002F                      i1utoa@fp 002F  
                    i1xtoa@fp 002F                    vfprintf@ap 01B0                    vfprintf@fp 01AC  
           i1___awmod@divisor 0070             i1___awmod@counter 0074                    ?_vfpfcnvrt 019B  
          __end_of__stringtab 07FA                    sprintf@fmt 01B3                      _dtoa$616 0190  
             ___lwdiv@divisor 00B2               ___lwdiv@counter 00B6                      __ptext10 0A65  
                    __ptext11 0DCD                      __ptext20 07FF                      __ptext12 13DB  
                    __ptext21 1187                      __ptext13 10C5                      __ptext30 166C  
                    __ptext22 1532                      __ptext14 1161                      __ptext31 10D7  
                    __ptext23 11DA                      __ptext15 10A5                      __ptext40 0802  
                    __ptext32 09AF                      __ptext24 1269                      __ptext16 1392  
                    __ptext41 16DE                      __ptext33 0C01                      __ptext25 0454  
                    __ptext17 1484                      __ptext42 0003                      __ptext34 14D9  
                    __ptext26 0B25                      __ptext18 1591                      __ptext43 1119  
                    __ptext35 10B3                      __ptext27 0878                      __ptext19 176D  
                    __ptext36 113B                      __ptext28 1209                      __ptext37 1097  
                    __ptext29 12D5                      __ptext38 1349                      __ptext39 142F  
          i1___lwdiv@dividend 0072                      _xtoa$641 0191                      main@i_70 01E5  
                    _vfprintf 129E                      main@bits 01E1            i1___lwdiv@quotient 0074  
               xtoa@d_nonzero 0195                      intlevel1 0000                     sprintf@ap 01C5  
            ___lwmod@dividend 00B4                     stringcode 07F4                 ??i1_vfpfcnvrt 0044  
                 ??_vfpfcnvrt 01A0                    _OPTION_REG 0081                      sprintf@f 01BA  
                    sprintf@s 01B1               ___lwmod@divisor 00B2               ___lwmod@counter 00B6  
                    stringdir 07F4                      stringtab 07EA  
