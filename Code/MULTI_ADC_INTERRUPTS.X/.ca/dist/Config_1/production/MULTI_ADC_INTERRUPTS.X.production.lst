

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Dec 21 20:58:04 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,space=0,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61     0000                     
    62                           ; Generated 12/10/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F877A Definitions
    94                           ; 
    95                           ; SFR Addresses
    96     0004                     fsr             equ	4
    97     0004                     fsr0            equ	4
    98     0000                     indf            equ	0
    99     0000                     indf0           equ	0
   100     0002                     pc              equ	2
   101     0002                     pcl             equ	2
   102     000A                     pclath          equ	10
   103     0003                     status          equ	3
   104     0000                     INDF            equ	0	;# 
   105     0001                     TMR0            equ	1	;# 
   106     0002                     PCL             equ	2	;# 
   107     0003                     STATUS          equ	3	;# 
   108     0004                     FSR             equ	4	;# 
   109     0005                     PORTA           equ	5	;# 
   110     0006                     PORTB           equ	6	;# 
   111     0007                     PORTC           equ	7	;# 
   112     0008                     PORTD           equ	8	;# 
   113     0009                     PORTE           equ	9	;# 
   114     000A                     PCLATH          equ	10	;# 
   115     000B                     INTCON          equ	11	;# 
   116     000C                     PIR1            equ	12	;# 
   117     000D                     PIR2            equ	13	;# 
   118     000E                     TMR1            equ	14	;# 
   119     000E                     TMR1L           equ	14	;# 
   120     000F                     TMR1H           equ	15	;# 
   121     0010                     T1CON           equ	16	;# 
   122     0011                     TMR2            equ	17	;# 
   123     0012                     T2CON           equ	18	;# 
   124     0013                     SSPBUF          equ	19	;# 
   125     0014                     SSPCON          equ	20	;# 
   126     0015                     CCPR1           equ	21	;# 
   127     0015                     CCPR1L          equ	21	;# 
   128     0016                     CCPR1H          equ	22	;# 
   129     0017                     CCP1CON         equ	23	;# 
   130     0018                     RCSTA           equ	24	;# 
   131     0019                     TXREG           equ	25	;# 
   132     001A                     RCREG           equ	26	;# 
   133     001B                     CCPR2           equ	27	;# 
   134     001B                     CCPR2L          equ	27	;# 
   135     001C                     CCPR2H          equ	28	;# 
   136     001D                     CCP2CON         equ	29	;# 
   137     001E                     ADRESH          equ	30	;# 
   138     001F                     ADCON0          equ	31	;# 
   139     0081                     OPTION_REG      equ	129	;# 
   140     0085                     TRISA           equ	133	;# 
   141     0086                     TRISB           equ	134	;# 
   142     0087                     TRISC           equ	135	;# 
   143     0088                     TRISD           equ	136	;# 
   144     0089                     TRISE           equ	137	;# 
   145     008C                     PIE1            equ	140	;# 
   146     008D                     PIE2            equ	141	;# 
   147     008E                     PCON            equ	142	;# 
   148     0091                     SSPCON2         equ	145	;# 
   149     0092                     PR2             equ	146	;# 
   150     0093                     SSPADD          equ	147	;# 
   151     0094                     SSPSTAT         equ	148	;# 
   152     0098                     TXSTA           equ	152	;# 
   153     0099                     SPBRG           equ	153	;# 
   154     009C                     CMCON           equ	156	;# 
   155     009D                     CVRCON          equ	157	;# 
   156     009E                     ADRESL          equ	158	;# 
   157     009F                     ADCON1          equ	159	;# 
   158     010C                     EEDATA          equ	268	;# 
   159     010D                     EEADR           equ	269	;# 
   160     010E                     EEDATH          equ	270	;# 
   161     010F                     EEADRH          equ	271	;# 
   162     018C                     EECON1          equ	396	;# 
   163     018D                     EECON2          equ	397	;# 
   164     0000                     INDF            equ	0	;# 
   165     0001                     TMR0            equ	1	;# 
   166     0002                     PCL             equ	2	;# 
   167     0003                     STATUS          equ	3	;# 
   168     0004                     FSR             equ	4	;# 
   169     0005                     PORTA           equ	5	;# 
   170     0006                     PORTB           equ	6	;# 
   171     0007                     PORTC           equ	7	;# 
   172     0008                     PORTD           equ	8	;# 
   173     0009                     PORTE           equ	9	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PIR1            equ	12	;# 
   177     000D                     PIR2            equ	13	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0011                     TMR2            equ	17	;# 
   183     0012                     T2CON           equ	18	;# 
   184     0013                     SSPBUF          equ	19	;# 
   185     0014                     SSPCON          equ	20	;# 
   186     0015                     CCPR1           equ	21	;# 
   187     0015                     CCPR1L          equ	21	;# 
   188     0016                     CCPR1H          equ	22	;# 
   189     0017                     CCP1CON         equ	23	;# 
   190     0018                     RCSTA           equ	24	;# 
   191     0019                     TXREG           equ	25	;# 
   192     001A                     RCREG           equ	26	;# 
   193     001B                     CCPR2           equ	27	;# 
   194     001B                     CCPR2L          equ	27	;# 
   195     001C                     CCPR2H          equ	28	;# 
   196     001D                     CCP2CON         equ	29	;# 
   197     001E                     ADRESH          equ	30	;# 
   198     001F                     ADCON0          equ	31	;# 
   199     0081                     OPTION_REG      equ	129	;# 
   200     0085                     TRISA           equ	133	;# 
   201     0086                     TRISB           equ	134	;# 
   202     0087                     TRISC           equ	135	;# 
   203     0088                     TRISD           equ	136	;# 
   204     0089                     TRISE           equ	137	;# 
   205     008C                     PIE1            equ	140	;# 
   206     008D                     PIE2            equ	141	;# 
   207     008E                     PCON            equ	142	;# 
   208     0091                     SSPCON2         equ	145	;# 
   209     0092                     PR2             equ	146	;# 
   210     0093                     SSPADD          equ	147	;# 
   211     0094                     SSPSTAT         equ	148	;# 
   212     0098                     TXSTA           equ	152	;# 
   213     0099                     SPBRG           equ	153	;# 
   214     009C                     CMCON           equ	156	;# 
   215     009D                     CVRCON          equ	157	;# 
   216     009E                     ADRESL          equ	158	;# 
   217     009F                     ADCON1          equ	159	;# 
   218     010C                     EEDATA          equ	268	;# 
   219     010D                     EEADR           equ	269	;# 
   220     010E                     EEDATH          equ	270	;# 
   221     010F                     EEADRH          equ	271	;# 
   222     018C                     EECON1          equ	396	;# 
   223     018D                     EECON2          equ	397	;# 
   224     001E                     _ADRESH         set	30
   225     001F                     _ADCON0         set	31
   226     0008                     _PORTD          set	8
   227     0007                     _PORTC          set	7
   228     0059                     _INTF           set	89
   229     0041                     _RD1            set	65
   230     0040                     _RD0            set	64
   231     00FA                     _GO_nDONE       set	250
   232     005F                     _GIE            set	95
   233     005C                     _INTE           set	92
   234     009E                     _ADRESL         set	158
   235     0081                     _OPTION_REG     set	129
   236     009F                     _ADCON1         set	159
   237     0088                     _TRISD          set	136
   238     0087                     _TRISC          set	135
   239                           
   240                           	psect	strings
   241     1000                     __pstrings:
   242     1000                     stringtab:
   243     1000                     __stringtab:
   244                           
   245                           ;	String table - string pointers are 1 byte each
   246     1000  1BFF               	btfsc	btemp+1,7
   247     1001  280A               	ljmp	stringcode
   248     1002  1383               	bcf	3,7
   249     1003  187F               	btfsc	btemp+1,0
   250     1004  1783               	bsf	3,7
   251     1005  0800               	movf	0,w
   252     1006  0A84               	incf	4,f
   253     1007  1903               	skipnz
   254     1008  0AFF               	incf	btemp+1,f
   255     1009  0008               	return
   256     100A                     stringcode:
   257     100A                     stringdir:
   258     100A  3010               	movlw	high stringdir
   259     100B  008A               	movwf	10
   260     100C  0804               	movf	4,w
   261     100D  0A84               	incf	4,f
   262     100E  0782               	addwf	2,f
   263     100F                     __stringbase:
   264     100F  3400               	retlw	0
   265     1010                     __end_of__stringtab:
   266     1010                     STR_1:
   267     1010  3425               	retlw	37	;'%'
   268     1011  3430               	retlw	48	;'0'
   269     1012  3434               	retlw	52	;'4'
   270     1013  3464               	retlw	100	;'d'
   271     1014  3400               	retlw	0
   272     1010                     STR_2           equ	STR_1
   273                           
   274                           	psect	cinit
   275     0015                     start_initialization:	
   276                           ; #config settings
   277                           
   278     0015                     __initialization:
   279                           
   280                           ; Clear objects allocated to BANK1
   281     0015  1683               	bsf	3,5	;RP0=1, select bank1
   282     0016  1303               	bcf	3,6	;RP1=0, select bank1
   283     0017  01D7               	clrf	__pbssBANK1& (0+127)
   284     0018  01D8               	clrf	(__pbssBANK1+1)& (0+127)
   285     0019  01D9               	clrf	(__pbssBANK1+2)& (0+127)
   286     001A  01DA               	clrf	(__pbssBANK1+3)& (0+127)
   287     001B  01DB               	clrf	(__pbssBANK1+4)& (0+127)
   288     001C  01DC               	clrf	(__pbssBANK1+5)& (0+127)
   289     001D  01DD               	clrf	(__pbssBANK1+6)& (0+127)
   290                           
   291                           ; Clear objects allocated to BANK3
   292     001E  1683               	bsf	3,5	;RP0=1, select bank3
   293     001F  1703               	bsf	3,6	;RP1=1, select bank3
   294     0020  01E7               	clrf	__pbssBANK3& (0+127)
   295     0021  01E8               	clrf	(__pbssBANK3+1)& (0+127)
   296                           
   297                           ; Clear objects allocated to BANK2
   298     0022  1783               	bsf	3,7	;select IRP bank2
   299     0023  3010               	movlw	low __pbssBANK2
   300     0024  0084               	movwf	4
   301     0025  3030               	movlw	low (__pbssBANK2+32)
   302     0026  120A  158A  2000   	fcall	clear_ram0
   303     0029                     end_of_initialization:	
   304                           ;End of C runtime variable initialization code
   305                           
   306     0029                     __end_of__initialization:
   307     0029  0183               	clrf	3
   308     002A  120A  118A  2CB4   	ljmp	_main	;jump to C main() function
   309                           
   310                           	psect	bssBANK1
   311     00D7                     __pbssBANK1:
   312     00D7                     _width:
   313     00D7                     	ds	2
   314     00D9                     _prec:
   315     00D9                     	ds	2
   316     00DB                     _count:
   317     00DB                     	ds	2
   318     00DD                     _flags:
   319     00DD                     	ds	1
   320                           
   321                           	psect	bssBANK3
   322     01E7                     __pbssBANK3:
   323     01E7                     _nout:
   324     01E7                     	ds	2
   325                           
   326                           	psect	bssBANK2
   327     0110                     __pbssBANK2:
   328     0110                     _dbuf:
   329     0110                     	ds	32
   330                           
   331                           	psect	clrtext
   332     0800                     clear_ram0:	
   333                           ;	Called with FSR containing the base address, and
   334                           ;	W with the last address+1
   335                           
   336     0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   337     0801                     clrloop0:
   338     0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   339     0802  0A84               	incf	4,f	;increment pointer
   340     0803  0604               	xorwf	4,w	;XOR with final address
   341     0804  1903               	btfsc	3,2	;have we reached the end yet?
   342     0805  3400               	retlw	0	;all done for this memory range, return
   343     0806  0604               	xorwf	4,w	;XOR again to restore value
   344     0807  2801               	goto	clrloop0	;do the next byte
   345                           
   346                           	psect	cstackBANK3
   347     0190                     __pcstackBANK3:
   348     0190                     xtoa@a:
   349     0190                     _dtoa$616:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0190                     otoa@p:	
   353                           ; 2 bytes @ 0x0
   354                           
   355     0190                     utoa@p:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 2 bytes @ 0x0
   360     0190                     	ds	1
   361     0191                     _xtoa$641:
   362                           
   363                           ; 2 bytes @ 0x1
   364     0191                     	ds	1
   365     0192                     dtoa@p:
   366     0192                     otoa@w:	
   367                           ; 2 bytes @ 0x2
   368                           
   369     0192                     utoa@w:	
   370                           ; 2 bytes @ 0x2
   371                           
   372                           
   373                           ; 2 bytes @ 0x2
   374     0192                     	ds	1
   375     0193                     xtoa@p:
   376                           
   377                           ; 2 bytes @ 0x3
   378     0193                     	ds	1
   379     0194                     otoa@t:
   380     0194                     dtoa@w:	
   381                           ; 1 bytes @ 0x4
   382                           
   383     0194                     utoa@i:	
   384                           ; 2 bytes @ 0x4
   385                           
   386                           
   387                           ; 2 bytes @ 0x4
   388     0194                     	ds	1
   389     0195                     xtoa@d_nonzero:
   390     0195                     otoa@i:	
   391                           ; 1 bytes @ 0x5
   392                           
   393                           
   394                           ; 2 bytes @ 0x5
   395     0195                     	ds	1
   396     0196                     dtoa@s:
   397     0196                     xtoa@w:	
   398                           ; 1 bytes @ 0x6
   399                           
   400                           
   401                           ; 2 bytes @ 0x6
   402     0196                     	ds	1
   403     0197                     dtoa@i:
   404                           
   405                           ; 2 bytes @ 0x7
   406     0197                     	ds	1
   407     0198                     xtoa@c:
   408                           
   409                           ; 1 bytes @ 0x8
   410     0198                     	ds	1
   411     0199                     xtoa@i:
   412                           
   413                           ; 2 bytes @ 0x9
   414     0199                     	ds	2
   415     019B                     ?_vfpfcnvrt:
   416     019B                     vfpfcnvrt@fp:	
   417                           ; 2 bytes @ 0xB
   418                           
   419                           
   420                           ; 2 bytes @ 0xB
   421     019B                     	ds	2
   422     019D                     vfpfcnvrt@fmt:
   423                           
   424                           ; 1 bytes @ 0xD
   425     019D                     	ds	1
   426     019E                     vfpfcnvrt@ap:
   427                           
   428                           ; 2 bytes @ 0xE
   429     019E                     	ds	2
   430     01A0                     ??_vfpfcnvrt:
   431                           
   432                           ; 1 bytes @ 0x10
   433     01A0                     	ds	4
   434     01A4                     vfpfcnvrt@done:
   435                           
   436                           ; 1 bytes @ 0x14
   437     01A4                     	ds	1
   438     01A5                     vfpfcnvrt@c:
   439                           
   440                           ; 1 bytes @ 0x15
   441     01A5                     	ds	1
   442     01A6                     vfpfcnvrt@convarg:
   443                           
   444                           ; 4 bytes @ 0x16
   445     01A6                     	ds	4
   446     01AA                     vfpfcnvrt@cp:
   447                           
   448                           ; 2 bytes @ 0x1A
   449     01AA                     	ds	2
   450     01AC                     ?_vfprintf:
   451     01AC                     vfprintf@fp:	
   452                           ; 2 bytes @ 0x1C
   453                           
   454                           
   455                           ; 2 bytes @ 0x1C
   456     01AC                     	ds	2
   457     01AE                     vfprintf@fmt:
   458                           
   459                           ; 2 bytes @ 0x1E
   460     01AE                     	ds	2
   461     01B0                     vfprintf@ap:
   462                           
   463                           ; 1 bytes @ 0x20
   464     01B0                     	ds	1
   465     01B1                     ?_sprintf:
   466     01B1                     sprintf@s:	
   467                           ; 2 bytes @ 0x21
   468                           
   469                           
   470                           ; 2 bytes @ 0x21
   471     01B1                     	ds	2
   472     01B3                     sprintf@fmt:
   473                           
   474                           ; 2 bytes @ 0x23
   475     01B3                     	ds	4
   476     01B7                     ??_sprintf:
   477                           
   478                           ; 1 bytes @ 0x27
   479     01B7                     	ds	3
   480     01BA                     sprintf@f:
   481                           
   482                           ; 11 bytes @ 0x2A
   483     01BA                     	ds	11
   484     01C5                     sprintf@ap:
   485                           
   486                           ; 1 bytes @ 0x35
   487     01C5                     	ds	1
   488     01C6                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x36
   491     01C6                     	ds	3
   492     01C9                     main@a:
   493                           
   494                           ; 10 bytes @ 0x39
   495     01C9                     	ds	10
   496     01D3                     main@b:
   497                           
   498                           ; 10 bytes @ 0x43
   499     01D3                     	ds	10
   500     01DD                     main@Low_bits:
   501                           
   502                           ; 2 bytes @ 0x4D
   503     01DD                     	ds	2
   504     01DF                     main@high_bits:
   505                           
   506                           ; 2 bytes @ 0x4F
   507     01DF                     	ds	2
   508     01E1                     main@bits:
   509                           
   510                           ; 2 bytes @ 0x51
   511     01E1                     	ds	2
   512     01E3                     main@i:
   513                           
   514                           ; 2 bytes @ 0x53
   515     01E3                     	ds	2
   516     01E5                     main@i_70:
   517                           
   518                           ; 2 bytes @ 0x55
   519     01E5                     	ds	2
   520                           
   521                           	psect	cstackBANK1
   522     00A0                     __pcstackBANK1:
   523     00A0                     ??_ISR:
   524                           
   525                           ; 1 bytes @ 0x0
   526     00A0                     	ds	6
   527     00A6                     ISR@c:
   528                           
   529                           ; 10 bytes @ 0x6
   530     00A6                     	ds	10
   531     00B0                     ISR@i:
   532                           
   533                           ; 2 bytes @ 0x10
   534     00B0                     	ds	2
   535     00B2                     ?_display:
   536     00B2                     ?_fputc:	
   537                           ; 1 bytes @ 0x12
   538                           
   539     00B2                     ?_strlen:	
   540                           ; 2 bytes @ 0x12
   541                           
   542     00B2                     ?___wmul:	
   543                           ; 2 bytes @ 0x12
   544                           
   545     00B2                     ?___awdiv:	
   546                           ; 2 bytes @ 0x12
   547                           
   548     00B2                     ?___awmod:	
   549                           ; 2 bytes @ 0x12
   550                           
   551     00B2                     ?___lwdiv:	
   552                           ; 2 bytes @ 0x12
   553                           
   554     00B2                     ?___lwmod:	
   555                           ; 2 bytes @ 0x12
   556                           
   557     00B2                     strlen@s:	
   558                           ; 2 bytes @ 0x12
   559                           
   560     00B2                     display@RS:	
   561                           ; 1 bytes @ 0x12
   562                           
   563     00B2                     ___wmul@multiplier:	
   564                           ; 2 bytes @ 0x12
   565                           
   566     00B2                     ___awdiv@divisor:	
   567                           ; 2 bytes @ 0x12
   568                           
   569     00B2                     ___awmod@divisor:	
   570                           ; 2 bytes @ 0x12
   571                           
   572     00B2                     ___lwdiv@divisor:	
   573                           ; 2 bytes @ 0x12
   574                           
   575     00B2                     ___lwmod@divisor:	
   576                           ; 2 bytes @ 0x12
   577                           
   578     00B2                     fputc@c:	
   579                           ; 2 bytes @ 0x12
   580                           
   581     00B2                     ??_putch:	
   582                           ; 2 bytes @ 0x12
   583                           
   584                           
   585                           ; 1 bytes @ 0x12
   586     00B2                     	ds	2
   587     00B4                     strlen@a:
   588     00B4                     display@DC:	
   589                           ; 1 bytes @ 0x14
   590                           
   591     00B4                     ___wmul@multiplicand:	
   592                           ; 2 bytes @ 0x14
   593                           
   594     00B4                     ___awdiv@dividend:	
   595                           ; 2 bytes @ 0x14
   596                           
   597     00B4                     ___awmod@dividend:	
   598                           ; 2 bytes @ 0x14
   599                           
   600     00B4                     ___lwdiv@dividend:	
   601                           ; 2 bytes @ 0x14
   602                           
   603     00B4                     ___lwmod@dividend:	
   604                           ; 2 bytes @ 0x14
   605                           
   606     00B4                     fputc@fp:	
   607                           ; 2 bytes @ 0x14
   608                           
   609     00B4                     ??_strlen:	
   610                           ; 2 bytes @ 0x14
   611                           
   612                           
   613                           ; 1 bytes @ 0x14
   614     00B4                     	ds	2
   615     00B6                     ___awdiv@counter:
   616     00B6                     ___awmod@counter:	
   617                           ; 1 bytes @ 0x16
   618                           
   619     00B6                     ___lwdiv@counter:	
   620                           ; 1 bytes @ 0x16
   621                           
   622     00B6                     ___lwmod@counter:	
   623                           ; 1 bytes @ 0x16
   624                           
   625     00B6                     ___wmul@product:	
   626                           ; 1 bytes @ 0x16
   627                           
   628     00B6                     ??_display:	
   629                           ; 2 bytes @ 0x16
   630                           
   631     00B6                     ??_fputc:	
   632                           ; 1 bytes @ 0x16
   633                           
   634     00B6                     ??___wmul:	
   635                           ; 1 bytes @ 0x16
   636                           
   637     00B6                     ??___awdiv:	
   638                           ; 1 bytes @ 0x16
   639                           
   640     00B6                     ??___awmod:	
   641                           ; 1 bytes @ 0x16
   642                           
   643     00B6                     ??___lwdiv:	
   644                           ; 1 bytes @ 0x16
   645                           
   646     00B6                     ??___lwmod:	
   647                           ; 1 bytes @ 0x16
   648                           
   649                           
   650                           ; 1 bytes @ 0x16
   651     00B6                     	ds	1
   652     00B7                     ___awdiv@sign:
   653     00B7                     ___awmod@sign:	
   654                           ; 1 bytes @ 0x17
   655                           
   656     00B7                     ___lwdiv@quotient:	
   657                           ; 1 bytes @ 0x17
   658                           
   659                           
   660                           ; 2 bytes @ 0x17
   661     00B7                     	ds	1
   662     00B8                     ?_abs:
   663     00B8                     ?_read_prec_or_width:	
   664                           ; 2 bytes @ 0x18
   665                           
   666     00B8                     read_prec_or_width@fmt:	
   667                           ; 2 bytes @ 0x18
   668                           
   669     00B8                     ___awdiv@quotient:	
   670                           ; 1 bytes @ 0x18
   671                           
   672     00B8                     abs@a:	
   673                           ; 2 bytes @ 0x18
   674                           
   675                           
   676                           ; 2 bytes @ 0x18
   677     00B8                     	ds	1
   678     00B9                     read_prec_or_width@ap:
   679                           
   680                           ; 1 bytes @ 0x19
   681     00B9                     	ds	1
   682     00BA                     ??_abs:
   683     00BA                     ??_read_prec_or_width:	
   684                           ; 1 bytes @ 0x1A
   685                           
   686                           
   687                           ; 1 bytes @ 0x1A
   688     00BA                     	ds	2
   689     00BC                     read_prec_or_width@c:
   690                           
   691                           ; 1 bytes @ 0x1C
   692     00BC                     	ds	1
   693     00BD                     read_prec_or_width@n:
   694                           
   695                           ; 2 bytes @ 0x1D
   696     00BD                     	ds	2
   697     00BF                     ?_fputs:
   698     00BF                     ?_ctoa:	
   699                           ; 2 bytes @ 0x1F
   700                           
   701     00BF                     fputs@s:	
   702                           ; 2 bytes @ 0x1F
   703                           
   704     00BF                     ctoa@fp:	
   705                           ; 1 bytes @ 0x1F
   706                           
   707                           
   708                           ; 2 bytes @ 0x1F
   709     00BF                     	ds	1
   710     00C0                     fputs@fp:
   711                           
   712                           ; 2 bytes @ 0x20
   713     00C0                     	ds	1
   714     00C1                     ctoa@c:
   715                           
   716                           ; 1 bytes @ 0x21
   717     00C1                     	ds	1
   718     00C2                     ??_fputs:
   719     00C2                     ??_ctoa:	
   720                           ; 1 bytes @ 0x22
   721                           
   722                           
   723                           ; 1 bytes @ 0x22
   724     00C2                     	ds	2
   725     00C4                     fputs@c:
   726     00C4                     ctoa@l:	
   727                           ; 1 bytes @ 0x24
   728                           
   729                           
   730                           ; 2 bytes @ 0x24
   731     00C4                     	ds	1
   732     00C5                     fputs@i:
   733                           
   734                           ; 2 bytes @ 0x25
   735     00C5                     	ds	1
   736     00C6                     ctoa@w:
   737                           
   738                           ; 2 bytes @ 0x26
   739     00C6                     	ds	1
   740     00C7                     ?_pad:
   741     00C7                     pad@fp:	
   742                           ; 2 bytes @ 0x27
   743                           
   744                           
   745                           ; 2 bytes @ 0x27
   746     00C7                     	ds	2
   747     00C9                     pad@buf:
   748                           
   749                           ; 1 bytes @ 0x29
   750     00C9                     	ds	1
   751     00CA                     pad@p:
   752                           
   753                           ; 2 bytes @ 0x2A
   754     00CA                     	ds	2
   755     00CC                     ??_pad:
   756                           
   757                           ; 1 bytes @ 0x2C
   758     00CC                     	ds	1
   759     00CD                     pad@i:
   760                           
   761                           ; 2 bytes @ 0x2D
   762     00CD                     	ds	2
   763     00CF                     ?_dtoa:
   764     00CF                     ?_otoa:	
   765                           ; 2 bytes @ 0x2F
   766                           
   767     00CF                     ?_utoa:	
   768                           ; 2 bytes @ 0x2F
   769                           
   770     00CF                     ?_xtoa:	
   771                           ; 2 bytes @ 0x2F
   772                           
   773     00CF                     dtoa@fp:	
   774                           ; 2 bytes @ 0x2F
   775                           
   776     00CF                     otoa@fp:	
   777                           ; 2 bytes @ 0x2F
   778                           
   779     00CF                     utoa@fp:	
   780                           ; 2 bytes @ 0x2F
   781                           
   782     00CF                     xtoa@fp:	
   783                           ; 2 bytes @ 0x2F
   784                           
   785                           
   786                           ; 2 bytes @ 0x2F
   787     00CF                     	ds	2
   788     00D1                     dtoa@d:
   789     00D1                     otoa@d:	
   790                           ; 2 bytes @ 0x31
   791                           
   792     00D1                     utoa@d:	
   793                           ; 2 bytes @ 0x31
   794                           
   795     00D1                     xtoa@d:	
   796                           ; 2 bytes @ 0x31
   797                           
   798                           
   799                           ; 2 bytes @ 0x31
   800     00D1                     	ds	2
   801     00D3                     xtoa@x:
   802     00D3                     ??_dtoa:	
   803                           ; 1 bytes @ 0x33
   804                           
   805     00D3                     ??_otoa:	
   806                           ; 1 bytes @ 0x33
   807                           
   808     00D3                     ??_utoa:	
   809                           ; 1 bytes @ 0x33
   810                           
   811                           
   812                           ; 1 bytes @ 0x33
   813     00D3                     	ds	1
   814     00D4                     ??_xtoa:
   815                           
   816                           ; 1 bytes @ 0x34
   817     00D4                     	ds	1
   818     00D5                     vfprintf@cfmt:
   819     00D5                     ??_vfprintf:	
   820                           ; 2 bytes @ 0x35
   821                           
   822                           
   823                           ; 1 bytes @ 0x35
   824     00D5                     	ds	2
   825                           
   826                           	psect	cstackCOMMON
   827     0070                     __pcstackCOMMON:
   828     0070                     ?_putch:
   829     0070                     ?_main:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?_ISR:	
   833                           ; 1 bytes @ 0x0
   834                           
   835     0070                     ?i1_display:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     ?i1_putch:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     ?i1___wmul:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     ?i1___awdiv:	
   845                           ; 2 bytes @ 0x0
   846                           
   847     0070                     ?i1___awmod:	
   848                           ; 2 bytes @ 0x0
   849                           
   850     0070                     ?i1___lwdiv:	
   851                           ; 2 bytes @ 0x0
   852                           
   853     0070                     ?i1___lwmod:	
   854                           ; 2 bytes @ 0x0
   855                           
   856     0070                     ?i1_fputc:	
   857                           ; 2 bytes @ 0x0
   858                           
   859     0070                     ?i1_strlen:	
   860                           ; 2 bytes @ 0x0
   861                           
   862     0070                     putch@c:	
   863                           ; 2 bytes @ 0x0
   864                           
   865     0070                     i1strlen@s:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     i1display@RS:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     i1___wmul@multiplier:	
   872                           ; 2 bytes @ 0x0
   873                           
   874     0070                     i1___awdiv@divisor:	
   875                           ; 2 bytes @ 0x0
   876                           
   877     0070                     i1___awmod@divisor:	
   878                           ; 2 bytes @ 0x0
   879                           
   880     0070                     i1___lwdiv@divisor:	
   881                           ; 2 bytes @ 0x0
   882                           
   883     0070                     i1___lwmod@divisor:	
   884                           ; 2 bytes @ 0x0
   885                           
   886     0070                     i1fputc@c:	
   887                           ; 2 bytes @ 0x0
   888                           
   889     0070                     ??i1_putch:	
   890                           ; 2 bytes @ 0x0
   891                           
   892                           
   893                           ; 1 bytes @ 0x0
   894     0070                     	ds	2
   895     0072                     i1strlen@a:
   896     0072                     i1display@DC:	
   897                           ; 1 bytes @ 0x2
   898                           
   899     0072                     i1___wmul@multiplicand:	
   900                           ; 2 bytes @ 0x2
   901                           
   902     0072                     i1___awdiv@dividend:	
   903                           ; 2 bytes @ 0x2
   904                           
   905     0072                     i1___awmod@dividend:	
   906                           ; 2 bytes @ 0x2
   907                           
   908     0072                     i1___lwdiv@dividend:	
   909                           ; 2 bytes @ 0x2
   910                           
   911     0072                     i1___lwmod@dividend:	
   912                           ; 2 bytes @ 0x2
   913                           
   914     0072                     i1fputc@fp:	
   915                           ; 2 bytes @ 0x2
   916                           
   917     0072                     ??i1_strlen:	
   918                           ; 2 bytes @ 0x2
   919                           
   920                           
   921                           ; 1 bytes @ 0x2
   922     0072                     	ds	2
   923     0074                     i1___awdiv@counter:
   924     0074                     i1___awmod@counter:	
   925                           ; 1 bytes @ 0x4
   926                           
   927     0074                     i1___lwmod@counter:	
   928                           ; 1 bytes @ 0x4
   929                           
   930     0074                     i1___wmul@product:	
   931                           ; 1 bytes @ 0x4
   932                           
   933     0074                     i1___lwdiv@quotient:	
   934                           ; 2 bytes @ 0x4
   935                           
   936     0074                     ??i1_display:	
   937                           ; 2 bytes @ 0x4
   938                           
   939     0074                     ??i1___wmul:	
   940                           ; 1 bytes @ 0x4
   941                           
   942     0074                     ??i1___awdiv:	
   943                           ; 1 bytes @ 0x4
   944                           
   945     0074                     ??i1___awmod:	
   946                           ; 1 bytes @ 0x4
   947                           
   948     0074                     ??i1___lwdiv:	
   949                           ; 1 bytes @ 0x4
   950                           
   951     0074                     ??i1___lwmod:	
   952                           ; 1 bytes @ 0x4
   953                           
   954     0074                     ??i1_fputc:	
   955                           ; 1 bytes @ 0x4
   956                           
   957                           
   958                           ; 1 bytes @ 0x4
   959     0074                     	ds	1
   960     0075                     i1___awdiv@sign:
   961     0075                     i1___awmod@sign:	
   962                           ; 1 bytes @ 0x5
   963                           
   964                           
   965                           ; 1 bytes @ 0x5
   966     0075                     	ds	1
   967     0076                     ?i1_read_prec_or_width:
   968     0076                     ?i1_abs:	
   969                           ; 2 bytes @ 0x6
   970                           
   971     0076                     i1___lwdiv@counter:	
   972                           ; 2 bytes @ 0x6
   973                           
   974     0076                     i1read_prec_or_width@fmt:	
   975                           ; 1 bytes @ 0x6
   976                           
   977     0076                     i1___awdiv@quotient:	
   978                           ; 1 bytes @ 0x6
   979                           
   980     0076                     i1abs@a:	
   981                           ; 2 bytes @ 0x6
   982                           
   983                           
   984                           ; 2 bytes @ 0x6
   985     0076                     	ds	1
   986     0077                     i1read_prec_or_width@ap:
   987                           
   988                           ; 2 bytes @ 0x7
   989     0077                     	ds	1
   990     0078                     ??i1_abs:
   991                           
   992                           ; 1 bytes @ 0x8
   993     0078                     	ds	1
   994     0079                     ??i1_read_prec_or_width:
   995                           
   996                           ; 1 bytes @ 0x9
   997     0079                     	ds	2
   998     007B                     i1read_prec_or_width@c:
   999                           
  1000                           ; 1 bytes @ 0xB
  1001     007B                     	ds	1
  1002     007C                     i1read_prec_or_width@n:
  1003                           
  1004                           ; 2 bytes @ 0xC
  1005     007C                     	ds	1
  1006     007D                     ??i1_pad:
  1007                           
  1008                           ; 1 bytes @ 0xD
  1009     007D                     	ds	1
  1010     007E                     ??i1_dtoa:
  1011     007E                     ??i1_utoa:	
  1012                           ; 1 bytes @ 0xE
  1013                           
  1014     007E                     ??i1_xtoa:	
  1015                           ; 1 bytes @ 0xE
  1016                           
  1017     007E                     ??i1_vfprintf:	
  1018                           ; 1 bytes @ 0xE
  1019                           
  1020                           
  1021                           	psect	cstackBANK0
  1022     0020                     __pcstackBANK0:	
  1023                           ; 1 bytes @ 0xE
  1024                           
  1025     0020                     ?i1_ctoa:
  1026     0020                     ?i1_fputs:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029     0020                     i1fputs@s:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032     0020                     i1ctoa@fp:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x0
  1037     0020                     	ds	1
  1038     0021                     i1fputs@fp:
  1039                           
  1040                           ; 2 bytes @ 0x1
  1041     0021                     	ds	1
  1042     0022                     i1ctoa@c:
  1043                           
  1044                           ; 1 bytes @ 0x2
  1045     0022                     	ds	1
  1046     0023                     ??i1_ctoa:
  1047     0023                     ??i1_fputs:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x3
  1052     0023                     	ds	2
  1053     0025                     i1fputs@c:
  1054     0025                     i1ctoa@l:	
  1055                           ; 1 bytes @ 0x5
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x5
  1059     0025                     	ds	1
  1060     0026                     i1fputs@i:
  1061                           
  1062                           ; 2 bytes @ 0x6
  1063     0026                     	ds	1
  1064     0027                     i1ctoa@w:
  1065                           
  1066                           ; 2 bytes @ 0x7
  1067     0027                     	ds	1
  1068     0028                     ?i1_pad:
  1069     0028                     i1pad@fp:	
  1070                           ; 2 bytes @ 0x8
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x8
  1074     0028                     	ds	2
  1075     002A                     i1pad@buf:
  1076                           
  1077                           ; 1 bytes @ 0xA
  1078     002A                     	ds	1
  1079     002B                     i1pad@p:
  1080                           
  1081                           ; 2 bytes @ 0xB
  1082     002B                     	ds	2
  1083     002D                     i1pad@i:
  1084                           
  1085                           ; 2 bytes @ 0xD
  1086     002D                     	ds	2
  1087     002F                     ?i1_dtoa:
  1088     002F                     ?i1_otoa:	
  1089                           ; 2 bytes @ 0xF
  1090                           
  1091     002F                     ?i1_utoa:	
  1092                           ; 2 bytes @ 0xF
  1093                           
  1094     002F                     ?i1_xtoa:	
  1095                           ; 2 bytes @ 0xF
  1096                           
  1097     002F                     i1dtoa@fp:	
  1098                           ; 2 bytes @ 0xF
  1099                           
  1100     002F                     i1otoa@fp:	
  1101                           ; 2 bytes @ 0xF
  1102                           
  1103     002F                     i1utoa@fp:	
  1104                           ; 2 bytes @ 0xF
  1105                           
  1106     002F                     i1xtoa@fp:	
  1107                           ; 2 bytes @ 0xF
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0xF
  1111     002F                     	ds	2
  1112     0031                     i1dtoa@d:
  1113     0031                     i1otoa@d:	
  1114                           ; 2 bytes @ 0x11
  1115                           
  1116     0031                     i1utoa@d:	
  1117                           ; 2 bytes @ 0x11
  1118                           
  1119     0031                     i1xtoa@d:	
  1120                           ; 2 bytes @ 0x11
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x11
  1124     0031                     	ds	2
  1125     0033                     i1xtoa@x:
  1126     0033                     i1_dtoa$616:	
  1127                           ; 1 bytes @ 0x13
  1128                           
  1129     0033                     i1utoa@p:	
  1130                           ; 2 bytes @ 0x13
  1131                           
  1132     0033                     ??i1_otoa:	
  1133                           ; 2 bytes @ 0x13
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x13
  1137     0033                     	ds	1
  1138     0034                     i1_xtoa$641:
  1139                           
  1140                           ; 2 bytes @ 0x14
  1141     0034                     	ds	1
  1142     0035                     i1dtoa@p:
  1143     0035                     i1otoa@p:	
  1144                           ; 2 bytes @ 0x15
  1145                           
  1146     0035                     i1utoa@w:	
  1147                           ; 2 bytes @ 0x15
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x15
  1151     0035                     	ds	1
  1152     0036                     i1xtoa@a:
  1153                           
  1154                           ; 1 bytes @ 0x16
  1155     0036                     	ds	1
  1156     0037                     i1dtoa@w:
  1157     0037                     i1otoa@w:	
  1158                           ; 2 bytes @ 0x17
  1159                           
  1160     0037                     i1utoa@i:	
  1161                           ; 2 bytes @ 0x17
  1162                           
  1163     0037                     i1xtoa@p:	
  1164                           ; 2 bytes @ 0x17
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x17
  1168     0037                     	ds	2
  1169     0039                     i1dtoa@s:
  1170     0039                     i1otoa@t:	
  1171                           ; 1 bytes @ 0x19
  1172                           
  1173     0039                     i1xtoa@w:	
  1174                           ; 1 bytes @ 0x19
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x19
  1178     0039                     	ds	1
  1179     003A                     i1dtoa@i:
  1180     003A                     i1otoa@i:	
  1181                           ; 2 bytes @ 0x1A
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x1A
  1185     003A                     	ds	1
  1186     003B                     i1xtoa@d_nonzero:
  1187                           
  1188                           ; 1 bytes @ 0x1B
  1189     003B                     	ds	1
  1190     003C                     i1xtoa@c:
  1191                           
  1192                           ; 1 bytes @ 0x1C
  1193     003C                     	ds	1
  1194     003D                     i1xtoa@i:
  1195                           
  1196                           ; 2 bytes @ 0x1D
  1197     003D                     	ds	2
  1198     003F                     ?i1_vfpfcnvrt:
  1199     003F                     i1vfpfcnvrt@fp:	
  1200                           ; 2 bytes @ 0x1F
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x1F
  1204     003F                     	ds	2
  1205     0041                     i1vfpfcnvrt@fmt:
  1206                           
  1207                           ; 1 bytes @ 0x21
  1208     0041                     	ds	1
  1209     0042                     i1vfpfcnvrt@ap:
  1210                           
  1211                           ; 2 bytes @ 0x22
  1212     0042                     	ds	2
  1213     0044                     ??i1_vfpfcnvrt:
  1214                           
  1215                           ; 1 bytes @ 0x24
  1216     0044                     	ds	4
  1217     0048                     i1vfpfcnvrt@done:
  1218                           
  1219                           ; 1 bytes @ 0x28
  1220     0048                     	ds	1
  1221     0049                     i1vfpfcnvrt@convarg:
  1222                           
  1223                           ; 4 bytes @ 0x29
  1224     0049                     	ds	4
  1225     004D                     i1vfpfcnvrt@c:
  1226                           
  1227                           ; 1 bytes @ 0x2D
  1228     004D                     	ds	1
  1229     004E                     i1vfpfcnvrt@cp:
  1230                           
  1231                           ; 2 bytes @ 0x2E
  1232     004E                     	ds	2
  1233     0050                     ?i1_vfprintf:
  1234     0050                     i1vfprintf@fp:	
  1235                           ; 2 bytes @ 0x30
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0x30
  1239     0050                     	ds	2
  1240     0052                     i1vfprintf@fmt:
  1241                           
  1242                           ; 2 bytes @ 0x32
  1243     0052                     	ds	2
  1244     0054                     i1vfprintf@ap:
  1245                           
  1246                           ; 2 bytes @ 0x34
  1247     0054                     	ds	2
  1248     0056                     i1vfprintf@cfmt:
  1249                           
  1250                           ; 2 bytes @ 0x36
  1251     0056                     	ds	2
  1252     0058                     ?i1_sprintf:
  1253     0058                     i1sprintf@s:	
  1254                           ; 2 bytes @ 0x38
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x38
  1258     0058                     	ds	2
  1259     005A                     i1sprintf@fmt:
  1260                           
  1261                           ; 2 bytes @ 0x3A
  1262     005A                     	ds	4
  1263     005E                     ??i1_sprintf:
  1264                           
  1265                           ; 1 bytes @ 0x3E
  1266     005E                     	ds	3
  1267     0061                     i1sprintf@f:
  1268                           
  1269                           ; 11 bytes @ 0x41
  1270     0061                     	ds	11
  1271     006C                     i1sprintf@ap:
  1272                           
  1273                           ; 2 bytes @ 0x4C
  1274     006C                     	ds	2
  1275                           
  1276                           	psect	maintext
  1277     04B4                     __pmaintext:	
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1280 ;;
  1281 ;; *************** function _main *****************
  1282 ;; Defined at:
  1283 ;;		line 31 in file "newmain.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  i               2   85[BANK3 ] int 
  1288 ;;  i               2   83[BANK3 ] int 
  1289 ;;  b              10   67[BANK3 ] unsigned char [10]
  1290 ;;  a              10   57[BANK3 ] unsigned char [10]
  1291 ;;  c              10    0        unsigned char [10]
  1292 ;;  bits            2   81[BANK3 ] int 
  1293 ;;  high_bits       2   79[BANK3 ] int 
  1294 ;;  Low_bits        2   77[BANK3 ] int 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : B00/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       0       0       0       0
  1305 ;;      Locals:         0       0       0      30       0
  1306 ;;      Temps:          0       0       0       3       0
  1307 ;;      Totals:         0       0       0      33       0
  1308 ;;Total ram usage:       33 bytes
  1309 ;; Hardware stack levels required when called: 17
  1310 ;; This function calls:
  1311 ;;		_display
  1312 ;;		_sprintf
  1313 ;; This function is called by:
  1314 ;;		Startup code after reset
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318     04B4                     _main:	
  1319                           ;psect for function _main
  1320                           
  1321                           
  1322                           ;newmain.c: 33:     TRISC=0;
  1323                           
  1324                           ;incstack = 0
  1325 ;; hardware stack exceeded
  1326                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1327     04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1328     04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1329     04B6  0187               	clrf	7	;volatile
  1330                           
  1331                           ;newmain.c: 34:     PORTC=0;
  1332     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1333     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1334     04B9  0187               	clrf	7	;volatile
  1335                           
  1336                           ;newmain.c: 35:     TRISD=0;
  1337     04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1338     04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1339     04BC  0188               	clrf	8	;volatile
  1340                           
  1341                           ;newmain.c: 36:     PORTD=0;
  1342     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1343     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1344     04BF  0188               	clrf	8	;volatile
  1345                           
  1346                           ;newmain.c: 37:     ADCON0=0x01;
  1347     04C0  3001               	movlw	1
  1348     04C1  009F               	movwf	31	;volatile
  1349                           
  1350                           ;newmain.c: 38:     ADCON1=0x80;
  1351     04C2  3080               	movlw	128
  1352     04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1353     04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1354     04C5  009F               	movwf	31	;volatile
  1355                           
  1356                           ;newmain.c: 39:     INTE=1;
  1357     04C6  160B               	bsf	11,4	;volatile
  1358                           
  1359                           ;newmain.c: 40:     GIE=1;
  1360     04C7  178B               	bsf	11,7	;volatile
  1361                           
  1362                           ;newmain.c: 42:     OPTION_REG =0;
  1363     04C8  0181               	clrf	1	;volatile
  1364                           
  1365                           ;newmain.c: 46:     int Low_bits;;newmain.c: 47:     int high_bits;;newmain.c: 48:     i
      +                          nt bits;;newmain.c: 49:     char a[10];;newmain.c: 50:     char b[10];;newmain.c: 51:   
      +                            char c[10];;newmain.c: 55:     display(0, 0x0e);
  1366     04C9  3000               	movlw	0
  1367     04CA  00B2               	movwf	display@RS^(0+128)
  1368     04CB  00B3               	movwf	(display@RS+1)^(0+128)
  1369     04CC  300E               	movlw	14
  1370     04CD  00B4               	movwf	display@DC^(0+128)
  1371     04CE  3000               	movlw	0
  1372     04CF  00B5               	movwf	(display@DC^(0+128)+1)
  1373     04D0  160A  158A  27D4  120A  118A  	fcall	_display
  1374                           
  1375                           ;newmain.c: 56:     display(0, 0x38);
  1376     04D5  3000               	movlw	0
  1377     04D6  1683               	bsf	3,5	;RP0=1, select bank1
  1378     04D7  1303               	bcf	3,6	;RP1=0, select bank1
  1379     04D8  00B2               	movwf	display@RS^(0+128)
  1380     04D9  00B3               	movwf	(display@RS+1)^(0+128)
  1381     04DA  3038               	movlw	56
  1382     04DB  00B4               	movwf	display@DC^(0+128)
  1383     04DC  3000               	movlw	0
  1384     04DD  00B5               	movwf	(display@DC^(0+128)+1)
  1385     04DE  160A  158A  27D4  120A  118A  	fcall	_display
  1386     04E3                     l4419:
  1387                           
  1388                           ;newmain.c: 59:     {;newmain.c: 61:     ADCON0=0x01;
  1389     04E3  3001               	movlw	1
  1390     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1391     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1392     04E6  009F               	movwf	31	;volatile
  1393                           
  1394                           ;newmain.c: 62:     _delay((unsigned long)((10)*(10000000/4000.0)));
  1395     04E7  3021               	movlw	33
  1396     04E8  1683               	bsf	3,5	;RP0=1, select bank3
  1397     04E9  1703               	bsf	3,6	;RP1=1, select bank3
  1398     04EA  00C7               	movwf	(??_main^(0+384)+1)
  1399     04EB  3075               	movlw	117
  1400     04EC  00C6               	movwf	??_main^(0+384)
  1401     04ED                     u6187:
  1402     04ED  0BC6               	decfsz	??_main^(0+384),f
  1403     04EE  2CED               	goto	u6187
  1404     04EF  0BC7               	decfsz	(??_main^(0+384)+1),f
  1405     04F0  2CED               	goto	u6187
  1406     04F1  2CF2               	nop2
  1407                           
  1408                           ;newmain.c: 63:     GO_nDONE=1;
  1409     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1410     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1411     04F4  151F               	bsf	31,2	;volatile
  1412     04F5                     l44:	
  1413                           ;newmain.c: 64:     while(GO_nDONE==1){}
  1414                           
  1415     04F5  191F               	btfsc	31,2	;volatile
  1416     04F6  2CF5               	goto	l44
  1417                           
  1418                           ;newmain.c: 65:     Low_bits= ADRESL;
  1419     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1420     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1421     04F9  081E               	movf	30,w	;volatile
  1422     04FA  1683               	bsf	3,5	;RP0=1, select bank3
  1423     04FB  1703               	bsf	3,6	;RP1=1, select bank3
  1424     04FC  00C6               	movwf	??_main^(0+384)
  1425     04FD  01C7               	clrf	(??_main^(0+384)+1)
  1426     04FE  0846               	movf	??_main^(0+384),w
  1427     04FF  00DD               	movwf	main@Low_bits^(0+384)
  1428     0500  0847               	movf	(??_main+1)^(0+384),w
  1429     0501  00DE               	movwf	(main@Low_bits+1)^(0+384)
  1430                           
  1431                           ;newmain.c: 66:     high_bits= ADRESH;
  1432     0502  1283               	bcf	3,5	;RP0=0, select bank0
  1433     0503  1303               	bcf	3,6	;RP1=0, select bank0
  1434     0504  081E               	movf	30,w	;volatile
  1435     0505  1683               	bsf	3,5	;RP0=1, select bank3
  1436     0506  1703               	bsf	3,6	;RP1=1, select bank3
  1437     0507  00C6               	movwf	??_main^(0+384)
  1438     0508  01C7               	clrf	(??_main^(0+384)+1)
  1439     0509  0846               	movf	??_main^(0+384),w
  1440     050A  00DF               	movwf	main@high_bits^(0+384)
  1441     050B  0847               	movf	(??_main+1)^(0+384),w
  1442     050C  00E0               	movwf	(main@high_bits+1)^(0+384)
  1443                           
  1444                           ;newmain.c: 67:     bits = Low_bits | high_bits << 8;
  1445     050D  0860               	movf	(main@high_bits+1)^(0+384),w
  1446     050E  00C7               	movwf	(??_main^(0+384)+1)
  1447     050F  085F               	movf	main@high_bits^(0+384),w
  1448     0510  00C6               	movwf	??_main^(0+384)
  1449     0511  0846               	movf	??_main^(0+384),w
  1450     0512  00C7               	movwf	(??_main^(0+384)+1)
  1451     0513  01C6               	clrf	??_main^(0+384)
  1452     0514  085D               	movf	main@Low_bits^(0+384),w
  1453     0515  0446               	iorwf	??_main^(0+384),w
  1454     0516  00E1               	movwf	main@bits^(0+384)
  1455     0517  085E               	movf	(main@Low_bits+1)^(0+384),w
  1456     0518  0447               	iorwf	(??_main+1)^(0+384),w
  1457     0519  00E2               	movwf	(main@bits+1)^(0+384)
  1458                           
  1459                           ;newmain.c: 68:     sprintf(a,"%04d",bits);
  1460     051A  30C9               	movlw	(low (main@a| (0+256)))& (0+255)
  1461     051B  00B1               	movwf	sprintf@s^(0+384)
  1462     051C  3001               	movlw	1
  1463     051D  00B2               	movwf	(sprintf@s+1)^(0+384)
  1464     051E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1465     051F  00B3               	movwf	sprintf@fmt^(0+384)
  1466     0520  3080               	movlw	128
  1467     0521  00B4               	movwf	(sprintf@fmt+1)^(0+384)
  1468     0522  0862               	movf	(main@bits+1)^(0+384),w
  1469     0523  00B6               	movwf	((?_sprintf+1)^(0+384)+4)
  1470     0524  0861               	movf	main@bits^(0+384),w
  1471     0525  00B5               	movwf	(?_sprintf^(0+384)+4)
  1472     0526  160A  118A  2018  120A  118A  	fcall	_sprintf
  1473                           
  1474                           ;newmain.c: 69:     display(0, 0x80);
  1475     052B  3000               	movlw	0
  1476     052C  1683               	bsf	3,5	;RP0=1, select bank1
  1477     052D  1303               	bcf	3,6	;RP1=0, select bank1
  1478     052E  00B2               	movwf	display@RS^(0+128)
  1479     052F  00B3               	movwf	(display@RS+1)^(0+128)
  1480     0530  3080               	movlw	128
  1481     0531  00B4               	movwf	display@DC^(0+128)
  1482     0532  3000               	movlw	0
  1483     0533  00B5               	movwf	(display@DC^(0+128)+1)
  1484     0534  160A  158A  27D4  120A  118A  	fcall	_display
  1485                           
  1486                           ;newmain.c: 70:     for(int i=0;a[i]!='\0';i++)
  1487     0539  1683               	bsf	3,5	;RP0=1, select bank3
  1488     053A  1703               	bsf	3,6	;RP1=1, select bank3
  1489     053B  01E3               	clrf	main@i^(0+384)
  1490     053C  01E4               	clrf	(main@i+1)^(0+384)
  1491     053D                     l4439:
  1492     053D  0863               	movf	main@i^(0+384),w
  1493     053E  3EC9               	addlw	(low (main@a| (0+256)))& (0+255)
  1494     053F  0084               	movwf	4
  1495     0540  1783               	bsf	3,7	;select IRP bank3
  1496     0541  0800               	movf	0,w
  1497     0542  1903               	btfsc	3,2
  1498     0543  2D6A               	goto	l4441
  1499                           
  1500                           ;newmain.c: 71:     {;newmain.c: 72:         display(1, a[i]);
  1501     0544  3001               	movlw	1
  1502     0545  1683               	bsf	3,5	;RP0=1, select bank1
  1503     0546  1303               	bcf	3,6	;RP1=0, select bank1
  1504     0547  00B2               	movwf	display@RS^(0+128)
  1505     0548  3000               	movlw	0
  1506     0549  00B3               	movwf	(display@RS^(0+128)+1)
  1507     054A  1683               	bsf	3,5	;RP0=1, select bank3
  1508     054B  1703               	bsf	3,6	;RP1=1, select bank3
  1509     054C  0863               	movf	main@i^(0+384),w
  1510     054D  3EC9               	addlw	(low (main@a| (0+256)))& (0+255)
  1511     054E  0084               	movwf	4
  1512     054F  0800               	movf	0,w
  1513     0550  00C6               	movwf	??_main^(0+384)
  1514     0551  01C7               	clrf	(??_main^(0+384)+1)
  1515     0552  0846               	movf	??_main^(0+384),w
  1516     0553  1683               	bsf	3,5	;RP0=1, select bank1
  1517     0554  1303               	bcf	3,6	;RP1=0, select bank1
  1518     0555  00B4               	movwf	display@DC^(0+128)
  1519     0556  1683               	bsf	3,5	;RP0=1, select bank3
  1520     0557  1703               	bsf	3,6	;RP1=1, select bank3
  1521     0558  0847               	movf	(??_main+1)^(0+384),w
  1522     0559  1683               	bsf	3,5	;RP0=1, select bank1
  1523     055A  1303               	bcf	3,6	;RP1=0, select bank1
  1524     055B  00B5               	movwf	(display@DC+1)^(0+128)
  1525     055C  160A  158A  27D4  120A  118A  	fcall	_display
  1526                           
  1527                           ;newmain.c: 73:     }
  1528     0561  3001               	movlw	1
  1529     0562  1683               	bsf	3,5	;RP0=1, select bank3
  1530     0563  1703               	bsf	3,6	;RP1=1, select bank3
  1531     0564  07E3               	addwf	main@i^(0+384),f
  1532     0565  1803               	skipnc
  1533     0566  0AE4               	incf	(main@i+1)^(0+384),f
  1534     0567  3000               	movlw	0
  1535     0568  07E4               	addwf	(main@i+1)^(0+384),f
  1536     0569  2D3D               	goto	l4439
  1537     056A                     l4441:
  1538                           
  1539                           ;newmain.c: 74:     _delay((unsigned long)((300)*(10000000/4000.0)));
  1540     056A  3004               	movlw	4
  1541     056B  1683               	bsf	3,5	;RP0=1, select bank3
  1542     056C  1703               	bsf	3,6	;RP1=1, select bank3
  1543     056D  00C8               	movwf	(??_main^(0+384)+2)
  1544     056E  30CF               	movlw	207
  1545     056F  00C7               	movwf	(??_main^(0+384)+1)
  1546     0570  3001               	movlw	1
  1547     0571  00C6               	movwf	??_main^(0+384)
  1548     0572                     u6197:
  1549     0572  0BC6               	decfsz	??_main^(0+384),f
  1550     0573  2D72               	goto	u6197
  1551     0574  0BC7               	decfsz	(??_main^(0+384)+1),f
  1552     0575  2D72               	goto	u6197
  1553     0576  0BC8               	decfsz	(??_main^(0+384)+2),f
  1554     0577  2D72               	goto	u6197
  1555                           
  1556                           ;newmain.c: 76:     ADCON0=0x09;
  1557     0578  3009               	movlw	9
  1558     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1559     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1560     057B  009F               	movwf	31	;volatile
  1561                           
  1562                           ;newmain.c: 77:     _delay((unsigned long)((10)*(10000000/4000.0)));
  1563     057C  3021               	movlw	33
  1564     057D  1683               	bsf	3,5	;RP0=1, select bank3
  1565     057E  1703               	bsf	3,6	;RP1=1, select bank3
  1566     057F  00C7               	movwf	(??_main^(0+384)+1)
  1567     0580  3075               	movlw	117
  1568     0581  00C6               	movwf	??_main^(0+384)
  1569     0582                     u6207:
  1570     0582  0BC6               	decfsz	??_main^(0+384),f
  1571     0583  2D82               	goto	u6207
  1572     0584  0BC7               	decfsz	(??_main^(0+384)+1),f
  1573     0585  2D82               	goto	u6207
  1574     0586  2D87               	nop2
  1575                           
  1576                           ;newmain.c: 79:     GO_nDONE=1;
  1577     0587  1283               	bcf	3,5	;RP0=0, select bank0
  1578     0588  1303               	bcf	3,6	;RP1=0, select bank0
  1579     0589  151F               	bsf	31,2	;volatile
  1580     058A                     l50:	
  1581                           ;newmain.c: 80:     while(GO_nDONE==1){}
  1582                           
  1583     058A  191F               	btfsc	31,2	;volatile
  1584     058B  2D8A               	goto	l50
  1585                           
  1586                           ;newmain.c: 81:     Low_bits= ADRESL;
  1587     058C  1683               	bsf	3,5	;RP0=1, select bank1
  1588     058D  1303               	bcf	3,6	;RP1=0, select bank1
  1589     058E  081E               	movf	30,w	;volatile
  1590     058F  1683               	bsf	3,5	;RP0=1, select bank3
  1591     0590  1703               	bsf	3,6	;RP1=1, select bank3
  1592     0591  00C6               	movwf	??_main^(0+384)
  1593     0592  01C7               	clrf	(??_main^(0+384)+1)
  1594     0593  0846               	movf	??_main^(0+384),w
  1595     0594  00DD               	movwf	main@Low_bits^(0+384)
  1596     0595  0847               	movf	(??_main+1)^(0+384),w
  1597     0596  00DE               	movwf	(main@Low_bits+1)^(0+384)
  1598                           
  1599                           ;newmain.c: 82:     high_bits= ADRESH;
  1600     0597  1283               	bcf	3,5	;RP0=0, select bank0
  1601     0598  1303               	bcf	3,6	;RP1=0, select bank0
  1602     0599  081E               	movf	30,w	;volatile
  1603     059A  1683               	bsf	3,5	;RP0=1, select bank3
  1604     059B  1703               	bsf	3,6	;RP1=1, select bank3
  1605     059C  00C6               	movwf	??_main^(0+384)
  1606     059D  01C7               	clrf	(??_main^(0+384)+1)
  1607     059E  0846               	movf	??_main^(0+384),w
  1608     059F  00DF               	movwf	main@high_bits^(0+384)
  1609     05A0  0847               	movf	(??_main+1)^(0+384),w
  1610     05A1  00E0               	movwf	(main@high_bits+1)^(0+384)
  1611                           
  1612                           ;newmain.c: 83:     bits = Low_bits | high_bits << 8;
  1613     05A2  0860               	movf	(main@high_bits+1)^(0+384),w
  1614     05A3  00C7               	movwf	(??_main^(0+384)+1)
  1615     05A4  085F               	movf	main@high_bits^(0+384),w
  1616     05A5  00C6               	movwf	??_main^(0+384)
  1617     05A6  0846               	movf	??_main^(0+384),w
  1618     05A7  00C7               	movwf	(??_main^(0+384)+1)
  1619     05A8  01C6               	clrf	??_main^(0+384)
  1620     05A9  085D               	movf	main@Low_bits^(0+384),w
  1621     05AA  0446               	iorwf	??_main^(0+384),w
  1622     05AB  00E1               	movwf	main@bits^(0+384)
  1623     05AC  085E               	movf	(main@Low_bits+1)^(0+384),w
  1624     05AD  0447               	iorwf	(??_main+1)^(0+384),w
  1625     05AE  00E2               	movwf	(main@bits+1)^(0+384)
  1626                           
  1627                           ;newmain.c: 84:     sprintf(b ,"%04d", bits);
  1628     05AF  30D3               	movlw	(low (main@b| (0+256)))& (0+255)
  1629     05B0  00B1               	movwf	sprintf@s^(0+384)
  1630     05B1  3001               	movlw	1
  1631     05B2  00B2               	movwf	(sprintf@s+1)^(0+384)
  1632     05B3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1633     05B4  00B3               	movwf	sprintf@fmt^(0+384)
  1634     05B5  3080               	movlw	128
  1635     05B6  00B4               	movwf	(sprintf@fmt+1)^(0+384)
  1636     05B7  0862               	movf	(main@bits+1)^(0+384),w
  1637     05B8  00B6               	movwf	((?_sprintf+1)^(0+384)+4)
  1638     05B9  0861               	movf	main@bits^(0+384),w
  1639     05BA  00B5               	movwf	(?_sprintf^(0+384)+4)
  1640     05BB  160A  118A  2018  120A  118A  	fcall	_sprintf
  1641                           
  1642                           ;newmain.c: 86:     display(0, 0xc0);
  1643     05C0  3000               	movlw	0
  1644     05C1  1683               	bsf	3,5	;RP0=1, select bank1
  1645     05C2  1303               	bcf	3,6	;RP1=0, select bank1
  1646     05C3  00B2               	movwf	display@RS^(0+128)
  1647     05C4  00B3               	movwf	(display@RS+1)^(0+128)
  1648     05C5  30C0               	movlw	192
  1649     05C6  00B4               	movwf	display@DC^(0+128)
  1650     05C7  3000               	movlw	0
  1651     05C8  00B5               	movwf	(display@DC^(0+128)+1)
  1652     05C9  160A  158A  27D4  120A  118A  	fcall	_display
  1653                           
  1654                           ;newmain.c: 87:     for(int i=0;b[i]!='\0';i++)
  1655     05CE  1683               	bsf	3,5	;RP0=1, select bank3
  1656     05CF  1703               	bsf	3,6	;RP1=1, select bank3
  1657     05D0  01E5               	clrf	main@i_70^(0+384)
  1658     05D1  01E6               	clrf	(main@i_70+1)^(0+384)
  1659     05D2                     l4461:
  1660     05D2  0865               	movf	main@i_70^(0+384),w
  1661     05D3  3ED3               	addlw	(low (main@b| (0+256)))& (0+255)
  1662     05D4  0084               	movwf	4
  1663     05D5  1783               	bsf	3,7	;select IRP bank3
  1664     05D6  0800               	movf	0,w
  1665     05D7  1903               	btfsc	3,2
  1666     05D8  2DFF               	goto	l4463
  1667                           
  1668                           ;newmain.c: 88:     {;newmain.c: 89:         display(1, b[i]);
  1669     05D9  3001               	movlw	1
  1670     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1671     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1672     05DC  00B2               	movwf	display@RS^(0+128)
  1673     05DD  3000               	movlw	0
  1674     05DE  00B3               	movwf	(display@RS^(0+128)+1)
  1675     05DF  1683               	bsf	3,5	;RP0=1, select bank3
  1676     05E0  1703               	bsf	3,6	;RP1=1, select bank3
  1677     05E1  0865               	movf	main@i_70^(0+384),w
  1678     05E2  3ED3               	addlw	(low (main@b| (0+256)))& (0+255)
  1679     05E3  0084               	movwf	4
  1680     05E4  0800               	movf	0,w
  1681     05E5  00C6               	movwf	??_main^(0+384)
  1682     05E6  01C7               	clrf	(??_main^(0+384)+1)
  1683     05E7  0846               	movf	??_main^(0+384),w
  1684     05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1685     05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1686     05EA  00B4               	movwf	display@DC^(0+128)
  1687     05EB  1683               	bsf	3,5	;RP0=1, select bank3
  1688     05EC  1703               	bsf	3,6	;RP1=1, select bank3
  1689     05ED  0847               	movf	(??_main+1)^(0+384),w
  1690     05EE  1683               	bsf	3,5	;RP0=1, select bank1
  1691     05EF  1303               	bcf	3,6	;RP1=0, select bank1
  1692     05F0  00B5               	movwf	(display@DC+1)^(0+128)
  1693     05F1  160A  158A  27D4  120A  118A  	fcall	_display
  1694                           
  1695                           ;newmain.c: 90:     }
  1696     05F6  3001               	movlw	1
  1697     05F7  1683               	bsf	3,5	;RP0=1, select bank3
  1698     05F8  1703               	bsf	3,6	;RP1=1, select bank3
  1699     05F9  07E5               	addwf	main@i_70^(0+384),f
  1700     05FA  1803               	skipnc
  1701     05FB  0AE6               	incf	(main@i_70+1)^(0+384),f
  1702     05FC  3000               	movlw	0
  1703     05FD  07E6               	addwf	(main@i_70+1)^(0+384),f
  1704     05FE  2DD2               	goto	l4461
  1705     05FF                     l4463:
  1706                           
  1707                           ;newmain.c: 91:     _delay((unsigned long)((300)*(10000000/4000.0)));
  1708     05FF  3004               	movlw	4
  1709     0600  1683               	bsf	3,5	;RP0=1, select bank3
  1710     0601  1703               	bsf	3,6	;RP1=1, select bank3
  1711     0602  00C8               	movwf	(??_main^(0+384)+2)
  1712     0603  30CF               	movlw	207
  1713     0604  00C7               	movwf	(??_main^(0+384)+1)
  1714     0605  3001               	movlw	1
  1715     0606  00C6               	movwf	??_main^(0+384)
  1716     0607                     u6217:
  1717     0607  0BC6               	decfsz	??_main^(0+384),f
  1718     0608  2E07               	goto	u6217
  1719     0609  0BC7               	decfsz	(??_main^(0+384)+1),f
  1720     060A  2E07               	goto	u6217
  1721     060B  0BC8               	decfsz	(??_main^(0+384)+2),f
  1722     060C  2E07               	goto	u6217
  1723     060D  2CE3               	goto	l4419
  1724     060E                     __end_of_main:
  1725                           
  1726                           	psect	text1
  1727     1018                     __ptext1:	
  1728 ;; *************** function _sprintf *****************
  1729 ;; Defined at:
  1730 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  s               2   33[BANK3 ] PTR unsigned char 
  1733 ;;		 -> ISR@c(10), main@b(10), main@a(10), 
  1734 ;;  fmt             2   35[BANK3 ] PTR const unsigned char 
  1735 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  f              11   42[BANK3 ] struct _IO_FILE
  1738 ;;  ret             2    0        int 
  1739 ;;  ap              1   53[BANK3 ] PTR void [1]
  1740 ;;		 -> ?_sprintf(2), 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2   33[BANK3 ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       6       0
  1751 ;;      Locals:         0       0       0      12       0
  1752 ;;      Temps:          0       0       0       3       0
  1753 ;;      Totals:         0       0       0      21       0
  1754 ;;Total ram usage:       21 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 16
  1757 ;; This function calls:
  1758 ;;		_vfprintf
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     1018                     _sprintf:	
  1765                           ;psect for function _sprintf
  1766                           
  1767                           
  1768                           ;incstack = 0
  1769 ;; hardware stack exceeded
  1770                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771     1018  30B5               	movlw	(low ((?_sprintf| (0+256)+4)))& (0+255)
  1772     1019  1683               	bsf	3,5	;RP0=1, select bank3
  1773     101A  1703               	bsf	3,6	;RP1=1, select bank3
  1774     101B  00C5               	movwf	sprintf@ap^(0+384)
  1775     101C  0831               	movf	sprintf@s^(0+384),w
  1776     101D  00BA               	movwf	sprintf@f^(0+384)
  1777     101E  0832               	movf	(sprintf@s+1)^(0+384),w
  1778     101F  00BB               	movwf	(sprintf@f+1)^(0+384)
  1779     1020  01BC               	clrf	(sprintf@f^(0+384)+2)
  1780     1021  01BD               	clrf	((sprintf@f+1)^(0+384)+2)
  1781     1022  01C3               	clrf	(sprintf@f^(0+384)+9)
  1782     1023  01C4               	clrf	((sprintf@f+1)^(0+384)+9)
  1783     1024  30BA               	movlw	low sprintf@f
  1784     1025  00AC               	movwf	vfprintf@fp^(0+384)
  1785     1026  3001               	movlw	high sprintf@f
  1786     1027  00AD               	movwf	(vfprintf@fp^(0+384)+1)
  1787     1028  0833               	movf	sprintf@fmt^(0+384),w
  1788     1029  00AE               	movwf	vfprintf@fmt^(0+384)
  1789     102A  0834               	movf	(sprintf@fmt+1)^(0+384),w
  1790     102B  00AF               	movwf	(vfprintf@fmt+1)^(0+384)
  1791     102C  30C5               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  1792     102D  00B0               	movwf	vfprintf@ap^(0+384)
  1793     102E  160A  118A  218B   	fcall	_vfprintf
  1794     1031  1683               	bsf	3,5	;RP0=1, select bank3
  1795     1032  1703               	bsf	3,6	;RP1=1, select bank3
  1796     1033  083C               	movf	(sprintf@f^(0+384)+2),w
  1797     1034  0731               	addwf	sprintf@s^(0+384),w
  1798     1035  00B8               	movwf	(??_sprintf+1)^(0+384)
  1799     1036  0832               	movf	(sprintf@s+1)^(0+384),w
  1800     1037  00B7               	movwf	??_sprintf^(0+384)
  1801     1038  1803               	skipnc
  1802     1039  0AB7               	incf	??_sprintf^(0+384),f
  1803     103A  1BBC               	btfsc	(sprintf@f^(0+384)+2),7
  1804     103B  03B7               	decf	??_sprintf^(0+384),f
  1805     103C  1683               	bsf	3,5	;RP0=1, select bank3
  1806     103D  1703               	bsf	3,6	;RP1=1, select bank3
  1807     103E  0837               	movf	??_sprintf^(0+384),w
  1808     103F  00B9               	movwf	((??_sprintf+1)^(0+384)+1)
  1809     1040  0838               	movf	(??_sprintf+1)^(0+384),w
  1810     1041  0084               	movwf	4
  1811     1042  1783               	bsf	3,7
  1812     1043  1C39               	btfss	(??_sprintf+2)^(0+384),0
  1813     1044  1383               	bcf	3,7
  1814     1045  0180               	clrf	0
  1815     1046  0008               	return
  1816     1047                     __end_of_sprintf:
  1817                           
  1818                           	psect	text2
  1819     118B                     __ptext2:	
  1820 ;; *************** function _vfprintf *****************
  1821 ;; Defined at:
  1822 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  fp              2   28[BANK3 ] PTR struct _IO_FILE
  1825 ;;		 -> sprintf@f(11), 
  1826 ;;  fmt             2   30[BANK3 ] PTR const unsigned char 
  1827 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1828 ;;  ap              1   32[BANK3 ] PTR PTR void 
  1829 ;;		 -> sprintf@ap(1), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  cfmt            2   53[BANK1 ] PTR unsigned char 
  1832 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   28[BANK3 ] int 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       0       5       0
  1843 ;;      Locals:         0       0       2       0       0
  1844 ;;      Temps:          0       0       0       0       0
  1845 ;;      Totals:         0       0       2       5       0
  1846 ;;Total ram usage:        7 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 15
  1849 ;; This function calls:
  1850 ;;		_vfpfcnvrt
  1851 ;; This function is called by:
  1852 ;;		_sprintf
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856     118B                     _vfprintf:	
  1857                           ;psect for function _vfprintf
  1858                           
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1861                           
  1862                           ;incstack = 0
  1863 ;; hardware stack exceeded
  1864                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1865     118B  1683               	bsf	3,5	;RP0=1, select bank3
  1866     118C  1703               	bsf	3,6	;RP1=1, select bank3
  1867     118D  082E               	movf	vfprintf@fmt^(0+384),w
  1868     118E  1683               	bsf	3,5	;RP0=1, select bank1
  1869     118F  1303               	bcf	3,6	;RP1=0, select bank1
  1870     1190  00D5               	movwf	vfprintf@cfmt^(0+128)
  1871     1191  1683               	bsf	3,5	;RP0=1, select bank3
  1872     1192  1703               	bsf	3,6	;RP1=1, select bank3
  1873     1193  082F               	movf	(vfprintf@fmt+1)^(0+384),w
  1874     1194  1683               	bsf	3,5	;RP0=1, select bank1
  1875     1195  1303               	bcf	3,6	;RP1=0, select bank1
  1876     1196  00D6               	movwf	(vfprintf@cfmt+1)^(0+128)
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1879     1197  1683               	bsf	3,5	;RP0=1, select bank3
  1880     1198  1703               	bsf	3,6	;RP1=1, select bank3
  1881     1199  01E7               	clrf	_nout^(0+384)
  1882     119A  01E8               	clrf	(_nout+1)^(0+384)
  1883     119B                     l4385:	
  1884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1885                           
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1888     119B  1683               	bsf	3,5	;RP0=1, select bank1
  1889     119C  1303               	bcf	3,6	;RP1=0, select bank1
  1890     119D  0856               	movf	(vfprintf@cfmt+1)^(0+128),w
  1891     119E  1283               	bcf	3,5	;RP0=0, select bank0
  1892     119F  1303               	bcf	3,6	;RP1=0, select bank0
  1893     11A0  00FF               	movwf	127
  1894     11A1  1683               	bsf	3,5	;RP0=1, select bank1
  1895     11A2  1303               	bcf	3,6	;RP1=0, select bank1
  1896     11A3  0855               	movf	vfprintf@cfmt^(0+128),w
  1897     11A4  0084               	movwf	4
  1898     11A5  1283               	bcf	3,5	;RP0=0, select bank0
  1899     11A6  1303               	bcf	3,6	;RP1=0, select bank0
  1900     11A7  160A  118A  2000  160A  118A  	fcall	stringtab
  1901     11AC  3A00               	xorlw	0
  1902     11AD  1903               	btfsc	3,2
  1903     11AE  29C9               	goto	l4387
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1906     11AF  1683               	bsf	3,5	;RP0=1, select bank3
  1907     11B0  1703               	bsf	3,6	;RP1=1, select bank3
  1908     11B1  082C               	movf	vfprintf@fp^(0+384),w
  1909     11B2  009B               	movwf	vfpfcnvrt@fp^(0+384)
  1910     11B3  082D               	movf	(vfprintf@fp+1)^(0+384),w
  1911     11B4  009C               	movwf	(vfpfcnvrt@fp+1)^(0+384)
  1912     11B5  30D5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1913     11B6  009D               	movwf	vfpfcnvrt@fmt^(0+384)
  1914     11B7  0830               	movf	vfprintf@ap^(0+384),w
  1915     11B8  009E               	movwf	vfpfcnvrt@ap^(0+384)
  1916     11B9  3001               	movlw	1
  1917     11BA  009F               	movwf	(vfpfcnvrt@ap+1)^(0+384)
  1918     11BB  120A  118A  202D  160A  118A  	fcall	_vfpfcnvrt
  1919     11C0  1683               	bsf	3,5	;RP0=1, select bank3
  1920     11C1  1703               	bsf	3,6	;RP1=1, select bank3
  1921     11C2  081B               	movf	?_vfpfcnvrt^(0+384),w
  1922     11C3  07E7               	addwf	_nout^(0+384),f
  1923     11C4  1803               	skipnc
  1924     11C5  0AE8               	incf	(_nout+1)^(0+384),f
  1925     11C6  081C               	movf	(?_vfpfcnvrt+1)^(0+384),w
  1926     11C7  07E8               	addwf	(_nout+1)^(0+384),f
  1927     11C8  299B               	goto	l4385
  1928     11C9                     l4387:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1931     11C9  1683               	bsf	3,5	;RP0=1, select bank3
  1932     11CA  1703               	bsf	3,6	;RP1=1, select bank3
  1933     11CB  01AC               	clrf	?_vfprintf^(0+384)
  1934     11CC  01AD               	clrf	(?_vfprintf+1)^(0+384)
  1935     11CD  0008               	return
  1936     11CE                     __end_of_vfprintf:
  1937                           
  1938                           	psect	text3
  1939     002D                     __ptext3:	
  1940 ;; *************** function _vfpfcnvrt *****************
  1941 ;; Defined at:
  1942 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  fp              2   11[BANK3 ] PTR struct _IO_FILE
  1945 ;;		 -> sprintf@f(11), 
  1946 ;;  fmt             1   13[BANK3 ] PTR PTR unsigned char 
  1947 ;;		 -> vfprintf@cfmt(2), 
  1948 ;;  ap              2   14[BANK3 ] PTR PTR void 
  1949 ;;		 -> sprintf@ap(1), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  convarg         4   22[BANK3 ] struct .
  1952 ;;  cp              2   26[BANK3 ] PTR unsigned char 
  1953 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  1954 ;;  c               1   21[BANK3 ] unsigned char 
  1955 ;;  done            1   20[BANK3 ] _Bool 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2   11[BANK3 ] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       5       0
  1966 ;;      Locals:         0       0       0       8       0
  1967 ;;      Temps:          0       0       0       4       0
  1968 ;;      Totals:         0       0       0      17       0
  1969 ;;Total ram usage:       17 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 14
  1972 ;; This function calls:
  1973 ;;		_ctoa
  1974 ;;		_dtoa
  1975 ;;		_fputc
  1976 ;;		_otoa
  1977 ;;		_read_prec_or_width
  1978 ;;		_utoa
  1979 ;;		_xtoa
  1980 ;; This function is called by:
  1981 ;;		_vfprintf
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985     002D                     _vfpfcnvrt:	
  1986                           ;psect for function _vfpfcnvrt
  1987                           
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1990                           
  1991                           ;incstack = 0
  1992 ;; hardware stack exceeded
  1993                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1994     002D  1683               	bsf	3,5	;RP0=1, select bank3
  1995     002E  1703               	bsf	3,6	;RP1=1, select bank3
  1996     002F  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  1997     0030  0084               	movwf	4
  1998     0031  1383               	bcf	3,7	;select IRP bank0
  1999     0032  0800               	movf	0,w
  2000     0033  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2001     0034  0A84               	incf	4,f
  2002     0035  0800               	movf	0,w
  2003     0036  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2004     0037  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2005     0038  1283               	bcf	3,5	;RP0=0, select bank0
  2006     0039  1303               	bcf	3,6	;RP1=0, select bank0
  2007     003A  00FF               	movwf	127
  2008     003B  1683               	bsf	3,5	;RP0=1, select bank3
  2009     003C  1703               	bsf	3,6	;RP1=1, select bank3
  2010     003D  0820               	movf	??_vfpfcnvrt^(0+384),w
  2011     003E  0084               	movwf	4
  2012     003F  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0040  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0041  160A  118A  2000  120A  118A  	fcall	stringtab
  2015     0046  3A25               	xorlw	37
  2016     0047  1D03               	skipz
  2017     0048  2C71               	goto	l4371
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2020     0049  1683               	bsf	3,5	;RP0=1, select bank3
  2021     004A  1703               	bsf	3,6	;RP1=1, select bank3
  2022     004B  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2023     004C  0084               	movwf	4
  2024     004D  3001               	movlw	1
  2025     004E  1383               	bcf	3,7	;select IRP bank0
  2026     004F  0780               	addwf	0,f
  2027     0050  0A84               	incf	4,f
  2028     0051  1803               	skipnc
  2029     0052  0A80               	incf	0,f
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2032     0053  1683               	bsf	3,5	;RP0=1, select bank1
  2033     0054  1303               	bcf	3,6	;RP1=0, select bank1
  2034     0055  01D7               	clrf	_width^(0+128)
  2035     0056  01D8               	clrf	(_width+1)^(0+128)
  2036     0057  3000               	movlw	0
  2037     0058  00DD               	movwf	_flags^(0+128)
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2040     0059  30FF               	movlw	255
  2041     005A  00D9               	movwf	_prec^(0+128)
  2042     005B  30FF               	movlw	255
  2043     005C  00DA               	movwf	(_prec^(0+128)+1)
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2046     005D  1683               	bsf	3,5	;RP0=1, select bank3
  2047     005E  1703               	bsf	3,6	;RP1=1, select bank3
  2048     005F  01A4               	clrf	vfpfcnvrt@done^(0+384)
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2051     0060  2883               	goto	l4219
  2052     0061                     l766:	
  2053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1213:            
      +                               case '-' :
  2054                           
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  2057     0061  1683               	bsf	3,5	;RP0=1, select bank1
  2058     0062  1303               	bcf	3,6	;RP1=0, select bank1
  2059     0063  145D               	bsf	_flags^(0+128),0
  2060     0064                     l4205:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  2063     0064  1683               	bsf	3,5	;RP0=1, select bank3
  2064     0065  1703               	bsf	3,6	;RP1=1, select bank3
  2065     0066  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2066     0067  0084               	movwf	4
  2067     0068  3001               	movlw	1
  2068     0069  1383               	bcf	3,7	;select IRP bank0
  2069     006A  0780               	addwf	0,f
  2070     006B  0A84               	incf	4,f
  2071     006C  1803               	skipnc
  2072     006D  0A80               	incf	0,f
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  2075     006E  2883               	goto	l4219
  2076     006F                     l768:	
  2077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  2078                           
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2081     006F  1683               	bsf	3,5	;RP0=1, select bank1
  2082     0070  1303               	bcf	3,6	;RP1=0, select bank1
  2083     0071  14DD               	bsf	_flags^(0+128),1
  2084     0072  2864               	goto	l4205
  2085     0073                     l769:	
  2086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1225:            
      +                               case '+' :
  2087                           
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  2090     0073  1683               	bsf	3,5	;RP0=1, select bank1
  2091     0074  1303               	bcf	3,6	;RP1=0, select bank1
  2092     0075  155D               	bsf	_flags^(0+128),2
  2093     0076  2864               	goto	l4205
  2094     0077                     l770:	
  2095                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1231:            
      +                               case ' ' :
  2096                           
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  2099     0077  1683               	bsf	3,5	;RP0=1, select bank1
  2100     0078  1303               	bcf	3,6	;RP1=0, select bank1
  2101     0079  15DD               	bsf	_flags^(0+128),3
  2102     007A  2864               	goto	l4205
  2103     007B                     l771:	
  2104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1237:            
      +                               case '#' :
  2105                           
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  2108     007B  1683               	bsf	3,5	;RP0=1, select bank1
  2109     007C  1303               	bcf	3,6	;RP1=0, select bank1
  2110     007D  165D               	bsf	_flags^(0+128),4
  2111     007E  2864               	goto	l4205
  2112     007F                     l772:	
  2113                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  2114                           
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2117     007F  3001               	movlw	1
  2118     0080  1683               	bsf	3,5	;RP0=1, select bank3
  2119     0081  1703               	bsf	3,6	;RP1=1, select bank3
  2120     0082  00A4               	movwf	vfpfcnvrt@done^(0+384)
  2121     0083                     l4219:	
  2122                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2123                           
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2126     0083  0824               	movf	vfpfcnvrt@done^(0+384),w
  2127     0084  1D03               	btfss	3,2
  2128     0085  28AE               	goto	l773
  2129     0086  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2130     0087  0084               	movwf	4
  2131     0088  1383               	bcf	3,7	;select IRP bank0
  2132     0089  0800               	movf	0,w
  2133     008A  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2134     008B  0A84               	incf	4,f
  2135     008C  0800               	movf	0,w
  2136     008D  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2137     008E  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2138     008F  1283               	bcf	3,5	;RP0=0, select bank0
  2139     0090  1303               	bcf	3,6	;RP1=0, select bank0
  2140     0091  00FF               	movwf	127
  2141     0092  1683               	bsf	3,5	;RP0=1, select bank3
  2142     0093  1703               	bsf	3,6	;RP1=1, select bank3
  2143     0094  0820               	movf	??_vfpfcnvrt^(0+384),w
  2144     0095  0084               	movwf	4
  2145     0096  1283               	bcf	3,5	;RP0=0, select bank0
  2146     0097  1303               	bcf	3,6	;RP1=0, select bank0
  2147     0098  160A  118A  2000  120A  118A  	fcall	stringtab
  2148                           
  2149                           ; Switch size 1, requested type "simple"
  2150                           ; Number of cases is 5, Range of values is 32 to 48
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte           16     9 (average)
  2154                           ; direct_byte           62    11 (fixed)
  2155                           ; jumptable            263     9 (fixed)
  2156                           ;	Chosen strategy is simple_byte
  2157     009D  3A20               	xorlw	32	; case 32
  2158     009E  1903               	skipnz
  2159     009F  2877               	goto	l770
  2160     00A0  3A03               	xorlw	3	; case 35
  2161     00A1  1903               	skipnz
  2162     00A2  287B               	goto	l771
  2163     00A3  3A08               	xorlw	8	; case 43
  2164     00A4  1903               	skipnz
  2165     00A5  2873               	goto	l769
  2166     00A6  3A06               	xorlw	6	; case 45
  2167     00A7  1903               	skipnz
  2168     00A8  2861               	goto	l766
  2169     00A9  3A1D               	xorlw	29	; case 48
  2170     00AA  1903               	skipnz
  2171     00AB  286F               	goto	l768
  2172     00AC  287F               	goto	l772
  2173     00AD  2883               	goto	l4219
  2174     00AE                     l773:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  2177     00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2178     00AF  1303               	bcf	3,6	;RP1=0, select bank1
  2179     00B0  1C5D               	btfss	_flags^(0+128),0
  2180     00B1  28B4               	goto	l4223
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  2183     00B2  30FD               	movlw	253
  2184     00B3  05DD               	andwf	_flags^(0+128),f
  2185     00B4                     l4223:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2188     00B4  1683               	bsf	3,5	;RP0=1, select bank3
  2189     00B5  1703               	bsf	3,6	;RP1=1, select bank3
  2190     00B6  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2191     00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2192     00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2193     00B9  00B8               	movwf	read_prec_or_width@fmt^(0+128)
  2194     00BA  1683               	bsf	3,5	;RP0=1, select bank3
  2195     00BB  1703               	bsf	3,6	;RP1=1, select bank3
  2196     00BC  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2197     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  2198     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  2199     00BF  00B9               	movwf	read_prec_or_width@ap^(0+128)
  2200     00C0  160A  118A  2512  120A  118A  	fcall	_read_prec_or_width
  2201     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2202     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  2203     00C7  0839               	movf	(?_read_prec_or_width+1)^(0+128),w
  2204     00C8  00D8               	movwf	(_width+1)^(0+128)
  2205     00C9  0838               	movf	?_read_prec_or_width^(0+128),w
  2206     00CA  00D7               	movwf	_width^(0+128)
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2209     00CB  1FD8               	btfss	(_width+1)^(0+128),7
  2210     00CC  28D3               	goto	l4231
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2213     00CD  145D               	bsf	_flags^(0+128),0
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2216     00CE  09D7               	comf	_width^(0+128),f
  2217     00CF  09D8               	comf	(_width+1)^(0+128),f
  2218     00D0  0AD7               	incf	_width^(0+128),f
  2219     00D1  1903               	skipnz
  2220     00D2  0AD8               	incf	(_width+1)^(0+128),f
  2221     00D3                     l4231:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2224     00D3  1683               	bsf	3,5	;RP0=1, select bank3
  2225     00D4  1703               	bsf	3,6	;RP1=1, select bank3
  2226     00D5  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2227     00D6  0084               	movwf	4
  2228     00D7  1383               	bcf	3,7	;select IRP bank0
  2229     00D8  0800               	movf	0,w
  2230     00D9  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2231     00DA  0A84               	incf	4,f
  2232     00DB  0800               	movf	0,w
  2233     00DC  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2234     00DD  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2235     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2236     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2237     00E0  00FF               	movwf	127
  2238     00E1  1683               	bsf	3,5	;RP0=1, select bank3
  2239     00E2  1703               	bsf	3,6	;RP1=1, select bank3
  2240     00E3  0820               	movf	??_vfpfcnvrt^(0+384),w
  2241     00E4  0084               	movwf	4
  2242     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2243     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2244     00E7  160A  118A  2000  120A  118A  	fcall	stringtab
  2245     00EC  3A2E               	xorlw	46
  2246     00ED  1D03               	skipz
  2247     00EE  290E               	goto	l4237
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2250     00EF  1683               	bsf	3,5	;RP0=1, select bank3
  2251     00F0  1703               	bsf	3,6	;RP1=1, select bank3
  2252     00F1  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2253     00F2  0084               	movwf	4
  2254     00F3  3001               	movlw	1
  2255     00F4  1383               	bcf	3,7	;select IRP bank0
  2256     00F5  0780               	addwf	0,f
  2257     00F6  0A84               	incf	4,f
  2258     00F7  1803               	skipnc
  2259     00F8  0A80               	incf	0,f
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2262     00F9  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2263     00FA  1683               	bsf	3,5	;RP0=1, select bank1
  2264     00FB  1303               	bcf	3,6	;RP1=0, select bank1
  2265     00FC  00B8               	movwf	read_prec_or_width@fmt^(0+128)
  2266     00FD  1683               	bsf	3,5	;RP0=1, select bank3
  2267     00FE  1703               	bsf	3,6	;RP1=1, select bank3
  2268     00FF  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2269     0100  1683               	bsf	3,5	;RP0=1, select bank1
  2270     0101  1303               	bcf	3,6	;RP1=0, select bank1
  2271     0102  00B9               	movwf	read_prec_or_width@ap^(0+128)
  2272     0103  160A  118A  2512  120A  118A  	fcall	_read_prec_or_width
  2273     0108  1683               	bsf	3,5	;RP0=1, select bank1
  2274     0109  1303               	bcf	3,6	;RP1=0, select bank1
  2275     010A  0839               	movf	(?_read_prec_or_width+1)^(0+128),w
  2276     010B  00DA               	movwf	(_prec+1)^(0+128)
  2277     010C  0838               	movf	?_read_prec_or_width^(0+128),w
  2278     010D  00D9               	movwf	_prec^(0+128)
  2279     010E                     l4237:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  2282     010E  1683               	bsf	3,5	;RP0=1, select bank3
  2283     010F  1703               	bsf	3,6	;RP1=1, select bank3
  2284     0110  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2285     0111  0084               	movwf	4
  2286     0112  1383               	bcf	3,7	;select IRP bank0
  2287     0113  0800               	movf	0,w
  2288     0114  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2289     0115  0A84               	incf	4,f
  2290     0116  0800               	movf	0,w
  2291     0117  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  2292     0118  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2293     0119  1283               	bcf	3,5	;RP0=0, select bank0
  2294     011A  1303               	bcf	3,6	;RP1=0, select bank0
  2295     011B  00FF               	movwf	127
  2296     011C  1683               	bsf	3,5	;RP0=1, select bank3
  2297     011D  1703               	bsf	3,6	;RP1=1, select bank3
  2298     011E  0820               	movf	??_vfpfcnvrt^(0+384),w
  2299     011F  0084               	movwf	4
  2300     0120  1283               	bcf	3,5	;RP0=0, select bank0
  2301     0121  1303               	bcf	3,6	;RP1=0, select bank0
  2302     0122  160A  118A  2000  120A  118A  	fcall	stringtab
  2303     0127  3A63               	xorlw	99
  2304     0128  1D03               	skipz
  2305     0129  2962               	goto	l4247
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  2308     012A  1683               	bsf	3,5	;RP0=1, select bank3
  2309     012B  1703               	bsf	3,6	;RP1=1, select bank3
  2310     012C  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2311     012D  0084               	movwf	4
  2312     012E  3001               	movlw	1
  2313     012F  1383               	bcf	3,7	;select IRP bank0
  2314     0130  0780               	addwf	0,f
  2315     0131  0A84               	incf	4,f
  2316     0132  1803               	skipnc
  2317     0133  0A80               	incf	0,f
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2320     0134  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2321     0135  0084               	movwf	4
  2322     0136  1783               	bsf	3,7
  2323     0137  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2324     0138  1383               	bcf	3,7
  2325     0139  0800               	movf	0,w
  2326     013A  00FF               	movwf	127
  2327     013B  3002               	movlw	2
  2328     013C  0780               	addwf	0,f
  2329     013D  087F               	movf	127,w
  2330     013E  0084               	movwf	4
  2331     013F  1783               	bsf	3,7	;select IRP bank2
  2332     0140  0800               	movf	0,w
  2333     0141  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  2336     0142  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2337     0143  1683               	bsf	3,5	;RP0=1, select bank1
  2338     0144  1303               	bcf	3,6	;RP1=0, select bank1
  2339     0145  00BF               	movwf	ctoa@fp^(0+128)
  2340     0146  1683               	bsf	3,5	;RP0=1, select bank3
  2341     0147  1703               	bsf	3,6	;RP1=1, select bank3
  2342     0148  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2343     0149  1683               	bsf	3,5	;RP0=1, select bank1
  2344     014A  1303               	bcf	3,6	;RP1=0, select bank1
  2345     014B  00C0               	movwf	(ctoa@fp+1)^(0+128)
  2346     014C  1683               	bsf	3,5	;RP0=1, select bank3
  2347     014D  1703               	bsf	3,6	;RP1=1, select bank3
  2348     014E  0825               	movf	vfpfcnvrt@c^(0+384),w
  2349     014F  1683               	bsf	3,5	;RP0=1, select bank1
  2350     0150  1303               	bcf	3,6	;RP1=0, select bank1
  2351     0151  00C1               	movwf	ctoa@c^(0+128)
  2352     0152  160A  118A  242E   	fcall	_ctoa
  2353     0155  1683               	bsf	3,5	;RP0=1, select bank1
  2354     0156  1303               	bcf	3,6	;RP1=0, select bank1
  2355     0157  0840               	movf	(?_ctoa+1)^(0+128),w
  2356     0158  1683               	bsf	3,5	;RP0=1, select bank3
  2357     0159  1703               	bsf	3,6	;RP1=1, select bank3
  2358     015A  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2359     015B  1683               	bsf	3,5	;RP0=1, select bank1
  2360     015C  1303               	bcf	3,6	;RP1=0, select bank1
  2361     015D  083F               	movf	?_ctoa^(0+128),w
  2362     015E  1683               	bsf	3,5	;RP0=1, select bank3
  2363     015F  1703               	bsf	3,6	;RP1=1, select bank3
  2364     0160  009B               	movwf	?_vfpfcnvrt^(0+384)
  2365     0161  0008               	return
  2366     0162                     l4247:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2369     0162  1683               	bsf	3,5	;RP0=1, select bank3
  2370     0163  1703               	bsf	3,6	;RP1=1, select bank3
  2371     0164  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2372     0165  0084               	movwf	4
  2373     0166  1383               	bcf	3,7	;select IRP bank0
  2374     0167  0800               	movf	0,w
  2375     0168  00AA               	movwf	vfpfcnvrt@cp^(0+384)
  2376     0169  0A84               	incf	4,f
  2377     016A  0800               	movf	0,w
  2378     016B  0384               	decf	4,f
  2379     016C  00AB               	movwf	(vfpfcnvrt@cp+1)^(0+384)
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  2382     016D  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2383     016E  1283               	bcf	3,5	;RP0=0, select bank0
  2384     016F  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0170  00FF               	movwf	127
  2386     0171  1683               	bsf	3,5	;RP0=1, select bank3
  2387     0172  1703               	bsf	3,6	;RP1=1, select bank3
  2388     0173  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2389     0174  0084               	movwf	4
  2390     0175  1283               	bcf	3,5	;RP0=0, select bank0
  2391     0176  1303               	bcf	3,6	;RP1=0, select bank0
  2392     0177  160A  118A  2000  120A  118A  	fcall	stringtab
  2393     017C  1683               	bsf	3,5	;RP0=1, select bank3
  2394     017D  1703               	bsf	3,6	;RP1=1, select bank3
  2395     017E  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  2398     017F  29A8               	goto	l4265
  2399     0180                     l4251:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  2402     0180  3001               	movlw	1
  2403     0181  07AA               	addwf	vfpfcnvrt@cp^(0+384),f
  2404     0182  1803               	skipnc
  2405     0183  0AAB               	incf	(vfpfcnvrt@cp+1)^(0+384),f
  2406     0184  3000               	movlw	0
  2407     0185  07AB               	addwf	(vfpfcnvrt@cp+1)^(0+384),f
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  2410     0186  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2411     0187  1283               	bcf	3,5	;RP0=0, select bank0
  2412     0188  1303               	bcf	3,6	;RP1=0, select bank0
  2413     0189  00FF               	movwf	127
  2414     018A  1683               	bsf	3,5	;RP0=1, select bank3
  2415     018B  1703               	bsf	3,6	;RP1=1, select bank3
  2416     018C  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2417     018D  0084               	movwf	4
  2418     018E  1283               	bcf	3,5	;RP0=0, select bank0
  2419     018F  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0190  160A  118A  2000  120A  118A  	fcall	stringtab
  2421     0195  3A68               	xorlw	104
  2422     0196  1D03               	skipz
  2423     0197  29C8               	goto	l4267
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  2426     0198  3048               	movlw	72
  2427     0199  1683               	bsf	3,5	;RP0=1, select bank3
  2428     019A  1703               	bsf	3,6	;RP1=1, select bank3
  2429     019B  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2430     019C                     l4257:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  2433     019C  3001               	movlw	1
  2434     019D  07AA               	addwf	vfpfcnvrt@cp^(0+384),f
  2435     019E  1803               	skipnc
  2436     019F  0AAB               	incf	(vfpfcnvrt@cp+1)^(0+384),f
  2437     01A0  3000               	movlw	0
  2438     01A1  07AB               	addwf	(vfpfcnvrt@cp+1)^(0+384),f
  2439     01A2  29C8               	goto	l4267
  2440     01A3                     l788:	
  2441                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1339:    case 'd'
      +                          :
  2442                           
  2443     01A3                     l791:	
  2444                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1348:    case 'n'
      +                          :
  2445                           
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  2448     01A3  3069               	movlw	105
  2449     01A4  00A5               	movwf	vfpfcnvrt@c^(0+384)
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
  2452     01A5  29C8               	goto	l4267
  2453     01A6                     l4261:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  2456     01A6  01A5               	clrf	vfpfcnvrt@c^(0+384)
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
  2459     01A7  29C8               	goto	l4267
  2460     01A8                     l4265:
  2461     01A8  0825               	movf	vfpfcnvrt@c^(0+384),w
  2462                           
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 10, Range of values is 88 to 122
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte           31    16 (average)
  2468                           ; direct_byte          116    11 (fixed)
  2469                           ; jumptable            263     9 (fixed)
  2470                           ;	Chosen strategy is simple_byte
  2471     01A9  3A58               	xorlw	88	; case 88
  2472     01AA  1903               	skipnz
  2473     01AB  29A3               	goto	l791
  2474     01AC  3A3C               	xorlw	60	; case 100
  2475     01AD  1903               	skipnz
  2476     01AE  29A3               	goto	l791
  2477     01AF  3A0C               	xorlw	12	; case 104
  2478     01B0  1903               	skipnz
  2479     01B1  2980               	goto	l4251
  2480     01B2  3A01               	xorlw	1	; case 105
  2481     01B3  1903               	skipnz
  2482     01B4  29A3               	goto	l791
  2483     01B5  3A07               	xorlw	7	; case 110
  2484     01B6  1903               	skipnz
  2485     01B7  29A3               	goto	l791
  2486     01B8  3A01               	xorlw	1	; case 111
  2487     01B9  1903               	skipnz
  2488     01BA  29A3               	goto	l788
  2489     01BB  3A1B               	xorlw	27	; case 116
  2490     01BC  1903               	skipnz
  2491     01BD  299C               	goto	l4257
  2492     01BE  3A01               	xorlw	1	; case 117
  2493     01BF  1903               	skipnz
  2494     01C0  29A3               	goto	l791
  2495     01C1  3A0D               	xorlw	13	; case 120
  2496     01C2  1903               	skipnz
  2497     01C3  29A3               	goto	l791
  2498     01C4  3A02               	xorlw	2	; case 122
  2499     01C5  1903               	skipnz
  2500     01C6  299C               	goto	l4257
  2501     01C7  29A6               	goto	l4261
  2502     01C8                     l4267:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2505     01C8  1683               	bsf	3,5	;RP0=1, select bank3
  2506     01C9  1703               	bsf	3,6	;RP1=1, select bank3
  2507     01CA  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2508     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2509     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2510     01CD  00FF               	movwf	127
  2511     01CE  1683               	bsf	3,5	;RP0=1, select bank3
  2512     01CF  1703               	bsf	3,6	;RP1=1, select bank3
  2513     01D0  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2514     01D1  0084               	movwf	4
  2515     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2516     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2517     01D4  160A  118A  2000  120A  118A  	fcall	stringtab
  2518     01D9  3A64               	xorlw	100
  2519     01DA  1903               	skipnz
  2520     01DB  2A16               	goto	l4283
  2521     01DC  1683               	bsf	3,5	;RP0=1, select bank3
  2522     01DD  1703               	bsf	3,6	;RP1=1, select bank3
  2523     01DE  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2524     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2525     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2526     01E1  00FF               	movwf	127
  2527     01E2  1683               	bsf	3,5	;RP0=1, select bank3
  2528     01E3  1703               	bsf	3,6	;RP1=1, select bank3
  2529     01E4  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2530     01E5  0084               	movwf	4
  2531     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2532     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2533     01E8  160A  118A  2000  120A  118A  	fcall	stringtab
  2534     01ED  3A69               	xorlw	105
  2535     01EE  1903               	btfsc	3,2
  2536     01EF  2A16               	goto	l4283
  2537     01F0  2A65               	goto	l4291
  2538     01F1                     l4271:
  2539     01F1                     l4273:	
  2540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2543                           
  2544     01F1  2A04               	goto	l4279
  2545     01F2                     l4275:	
  2546                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1370:      break;
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2549                           
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2552     01F2  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2553     01F3  0084               	movwf	4
  2554     01F4  1783               	bsf	3,7
  2555     01F5  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2556     01F6  1383               	bcf	3,7
  2557     01F7  0800               	movf	0,w
  2558     01F8  00FF               	movwf	127
  2559     01F9  3002               	movlw	2
  2560     01FA  0780               	addwf	0,f
  2561     01FB  087F               	movf	127,w
  2562     01FC  0084               	movwf	4
  2563     01FD  1783               	bsf	3,7	;select IRP bank2
  2564     01FE  0800               	movf	0,w
  2565     01FF  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2566     0200  01A7               	clrf	(vfpfcnvrt@convarg+1)^(0+384)
  2567     0201  1BA6               	btfsc	vfpfcnvrt@convarg^(0+384),7
  2568     0202  03A7               	decf	(vfpfcnvrt@convarg+1)^(0+384),f
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1375:      break;
  2571     0203  2A29               	goto	l4285
  2572     0204                     l4277:
  2573     0204                     l4279:	
  2574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1390:      break;
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2577                           
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2580     0204  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2581     0205  0084               	movwf	4
  2582     0206  1783               	bsf	3,7
  2583     0207  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2584     0208  1383               	bcf	3,7
  2585     0209  0800               	movf	0,w
  2586     020A  00FF               	movwf	127
  2587     020B  3002               	movlw	2
  2588     020C  0780               	addwf	0,f
  2589     020D  087F               	movf	127,w
  2590     020E  0084               	movwf	4
  2591     020F  1783               	bsf	3,7	;select IRP bank2
  2592     0210  0800               	movf	0,w
  2593     0211  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2594     0212  0A84               	incf	4,f
  2595     0213  0800               	movf	0,w
  2596     0214  00A7               	movwf	(vfpfcnvrt@convarg+1)^(0+384)
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1400:      break;
  2599     0215  2A29               	goto	l4285
  2600     0216                     l4283:
  2601     0216  1683               	bsf	3,5	;RP0=1, select bank3
  2602     0217  1703               	bsf	3,6	;RP1=1, select bank3
  2603     0218  0825               	movf	vfpfcnvrt@c^(0+384),w
  2604                           
  2605                           ; Switch size 1, requested type "simple"
  2606                           ; Number of cases is 5, Range of values is 72 to 122
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte           16     9 (average)
  2610                           ; direct_byte          164    11 (fixed)
  2611                           ; jumptable            263     9 (fixed)
  2612                           ;	Chosen strategy is simple_byte
  2613     0219  3A48               	xorlw	72	; case 72
  2614     021A  1903               	skipnz
  2615     021B  29F2               	goto	l4275
  2616     021C  3A20               	xorlw	32	; case 104
  2617     021D  1903               	skipnz
  2618     021E  29F1               	goto	l4273
  2619     021F  3A01               	xorlw	1	; case 105
  2620     0220  1903               	skipnz
  2621     0221  29F1               	goto	l4271
  2622     0222  3A1D               	xorlw	29	; case 116
  2623     0223  1903               	skipnz
  2624     0224  2A04               	goto	l4277
  2625     0225  3A0E               	xorlw	14	; case 122
  2626     0226  1903               	skipnz
  2627     0227  2A04               	goto	l4279
  2628     0228  2A29               	goto	l4285
  2629     0229                     l4285:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2632     0229  3001               	movlw	1
  2633     022A  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2634     022B  0820               	movf	??_vfpfcnvrt^(0+384),w
  2635     022C  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  2636     022D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  2637     022E  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2638     022F  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  2639     0230  1803               	skipnc
  2640     0231  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  2641     0232  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  2642     0233  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  2643     0234  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2644     0235  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  2645     0236  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2646     0237  0084               	movwf	4
  2647     0238  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  2648     0239  1383               	bcf	3,7	;select IRP bank0
  2649     023A  0080               	movwf	0
  2650     023B  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  2651     023C  0A84               	incf	4,f
  2652     023D  0080               	movwf	0
  2653     023E  0384               	decf	4,f
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  2656     023F  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2657     0240  1683               	bsf	3,5	;RP0=1, select bank1
  2658     0241  1303               	bcf	3,6	;RP1=0, select bank1
  2659     0242  00CF               	movwf	dtoa@fp^(0+128)
  2660     0243  1683               	bsf	3,5	;RP0=1, select bank3
  2661     0244  1703               	bsf	3,6	;RP1=1, select bank3
  2662     0245  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2663     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2664     0247  1303               	bcf	3,6	;RP1=0, select bank1
  2665     0248  00D0               	movwf	(dtoa@fp+1)^(0+128)
  2666     0249  1683               	bsf	3,5	;RP0=1, select bank3
  2667     024A  1703               	bsf	3,6	;RP1=1, select bank3
  2668     024B  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2669     024C  1683               	bsf	3,5	;RP0=1, select bank1
  2670     024D  1303               	bcf	3,6	;RP1=0, select bank1
  2671     024E  00D2               	movwf	(dtoa@d+1)^(0+128)
  2672     024F  1683               	bsf	3,5	;RP0=1, select bank3
  2673     0250  1703               	bsf	3,6	;RP1=1, select bank3
  2674     0251  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2675     0252  1683               	bsf	3,5	;RP0=1, select bank1
  2676     0253  1303               	bcf	3,6	;RP1=0, select bank1
  2677     0254  00D1               	movwf	dtoa@d^(0+128)
  2678     0255  120A  118A  260E   	fcall	_dtoa
  2679     0258  1683               	bsf	3,5	;RP0=1, select bank1
  2680     0259  1303               	bcf	3,6	;RP1=0, select bank1
  2681     025A  0850               	movf	(?_dtoa+1)^(0+128),w
  2682     025B  1683               	bsf	3,5	;RP0=1, select bank3
  2683     025C  1703               	bsf	3,6	;RP1=1, select bank3
  2684     025D  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2685     025E  1683               	bsf	3,5	;RP0=1, select bank1
  2686     025F  1303               	bcf	3,6	;RP1=0, select bank1
  2687     0260  084F               	movf	?_dtoa^(0+128),w
  2688     0261  1683               	bsf	3,5	;RP0=1, select bank3
  2689     0262  1703               	bsf	3,6	;RP1=1, select bank3
  2690     0263  009B               	movwf	?_vfpfcnvrt^(0+384)
  2691     0264  0008               	return
  2692     0265                     l4291:
  2693     0265  1683               	bsf	3,5	;RP0=1, select bank3
  2694     0266  1703               	bsf	3,6	;RP1=1, select bank3
  2695     0267  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2696     0268  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0269  1303               	bcf	3,6	;RP1=0, select bank0
  2698     026A  00FF               	movwf	127
  2699     026B  1683               	bsf	3,5	;RP0=1, select bank3
  2700     026C  1703               	bsf	3,6	;RP1=1, select bank3
  2701     026D  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2702     026E  0084               	movwf	4
  2703     026F  1283               	bcf	3,5	;RP0=0, select bank0
  2704     0270  1303               	bcf	3,6	;RP1=0, select bank0
  2705     0271  160A  118A  2000  120A  118A  	fcall	stringtab
  2706     0276  3A78               	xorlw	120
  2707     0277  1903               	skipnz
  2708     0278  2ADC               	goto	l4311
  2709     0279  1683               	bsf	3,5	;RP0=1, select bank3
  2710     027A  1703               	bsf	3,6	;RP1=1, select bank3
  2711     027B  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2712     027C  1283               	bcf	3,5	;RP0=0, select bank0
  2713     027D  1303               	bcf	3,6	;RP1=0, select bank0
  2714     027E  00FF               	movwf	127
  2715     027F  1683               	bsf	3,5	;RP0=1, select bank3
  2716     0280  1703               	bsf	3,6	;RP1=1, select bank3
  2717     0281  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2718     0282  0084               	movwf	4
  2719     0283  1283               	bcf	3,5	;RP0=0, select bank0
  2720     0284  1303               	bcf	3,6	;RP1=0, select bank0
  2721     0285  160A  118A  2000  120A  118A  	fcall	stringtab
  2722     028A  3A58               	xorlw	88
  2723     028B  1903               	skipnz
  2724     028C  2ADC               	goto	l4311
  2725     028D  1683               	bsf	3,5	;RP0=1, select bank3
  2726     028E  1703               	bsf	3,6	;RP1=1, select bank3
  2727     028F  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2728     0290  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0291  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0292  00FF               	movwf	127
  2731     0293  1683               	bsf	3,5	;RP0=1, select bank3
  2732     0294  1703               	bsf	3,6	;RP1=1, select bank3
  2733     0295  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2734     0296  0084               	movwf	4
  2735     0297  1283               	bcf	3,5	;RP0=0, select bank0
  2736     0298  1303               	bcf	3,6	;RP1=0, select bank0
  2737     0299  160A  118A  2000  120A  118A  	fcall	stringtab
  2738     029E  3A6F               	xorlw	111
  2739     029F  1903               	skipnz
  2740     02A0  2ADC               	goto	l4311
  2741     02A1  1683               	bsf	3,5	;RP0=1, select bank3
  2742     02A2  1703               	bsf	3,6	;RP1=1, select bank3
  2743     02A3  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2744     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2745     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2746     02A6  00FF               	movwf	127
  2747     02A7  1683               	bsf	3,5	;RP0=1, select bank3
  2748     02A8  1703               	bsf	3,6	;RP1=1, select bank3
  2749     02A9  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2750     02AA  0084               	movwf	4
  2751     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2752     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2753     02AD  160A  118A  2000  120A  118A  	fcall	stringtab
  2754     02B2  3A75               	xorlw	117
  2755     02B3  1903               	btfsc	3,2
  2756     02B4  2ADC               	goto	l4311
  2757     02B5  2BAE               	goto	l4331
  2758     02B6                     l4299:
  2759     02B6                     l4301:	
  2760                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2763                           
  2764     02B6  2ACA               	goto	l4307
  2765     02B7                     l4303:	
  2766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1461:      break;
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  2769                           
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  2772     02B7  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2773     02B8  0084               	movwf	4
  2774     02B9  1783               	bsf	3,7
  2775     02BA  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2776     02BB  1383               	bcf	3,7
  2777     02BC  0800               	movf	0,w
  2778     02BD  00FF               	movwf	127
  2779     02BE  3002               	movlw	2
  2780     02BF  0780               	addwf	0,f
  2781     02C0  087F               	movf	127,w
  2782     02C1  0084               	movwf	4
  2783     02C2  1783               	bsf	3,7	;select IRP bank2
  2784     02C3  0800               	movf	0,w
  2785     02C4  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2786     02C5  01A1               	clrf	(??_vfpfcnvrt^(0+384)+1)
  2787     02C6  0820               	movf	??_vfpfcnvrt^(0+384),w
  2788     02C7  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2789     02C8  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2790     02C9  2ADA               	goto	L3
  2791     02CA                     l4305:	
  2792                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1466:      break;
  2793                           
  2794     02CA                     l4307:	
  2795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1481:      break;
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2798                           
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2801     02CA  081E               	movf	vfpfcnvrt@ap^(0+384),w
  2802     02CB  0084               	movwf	4
  2803     02CC  1783               	bsf	3,7
  2804     02CD  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  2805     02CE  1383               	bcf	3,7
  2806     02CF  0800               	movf	0,w
  2807     02D0  00FF               	movwf	127
  2808     02D1  3002               	movlw	2
  2809     02D2  0780               	addwf	0,f
  2810     02D3  087F               	movf	127,w
  2811     02D4  0084               	movwf	4
  2812     02D5  1783               	bsf	3,7	;select IRP bank2
  2813     02D6  0800               	movf	0,w
  2814     02D7  00A6               	movwf	vfpfcnvrt@convarg^(0+384)
  2815     02D8  0A84               	incf	4,f
  2816     02D9  0800               	movf	0,w
  2817     02DA                     L3:
  2818     02DA  00A7               	movwf	(vfpfcnvrt@convarg+1)^(0+384)
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1491:      break;
  2821     02DB  2AEF               	goto	l4313
  2822     02DC                     l4311:
  2823     02DC  1683               	bsf	3,5	;RP0=1, select bank3
  2824     02DD  1703               	bsf	3,6	;RP1=1, select bank3
  2825     02DE  0825               	movf	vfpfcnvrt@c^(0+384),w
  2826                           
  2827                           ; Switch size 1, requested type "simple"
  2828                           ; Number of cases is 5, Range of values is 72 to 122
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte           16     9 (average)
  2832                           ; direct_byte          164    11 (fixed)
  2833                           ; jumptable            263     9 (fixed)
  2834                           ;	Chosen strategy is simple_byte
  2835     02DF  3A48               	xorlw	72	; case 72
  2836     02E0  1903               	skipnz
  2837     02E1  2AB7               	goto	l4303
  2838     02E2  3A20               	xorlw	32	; case 104
  2839     02E3  1903               	skipnz
  2840     02E4  2AB6               	goto	l4301
  2841     02E5  3A01               	xorlw	1	; case 105
  2842     02E6  1903               	skipnz
  2843     02E7  2AB6               	goto	l4299
  2844     02E8  3A1D               	xorlw	29	; case 116
  2845     02E9  1903               	skipnz
  2846     02EA  2ACA               	goto	l4305
  2847     02EB  3A0E               	xorlw	14	; case 122
  2848     02EC  1903               	skipnz
  2849     02ED  2ACA               	goto	l4307
  2850     02EE  2AEF               	goto	l4313
  2851     02EF                     l4313:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2854     02EF  3001               	movlw	1
  2855     02F0  00A0               	movwf	??_vfpfcnvrt^(0+384)
  2856     02F1  0820               	movf	??_vfpfcnvrt^(0+384),w
  2857     02F2  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  2858     02F3  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  2859     02F4  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2860     02F5  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  2861     02F6  1803               	skipnc
  2862     02F7  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  2863     02F8  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  2864     02F9  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  2865     02FA  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  2866     02FB  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  2867     02FC  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  2868     02FD  0084               	movwf	4
  2869     02FE  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  2870     02FF  1383               	bcf	3,7	;select IRP bank0
  2871     0300  0080               	movwf	0
  2872     0301  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  2873     0302  0A84               	incf	4,f
  2874     0303  0080               	movwf	0
  2875     0304  0384               	decf	4,f
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2878     0305  2B92               	goto	l4329
  2879     0306                     l4315:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  2882     0306  1683               	bsf	3,5	;RP0=1, select bank3
  2883     0307  1703               	bsf	3,6	;RP1=1, select bank3
  2884     0308  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2885     0309  1683               	bsf	3,5	;RP0=1, select bank1
  2886     030A  1303               	bcf	3,6	;RP1=0, select bank1
  2887     030B  00CF               	movwf	otoa@fp^(0+128)
  2888     030C  1683               	bsf	3,5	;RP0=1, select bank3
  2889     030D  1703               	bsf	3,6	;RP1=1, select bank3
  2890     030E  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2891     030F  1683               	bsf	3,5	;RP0=1, select bank1
  2892     0310  1303               	bcf	3,6	;RP1=0, select bank1
  2893     0311  00D0               	movwf	(otoa@fp+1)^(0+128)
  2894     0312  1683               	bsf	3,5	;RP0=1, select bank3
  2895     0313  1703               	bsf	3,6	;RP1=1, select bank3
  2896     0314  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2897     0315  1683               	bsf	3,5	;RP0=1, select bank1
  2898     0316  1303               	bcf	3,6	;RP1=0, select bank1
  2899     0317  00D2               	movwf	(otoa@d+1)^(0+128)
  2900     0318  1683               	bsf	3,5	;RP0=1, select bank3
  2901     0319  1703               	bsf	3,6	;RP1=1, select bank3
  2902     031A  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2903     031B  1683               	bsf	3,5	;RP0=1, select bank1
  2904     031C  1303               	bcf	3,6	;RP1=0, select bank1
  2905     031D  00D1               	movwf	otoa@d^(0+128)
  2906     031E  120A  118A  2720   	fcall	_otoa
  2907     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2908     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2909     0323  0850               	movf	(?_otoa+1)^(0+128),w
  2910     0324  1683               	bsf	3,5	;RP0=1, select bank3
  2911     0325  1703               	bsf	3,6	;RP1=1, select bank3
  2912     0326  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2913     0327  1683               	bsf	3,5	;RP0=1, select bank1
  2914     0328  1303               	bcf	3,6	;RP1=0, select bank1
  2915     0329  084F               	movf	?_otoa^(0+128),w
  2916     032A  1683               	bsf	3,5	;RP0=1, select bank3
  2917     032B  1703               	bsf	3,6	;RP1=1, select bank3
  2918     032C  009B               	movwf	?_vfpfcnvrt^(0+384)
  2919     032D  0008               	return
  2920     032E                     l4319:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  2923     032E  1683               	bsf	3,5	;RP0=1, select bank3
  2924     032F  1703               	bsf	3,6	;RP1=1, select bank3
  2925     0330  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2926     0331  1683               	bsf	3,5	;RP0=1, select bank1
  2927     0332  1303               	bcf	3,6	;RP1=0, select bank1
  2928     0333  00CF               	movwf	utoa@fp^(0+128)
  2929     0334  1683               	bsf	3,5	;RP0=1, select bank3
  2930     0335  1703               	bsf	3,6	;RP1=1, select bank3
  2931     0336  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2932     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2933     0338  1303               	bcf	3,6	;RP1=0, select bank1
  2934     0339  00D0               	movwf	(utoa@fp+1)^(0+128)
  2935     033A  1683               	bsf	3,5	;RP0=1, select bank3
  2936     033B  1703               	bsf	3,6	;RP1=1, select bank3
  2937     033C  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2938     033D  1683               	bsf	3,5	;RP0=1, select bank1
  2939     033E  1303               	bcf	3,6	;RP1=0, select bank1
  2940     033F  00D2               	movwf	(utoa@d+1)^(0+128)
  2941     0340  1683               	bsf	3,5	;RP0=1, select bank3
  2942     0341  1703               	bsf	3,6	;RP1=1, select bank3
  2943     0342  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2944     0343  1683               	bsf	3,5	;RP0=1, select bank1
  2945     0344  1303               	bcf	3,6	;RP1=0, select bank1
  2946     0345  00D1               	movwf	utoa@d^(0+128)
  2947     0346  160A  118A  2743   	fcall	_utoa
  2948     0349  1683               	bsf	3,5	;RP0=1, select bank1
  2949     034A  1303               	bcf	3,6	;RP1=0, select bank1
  2950     034B  0850               	movf	(?_utoa+1)^(0+128),w
  2951     034C  1683               	bsf	3,5	;RP0=1, select bank3
  2952     034D  1703               	bsf	3,6	;RP1=1, select bank3
  2953     034E  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  2954     034F  1683               	bsf	3,5	;RP0=1, select bank1
  2955     0350  1303               	bcf	3,6	;RP1=0, select bank1
  2956     0351  084F               	movf	?_utoa^(0+128),w
  2957     0352  1683               	bsf	3,5	;RP0=1, select bank3
  2958     0353  1703               	bsf	3,6	;RP1=1, select bank3
  2959     0354  009B               	movwf	?_vfpfcnvrt^(0+384)
  2960     0355  0008               	return
  2961     0356                     l4323:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  2964     0356  1683               	bsf	3,5	;RP0=1, select bank3
  2965     0357  1703               	bsf	3,6	;RP1=1, select bank3
  2966     0358  081B               	movf	vfpfcnvrt@fp^(0+384),w
  2967     0359  1683               	bsf	3,5	;RP0=1, select bank1
  2968     035A  1303               	bcf	3,6	;RP1=0, select bank1
  2969     035B  00CF               	movwf	xtoa@fp^(0+128)
  2970     035C  1683               	bsf	3,5	;RP0=1, select bank3
  2971     035D  1703               	bsf	3,6	;RP1=1, select bank3
  2972     035E  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  2973     035F  1683               	bsf	3,5	;RP0=1, select bank1
  2974     0360  1303               	bcf	3,6	;RP1=0, select bank1
  2975     0361  00D0               	movwf	(xtoa@fp+1)^(0+128)
  2976     0362  1683               	bsf	3,5	;RP0=1, select bank3
  2977     0363  1703               	bsf	3,6	;RP1=1, select bank3
  2978     0364  0827               	movf	(vfpfcnvrt@convarg+1)^(0+384),w
  2979     0365  1683               	bsf	3,5	;RP0=1, select bank1
  2980     0366  1303               	bcf	3,6	;RP1=0, select bank1
  2981     0367  00D2               	movwf	(xtoa@d+1)^(0+128)
  2982     0368  1683               	bsf	3,5	;RP0=1, select bank3
  2983     0369  1703               	bsf	3,6	;RP1=1, select bank3
  2984     036A  0826               	movf	vfpfcnvrt@convarg^(0+384),w
  2985     036B  1683               	bsf	3,5	;RP0=1, select bank1
  2986     036C  1303               	bcf	3,6	;RP1=0, select bank1
  2987     036D  00D1               	movwf	xtoa@d^(0+128)
  2988     036E  1683               	bsf	3,5	;RP0=1, select bank3
  2989     036F  1703               	bsf	3,6	;RP1=1, select bank3
  2990     0370  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  2991     0371  1283               	bcf	3,5	;RP0=0, select bank0
  2992     0372  1303               	bcf	3,6	;RP1=0, select bank0
  2993     0373  00FF               	movwf	127
  2994     0374  1683               	bsf	3,5	;RP0=1, select bank3
  2995     0375  1703               	bsf	3,6	;RP1=1, select bank3
  2996     0376  082A               	movf	vfpfcnvrt@cp^(0+384),w
  2997     0377  0084               	movwf	4
  2998     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2999     0379  1303               	bcf	3,6	;RP1=0, select bank0
  3000     037A  160A  118A  2000  120A  118A  	fcall	stringtab
  3001     037F  1683               	bsf	3,5	;RP0=1, select bank1
  3002     0380  1303               	bcf	3,6	;RP1=0, select bank1
  3003     0381  00D3               	movwf	xtoa@x^(0+128)
  3004     0382  120A  158A  2345   	fcall	_xtoa
  3005     0385  1683               	bsf	3,5	;RP0=1, select bank1
  3006     0386  1303               	bcf	3,6	;RP1=0, select bank1
  3007     0387  0850               	movf	(?_xtoa+1)^(0+128),w
  3008     0388  1683               	bsf	3,5	;RP0=1, select bank3
  3009     0389  1703               	bsf	3,6	;RP1=1, select bank3
  3010     038A  009C               	movwf	(?_vfpfcnvrt+1)^(0+384)
  3011     038B  1683               	bsf	3,5	;RP0=1, select bank1
  3012     038C  1303               	bcf	3,6	;RP1=0, select bank1
  3013     038D  084F               	movf	?_xtoa^(0+128),w
  3014     038E  1683               	bsf	3,5	;RP0=1, select bank3
  3015     038F  1703               	bsf	3,6	;RP1=1, select bank3
  3016     0390  009B               	movwf	?_vfpfcnvrt^(0+384)
  3017     0391  0008               	return
  3018     0392                     l4329:
  3019     0392  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  3020     0393  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0394  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0395  00FF               	movwf	127
  3023     0396  1683               	bsf	3,5	;RP0=1, select bank3
  3024     0397  1703               	bsf	3,6	;RP1=1, select bank3
  3025     0398  082A               	movf	vfpfcnvrt@cp^(0+384),w
  3026     0399  0084               	movwf	4
  3027     039A  1283               	bcf	3,5	;RP0=0, select bank0
  3028     039B  1303               	bcf	3,6	;RP1=0, select bank0
  3029     039C  160A  118A  2000  120A  118A  	fcall	stringtab
  3030                           
  3031                           ; Switch size 1, requested type "simple"
  3032                           ; Number of cases is 4, Range of values is 88 to 120
  3033                           ; switch strategies available:
  3034                           ; Name         Instructions Cycles
  3035                           ; simple_byte           13     7 (average)
  3036                           ; direct_byte          110    11 (fixed)
  3037                           ; jumptable            263     9 (fixed)
  3038                           ;	Chosen strategy is simple_byte
  3039     03A1  3A58               	xorlw	88	; case 88
  3040     03A2  1903               	skipnz
  3041     03A3  2B56               	goto	l4323
  3042     03A4  3A37               	xorlw	55	; case 111
  3043     03A5  1903               	skipnz
  3044     03A6  2B06               	goto	l4315
  3045     03A7  3A1A               	xorlw	26	; case 117
  3046     03A8  1903               	skipnz
  3047     03A9  2B2E               	goto	l4319
  3048     03AA  3A0D               	xorlw	13	; case 120
  3049     03AB  1903               	skipnz
  3050     03AC  2B56               	goto	l4323
  3051     03AD  2BAE               	goto	l4331
  3052     03AE                     l4331:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  3055     03AE  1683               	bsf	3,5	;RP0=1, select bank3
  3056     03AF  1703               	bsf	3,6	;RP1=1, select bank3
  3057     03B0  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  3058     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3059     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3060     03B3  00FF               	movwf	127
  3061     03B4  1683               	bsf	3,5	;RP0=1, select bank3
  3062     03B5  1703               	bsf	3,6	;RP1=1, select bank3
  3063     03B6  082A               	movf	vfpfcnvrt@cp^(0+384),w
  3064     03B7  0084               	movwf	4
  3065     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3066     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3067     03BA  160A  118A  2000  120A  118A  	fcall	stringtab
  3068     03BF  3A6E               	xorlw	110
  3069     03C0  1903               	btfsc	3,2
  3070     03C1  2BF8               	goto	l4347
  3071     03C2  2C24               	goto	l4355
  3072     03C3                     l4335:
  3073     03C3                     l4337:	
  3074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1600:      break;
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  3077                           
  3078     03C3  2BDC               	goto	l4343
  3079     03C4                     l4339:	
  3080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1604:      break;
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  3083                           
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  3086     03C4  081E               	movf	vfpfcnvrt@ap^(0+384),w
  3087     03C5  0084               	movwf	4
  3088     03C6  1783               	bsf	3,7
  3089     03C7  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  3090     03C8  1383               	bcf	3,7
  3091     03C9  0800               	movf	0,w
  3092     03CA  00FF               	movwf	127
  3093     03CB  3002               	movlw	2
  3094     03CC  0780               	addwf	0,f
  3095     03CD  087F               	movf	127,w
  3096     03CE  0084               	movwf	4
  3097     03CF  1783               	bsf	3,7	;select IRP bank2
  3098     03D0  0800               	movf	0,w
  3099     03D1  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3100     03D2  0A84               	incf	4,f
  3101     03D3  0800               	movf	0,w
  3102     03D4  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3103     03D5  0820               	movf	??_vfpfcnvrt^(0+384),w
  3104     03D6  0084               	movwf	4
  3105     03D7  1783               	bsf	3,7
  3106     03D8  1C21               	btfss	(??_vfpfcnvrt+1)^(0+384),0
  3107     03D9  1383               	bcf	3,7
  3108     03DA  0867               	movf	_nout^(0+384),w
  3109     03DB  2BF6               	goto	L6
  3110     03DC                     l4341:	
  3111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1609:      break;
  3112                           
  3113     03DC                     l4343:	
  3114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1624:      break;
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  3117                           
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  3120     03DC  081E               	movf	vfpfcnvrt@ap^(0+384),w
  3121     03DD  0084               	movwf	4
  3122     03DE  1783               	bsf	3,7
  3123     03DF  1C1F               	btfss	(vfpfcnvrt@ap+1)^(0+384),0
  3124     03E0  1383               	bcf	3,7
  3125     03E1  0800               	movf	0,w
  3126     03E2  00FF               	movwf	127
  3127     03E3  3002               	movlw	2
  3128     03E4  0780               	addwf	0,f
  3129     03E5  087F               	movf	127,w
  3130     03E6  0084               	movwf	4
  3131     03E7  1783               	bsf	3,7	;select IRP bank2
  3132     03E8  0800               	movf	0,w
  3133     03E9  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3134     03EA  0A84               	incf	4,f
  3135     03EB  0800               	movf	0,w
  3136     03EC  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3137     03ED  0820               	movf	??_vfpfcnvrt^(0+384),w
  3138     03EE  0084               	movwf	4
  3139     03EF  1783               	bsf	3,7
  3140     03F0  1C21               	btfss	(??_vfpfcnvrt+1)^(0+384),0
  3141     03F1  1383               	bcf	3,7
  3142     03F2  0867               	movf	_nout^(0+384),w
  3143     03F3  0080               	movwf	0
  3144     03F4  0A84               	incf	4,f
  3145     03F5  0868               	movf	(_nout+1)^(0+384),w
  3146     03F6                     L6:
  3147     03F6  0080               	movwf	0
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1634:      break;
  3150     03F7  2C0B               	goto	l4349
  3151     03F8                     l4347:
  3152     03F8  1683               	bsf	3,5	;RP0=1, select bank3
  3153     03F9  1703               	bsf	3,6	;RP1=1, select bank3
  3154     03FA  0825               	movf	vfpfcnvrt@c^(0+384),w
  3155                           
  3156                           ; Switch size 1, requested type "simple"
  3157                           ; Number of cases is 5, Range of values is 72 to 122
  3158                           ; switch strategies available:
  3159                           ; Name         Instructions Cycles
  3160                           ; simple_byte           16     9 (average)
  3161                           ; direct_byte          164    11 (fixed)
  3162                           ; jumptable            263     9 (fixed)
  3163                           ;	Chosen strategy is simple_byte
  3164     03FB  3A48               	xorlw	72	; case 72
  3165     03FC  1903               	skipnz
  3166     03FD  2BC4               	goto	l4339
  3167     03FE  3A20               	xorlw	32	; case 104
  3168     03FF  1903               	skipnz
  3169     0400  2BC3               	goto	l4337
  3170     0401  3A01               	xorlw	1	; case 105
  3171     0402  1903               	skipnz
  3172     0403  2BC3               	goto	l4335
  3173     0404  3A1D               	xorlw	29	; case 116
  3174     0405  1903               	skipnz
  3175     0406  2BDC               	goto	l4341
  3176     0407  3A0E               	xorlw	14	; case 122
  3177     0408  1903               	skipnz
  3178     0409  2BDC               	goto	l4343
  3179     040A  2C0B               	goto	l4349
  3180     040B                     l4349:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  3183     040B  3001               	movlw	1
  3184     040C  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3185     040D  0820               	movf	??_vfpfcnvrt^(0+384),w
  3186     040E  072A               	addwf	vfpfcnvrt@cp^(0+384),w
  3187     040F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  3188     0410  082B               	movf	(vfpfcnvrt@cp+1)^(0+384),w
  3189     0411  00A1               	movwf	(??_vfpfcnvrt+1)^(0+384)
  3190     0412  1803               	skipnc
  3191     0413  0AA1               	incf	(??_vfpfcnvrt+1)^(0+384),f
  3192     0414  1BA0               	btfsc	??_vfpfcnvrt^(0+384),7
  3193     0415  03A1               	decf	(??_vfpfcnvrt+1)^(0+384),f
  3194     0416  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3195     0417  00A3               	movwf	((??_vfpfcnvrt+2)^(0+384)+1)
  3196     0418  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3197     0419  0084               	movwf	4
  3198     041A  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  3199     041B  1383               	bcf	3,7	;select IRP bank0
  3200     041C  0080               	movwf	0
  3201     041D  0823               	movf	((??_vfpfcnvrt+2)^(0+384)+1),w
  3202     041E  0A84               	incf	4,f
  3203     041F  0080               	movwf	0
  3204     0420  0384               	decf	4,f
  3205     0421                     l4351:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  3208     0421  019B               	clrf	?_vfpfcnvrt^(0+384)
  3209     0422  019C               	clrf	(?_vfpfcnvrt+1)^(0+384)
  3210     0423  0008               	return
  3211     0424                     l4355:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  3214     0424  1683               	bsf	3,5	;RP0=1, select bank3
  3215     0425  1703               	bsf	3,6	;RP1=1, select bank3
  3216     0426  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3217     0427  0084               	movwf	4
  3218     0428  1383               	bcf	3,7	;select IRP bank0
  3219     0429  0800               	movf	0,w
  3220     042A  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3221     042B  0A84               	incf	4,f
  3222     042C  0800               	movf	0,w
  3223     042D  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3224     042E  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3225     042F  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0430  1303               	bcf	3,6	;RP1=0, select bank0
  3227     0431  00FF               	movwf	127
  3228     0432  1683               	bsf	3,5	;RP0=1, select bank3
  3229     0433  1703               	bsf	3,6	;RP1=1, select bank3
  3230     0434  0820               	movf	??_vfpfcnvrt^(0+384),w
  3231     0435  0084               	movwf	4
  3232     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3233     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3234     0438  160A  118A  2000  120A  118A  	fcall	stringtab
  3235     043D  3A25               	xorlw	37
  3236     043E  1D03               	skipz
  3237     043F  2C66               	goto	l4365
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  3240     0440  1683               	bsf	3,5	;RP0=1, select bank3
  3241     0441  1703               	bsf	3,6	;RP1=1, select bank3
  3242     0442  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3243     0443  0084               	movwf	4
  3244     0444  3001               	movlw	1
  3245     0445  1383               	bcf	3,7	;select IRP bank0
  3246     0446  0780               	addwf	0,f
  3247     0447  0A84               	incf	4,f
  3248     0448  1803               	skipnc
  3249     0449  0A80               	incf	0,f
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  3252     044A  3025               	movlw	37
  3253     044B  1683               	bsf	3,5	;RP0=1, select bank1
  3254     044C  1303               	bcf	3,6	;RP1=0, select bank1
  3255     044D  00B2               	movwf	fputc@c^(0+128)
  3256     044E  3000               	movlw	0
  3257     044F  00B3               	movwf	(fputc@c^(0+128)+1)
  3258     0450  1683               	bsf	3,5	;RP0=1, select bank3
  3259     0451  1703               	bsf	3,6	;RP1=1, select bank3
  3260     0452  081B               	movf	vfpfcnvrt@fp^(0+384),w
  3261     0453  1683               	bsf	3,5	;RP0=1, select bank1
  3262     0454  1303               	bcf	3,6	;RP1=0, select bank1
  3263     0455  00B4               	movwf	fputc@fp^(0+128)
  3264     0456  1683               	bsf	3,5	;RP0=1, select bank3
  3265     0457  1703               	bsf	3,6	;RP1=1, select bank3
  3266     0458  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  3267     0459  1683               	bsf	3,5	;RP0=1, select bank1
  3268     045A  1303               	bcf	3,6	;RP1=0, select bank1
  3269     045B  00B5               	movwf	(fputc@fp+1)^(0+128)
  3270     045C  120A  158A  2008   	fcall	_fputc
  3271     045F                     l4361:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  3274     045F  3001               	movlw	1
  3275     0460  1683               	bsf	3,5	;RP0=1, select bank3
  3276     0461  1703               	bsf	3,6	;RP1=1, select bank3
  3277     0462  009B               	movwf	?_vfpfcnvrt^(0+384)
  3278     0463  3000               	movlw	0
  3279     0464  009C               	movwf	(?_vfpfcnvrt^(0+384)+1)
  3280     0465  0008               	return
  3281     0466                     l4365:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3284     0466  1683               	bsf	3,5	;RP0=1, select bank3
  3285     0467  1703               	bsf	3,6	;RP1=1, select bank3
  3286     0468  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3287     0469  0084               	movwf	4
  3288     046A  3001               	movlw	1
  3289     046B  1383               	bcf	3,7	;select IRP bank0
  3290     046C  0780               	addwf	0,f
  3291     046D  0A84               	incf	4,f
  3292     046E  1803               	skipnc
  3293     046F  0A80               	incf	0,f
  3294     0470  2C21               	goto	l4351
  3295     0471                     l4371:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3298     0471  1683               	bsf	3,5	;RP0=1, select bank3
  3299     0472  1703               	bsf	3,6	;RP1=1, select bank3
  3300     0473  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3301     0474  0084               	movwf	4
  3302     0475  1383               	bcf	3,7	;select IRP bank0
  3303     0476  0800               	movf	0,w
  3304     0477  00A0               	movwf	??_vfpfcnvrt^(0+384)
  3305     0478  0A84               	incf	4,f
  3306     0479  0800               	movf	0,w
  3307     047A  00A1               	movwf	(??_vfpfcnvrt^(0+384)+1)
  3308     047B  0821               	movf	(??_vfpfcnvrt+1)^(0+384),w
  3309     047C  1283               	bcf	3,5	;RP0=0, select bank0
  3310     047D  1303               	bcf	3,6	;RP1=0, select bank0
  3311     047E  00FF               	movwf	127
  3312     047F  1683               	bsf	3,5	;RP0=1, select bank3
  3313     0480  1703               	bsf	3,6	;RP1=1, select bank3
  3314     0481  0820               	movf	??_vfpfcnvrt^(0+384),w
  3315     0482  0084               	movwf	4
  3316     0483  1283               	bcf	3,5	;RP0=0, select bank0
  3317     0484  1303               	bcf	3,6	;RP1=0, select bank0
  3318     0485  160A  118A  2000  120A  118A  	fcall	stringtab
  3319     048A  1683               	bsf	3,5	;RP0=1, select bank3
  3320     048B  1703               	bsf	3,6	;RP1=1, select bank3
  3321     048C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+384)
  3322     048D  01A3               	clrf	((??_vfpfcnvrt+2)^(0+384)+1)
  3323     048E  0822               	movf	(??_vfpfcnvrt+2)^(0+384),w
  3324     048F  1683               	bsf	3,5	;RP0=1, select bank1
  3325     0490  1303               	bcf	3,6	;RP1=0, select bank1
  3326     0491  00B2               	movwf	fputc@c^(0+128)
  3327     0492  1683               	bsf	3,5	;RP0=1, select bank3
  3328     0493  1703               	bsf	3,6	;RP1=1, select bank3
  3329     0494  0823               	movf	(??_vfpfcnvrt+3)^(0+384),w
  3330     0495  1683               	bsf	3,5	;RP0=1, select bank1
  3331     0496  1303               	bcf	3,6	;RP1=0, select bank1
  3332     0497  00B3               	movwf	(fputc@c+1)^(0+128)
  3333     0498  1683               	bsf	3,5	;RP0=1, select bank3
  3334     0499  1703               	bsf	3,6	;RP1=1, select bank3
  3335     049A  081B               	movf	vfpfcnvrt@fp^(0+384),w
  3336     049B  1683               	bsf	3,5	;RP0=1, select bank1
  3337     049C  1303               	bcf	3,6	;RP1=0, select bank1
  3338     049D  00B4               	movwf	fputc@fp^(0+128)
  3339     049E  1683               	bsf	3,5	;RP0=1, select bank3
  3340     049F  1703               	bsf	3,6	;RP1=1, select bank3
  3341     04A0  081C               	movf	(vfpfcnvrt@fp+1)^(0+384),w
  3342     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3343     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3344     04A3  00B5               	movwf	(fputc@fp+1)^(0+128)
  3345     04A4  120A  158A  2008  120A  118A  	fcall	_fputc
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  3348     04A9  1683               	bsf	3,5	;RP0=1, select bank3
  3349     04AA  1703               	bsf	3,6	;RP1=1, select bank3
  3350     04AB  081D               	movf	vfpfcnvrt@fmt^(0+384),w
  3351     04AC  0084               	movwf	4
  3352     04AD  3001               	movlw	1
  3353     04AE  1383               	bcf	3,7	;select IRP bank0
  3354     04AF  0780               	addwf	0,f
  3355     04B0  0A84               	incf	4,f
  3356     04B1  1803               	skipnc
  3357     04B2  0A80               	incf	0,f
  3358     04B3  2C5F               	goto	l4361
  3359     04B4                     __end_of_vfpfcnvrt:
  3360                           
  3361                           	psect	text4
  3362     0B45                     __ptext4:	
  3363 ;; *************** function _xtoa *****************
  3364 ;; Defined at:
  3365 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  3368 ;;		 -> sprintf@f(11), 
  3369 ;;  d               2   49[BANK1 ] unsigned int 
  3370 ;;  x               1   51[BANK1 ] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  i               2    9[BANK3 ] int 
  3373 ;;  w               2    6[BANK3 ] int 
  3374 ;;  p               2    3[BANK3 ] int 
  3375 ;;  c               1    8[BANK3 ] unsigned char 
  3376 ;;  d_nonzero       1    5[BANK3 ] _Bool 
  3377 ;;  a               1    0[BANK3 ] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  2   47[BANK1 ] int 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       5       0       0
  3388 ;;      Locals:         0       0       0      11       0
  3389 ;;      Temps:          0       0       0       0       0
  3390 ;;      Totals:         0       0       5      11       0
  3391 ;;Total ram usage:       16 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 13
  3394 ;; This function calls:
  3395 ;;		_pad
  3396 ;; This function is called by:
  3397 ;;		_vfpfcnvrt
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401     0B45                     _xtoa:	
  3402                           ;psect for function _xtoa
  3403                           
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  3406                           
  3407                           ;incstack = 0
  3408 ;; hardware stack exceeded
  3409                           ; Regs used in _xtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3410     0B45  1683               	bsf	3,5	;RP0=1, select bank1
  3411     0B46  1303               	bcf	3,6	;RP1=0, select bank1
  3412     0B47  1BDA               	btfsc	(_prec+1)^(0+128),7
  3413     0B48  2B4B               	goto	l4131
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  3416     0B49  30FD               	movlw	253
  3417     0B4A  05DD               	andwf	_flags^(0+128),f
  3418     0B4B                     l4131:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  3421     0B4B  1FDA               	btfss	(_prec+1)^(0+128),7
  3422     0B4C  2B54               	goto	l4135
  3423     0B4D  3001               	movlw	1
  3424     0B4E  1683               	bsf	3,5	;RP0=1, select bank3
  3425     0B4F  1703               	bsf	3,6	;RP1=1, select bank3
  3426     0B50  0093               	movwf	xtoa@p^(0+384)
  3427     0B51  3000               	movlw	0
  3428     0B52  0094               	movwf	(xtoa@p^(0+384)+1)
  3429     0B53  2B5E               	goto	l735
  3430     0B54                     l4135:
  3431     0B54  085A               	movf	(_prec+1)^(0+128),w
  3432     0B55  1683               	bsf	3,5	;RP0=1, select bank3
  3433     0B56  1703               	bsf	3,6	;RP1=1, select bank3
  3434     0B57  0094               	movwf	(xtoa@p+1)^(0+384)
  3435     0B58  1683               	bsf	3,5	;RP0=1, select bank1
  3436     0B59  1303               	bcf	3,6	;RP1=0, select bank1
  3437     0B5A  0859               	movf	_prec^(0+128),w
  3438     0B5B  1683               	bsf	3,5	;RP0=1, select bank3
  3439     0B5C  1703               	bsf	3,6	;RP1=1, select bank3
  3440     0B5D  0093               	movwf	xtoa@p^(0+384)
  3441     0B5E                     l735:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  3444     0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  3445     0B5F  1303               	bcf	3,6	;RP1=0, select bank1
  3446     0B60  0858               	movf	(_width+1)^(0+128),w
  3447     0B61  1683               	bsf	3,5	;RP0=1, select bank3
  3448     0B62  1703               	bsf	3,6	;RP1=1, select bank3
  3449     0B63  0097               	movwf	(xtoa@w+1)^(0+384)
  3450     0B64  1683               	bsf	3,5	;RP0=1, select bank1
  3451     0B65  1303               	bcf	3,6	;RP1=0, select bank1
  3452     0B66  0857               	movf	_width^(0+128),w
  3453     0B67  1683               	bsf	3,5	;RP0=1, select bank3
  3454     0B68  1703               	bsf	3,6	;RP1=1, select bank3
  3455     0B69  0096               	movwf	xtoa@w^(0+384)
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  3458     0B6A  1683               	bsf	3,5	;RP0=1, select bank1
  3459     0B6B  1303               	bcf	3,6	;RP1=0, select bank1
  3460     0B6C  0851               	movf	xtoa@d^(0+128),w
  3461     0B6D  0452               	iorwf	(xtoa@d+1)^(0+128),w
  3462     0B6E  1903               	btfsc	3,2
  3463     0B6F  2B72               	goto	u5810
  3464     0B70  3001               	movlw	1
  3465     0B71  2B73               	goto	u5820
  3466     0B72                     u5810:
  3467     0B72  3000               	movlw	0
  3468     0B73                     u5820:
  3469     0B73  1683               	bsf	3,5	;RP0=1, select bank3
  3470     0B74  1703               	bsf	3,6	;RP1=1, select bank3
  3471     0B75  0095               	movwf	xtoa@d_nonzero^(0+384)
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  3474     0B76  1683               	bsf	3,5	;RP0=1, select bank1
  3475     0B77  1303               	bcf	3,6	;RP1=0, select bank1
  3476     0B78  1E5D               	btfss	_flags^(0+128),4
  3477     0B79  2B85               	goto	l4145
  3478     0B7A  1683               	bsf	3,5	;RP0=1, select bank3
  3479     0B7B  1703               	bsf	3,6	;RP1=1, select bank3
  3480     0B7C  0815               	movf	xtoa@d_nonzero^(0+384),w
  3481     0B7D  1903               	btfsc	3,2
  3482     0B7E  2B85               	goto	l4145
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  3485     0B7F  30FE               	movlw	254
  3486     0B80  0796               	addwf	xtoa@w^(0+384),f
  3487     0B81  1803               	skipnc
  3488     0B82  0A97               	incf	(xtoa@w+1)^(0+384),f
  3489     0B83  30FF               	movlw	255
  3490     0B84  0797               	addwf	(xtoa@w+1)^(0+384),f
  3491     0B85                     l4145:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  3494     0B85  3078               	movlw	120
  3495     0B86  1303               	bcf	3,6	;RP1=0, select bank1
  3496     0B87  0653               	xorwf	xtoa@x^(0+128),w
  3497     0B88  1903               	btfsc	3,2
  3498     0B89  2B8C               	goto	l4149
  3499     0B8A  3041               	movlw	65
  3500     0B8B  2B8D               	goto	L7
  3501     0B8C                     l4149:
  3502     0B8C  3061               	movlw	97
  3503     0B8D                     L7:
  3504     0B8D  1683               	bsf	3,5	;RP0=1, select bank3
  3505     0B8E  1703               	bsf	3,6	;RP1=1, select bank3
  3506     0B8F  0091               	movwf	_xtoa$641^(0+384)
  3507     0B90  3000               	movlw	0
  3508     0B91  0092               	movwf	(_xtoa$641^(0+384)+1)
  3509     0B92  0811               	movf	_xtoa$641^(0+384),w
  3510     0B93  0090               	movwf	xtoa@a^(0+384)
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  3513     0B94  301F               	movlw	31
  3514     0B95  0099               	movwf	xtoa@i^(0+384)
  3515     0B96  3000               	movlw	0
  3516     0B97  009A               	movwf	(xtoa@i^(0+384)+1)
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  3519     0B98  1283               	bcf	3,5	;RP0=0, select bank2
  3520     0B99  1703               	bsf	3,6	;RP1=1, select bank2
  3521     0B9A  01AF               	clrf	(_dbuf^(0+256)+31)
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  3524     0B9B  2BD2               	goto	l4171
  3525     0B9C                     l4153:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
  3528     0B9C  30FF               	movlw	255
  3529     0B9D  1683               	bsf	3,5	;RP0=1, select bank3
  3530     0B9E  1703               	bsf	3,6	;RP1=1, select bank3
  3531     0B9F  0799               	addwf	xtoa@i^(0+384),f
  3532     0BA0  1803               	skipnc
  3533     0BA1  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3534     0BA2  30FF               	movlw	255
  3535     0BA3  079A               	addwf	(xtoa@i+1)^(0+384),f
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  3538     0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  3539     0BA5  1303               	bcf	3,6	;RP1=0, select bank1
  3540     0BA6  0851               	movf	xtoa@d^(0+128),w
  3541     0BA7  1683               	bsf	3,5	;RP0=1, select bank3
  3542     0BA8  1703               	bsf	3,6	;RP1=1, select bank3
  3543     0BA9  0098               	movwf	xtoa@c^(0+384)
  3544     0BAA  300F               	movlw	15
  3545     0BAB  0598               	andwf	xtoa@c^(0+384),f
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  3548     0BAC  300A               	movlw	10
  3549     0BAD  0218               	subwf	xtoa@c^(0+384),w
  3550     0BAE  1803               	skipnc
  3551     0BAF  2BB2               	goto	l4161
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  3554     0BB0  3030               	movlw	48
  3555     0BB1  2BB4               	goto	L8
  3556     0BB2                     l4161:	
  3557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
  3558                           
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  3561     0BB2  0810               	movf	xtoa@a^(0+384),w
  3562     0BB3  3EF6               	addlw	246
  3563     0BB4                     L8:
  3564     0BB4  0798               	addwf	xtoa@c^(0+384),f
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  3567     0BB5  0819               	movf	xtoa@i^(0+384),w
  3568     0BB6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3569     0BB7  0084               	movwf	4
  3570     0BB8  0818               	movf	xtoa@c^(0+384),w
  3571     0BB9  1783               	bsf	3,7	;select IRP bank2
  3572     0BBA  0080               	movwf	0
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  3575     0BBB  30FF               	movlw	255
  3576     0BBC  0793               	addwf	xtoa@p^(0+384),f
  3577     0BBD  1803               	skipnc
  3578     0BBE  0A94               	incf	(xtoa@p+1)^(0+384),f
  3579     0BBF  30FF               	movlw	255
  3580     0BC0  0794               	addwf	(xtoa@p+1)^(0+384),f
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  3583     0BC1  30FF               	movlw	255
  3584     0BC2  0796               	addwf	xtoa@w^(0+384),f
  3585     0BC3  1803               	skipnc
  3586     0BC4  0A97               	incf	(xtoa@w+1)^(0+384),f
  3587     0BC5  30FF               	movlw	255
  3588     0BC6  0797               	addwf	(xtoa@w+1)^(0+384),f
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  3591     0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  3592     0BC8  1303               	bcf	3,6	;RP1=0, select bank1
  3593     0BC9  0E51               	swapf	xtoa@d^(0+128),w
  3594     0BCA  390F               	andlw	15
  3595     0BCB  00D1               	movwf	xtoa@d^(0+128)
  3596     0BCC  0E52               	swapf	(xtoa@d+1)^(0+128),w
  3597     0BCD  39F0               	andlw	240
  3598     0BCE  04D1               	iorwf	xtoa@d^(0+128),f
  3599     0BCF  0E52               	swapf	(xtoa@d+1)^(0+128),w
  3600     0BD0  390F               	andlw	15
  3601     0BD1  00D2               	movwf	(xtoa@d^(0+128)+1)
  3602     0BD2                     l4171:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  3605     0BD2  1683               	bsf	3,5	;RP0=1, select bank3
  3606     0BD3  1703               	bsf	3,6	;RP1=1, select bank3
  3607     0BD4  081A               	movf	(xtoa@i+1)^(0+384),w
  3608     0BD5  3A80               	xorlw	128
  3609     0BD6  00FF               	movwf	127
  3610     0BD7  3080               	movlw	128
  3611     0BD8  027F               	subwf	127,w
  3612     0BD9  1D03               	skipz
  3613     0BDA  2BDD               	goto	u5875
  3614     0BDB  3002               	movlw	2
  3615     0BDC  0219               	subwf	xtoa@i^(0+384),w
  3616     0BDD                     u5875:
  3617     0BDD  1C03               	skipc
  3618     0BDE  2C03               	goto	l749
  3619     0BDF  1683               	bsf	3,5	;RP0=1, select bank1
  3620     0BE0  1303               	bcf	3,6	;RP1=0, select bank1
  3621     0BE1  0851               	movf	xtoa@d^(0+128),w
  3622     0BE2  0452               	iorwf	(xtoa@d+1)^(0+128),w
  3623     0BE3  1D03               	btfss	3,2
  3624     0BE4  2B9C               	goto	l4153
  3625     0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  3626     0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  3627     0BE7  0814               	movf	(xtoa@p+1)^(0+384),w
  3628     0BE8  3A80               	xorlw	128
  3629     0BE9  00FF               	movwf	127
  3630     0BEA  3080               	movlw	128
  3631     0BEB  027F               	subwf	127,w
  3632     0BEC  1D03               	skipz
  3633     0BED  2BF0               	goto	u5895
  3634     0BEE  3001               	movlw	1
  3635     0BEF  0213               	subwf	xtoa@p^(0+384),w
  3636     0BF0                     u5895:
  3637     0BF0  1803               	skipnc
  3638     0BF1  2B9C               	goto	l4153
  3639     0BF2  1683               	bsf	3,5	;RP0=1, select bank3
  3640     0BF3  1703               	bsf	3,6	;RP1=1, select bank3
  3641     0BF4  0817               	movf	(xtoa@w+1)^(0+384),w
  3642     0BF5  3A80               	xorlw	128
  3643     0BF6  00FF               	movwf	127
  3644     0BF7  3080               	movlw	128
  3645     0BF8  027F               	subwf	127,w
  3646     0BF9  1D03               	skipz
  3647     0BFA  2BFD               	goto	u5905
  3648     0BFB  3001               	movlw	1
  3649     0BFC  0216               	subwf	xtoa@w^(0+384),w
  3650     0BFD                     u5905:
  3651     0BFD  1C03               	skipc
  3652     0BFE  2C03               	goto	l749
  3653     0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  3654     0C00  1303               	bcf	3,6	;RP1=0, select bank1
  3655     0C01  18DD               	btfsc	_flags^(0+128),1
  3656     0C02  2B9C               	goto	l4153
  3657     0C03                     l749:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
  3660     0C03  1683               	bsf	3,5	;RP0=1, select bank1
  3661     0C04  1303               	bcf	3,6	;RP1=0, select bank1
  3662     0C05  1E5D               	btfss	_flags^(0+128),4
  3663     0C06  2C2F               	goto	l4191
  3664     0C07  1683               	bsf	3,5	;RP0=1, select bank3
  3665     0C08  1703               	bsf	3,6	;RP1=1, select bank3
  3666     0C09  0815               	movf	xtoa@d_nonzero^(0+384),w
  3667     0C0A  1903               	btfsc	3,2
  3668     0C0B  2C2F               	goto	l4191
  3669     0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  3670     0C0D  1303               	bcf	3,6	;RP1=0, select bank1
  3671     0C0E  0859               	movf	_prec^(0+128),w
  3672     0C0F  045A               	iorwf	(_prec+1)^(0+128),w
  3673     0C10  1903               	btfsc	3,2
  3674     0C11  2C2F               	goto	l4191
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1138:         --i;
  3677     0C12  30FF               	movlw	255
  3678     0C13  1683               	bsf	3,5	;RP0=1, select bank3
  3679     0C14  1703               	bsf	3,6	;RP1=1, select bank3
  3680     0C15  0799               	addwf	xtoa@i^(0+384),f
  3681     0C16  1803               	skipnc
  3682     0C17  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3683     0C18  30FF               	movlw	255
  3684     0C19  079A               	addwf	(xtoa@i+1)^(0+384),f
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
  3687     0C1A  0819               	movf	xtoa@i^(0+384),w
  3688     0C1B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3689     0C1C  0084               	movwf	4
  3690     0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  3691     0C1E  1303               	bcf	3,6	;RP1=0, select bank1
  3692     0C1F  0853               	movf	xtoa@x^(0+128),w
  3693     0C20  1783               	bsf	3,7	;select IRP bank2
  3694     0C21  0080               	movwf	0
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
  3697     0C22  30FF               	movlw	255
  3698     0C23  1683               	bsf	3,5	;RP0=1, select bank3
  3699     0C24  1703               	bsf	3,6	;RP1=1, select bank3
  3700     0C25  0799               	addwf	xtoa@i^(0+384),f
  3701     0C26  1803               	skipnc
  3702     0C27  0A9A               	incf	(xtoa@i+1)^(0+384),f
  3703     0C28  30FF               	movlw	255
  3704     0C29  079A               	addwf	(xtoa@i+1)^(0+384),f
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
  3707     0C2A  0819               	movf	xtoa@i^(0+384),w
  3708     0C2B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3709     0C2C  0084               	movwf	4
  3710     0C2D  3030               	movlw	48
  3711     0C2E  0080               	movwf	0
  3712     0C2F                     l4191:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3715     0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  3716     0C30  084F               	movf	xtoa@fp^(0+128),w
  3717     0C31  00C7               	movwf	pad@fp^(0+128)
  3718     0C32  0850               	movf	(xtoa@fp+1)^(0+128),w
  3719     0C33  00C8               	movwf	(pad@fp+1)^(0+128)
  3720     0C34  1683               	bsf	3,5	;RP0=1, select bank3
  3721     0C35  1703               	bsf	3,6	;RP1=1, select bank3
  3722     0C36  0819               	movf	xtoa@i^(0+384),w
  3723     0C37  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3724     0C38  1683               	bsf	3,5	;RP0=1, select bank1
  3725     0C39  1303               	bcf	3,6	;RP1=0, select bank1
  3726     0C3A  00C9               	movwf	pad@buf^(0+128)
  3727     0C3B  1683               	bsf	3,5	;RP0=1, select bank3
  3728     0C3C  1703               	bsf	3,6	;RP1=1, select bank3
  3729     0C3D  0817               	movf	(xtoa@w+1)^(0+384),w
  3730     0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  3731     0C3F  1303               	bcf	3,6	;RP1=0, select bank1
  3732     0C40  00CB               	movwf	(pad@p+1)^(0+128)
  3733     0C41  1683               	bsf	3,5	;RP0=1, select bank3
  3734     0C42  1703               	bsf	3,6	;RP1=1, select bank3
  3735     0C43  0816               	movf	xtoa@w^(0+384),w
  3736     0C44  1683               	bsf	3,5	;RP0=1, select bank1
  3737     0C45  1303               	bcf	3,6	;RP1=0, select bank1
  3738     0C46  00CA               	movwf	pad@p^(0+128)
  3739     0C47  160A  118A  230E   	fcall	_pad
  3740     0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  3741     0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  3742     0C4C  0848               	movf	(?_pad+1)^(0+128),w
  3743     0C4D  00D0               	movwf	(?_xtoa+1)^(0+128)
  3744     0C4E  0847               	movf	?_pad^(0+128),w
  3745     0C4F  00CF               	movwf	?_xtoa^(0+128)
  3746     0C50  0008               	return
  3747     0C51                     __end_of_xtoa:
  3748                           
  3749                           	psect	text5
  3750     1743                     __ptext5:	
  3751 ;; *************** function _utoa *****************
  3752 ;; Defined at:
  3753 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  3756 ;;		 -> sprintf@f(11), 
  3757 ;;  d               2   49[BANK1 ] unsigned int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  i               2    4[BANK3 ] int 
  3760 ;;  w               2    2[BANK3 ] int 
  3761 ;;  p               2    0[BANK3 ] int 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2   47[BANK1 ] int 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       0       4       0       0
  3772 ;;      Locals:         0       0       0       6       0
  3773 ;;      Temps:          0       0       0       0       0
  3774 ;;      Totals:         0       0       4       6       0
  3775 ;;Total ram usage:       10 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 13
  3778 ;; This function calls:
  3779 ;;		___lwdiv
  3780 ;;		___lwmod
  3781 ;;		_pad
  3782 ;; This function is called by:
  3783 ;;		_vfpfcnvrt
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787     1743                     _utoa:	
  3788                           ;psect for function _utoa
  3789                           
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
  3792                           
  3793                           ;incstack = 0
  3794 ;; hardware stack exceeded
  3795                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3796     1743  1683               	bsf	3,5	;RP0=1, select bank1
  3797     1744  1303               	bcf	3,6	;RP1=0, select bank1
  3798     1745  1BDA               	btfsc	(_prec+1)^(0+128),7
  3799     1746  2F49               	goto	l4093
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  3802     1747  30FD               	movlw	253
  3803     1748  05DD               	andwf	_flags^(0+128),f
  3804     1749                     l4093:
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  3807     1749  1FDA               	btfss	(_prec+1)^(0+128),7
  3808     174A  2F52               	goto	l4097
  3809     174B  3001               	movlw	1
  3810     174C  1683               	bsf	3,5	;RP0=1, select bank3
  3811     174D  1703               	bsf	3,6	;RP1=1, select bank3
  3812     174E  0090               	movwf	utoa@p^(0+384)
  3813     174F  3000               	movlw	0
  3814     1750  0091               	movwf	(utoa@p^(0+384)+1)
  3815     1751  2F5C               	goto	l720
  3816     1752                     l4097:
  3817     1752  085A               	movf	(_prec+1)^(0+128),w
  3818     1753  1683               	bsf	3,5	;RP0=1, select bank3
  3819     1754  1703               	bsf	3,6	;RP1=1, select bank3
  3820     1755  0091               	movwf	(utoa@p+1)^(0+384)
  3821     1756  1683               	bsf	3,5	;RP0=1, select bank1
  3822     1757  1303               	bcf	3,6	;RP1=0, select bank1
  3823     1758  0859               	movf	_prec^(0+128),w
  3824     1759  1683               	bsf	3,5	;RP0=1, select bank3
  3825     175A  1703               	bsf	3,6	;RP1=1, select bank3
  3826     175B  0090               	movwf	utoa@p^(0+384)
  3827     175C                     l720:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3830     175C  1683               	bsf	3,5	;RP0=1, select bank1
  3831     175D  1303               	bcf	3,6	;RP1=0, select bank1
  3832     175E  0858               	movf	(_width+1)^(0+128),w
  3833     175F  1683               	bsf	3,5	;RP0=1, select bank3
  3834     1760  1703               	bsf	3,6	;RP1=1, select bank3
  3835     1761  0093               	movwf	(utoa@w+1)^(0+384)
  3836     1762  1683               	bsf	3,5	;RP0=1, select bank1
  3837     1763  1303               	bcf	3,6	;RP1=0, select bank1
  3838     1764  0857               	movf	_width^(0+128),w
  3839     1765  1683               	bsf	3,5	;RP0=1, select bank3
  3840     1766  1703               	bsf	3,6	;RP1=1, select bank3
  3841     1767  0092               	movwf	utoa@w^(0+384)
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3844     1768  301F               	movlw	31
  3845     1769  0094               	movwf	utoa@i^(0+384)
  3846     176A  3000               	movlw	0
  3847     176B  0095               	movwf	(utoa@i^(0+384)+1)
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3850     176C  1283               	bcf	3,5	;RP0=0, select bank2
  3851     176D  1703               	bsf	3,6	;RP1=1, select bank2
  3852     176E  01AF               	clrf	(_dbuf^(0+256)+31)
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3855     176F  2FD7               	goto	l4111
  3856     1770                     l4113:
  3857     1770  1683               	bsf	3,5	;RP0=1, select bank1
  3858     1771  1303               	bcf	3,6	;RP1=0, select bank1
  3859     1772  0851               	movf	utoa@d^(0+128),w
  3860     1773  0452               	iorwf	(utoa@d+1)^(0+128),w
  3861     1774  1D03               	btfss	3,2
  3862     1775  2F94               	goto	l4101
  3863     1776  1683               	bsf	3,5	;RP0=1, select bank3
  3864     1777  1703               	bsf	3,6	;RP1=1, select bank3
  3865     1778  0811               	movf	(utoa@p+1)^(0+384),w
  3866     1779  3A80               	xorlw	128
  3867     177A  00FF               	movwf	127
  3868     177B  3080               	movlw	128
  3869     177C  027F               	subwf	127,w
  3870     177D  1D03               	skipz
  3871     177E  2F81               	goto	u5765
  3872     177F  3001               	movlw	1
  3873     1780  0210               	subwf	utoa@p^(0+384),w
  3874     1781                     u5765:
  3875     1781  1803               	skipnc
  3876     1782  2F94               	goto	l4101
  3877     1783  1683               	bsf	3,5	;RP0=1, select bank3
  3878     1784  1703               	bsf	3,6	;RP1=1, select bank3
  3879     1785  0813               	movf	(utoa@w+1)^(0+384),w
  3880     1786  3A80               	xorlw	128
  3881     1787  00FF               	movwf	127
  3882     1788  3080               	movlw	128
  3883     1789  027F               	subwf	127,w
  3884     178A  1D03               	skipz
  3885     178B  2F8E               	goto	u5775
  3886     178C  3001               	movlw	1
  3887     178D  0212               	subwf	utoa@w^(0+384),w
  3888     178E                     u5775:
  3889     178E  1C03               	skipc
  3890     178F  2FDD               	goto	l4121
  3891     1790  1683               	bsf	3,5	;RP0=1, select bank1
  3892     1791  1303               	bcf	3,6	;RP1=0, select bank1
  3893     1792  1CDD               	btfss	_flags^(0+128),1
  3894     1793  2FDD               	goto	l4121
  3895     1794                     l4101:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3898     1794  30FF               	movlw	255
  3899     1795  1683               	bsf	3,5	;RP0=1, select bank3
  3900     1796  1703               	bsf	3,6	;RP1=1, select bank3
  3901     1797  0794               	addwf	utoa@i^(0+384),f
  3902     1798  1803               	skipnc
  3903     1799  0A95               	incf	(utoa@i+1)^(0+384),f
  3904     179A  30FF               	movlw	255
  3905     179B  0795               	addwf	(utoa@i+1)^(0+384),f
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3908     179C  0814               	movf	utoa@i^(0+384),w
  3909     179D  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3910     179E  0084               	movwf	4
  3911     179F  300A               	movlw	10
  3912     17A0  1683               	bsf	3,5	;RP0=1, select bank1
  3913     17A1  1303               	bcf	3,6	;RP1=0, select bank1
  3914     17A2  00B2               	movwf	___lwmod@divisor^(0+128)
  3915     17A3  3000               	movlw	0
  3916     17A4  00B3               	movwf	(___lwmod@divisor^(0+128)+1)
  3917     17A5  0852               	movf	(utoa@d+1)^(0+128),w
  3918     17A6  00B5               	movwf	(___lwmod@dividend+1)^(0+128)
  3919     17A7  0851               	movf	utoa@d^(0+128),w
  3920     17A8  00B4               	movwf	___lwmod@dividend^(0+128)
  3921     17A9  160A  118A  2077  160A  118A  	fcall	___lwmod
  3922     17AE  1683               	bsf	3,5	;RP0=1, select bank1
  3923     17AF  1303               	bcf	3,6	;RP1=0, select bank1
  3924     17B0  0832               	movf	?___lwmod^(0+128),w
  3925     17B1  3E30               	addlw	48
  3926     17B2  1783               	bsf	3,7	;select IRP bank2
  3927     17B3  0080               	movwf	0
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  3930     17B4  30FF               	movlw	255
  3931     17B5  1683               	bsf	3,5	;RP0=1, select bank3
  3932     17B6  1703               	bsf	3,6	;RP1=1, select bank3
  3933     17B7  0790               	addwf	utoa@p^(0+384),f
  3934     17B8  1803               	skipnc
  3935     17B9  0A91               	incf	(utoa@p+1)^(0+384),f
  3936     17BA  30FF               	movlw	255
  3937     17BB  0791               	addwf	(utoa@p+1)^(0+384),f
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3940     17BC  30FF               	movlw	255
  3941     17BD  0792               	addwf	utoa@w^(0+384),f
  3942     17BE  1803               	skipnc
  3943     17BF  0A93               	incf	(utoa@w+1)^(0+384),f
  3944     17C0  30FF               	movlw	255
  3945     17C1  0793               	addwf	(utoa@w+1)^(0+384),f
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3948     17C2  300A               	movlw	10
  3949     17C3  1683               	bsf	3,5	;RP0=1, select bank1
  3950     17C4  1303               	bcf	3,6	;RP1=0, select bank1
  3951     17C5  00B2               	movwf	___lwdiv@divisor^(0+128)
  3952     17C6  3000               	movlw	0
  3953     17C7  00B3               	movwf	(___lwdiv@divisor^(0+128)+1)
  3954     17C8  0852               	movf	(utoa@d+1)^(0+128),w
  3955     17C9  00B5               	movwf	(___lwdiv@dividend+1)^(0+128)
  3956     17CA  0851               	movf	utoa@d^(0+128),w
  3957     17CB  00B4               	movwf	___lwdiv@dividend^(0+128)
  3958     17CC  160A  118A  214F  160A  118A  	fcall	___lwdiv
  3959     17D1  1683               	bsf	3,5	;RP0=1, select bank1
  3960     17D2  1303               	bcf	3,6	;RP1=0, select bank1
  3961     17D3  0833               	movf	(?___lwdiv+1)^(0+128),w
  3962     17D4  00D2               	movwf	(utoa@d+1)^(0+128)
  3963     17D5  0832               	movf	?___lwdiv^(0+128),w
  3964     17D6  00D1               	movwf	utoa@d^(0+128)
  3965     17D7                     l4111:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3968     17D7  1683               	bsf	3,5	;RP0=1, select bank3
  3969     17D8  1703               	bsf	3,6	;RP1=1, select bank3
  3970     17D9  0814               	movf	utoa@i^(0+384),w
  3971     17DA  0415               	iorwf	(utoa@i+1)^(0+384),w
  3972     17DB  1D03               	btfss	3,2
  3973     17DC  2F70               	goto	l4113
  3974     17DD                     l4121:
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3977     17DD  1683               	bsf	3,5	;RP0=1, select bank1
  3978     17DE  1303               	bcf	3,6	;RP1=0, select bank1
  3979     17DF  084F               	movf	utoa@fp^(0+128),w
  3980     17E0  00C7               	movwf	pad@fp^(0+128)
  3981     17E1  0850               	movf	(utoa@fp+1)^(0+128),w
  3982     17E2  00C8               	movwf	(pad@fp+1)^(0+128)
  3983     17E3  1683               	bsf	3,5	;RP0=1, select bank3
  3984     17E4  1703               	bsf	3,6	;RP1=1, select bank3
  3985     17E5  0814               	movf	utoa@i^(0+384),w
  3986     17E6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3987     17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3988     17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3989     17E9  00C9               	movwf	pad@buf^(0+128)
  3990     17EA  1683               	bsf	3,5	;RP0=1, select bank3
  3991     17EB  1703               	bsf	3,6	;RP1=1, select bank3
  3992     17EC  0813               	movf	(utoa@w+1)^(0+384),w
  3993     17ED  1683               	bsf	3,5	;RP0=1, select bank1
  3994     17EE  1303               	bcf	3,6	;RP1=0, select bank1
  3995     17EF  00CB               	movwf	(pad@p+1)^(0+128)
  3996     17F0  1683               	bsf	3,5	;RP0=1, select bank3
  3997     17F1  1703               	bsf	3,6	;RP1=1, select bank3
  3998     17F2  0812               	movf	utoa@w^(0+384),w
  3999     17F3  1683               	bsf	3,5	;RP0=1, select bank1
  4000     17F4  1303               	bcf	3,6	;RP1=0, select bank1
  4001     17F5  00CA               	movwf	pad@p^(0+128)
  4002     17F6  160A  118A  230E   	fcall	_pad
  4003     17F9  1683               	bsf	3,5	;RP0=1, select bank1
  4004     17FA  1303               	bcf	3,6	;RP1=0, select bank1
  4005     17FB  0848               	movf	(?_pad+1)^(0+128),w
  4006     17FC  00D0               	movwf	(?_utoa+1)^(0+128)
  4007     17FD  0847               	movf	?_pad^(0+128),w
  4008     17FE  00CF               	movwf	?_utoa^(0+128)
  4009     17FF  0008               	return
  4010     1800                     __end_of_utoa:
  4011                           
  4012                           	psect	text6
  4013     1077                     __ptext6:	
  4014 ;; *************** function ___lwmod *****************
  4015 ;; Defined at:
  4016 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  divisor         2   18[BANK1 ] unsigned int 
  4019 ;;  dividend        2   20[BANK1 ] unsigned int 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  counter         1   22[BANK1 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2   18[BANK1 ] unsigned int 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       4       0       0
  4032 ;;      Locals:         0       0       1       0       0
  4033 ;;      Temps:          0       0       0       0       0
  4034 ;;      Totals:         0       0       5       0       0
  4035 ;;Total ram usage:        5 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 9
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_utoa
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     1077                     ___lwmod:	
  4046                           ;psect for function ___lwmod
  4047                           
  4048                           
  4049                           ;incstack = 0
  4050 ;; hardware stack exceeded
  4051                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4052     1077  1683               	bsf	3,5	;RP0=1, select bank1
  4053     1078  1303               	bcf	3,6	;RP1=0, select bank1
  4054     1079  0832               	movf	___lwmod@divisor^(0+128),w
  4055     107A  0433               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4056     107B  1903               	btfsc	3,2
  4057     107C  28A4               	goto	l3921
  4058     107D  3001               	movlw	1
  4059     107E  00B6               	movwf	___lwmod@counter^(0+128)
  4060     107F                     l3911:
  4061     107F  1BB3               	btfsc	(___lwmod@divisor+1)^(0+128),7
  4062     1080  288B               	goto	l3913
  4063     1081  3001               	movlw	1
  4064     1082                     u5335:
  4065     1082  1003               	clrc
  4066     1083  0DB2               	rlf	___lwmod@divisor^(0+128),f
  4067     1084  0DB3               	rlf	(___lwmod@divisor+1)^(0+128),f
  4068     1085  3EFF               	addlw	-1
  4069     1086  1D03               	skipz
  4070     1087  2882               	goto	u5335
  4071     1088  3001               	movlw	1
  4072     1089  07B6               	addwf	___lwmod@counter^(0+128),f
  4073     108A  287F               	goto	l3911
  4074     108B                     l3913:
  4075     108B  0833               	movf	(___lwmod@divisor+1)^(0+128),w
  4076     108C  0235               	subwf	(___lwmod@dividend+1)^(0+128),w
  4077     108D  1D03               	skipz
  4078     108E  2891               	goto	u5355
  4079     108F  0832               	movf	___lwmod@divisor^(0+128),w
  4080     1090  0234               	subwf	___lwmod@dividend^(0+128),w
  4081     1091                     u5355:
  4082     1091  1C03               	skipc
  4083     1092  2899               	goto	l3917
  4084     1093  0832               	movf	___lwmod@divisor^(0+128),w
  4085     1094  02B4               	subwf	___lwmod@dividend^(0+128),f
  4086     1095  0833               	movf	(___lwmod@divisor+1)^(0+128),w
  4087     1096  1C03               	skipc
  4088     1097  03B5               	decf	(___lwmod@dividend+1)^(0+128),f
  4089     1098  02B5               	subwf	(___lwmod@dividend+1)^(0+128),f
  4090     1099                     l3917:
  4091     1099  3001               	movlw	1
  4092     109A                     u5365:
  4093     109A  1003               	clrc
  4094     109B  0CB3               	rrf	(___lwmod@divisor+1)^(0+128),f
  4095     109C  0CB2               	rrf	___lwmod@divisor^(0+128),f
  4096     109D  3EFF               	addlw	-1
  4097     109E  1D03               	skipz
  4098     109F  289A               	goto	u5365
  4099     10A0  3001               	movlw	1
  4100     10A1  02B6               	subwf	___lwmod@counter^(0+128),f
  4101     10A2  1D03               	btfss	3,2
  4102     10A3  288B               	goto	l3913
  4103     10A4                     l3921:
  4104     10A4  0835               	movf	(___lwmod@dividend+1)^(0+128),w
  4105     10A5  00B3               	movwf	(?___lwmod+1)^(0+128)
  4106     10A6  0834               	movf	___lwmod@dividend^(0+128),w
  4107     10A7  00B2               	movwf	?___lwmod^(0+128)
  4108     10A8  0008               	return
  4109     10A9                     __end_of___lwmod:
  4110                           
  4111                           	psect	text7
  4112     114F                     __ptext7:	
  4113 ;; *************** function ___lwdiv *****************
  4114 ;; Defined at:
  4115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  divisor         2   18[BANK1 ] unsigned int 
  4118 ;;  dividend        2   20[BANK1 ] unsigned int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  quotient        2   23[BANK1 ] unsigned int 
  4121 ;;  counter         1   22[BANK1 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   18[BANK1 ] unsigned int 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       0       4       0       0
  4132 ;;      Locals:         0       0       3       0       0
  4133 ;;      Temps:          0       0       0       0       0
  4134 ;;      Totals:         0       0       7       0       0
  4135 ;;Total ram usage:        7 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 9
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_utoa
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145     114F                     ___lwdiv:	
  4146                           ;psect for function ___lwdiv
  4147                           
  4148                           
  4149                           ;incstack = 0
  4150 ;; hardware stack exceeded
  4151                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4152     114F  1683               	bsf	3,5	;RP0=1, select bank1
  4153     1150  1303               	bcf	3,6	;RP1=0, select bank1
  4154     1151  01B7               	clrf	___lwdiv@quotient^(0+128)
  4155     1152  01B8               	clrf	(___lwdiv@quotient+1)^(0+128)
  4156     1153  0832               	movf	___lwdiv@divisor^(0+128),w
  4157     1154  0433               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  4158     1155  1903               	btfsc	3,2
  4159     1156  2986               	goto	l3899
  4160     1157  3001               	movlw	1
  4161     1158  00B6               	movwf	___lwdiv@counter^(0+128)
  4162     1159                     l3887:
  4163     1159  1BB3               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  4164     115A  2965               	goto	l3889
  4165     115B  3001               	movlw	1
  4166     115C                     u5265:
  4167     115C  1003               	clrc
  4168     115D  0DB2               	rlf	___lwdiv@divisor^(0+128),f
  4169     115E  0DB3               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4170     115F  3EFF               	addlw	-1
  4171     1160  1D03               	skipz
  4172     1161  295C               	goto	u5265
  4173     1162  3001               	movlw	1
  4174     1163  07B6               	addwf	___lwdiv@counter^(0+128),f
  4175     1164  2959               	goto	l3887
  4176     1165                     l3889:
  4177     1165  3001               	movlw	1
  4178     1166                     u5285:
  4179     1166  1003               	clrc
  4180     1167  0DB7               	rlf	___lwdiv@quotient^(0+128),f
  4181     1168  0DB8               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4182     1169  3EFF               	addlw	-1
  4183     116A  1D03               	skipz
  4184     116B  2966               	goto	u5285
  4185     116C  0833               	movf	(___lwdiv@divisor+1)^(0+128),w
  4186     116D  0235               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4187     116E  1D03               	skipz
  4188     116F  2972               	goto	u5295
  4189     1170  0832               	movf	___lwdiv@divisor^(0+128),w
  4190     1171  0234               	subwf	___lwdiv@dividend^(0+128),w
  4191     1172                     u5295:
  4192     1172  1C03               	skipc
  4193     1173  297B               	goto	l3895
  4194     1174  0832               	movf	___lwdiv@divisor^(0+128),w
  4195     1175  02B4               	subwf	___lwdiv@dividend^(0+128),f
  4196     1176  0833               	movf	(___lwdiv@divisor+1)^(0+128),w
  4197     1177  1C03               	skipc
  4198     1178  03B5               	decf	(___lwdiv@dividend+1)^(0+128),f
  4199     1179  02B5               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4200     117A  1437               	bsf	___lwdiv@quotient^(0+128),0
  4201     117B                     l3895:
  4202     117B  3001               	movlw	1
  4203     117C                     u5305:
  4204     117C  1003               	clrc
  4205     117D  0CB3               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4206     117E  0CB2               	rrf	___lwdiv@divisor^(0+128),f
  4207     117F  3EFF               	addlw	-1
  4208     1180  1D03               	skipz
  4209     1181  297C               	goto	u5305
  4210     1182  3001               	movlw	1
  4211     1183  02B6               	subwf	___lwdiv@counter^(0+128),f
  4212     1184  1D03               	btfss	3,2
  4213     1185  2965               	goto	l3889
  4214     1186                     l3899:
  4215     1186  0838               	movf	(___lwdiv@quotient+1)^(0+128),w
  4216     1187  00B3               	movwf	(?___lwdiv+1)^(0+128)
  4217     1188  0837               	movf	___lwdiv@quotient^(0+128),w
  4218     1189  00B2               	movwf	?___lwdiv^(0+128)
  4219     118A  0008               	return
  4220     118B                     __end_of___lwdiv:
  4221                           
  4222                           	psect	text8
  4223     1512                     __ptext8:	
  4224 ;; *************** function _read_prec_or_width *****************
  4225 ;; Defined at:
  4226 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  fmt             1   24[BANK1 ] PTR PTR const unsigned c
  4229 ;;		 -> vfprintf@cfmt(2), 
  4230 ;;  ap              1   25[BANK1 ] PTR PTR void [1]
  4231 ;;		 -> sprintf@ap(1), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  c               1   28[BANK1 ] unsigned char 
  4234 ;;  n               2   29[BANK1 ] int 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  2   24[BANK1 ] int 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       0       2       0       0
  4245 ;;      Locals:         0       0       3       0       0
  4246 ;;      Temps:          0       0       2       0       0
  4247 ;;      Totals:         0       0       7       0       0
  4248 ;;Total ram usage:        7 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 10
  4251 ;; This function calls:
  4252 ;;		___wmul
  4253 ;; This function is called by:
  4254 ;;		_vfpfcnvrt
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258     1512                     _read_prec_or_width:	
  4259                           ;psect for function _read_prec_or_width
  4260                           
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4263                           
  4264                           ;incstack = 0
  4265 ;; hardware stack exceeded
  4266                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4267     1512  1683               	bsf	3,5	;RP0=1, select bank1
  4268     1513  1303               	bcf	3,6	;RP1=0, select bank1
  4269     1514  01BD               	clrf	read_prec_or_width@n^(0+128)
  4270     1515  01BE               	clrf	(read_prec_or_width@n+1)^(0+128)
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4273     1516  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4274     1517  0084               	movwf	4
  4275     1518  1383               	bcf	3,7	;select IRP bank0
  4276     1519  0800               	movf	0,w
  4277     151A  00BA               	movwf	??_read_prec_or_width^(0+128)
  4278     151B  0A84               	incf	4,f
  4279     151C  0800               	movf	0,w
  4280     151D  00BB               	movwf	(??_read_prec_or_width^(0+128)+1)
  4281     151E  083B               	movf	(??_read_prec_or_width+1)^(0+128),w
  4282     151F  1283               	bcf	3,5	;RP0=0, select bank0
  4283     1520  1303               	bcf	3,6	;RP1=0, select bank0
  4284     1521  00FF               	movwf	127
  4285     1522  1683               	bsf	3,5	;RP0=1, select bank1
  4286     1523  1303               	bcf	3,6	;RP1=0, select bank1
  4287     1524  083A               	movf	??_read_prec_or_width^(0+128),w
  4288     1525  0084               	movwf	4
  4289     1526  1283               	bcf	3,5	;RP0=0, select bank0
  4290     1527  1303               	bcf	3,6	;RP1=0, select bank0
  4291     1528  160A  118A  2000  160A  118A  	fcall	stringtab
  4292     152D  3A2A               	xorlw	42
  4293     152E  1D03               	skipz
  4294     152F  2D68               	goto	l2979
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4297     1530  1683               	bsf	3,5	;RP0=1, select bank1
  4298     1531  1303               	bcf	3,6	;RP1=0, select bank1
  4299     1532  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4300     1533  0084               	movwf	4
  4301     1534  3001               	movlw	1
  4302     1535  1383               	bcf	3,7	;select IRP bank0
  4303     1536  0780               	addwf	0,f
  4304     1537  0A84               	incf	4,f
  4305     1538  1803               	skipnc
  4306     1539  0A80               	incf	0,f
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4309     153A  0839               	movf	read_prec_or_width@ap^(0+128),w
  4310     153B  0084               	movwf	4
  4311     153C  1783               	bsf	3,7	;select IRP bank2
  4312     153D  0800               	movf	0,w
  4313     153E  00FF               	movwf	127
  4314     153F  3002               	movlw	2
  4315     1540  0780               	addwf	0,f
  4316     1541  087F               	movf	127,w
  4317     1542  0084               	movwf	4
  4318     1543  0800               	movf	0,w
  4319     1544  00BD               	movwf	read_prec_or_width@n^(0+128)
  4320     1545  0A84               	incf	4,f
  4321     1546  0800               	movf	0,w
  4322     1547  00BE               	movwf	(read_prec_or_width@n+1)^(0+128)
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4325     1548  2D89               	goto	l2981
  4326     1549                     l2975:
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4329     1549  083E               	movf	(read_prec_or_width@n+1)^(0+128),w
  4330     154A  00B3               	movwf	(___wmul@multiplier+1)^(0+128)
  4331     154B  083D               	movf	read_prec_or_width@n^(0+128),w
  4332     154C  00B2               	movwf	___wmul@multiplier^(0+128)
  4333     154D  300A               	movlw	10
  4334     154E  00B4               	movwf	___wmul@multiplicand^(0+128)
  4335     154F  3000               	movlw	0
  4336     1550  00B5               	movwf	(___wmul@multiplicand^(0+128)+1)
  4337     1551  160A  158A  2761  160A  118A  	fcall	___wmul
  4338     1556  1683               	bsf	3,5	;RP0=1, select bank1
  4339     1557  1303               	bcf	3,6	;RP1=0, select bank1
  4340     1558  083C               	movf	read_prec_or_width@c^(0+128),w
  4341     1559  0732               	addwf	?___wmul^(0+128),w
  4342     155A  00BD               	movwf	read_prec_or_width@n^(0+128)
  4343     155B  3000               	movlw	0
  4344     155C  1803               	skipnc
  4345     155D  3001               	movlw	1
  4346     155E  0733               	addwf	(?___wmul+1)^(0+128),w
  4347     155F  00BE               	movwf	(read_prec_or_width@n+1)^(0+128)
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4350     1560  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4351     1561  0084               	movwf	4
  4352     1562  3001               	movlw	1
  4353     1563  1383               	bcf	3,7	;select IRP bank0
  4354     1564  0780               	addwf	0,f
  4355     1565  0A84               	incf	4,f
  4356     1566  1803               	skipnc
  4357     1567  0A80               	incf	0,f
  4358     1568                     l2979:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4361     1568  1683               	bsf	3,5	;RP0=1, select bank1
  4362     1569  1303               	bcf	3,6	;RP1=0, select bank1
  4363     156A  0838               	movf	read_prec_or_width@fmt^(0+128),w
  4364     156B  0084               	movwf	4
  4365     156C  1383               	bcf	3,7	;select IRP bank0
  4366     156D  0800               	movf	0,w
  4367     156E  00BA               	movwf	??_read_prec_or_width^(0+128)
  4368     156F  0A84               	incf	4,f
  4369     1570  0800               	movf	0,w
  4370     1571  00BB               	movwf	(??_read_prec_or_width^(0+128)+1)
  4371     1572  083B               	movf	(??_read_prec_or_width+1)^(0+128),w
  4372     1573  1283               	bcf	3,5	;RP0=0, select bank0
  4373     1574  1303               	bcf	3,6	;RP1=0, select bank0
  4374     1575  00FF               	movwf	127
  4375     1576  1683               	bsf	3,5	;RP0=1, select bank1
  4376     1577  1303               	bcf	3,6	;RP1=0, select bank1
  4377     1578  083A               	movf	??_read_prec_or_width^(0+128),w
  4378     1579  0084               	movwf	4
  4379     157A  1283               	bcf	3,5	;RP0=0, select bank0
  4380     157B  1303               	bcf	3,6	;RP1=0, select bank0
  4381     157C  160A  118A  2000  160A  118A  	fcall	stringtab
  4382     1581  3ED0               	addlw	208
  4383     1582  1683               	bsf	3,5	;RP0=1, select bank1
  4384     1583  1303               	bcf	3,6	;RP1=0, select bank1
  4385     1584  00BC               	movwf	read_prec_or_width@c^(0+128)
  4386     1585  300A               	movlw	10
  4387     1586  023C               	subwf	read_prec_or_width@c^(0+128),w
  4388     1587  1C03               	skipc
  4389     1588  2D49               	goto	l2975
  4390     1589                     l2981:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4393     1589  083E               	movf	(read_prec_or_width@n+1)^(0+128),w
  4394     158A  00B9               	movwf	(?_read_prec_or_width+1)^(0+128)
  4395     158B  083D               	movf	read_prec_or_width@n^(0+128),w
  4396     158C  00B8               	movwf	?_read_prec_or_width^(0+128)
  4397     158D  0008               	return
  4398     158E                     __end_of_read_prec_or_width:
  4399                           
  4400                           	psect	text9
  4401     1F61                     __ptext9:	
  4402 ;; *************** function ___wmul *****************
  4403 ;; Defined at:
  4404 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  multiplier      2   18[BANK1 ] unsigned int 
  4407 ;;  multiplicand    2   20[BANK1 ] unsigned int 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  product         2   22[BANK1 ] unsigned int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2   18[BANK1 ] unsigned int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         0       0       4       0       0
  4420 ;;      Locals:         0       0       2       0       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0       0       6       0       0
  4423 ;;Total ram usage:        6 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 9
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_read_prec_or_width
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433     1F61                     ___wmul:	
  4434                           ;psect for function ___wmul
  4435                           
  4436                           
  4437                           ;incstack = 0
  4438 ;; hardware stack exceeded
  4439                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4440     1F61  1683               	bsf	3,5	;RP0=1, select bank1
  4441     1F62  1303               	bcf	3,6	;RP1=0, select bank1
  4442     1F63  01B6               	clrf	___wmul@product^(0+128)
  4443     1F64  01B7               	clrf	(___wmul@product+1)^(0+128)
  4444     1F65                     l2385:
  4445     1F65  1C32               	btfss	___wmul@multiplier^(0+128),0
  4446     1F66  2F6D               	goto	l162
  4447     1F67  0834               	movf	___wmul@multiplicand^(0+128),w
  4448     1F68  07B6               	addwf	___wmul@product^(0+128),f
  4449     1F69  1803               	skipnc
  4450     1F6A  0AB7               	incf	(___wmul@product+1)^(0+128),f
  4451     1F6B  0835               	movf	(___wmul@multiplicand+1)^(0+128),w
  4452     1F6C  07B7               	addwf	(___wmul@product+1)^(0+128),f
  4453     1F6D                     l162:
  4454     1F6D  3001               	movlw	1
  4455     1F6E                     u2655:
  4456     1F6E  1003               	clrc
  4457     1F6F  0DB4               	rlf	___wmul@multiplicand^(0+128),f
  4458     1F70  0DB5               	rlf	(___wmul@multiplicand+1)^(0+128),f
  4459     1F71  3EFF               	addlw	-1
  4460     1F72  1D03               	skipz
  4461     1F73  2F6E               	goto	u2655
  4462     1F74  3001               	movlw	1
  4463     1F75                     u2665:
  4464     1F75  1003               	clrc
  4465     1F76  0CB3               	rrf	(___wmul@multiplier+1)^(0+128),f
  4466     1F77  0CB2               	rrf	___wmul@multiplier^(0+128),f
  4467     1F78  3EFF               	addlw	-1
  4468     1F79  1D03               	skipz
  4469     1F7A  2F75               	goto	u2665
  4470     1F7B  0832               	movf	___wmul@multiplier^(0+128),w
  4471     1F7C  0433               	iorwf	(___wmul@multiplier+1)^(0+128),w
  4472     1F7D  1D03               	btfss	3,2
  4473     1F7E  2F65               	goto	l2385
  4474     1F7F  0837               	movf	(___wmul@product+1)^(0+128),w
  4475     1F80  00B3               	movwf	(?___wmul+1)^(0+128)
  4476     1F81  0836               	movf	___wmul@product^(0+128),w
  4477     1F82  00B2               	movwf	?___wmul^(0+128)
  4478     1F83  0008               	return
  4479     1F84                     __end_of___wmul:
  4480                           
  4481                           	psect	text10
  4482     0720                     __ptext10:	
  4483 ;; *************** function _otoa *****************
  4484 ;; Defined at:
  4485 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  4488 ;;		 -> sprintf@f(11), 
  4489 ;;  d               2   49[BANK1 ] unsigned int 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  i               2    5[BANK3 ] int 
  4492 ;;  w               2    2[BANK3 ] int 
  4493 ;;  p               2    0[BANK3 ] int 
  4494 ;;  t               1    4[BANK3 ] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2   47[BANK1 ] int 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4504 ;;      Params:         0       0       4       0       0
  4505 ;;      Locals:         0       0       0       7       0
  4506 ;;      Temps:          0       0       2       0       0
  4507 ;;      Totals:         0       0       6       7       0
  4508 ;;Total ram usage:       13 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 13
  4511 ;; This function calls:
  4512 ;;		_pad
  4513 ;; This function is called by:
  4514 ;;		_vfpfcnvrt
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518     0720                     _otoa:	
  4519                           ;psect for function _otoa
  4520                           
  4521                           
  4522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
  4523                           
  4524                           ;incstack = 0
  4525 ;; hardware stack exceeded
  4526                           ; Regs used in _otoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4527     0720  1683               	bsf	3,5	;RP0=1, select bank1
  4528     0721  1303               	bcf	3,6	;RP1=0, select bank1
  4529     0722  1BDA               	btfsc	(_prec+1)^(0+128),7
  4530     0723  2F26               	goto	l4043
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
  4533     0724  30FD               	movlw	253
  4534     0725  05DD               	andwf	_flags^(0+128),f
  4535     0726                     l4043:
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
  4538     0726  1FDA               	btfss	(_prec+1)^(0+128),7
  4539     0727  2F2F               	goto	l4047
  4540     0728  3001               	movlw	1
  4541     0729  1683               	bsf	3,5	;RP0=1, select bank3
  4542     072A  1703               	bsf	3,6	;RP1=1, select bank3
  4543     072B  0090               	movwf	otoa@p^(0+384)
  4544     072C  3000               	movlw	0
  4545     072D  0091               	movwf	(otoa@p^(0+384)+1)
  4546     072E  2F39               	goto	l702
  4547     072F                     l4047:
  4548     072F  085A               	movf	(_prec+1)^(0+128),w
  4549     0730  1683               	bsf	3,5	;RP0=1, select bank3
  4550     0731  1703               	bsf	3,6	;RP1=1, select bank3
  4551     0732  0091               	movwf	(otoa@p+1)^(0+384)
  4552     0733  1683               	bsf	3,5	;RP0=1, select bank1
  4553     0734  1303               	bcf	3,6	;RP1=0, select bank1
  4554     0735  0859               	movf	_prec^(0+128),w
  4555     0736  1683               	bsf	3,5	;RP0=1, select bank3
  4556     0737  1703               	bsf	3,6	;RP1=1, select bank3
  4557     0738  0090               	movwf	otoa@p^(0+384)
  4558     0739                     l702:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
  4561     0739  1683               	bsf	3,5	;RP0=1, select bank1
  4562     073A  1303               	bcf	3,6	;RP1=0, select bank1
  4563     073B  0858               	movf	(_width+1)^(0+128),w
  4564     073C  1683               	bsf	3,5	;RP0=1, select bank3
  4565     073D  1703               	bsf	3,6	;RP1=1, select bank3
  4566     073E  0093               	movwf	(otoa@w+1)^(0+384)
  4567     073F  1683               	bsf	3,5	;RP0=1, select bank1
  4568     0740  1303               	bcf	3,6	;RP1=0, select bank1
  4569     0741  0857               	movf	_width^(0+128),w
  4570     0742  1683               	bsf	3,5	;RP0=1, select bank3
  4571     0743  1703               	bsf	3,6	;RP1=1, select bank3
  4572     0744  0092               	movwf	otoa@w^(0+384)
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
  4575     0745  301F               	movlw	31
  4576     0746  0095               	movwf	otoa@i^(0+384)
  4577     0747  3000               	movlw	0
  4578     0748  0096               	movwf	(otoa@i^(0+384)+1)
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
  4581     0749  1283               	bcf	3,5	;RP0=0, select bank2
  4582     074A  1703               	bsf	3,6	;RP1=1, select bank2
  4583     074B  01AF               	clrf	(_dbuf^(0+256)+31)
  4584                           
  4585                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 899:     t = 0;
  4586     074C  1683               	bsf	3,5	;RP0=1, select bank3
  4587     074D  1703               	bsf	3,6	;RP1=1, select bank3
  4588     074E  0194               	clrf	otoa@t^(0+384)
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  4591     074F  2FAA               	goto	l4065
  4592     0750                     l4067:
  4593     0750  1683               	bsf	3,5	;RP0=1, select bank1
  4594     0751  1303               	bcf	3,6	;RP1=0, select bank1
  4595     0752  0851               	movf	otoa@d^(0+128),w
  4596     0753  0452               	iorwf	(otoa@d+1)^(0+128),w
  4597     0754  1D03               	btfss	3,2
  4598     0755  2F74               	goto	l4053
  4599     0756  1683               	bsf	3,5	;RP0=1, select bank3
  4600     0757  1703               	bsf	3,6	;RP1=1, select bank3
  4601     0758  0811               	movf	(otoa@p+1)^(0+384),w
  4602     0759  3A80               	xorlw	128
  4603     075A  00FF               	movwf	127
  4604     075B  3080               	movlw	128
  4605     075C  027F               	subwf	127,w
  4606     075D  1D03               	skipz
  4607     075E  2F61               	goto	u5665
  4608     075F  3001               	movlw	1
  4609     0760  0210               	subwf	otoa@p^(0+384),w
  4610     0761                     u5665:
  4611     0761  1803               	skipnc
  4612     0762  2F74               	goto	l4053
  4613     0763  1683               	bsf	3,5	;RP0=1, select bank3
  4614     0764  1703               	bsf	3,6	;RP1=1, select bank3
  4615     0765  0813               	movf	(otoa@w+1)^(0+384),w
  4616     0766  3A80               	xorlw	128
  4617     0767  00FF               	movwf	127
  4618     0768  3080               	movlw	128
  4619     0769  027F               	subwf	127,w
  4620     076A  1D03               	skipz
  4621     076B  2F6E               	goto	u5675
  4622     076C  3001               	movlw	1
  4623     076D  0212               	subwf	otoa@w^(0+384),w
  4624     076E                     u5675:
  4625     076E  1C03               	skipc
  4626     076F  2FB7               	goto	l4075
  4627     0770  1683               	bsf	3,5	;RP0=1, select bank1
  4628     0771  1303               	bcf	3,6	;RP1=0, select bank1
  4629     0772  1CDD               	btfss	_flags^(0+128),1
  4630     0773  2FB7               	goto	l4075
  4631     0774                     l4053:
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 911:         --i;
  4634     0774  30FF               	movlw	255
  4635     0775  1683               	bsf	3,5	;RP0=1, select bank3
  4636     0776  1703               	bsf	3,6	;RP1=1, select bank3
  4637     0777  0795               	addwf	otoa@i^(0+384),f
  4638     0778  1803               	skipnc
  4639     0779  0A96               	incf	(otoa@i+1)^(0+384),f
  4640     077A  30FF               	movlw	255
  4641     077B  0796               	addwf	(otoa@i+1)^(0+384),f
  4642                           
  4643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
  4644     077C  1683               	bsf	3,5	;RP0=1, select bank1
  4645     077D  1303               	bcf	3,6	;RP1=0, select bank1
  4646     077E  0851               	movf	otoa@d^(0+128),w
  4647     077F  1683               	bsf	3,5	;RP0=1, select bank3
  4648     0780  1703               	bsf	3,6	;RP1=1, select bank3
  4649     0781  0094               	movwf	otoa@t^(0+384)
  4650     0782  3007               	movlw	7
  4651     0783  0594               	andwf	otoa@t^(0+384),f
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
  4654     0784  0815               	movf	otoa@i^(0+384),w
  4655     0785  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4656     0786  0084               	movwf	4
  4657     0787  0814               	movf	otoa@t^(0+384),w
  4658     0788  3E30               	addlw	48
  4659     0789  1783               	bsf	3,7	;select IRP bank2
  4660     078A  0080               	movwf	0
  4661                           
  4662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 919:         --p;
  4663     078B  30FF               	movlw	255
  4664     078C  0790               	addwf	otoa@p^(0+384),f
  4665     078D  1803               	skipnc
  4666     078E  0A91               	incf	(otoa@p+1)^(0+384),f
  4667     078F  30FF               	movlw	255
  4668     0790  0791               	addwf	(otoa@p+1)^(0+384),f
  4669                           
  4670                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 923:         --w;
  4671     0791  30FF               	movlw	255
  4672     0792  0792               	addwf	otoa@w^(0+384),f
  4673     0793  1803               	skipnc
  4674     0794  0A93               	incf	(otoa@w+1)^(0+384),f
  4675     0795  30FF               	movlw	255
  4676     0796  0793               	addwf	(otoa@w+1)^(0+384),f
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
  4679     0797  1683               	bsf	3,5	;RP0=1, select bank1
  4680     0798  1303               	bcf	3,6	;RP1=0, select bank1
  4681     0799  0852               	movf	(otoa@d+1)^(0+128),w
  4682     079A  00D4               	movwf	(??_otoa^(0+128)+1)
  4683     079B  0851               	movf	otoa@d^(0+128),w
  4684     079C  00D3               	movwf	??_otoa^(0+128)
  4685     079D  1003               	clrc
  4686     079E  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4687     079F  0CD3               	rrf	??_otoa^(0+128),f
  4688     07A0  1003               	clrc
  4689     07A1  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4690     07A2  0CD3               	rrf	??_otoa^(0+128),f
  4691     07A3  1003               	clrc
  4692     07A4  0CD4               	rrf	(??_otoa^(0+128)+1),f
  4693     07A5  0CD3               	rrf	??_otoa^(0+128),f
  4694     07A6  0853               	movf	??_otoa^(0+128),w
  4695     07A7  00D1               	movwf	otoa@d^(0+128)
  4696     07A8  0854               	movf	(??_otoa+1)^(0+128),w
  4697     07A9  00D2               	movwf	(otoa@d+1)^(0+128)
  4698     07AA                     l4065:
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  4701     07AA  1683               	bsf	3,5	;RP0=1, select bank3
  4702     07AB  1703               	bsf	3,6	;RP1=1, select bank3
  4703     07AC  0816               	movf	(otoa@i+1)^(0+384),w
  4704     07AD  3A80               	xorlw	128
  4705     07AE  00FF               	movwf	127
  4706     07AF  3080               	movlw	128
  4707     07B0  027F               	subwf	127,w
  4708     07B1  1D03               	skipz
  4709     07B2  2FB5               	goto	u5645
  4710     07B3  3001               	movlw	1
  4711     07B4  0215               	subwf	otoa@i^(0+384),w
  4712     07B5                     u5645:
  4713     07B5  1803               	btfsc	3,0
  4714     07B6  2F50               	goto	l4067
  4715     07B7                     l4075:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  4718     07B7  1683               	bsf	3,5	;RP0=1, select bank3
  4719     07B8  1703               	bsf	3,6	;RP1=1, select bank3
  4720     07B9  0814               	movf	otoa@t^(0+384),w
  4721     07BA  1D03               	btfss	3,2
  4722     07BB  2FC2               	goto	l712
  4723     07BC  1683               	bsf	3,5	;RP0=1, select bank1
  4724     07BD  1303               	bcf	3,6	;RP1=0, select bank1
  4725     07BE  0859               	movf	_prec^(0+128),w
  4726     07BF  045A               	iorwf	(_prec+1)^(0+128),w
  4727     07C0  1D03               	btfss	3,2
  4728     07C1  2FD9               	goto	l4085
  4729     07C2                     l712:
  4730     07C2  1303               	bcf	3,6	;RP1=0, select bank1
  4731     07C3  1E5D               	btfss	_flags^(0+128),4
  4732     07C4  2FD9               	goto	l4085
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 930:         --i;
  4735     07C5  30FF               	movlw	255
  4736     07C6  1683               	bsf	3,5	;RP0=1, select bank3
  4737     07C7  1703               	bsf	3,6	;RP1=1, select bank3
  4738     07C8  0795               	addwf	otoa@i^(0+384),f
  4739     07C9  1803               	skipnc
  4740     07CA  0A96               	incf	(otoa@i+1)^(0+384),f
  4741     07CB  30FF               	movlw	255
  4742     07CC  0796               	addwf	(otoa@i+1)^(0+384),f
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
  4745     07CD  0815               	movf	otoa@i^(0+384),w
  4746     07CE  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4747     07CF  0084               	movwf	4
  4748     07D0  3030               	movlw	48
  4749     07D1  1783               	bsf	3,7	;select IRP bank2
  4750     07D2  0080               	movwf	0
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 932:         --w;
  4753     07D3  30FF               	movlw	255
  4754     07D4  0792               	addwf	otoa@w^(0+384),f
  4755     07D5  1803               	skipnc
  4756     07D6  0A93               	incf	(otoa@w+1)^(0+384),f
  4757     07D7  30FF               	movlw	255
  4758     07D8  0793               	addwf	(otoa@w+1)^(0+384),f
  4759     07D9                     l4085:
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
  4762     07D9  1303               	bcf	3,6	;RP1=0, select bank1
  4763     07DA  084F               	movf	otoa@fp^(0+128),w
  4764     07DB  00C7               	movwf	pad@fp^(0+128)
  4765     07DC  0850               	movf	(otoa@fp+1)^(0+128),w
  4766     07DD  00C8               	movwf	(pad@fp+1)^(0+128)
  4767     07DE  1683               	bsf	3,5	;RP0=1, select bank3
  4768     07DF  1703               	bsf	3,6	;RP1=1, select bank3
  4769     07E0  0815               	movf	otoa@i^(0+384),w
  4770     07E1  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4771     07E2  1683               	bsf	3,5	;RP0=1, select bank1
  4772     07E3  1303               	bcf	3,6	;RP1=0, select bank1
  4773     07E4  00C9               	movwf	pad@buf^(0+128)
  4774     07E5  1683               	bsf	3,5	;RP0=1, select bank3
  4775     07E6  1703               	bsf	3,6	;RP1=1, select bank3
  4776     07E7  0813               	movf	(otoa@w+1)^(0+384),w
  4777     07E8  1683               	bsf	3,5	;RP0=1, select bank1
  4778     07E9  1303               	bcf	3,6	;RP1=0, select bank1
  4779     07EA  00CB               	movwf	(pad@p+1)^(0+128)
  4780     07EB  1683               	bsf	3,5	;RP0=1, select bank3
  4781     07EC  1703               	bsf	3,6	;RP1=1, select bank3
  4782     07ED  0812               	movf	otoa@w^(0+384),w
  4783     07EE  1683               	bsf	3,5	;RP0=1, select bank1
  4784     07EF  1303               	bcf	3,6	;RP1=0, select bank1
  4785     07F0  00CA               	movwf	pad@p^(0+128)
  4786     07F1  160A  118A  230E   	fcall	_pad
  4787     07F4  1683               	bsf	3,5	;RP0=1, select bank1
  4788     07F5  1303               	bcf	3,6	;RP1=0, select bank1
  4789     07F6  0848               	movf	(?_pad+1)^(0+128),w
  4790     07F7  00D0               	movwf	(?_otoa+1)^(0+128)
  4791     07F8  0847               	movf	?_pad^(0+128),w
  4792     07F9  00CF               	movwf	?_otoa^(0+128)
  4793     07FA  0008               	return
  4794     07FB                     __end_of_otoa:
  4795                           
  4796                           	psect	text11
  4797     060E                     __ptext11:	
  4798 ;; *************** function _dtoa *****************
  4799 ;; Defined at:
  4800 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  fp              2   47[BANK1 ] PTR struct _IO_FILE
  4803 ;;		 -> sprintf@f(11), 
  4804 ;;  d               2   49[BANK1 ] int 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  i               2    7[BANK3 ] int 
  4807 ;;  w               2    4[BANK3 ] int 
  4808 ;;  p               2    2[BANK3 ] int 
  4809 ;;  s               1    6[BANK3 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   47[BANK1 ] int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       4       0       0
  4820 ;;      Locals:         0       0       0       9       0
  4821 ;;      Temps:          0       0       0       0       0
  4822 ;;      Totals:         0       0       4       9       0
  4823 ;;Total ram usage:       13 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 13
  4826 ;; This function calls:
  4827 ;;		___awdiv
  4828 ;;		___awmod
  4829 ;;		_abs
  4830 ;;		_pad
  4831 ;; This function is called by:
  4832 ;;		_vfpfcnvrt
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836     060E                     _dtoa:	
  4837                           ;psect for function _dtoa
  4838                           
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
  4841                           
  4842                           ;incstack = 0
  4843 ;; hardware stack exceeded
  4844                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4845     060E  1683               	bsf	3,5	;RP0=1, select bank1
  4846     060F  1303               	bcf	3,6	;RP1=0, select bank1
  4847     0610  1FD2               	btfss	(dtoa@d+1)^(0+128),7
  4848     0611  2E14               	goto	u5480
  4849     0612  3001               	movlw	1
  4850     0613  2E15               	goto	u5490
  4851     0614                     u5480:
  4852     0614  3000               	movlw	0
  4853     0615                     u5490:
  4854     0615  1683               	bsf	3,5	;RP0=1, select bank3
  4855     0616  1703               	bsf	3,6	;RP1=1, select bank3
  4856     0617  0096               	movwf	dtoa@s^(0+384)
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  4859     0618  1683               	bsf	3,5	;RP0=1, select bank1
  4860     0619  1303               	bcf	3,6	;RP1=0, select bank1
  4861     061A  1BDA               	btfsc	(_prec+1)^(0+128),7
  4862     061B  2E1E               	goto	l3985
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  4865     061C  30FD               	movlw	253
  4866     061D  05DD               	andwf	_flags^(0+128),f
  4867     061E                     l3985:
  4868                           
  4869                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  4870     061E  1FDA               	btfss	(_prec+1)^(0+128),7
  4871     061F  2E27               	goto	l3989
  4872     0620  3001               	movlw	1
  4873     0621  1683               	bsf	3,5	;RP0=1, select bank3
  4874     0622  1703               	bsf	3,6	;RP1=1, select bank3
  4875     0623  0092               	movwf	dtoa@p^(0+384)
  4876     0624  3000               	movlw	0
  4877     0625  0093               	movwf	(dtoa@p^(0+384)+1)
  4878     0626  2E31               	goto	l677
  4879     0627                     l3989:
  4880     0627  085A               	movf	(_prec+1)^(0+128),w
  4881     0628  1683               	bsf	3,5	;RP0=1, select bank3
  4882     0629  1703               	bsf	3,6	;RP1=1, select bank3
  4883     062A  0093               	movwf	(dtoa@p+1)^(0+384)
  4884     062B  1683               	bsf	3,5	;RP0=1, select bank1
  4885     062C  1303               	bcf	3,6	;RP1=0, select bank1
  4886     062D  0859               	movf	_prec^(0+128),w
  4887     062E  1683               	bsf	3,5	;RP0=1, select bank3
  4888     062F  1703               	bsf	3,6	;RP1=1, select bank3
  4889     0630  0092               	movwf	dtoa@p^(0+384)
  4890     0631                     l677:
  4891                           
  4892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  4893     0631  1683               	bsf	3,5	;RP0=1, select bank1
  4894     0632  1303               	bcf	3,6	;RP1=0, select bank1
  4895     0633  0858               	movf	(_width+1)^(0+128),w
  4896     0634  1683               	bsf	3,5	;RP0=1, select bank3
  4897     0635  1703               	bsf	3,6	;RP1=1, select bank3
  4898     0636  0095               	movwf	(dtoa@w+1)^(0+384)
  4899     0637  1683               	bsf	3,5	;RP0=1, select bank1
  4900     0638  1303               	bcf	3,6	;RP1=0, select bank1
  4901     0639  0857               	movf	_width^(0+128),w
  4902     063A  1683               	bsf	3,5	;RP0=1, select bank3
  4903     063B  1703               	bsf	3,6	;RP1=1, select bank3
  4904     063C  0094               	movwf	dtoa@w^(0+384)
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  4907     063D  0816               	movf	dtoa@s^(0+384),w
  4908     063E  1D03               	btfss	3,2
  4909     063F  2E44               	goto	l3995
  4910     0640  1683               	bsf	3,5	;RP0=1, select bank1
  4911     0641  1303               	bcf	3,6	;RP1=0, select bank1
  4912     0642  1D5D               	btfss	_flags^(0+128),2
  4913     0643  2E57               	goto	l678
  4914     0644                     l3995:
  4915                           
  4916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  4917     0644  30FF               	movlw	255
  4918     0645  1683               	bsf	3,5	;RP0=1, select bank3
  4919     0646  1703               	bsf	3,6	;RP1=1, select bank3
  4920     0647  0794               	addwf	dtoa@w^(0+384),f
  4921     0648  1803               	skipnc
  4922     0649  0A95               	incf	(dtoa@w+1)^(0+384),f
  4923     064A  30FF               	movlw	255
  4924     064B  0795               	addwf	(dtoa@w+1)^(0+384),f
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  4927     064C  0816               	movf	dtoa@s^(0+384),w
  4928     064D  1D03               	btfss	3,2
  4929     064E  2E51               	goto	l4001
  4930     064F  302B               	movlw	43
  4931     0650  2E52               	goto	L9
  4932     0651                     l4001:
  4933     0651  302D               	movlw	45
  4934     0652                     L9:
  4935     0652  0090               	movwf	_dtoa$616^(0+384)
  4936     0653  3000               	movlw	0
  4937     0654  0091               	movwf	(_dtoa$616^(0+384)+1)
  4938     0655  0810               	movf	_dtoa$616^(0+384),w
  4939     0656  2E62               	goto	L10
  4940     0657                     l678:	
  4941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 545:  else if (fl
      +                          ags & (1 << 3)) {
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  4944                           
  4945     0657  1DDD               	btfss	_flags^(0+128),3
  4946     0658  2E63               	goto	l685
  4947                           
  4948                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 546:         --w;
  4949     0659  30FF               	movlw	255
  4950     065A  1683               	bsf	3,5	;RP0=1, select bank3
  4951     065B  1703               	bsf	3,6	;RP1=1, select bank3
  4952     065C  0794               	addwf	dtoa@w^(0+384),f
  4953     065D  1803               	skipnc
  4954     065E  0A95               	incf	(dtoa@w+1)^(0+384),f
  4955     065F  30FF               	movlw	255
  4956     0660  0795               	addwf	(dtoa@w+1)^(0+384),f
  4957                           
  4958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
  4959     0661  3020               	movlw	32
  4960     0662                     L10:
  4961     0662  0096               	movwf	dtoa@s^(0+384)
  4962     0663                     l685:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  4965     0663  301F               	movlw	31
  4966     0664  1683               	bsf	3,5	;RP0=1, select bank3
  4967     0665  1703               	bsf	3,6	;RP1=1, select bank3
  4968     0666  0097               	movwf	dtoa@i^(0+384)
  4969     0667  3000               	movlw	0
  4970     0668  0098               	movwf	(dtoa@i^(0+384)+1)
  4971                           
  4972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  4973     0669  1283               	bcf	3,5	;RP0=0, select bank2
  4974     066A  1703               	bsf	3,6	;RP1=1, select bank2
  4975     066B  01AF               	clrf	(_dbuf^(0+256)+31)
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4978     066C  2EDF               	goto	l4019
  4979     066D                     l4021:
  4980     066D  1683               	bsf	3,5	;RP0=1, select bank1
  4981     066E  1303               	bcf	3,6	;RP1=0, select bank1
  4982     066F  0851               	movf	dtoa@d^(0+128),w
  4983     0670  0452               	iorwf	(dtoa@d+1)^(0+128),w
  4984     0671  1D03               	btfss	3,2
  4985     0672  2E91               	goto	l4009
  4986     0673  1683               	bsf	3,5	;RP0=1, select bank3
  4987     0674  1703               	bsf	3,6	;RP1=1, select bank3
  4988     0675  0813               	movf	(dtoa@p+1)^(0+384),w
  4989     0676  3A80               	xorlw	128
  4990     0677  00FF               	movwf	127
  4991     0678  3080               	movlw	128
  4992     0679  027F               	subwf	127,w
  4993     067A  1D03               	skipz
  4994     067B  2E7E               	goto	u5585
  4995     067C  3001               	movlw	1
  4996     067D  0212               	subwf	dtoa@p^(0+384),w
  4997     067E                     u5585:
  4998     067E  1803               	skipnc
  4999     067F  2E91               	goto	l4009
  5000     0680  1683               	bsf	3,5	;RP0=1, select bank3
  5001     0681  1703               	bsf	3,6	;RP1=1, select bank3
  5002     0682  0815               	movf	(dtoa@w+1)^(0+384),w
  5003     0683  3A80               	xorlw	128
  5004     0684  00FF               	movwf	127
  5005     0685  3080               	movlw	128
  5006     0686  027F               	subwf	127,w
  5007     0687  1D03               	skipz
  5008     0688  2E8B               	goto	u5595
  5009     0689  3001               	movlw	1
  5010     068A  0214               	subwf	dtoa@w^(0+384),w
  5011     068B                     u5595:
  5012     068B  1C03               	skipc
  5013     068C  2EEC               	goto	l4029
  5014     068D  1683               	bsf	3,5	;RP0=1, select bank1
  5015     068E  1303               	bcf	3,6	;RP1=0, select bank1
  5016     068F  1CDD               	btfss	_flags^(0+128),1
  5017     0690  2EEC               	goto	l4029
  5018     0691                     l4009:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  5021     0691  30FF               	movlw	255
  5022     0692  1683               	bsf	3,5	;RP0=1, select bank3
  5023     0693  1703               	bsf	3,6	;RP1=1, select bank3
  5024     0694  0797               	addwf	dtoa@i^(0+384),f
  5025     0695  1803               	skipnc
  5026     0696  0A98               	incf	(dtoa@i+1)^(0+384),f
  5027     0697  30FF               	movlw	255
  5028     0698  0798               	addwf	(dtoa@i+1)^(0+384),f
  5029                           
  5030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5031     0699  0817               	movf	dtoa@i^(0+384),w
  5032     069A  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5033     069B  0084               	movwf	4
  5034     069C  300A               	movlw	10
  5035     069D  1683               	bsf	3,5	;RP0=1, select bank1
  5036     069E  1303               	bcf	3,6	;RP1=0, select bank1
  5037     069F  00B2               	movwf	___awmod@divisor^(0+128)
  5038     06A0  3000               	movlw	0
  5039     06A1  00B3               	movwf	(___awmod@divisor^(0+128)+1)
  5040     06A2  0852               	movf	(dtoa@d+1)^(0+128),w
  5041     06A3  00B5               	movwf	(___awmod@dividend+1)^(0+128)
  5042     06A4  0851               	movf	dtoa@d^(0+128),w
  5043     06A5  00B4               	movwf	___awmod@dividend^(0+128)
  5044     06A6  160A  118A  2217  120A  118A  	fcall	___awmod
  5045     06AB  1683               	bsf	3,5	;RP0=1, select bank1
  5046     06AC  1303               	bcf	3,6	;RP1=0, select bank1
  5047     06AD  0833               	movf	(?___awmod+1)^(0+128),w
  5048     06AE  00B9               	movwf	(abs@a+1)^(0+128)
  5049     06AF  0832               	movf	?___awmod^(0+128),w
  5050     06B0  00B8               	movwf	abs@a^(0+128)
  5051     06B1  160A  158A  26E8  120A  118A  	fcall	_abs
  5052     06B6  1683               	bsf	3,5	;RP0=1, select bank1
  5053     06B7  1303               	bcf	3,6	;RP1=0, select bank1
  5054     06B8  0838               	movf	?_abs^(0+128),w
  5055     06B9  3E30               	addlw	48
  5056     06BA  1783               	bsf	3,7	;select IRP bank2
  5057     06BB  0080               	movwf	0
  5058                           
  5059                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
  5060     06BC  30FF               	movlw	255
  5061     06BD  1683               	bsf	3,5	;RP0=1, select bank3
  5062     06BE  1703               	bsf	3,6	;RP1=1, select bank3
  5063     06BF  0792               	addwf	dtoa@p^(0+384),f
  5064     06C0  1803               	skipnc
  5065     06C1  0A93               	incf	(dtoa@p+1)^(0+384),f
  5066     06C2  30FF               	movlw	255
  5067     06C3  0793               	addwf	(dtoa@p+1)^(0+384),f
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  5070     06C4  30FF               	movlw	255
  5071     06C5  0794               	addwf	dtoa@w^(0+384),f
  5072     06C6  1803               	skipnc
  5073     06C7  0A95               	incf	(dtoa@w+1)^(0+384),f
  5074     06C8  30FF               	movlw	255
  5075     06C9  0795               	addwf	(dtoa@w+1)^(0+384),f
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  5078     06CA  300A               	movlw	10
  5079     06CB  1683               	bsf	3,5	;RP0=1, select bank1
  5080     06CC  1303               	bcf	3,6	;RP1=0, select bank1
  5081     06CD  00B2               	movwf	___awdiv@divisor^(0+128)
  5082     06CE  3000               	movlw	0
  5083     06CF  00B3               	movwf	(___awdiv@divisor^(0+128)+1)
  5084     06D0  0852               	movf	(dtoa@d+1)^(0+128),w
  5085     06D1  00B5               	movwf	(___awdiv@dividend+1)^(0+128)
  5086     06D2  0851               	movf	dtoa@d^(0+128),w
  5087     06D3  00B4               	movwf	___awdiv@dividend^(0+128)
  5088     06D4  160A  118A  22B7  120A  118A  	fcall	___awdiv
  5089     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  5090     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  5091     06DB  0833               	movf	(?___awdiv+1)^(0+128),w
  5092     06DC  00D2               	movwf	(dtoa@d+1)^(0+128)
  5093     06DD  0832               	movf	?___awdiv^(0+128),w
  5094     06DE  00D1               	movwf	dtoa@d^(0+128)
  5095     06DF                     l4019:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5098     06DF  1683               	bsf	3,5	;RP0=1, select bank3
  5099     06E0  1703               	bsf	3,6	;RP1=1, select bank3
  5100     06E1  0818               	movf	(dtoa@i+1)^(0+384),w
  5101     06E2  3A80               	xorlw	128
  5102     06E3  00FF               	movwf	127
  5103     06E4  3080               	movlw	128
  5104     06E5  027F               	subwf	127,w
  5105     06E6  1D03               	skipz
  5106     06E7  2EEA               	goto	u5565
  5107     06E8  3001               	movlw	1
  5108     06E9  0217               	subwf	dtoa@i^(0+384),w
  5109     06EA                     u5565:
  5110     06EA  1803               	btfsc	3,0
  5111     06EB  2E6D               	goto	l4021
  5112     06EC                     l4029:
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  5115     06EC  1683               	bsf	3,5	;RP0=1, select bank3
  5116     06ED  1703               	bsf	3,6	;RP1=1, select bank3
  5117     06EE  0816               	movf	dtoa@s^(0+384),w
  5118     06EF  1903               	btfsc	3,2
  5119     06F0  2EFD               	goto	l4035
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  5122     06F1  30FF               	movlw	255
  5123     06F2  0797               	addwf	dtoa@i^(0+384),f
  5124     06F3  1803               	skipnc
  5125     06F4  0A98               	incf	(dtoa@i+1)^(0+384),f
  5126     06F5  30FF               	movlw	255
  5127     06F6  0798               	addwf	(dtoa@i+1)^(0+384),f
  5128                           
  5129                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  5130     06F7  0817               	movf	dtoa@i^(0+384),w
  5131     06F8  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5132     06F9  0084               	movwf	4
  5133     06FA  0816               	movf	dtoa@s^(0+384),w
  5134     06FB  1783               	bsf	3,7	;select IRP bank2
  5135     06FC  0080               	movwf	0
  5136     06FD                     l4035:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  5139     06FD  1683               	bsf	3,5	;RP0=1, select bank1
  5140     06FE  1303               	bcf	3,6	;RP1=0, select bank1
  5141     06FF  084F               	movf	dtoa@fp^(0+128),w
  5142     0700  00C7               	movwf	pad@fp^(0+128)
  5143     0701  0850               	movf	(dtoa@fp+1)^(0+128),w
  5144     0702  00C8               	movwf	(pad@fp+1)^(0+128)
  5145     0703  1683               	bsf	3,5	;RP0=1, select bank3
  5146     0704  1703               	bsf	3,6	;RP1=1, select bank3
  5147     0705  0817               	movf	dtoa@i^(0+384),w
  5148     0706  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5149     0707  1683               	bsf	3,5	;RP0=1, select bank1
  5150     0708  1303               	bcf	3,6	;RP1=0, select bank1
  5151     0709  00C9               	movwf	pad@buf^(0+128)
  5152     070A  1683               	bsf	3,5	;RP0=1, select bank3
  5153     070B  1703               	bsf	3,6	;RP1=1, select bank3
  5154     070C  0815               	movf	(dtoa@w+1)^(0+384),w
  5155     070D  1683               	bsf	3,5	;RP0=1, select bank1
  5156     070E  1303               	bcf	3,6	;RP1=0, select bank1
  5157     070F  00CB               	movwf	(pad@p+1)^(0+128)
  5158     0710  1683               	bsf	3,5	;RP0=1, select bank3
  5159     0711  1703               	bsf	3,6	;RP1=1, select bank3
  5160     0712  0814               	movf	dtoa@w^(0+384),w
  5161     0713  1683               	bsf	3,5	;RP0=1, select bank1
  5162     0714  1303               	bcf	3,6	;RP1=0, select bank1
  5163     0715  00CA               	movwf	pad@p^(0+128)
  5164     0716  160A  118A  230E   	fcall	_pad
  5165     0719  1683               	bsf	3,5	;RP0=1, select bank1
  5166     071A  1303               	bcf	3,6	;RP1=0, select bank1
  5167     071B  0848               	movf	(?_pad+1)^(0+128),w
  5168     071C  00D0               	movwf	(?_dtoa+1)^(0+128)
  5169     071D  0847               	movf	?_pad^(0+128),w
  5170     071E  00CF               	movwf	?_dtoa^(0+128)
  5171     071F  0008               	return
  5172     0720                     __end_of_dtoa:
  5173                           
  5174                           	psect	text12
  5175     130E                     __ptext12:	
  5176 ;; *************** function _pad *****************
  5177 ;; Defined at:
  5178 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  fp              2   39[BANK1 ] PTR struct _IO_FILE
  5181 ;;		 -> sprintf@f(11), 
  5182 ;;  buf             1   41[BANK1 ] PTR unsigned char 
  5183 ;;		 -> dbuf(32), 
  5184 ;;  p               2   42[BANK1 ] int 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  i               2   45[BANK1 ] int 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2   39[BANK1 ] int 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5196 ;;      Params:         0       0       5       0       0
  5197 ;;      Locals:         0       0       2       0       0
  5198 ;;      Temps:          0       0       1       0       0
  5199 ;;      Totals:         0       0       8       0       0
  5200 ;;Total ram usage:        8 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 12
  5203 ;; This function calls:
  5204 ;;		_fputc
  5205 ;;		_fputs
  5206 ;;		_strlen
  5207 ;; This function is called by:
  5208 ;;		_dtoa
  5209 ;;		_otoa
  5210 ;;		_utoa
  5211 ;;		_xtoa
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215     130E                     _pad:	
  5216                           ;psect for function _pad
  5217                           
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  5220                           
  5221                           ;incstack = 0
  5222 ;; hardware stack exceeded
  5223                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5224     130E  1683               	bsf	3,5	;RP0=1, select bank1
  5225     130F  1303               	bcf	3,6	;RP1=0, select bank1
  5226     1310  1C5D               	btfss	_flags^(0+128),0
  5227     1311  2B1D               	goto	l3929
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  5230     1312  0849               	movf	pad@buf^(0+128),w
  5231     1313  00BF               	movwf	fputs@s^(0+128)
  5232     1314  0847               	movf	pad@fp^(0+128),w
  5233     1315  00C0               	movwf	fputs@fp^(0+128)
  5234     1316  0848               	movf	(pad@fp+1)^(0+128),w
  5235     1317  00C1               	movwf	(fputs@fp+1)^(0+128)
  5236     1318  160A  158A  27AC  160A  118A  	fcall	_fputs
  5237     131D                     l3929:
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  5240     131D  1683               	bsf	3,5	;RP0=1, select bank1
  5241     131E  1303               	bcf	3,6	;RP1=0, select bank1
  5242     131F  1FCB               	btfss	(pad@p+1)^(0+128),7
  5243     1320  2B23               	goto	l649
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5246     1321  01CA               	clrf	pad@p^(0+128)
  5247     1322  01CB               	clrf	(pad@p+1)^(0+128)
  5248     1323                     l649:	
  5249                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  5250                           
  5251                           
  5252                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5253     1323  01CD               	clrf	pad@i^(0+128)
  5254     1324  01CE               	clrf	(pad@i+1)^(0+128)
  5255     1325                     l3937:	
  5256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5257                           
  5258                           
  5259                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5260     1325  084E               	movf	(pad@i+1)^(0+128),w
  5261     1326  3A80               	xorlw	128
  5262     1327  00CC               	movwf	??_pad^(0+128)
  5263     1328  084B               	movf	(pad@p+1)^(0+128),w
  5264     1329  3A80               	xorlw	128
  5265     132A  024C               	subwf	??_pad^(0+128),w
  5266     132B  1D03               	skipz
  5267     132C  2B2F               	goto	u5405
  5268     132D  084A               	movf	pad@p^(0+128),w
  5269     132E  024D               	subwf	pad@i^(0+128),w
  5270     132F                     u5405:
  5271     132F  1803               	btfsc	3,0
  5272     1330  2B49               	goto	l652
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5275     1331  3020               	movlw	32
  5276     1332  1683               	bsf	3,5	;RP0=1, select bank1
  5277     1333  1303               	bcf	3,6	;RP1=0, select bank1
  5278     1334  00B2               	movwf	fputc@c^(0+128)
  5279     1335  3000               	movlw	0
  5280     1336  00B3               	movwf	(fputc@c^(0+128)+1)
  5281     1337  0847               	movf	pad@fp^(0+128),w
  5282     1338  00B4               	movwf	fputc@fp^(0+128)
  5283     1339  0848               	movf	(pad@fp+1)^(0+128),w
  5284     133A  00B5               	movwf	(fputc@fp+1)^(0+128)
  5285     133B  120A  158A  2008  160A  118A  	fcall	_fputc
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5288     1340  3001               	movlw	1
  5289     1341  1683               	bsf	3,5	;RP0=1, select bank1
  5290     1342  1303               	bcf	3,6	;RP1=0, select bank1
  5291     1343  07CD               	addwf	pad@i^(0+128),f
  5292     1344  1803               	skipnc
  5293     1345  0ACE               	incf	(pad@i+1)^(0+128),f
  5294     1346  3000               	movlw	0
  5295     1347  07CE               	addwf	(pad@i+1)^(0+128),f
  5296     1348  2B25               	goto	l3937
  5297     1349                     l652:
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  5300     1349  1683               	bsf	3,5	;RP0=1, select bank1
  5301     134A  1303               	bcf	3,6	;RP1=0, select bank1
  5302     134B  185D               	btfsc	_flags^(0+128),0
  5303     134C  2B58               	goto	l653
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5306     134D  0849               	movf	pad@buf^(0+128),w
  5307     134E  00BF               	movwf	fputs@s^(0+128)
  5308     134F  0847               	movf	pad@fp^(0+128),w
  5309     1350  00C0               	movwf	fputs@fp^(0+128)
  5310     1351  0848               	movf	(pad@fp+1)^(0+128),w
  5311     1352  00C1               	movwf	(fputs@fp+1)^(0+128)
  5312     1353  160A  158A  27AC  160A  118A  	fcall	_fputs
  5313     1358                     l653:	
  5314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 220:     }
  5315                           
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  5318     1358  1683               	bsf	3,5	;RP0=1, select bank1
  5319     1359  1303               	bcf	3,6	;RP1=0, select bank1
  5320     135A  0849               	movf	pad@buf^(0+128),w
  5321     135B  00B2               	movwf	strlen@s^(0+128)
  5322     135C  160A  158A  270A   	fcall	_strlen
  5323     135F  1683               	bsf	3,5	;RP0=1, select bank1
  5324     1360  1303               	bcf	3,6	;RP1=0, select bank1
  5325     1361  084A               	movf	pad@p^(0+128),w
  5326     1362  0732               	addwf	?_strlen^(0+128),w
  5327     1363  00C7               	movwf	?_pad^(0+128)
  5328     1364  084B               	movf	(pad@p+1)^(0+128),w
  5329     1365  1803               	skipnc
  5330     1366  0A4B               	incf	(pad@p+1)^(0+128),w
  5331     1367  0733               	addwf	(?_strlen+1)^(0+128),w
  5332     1368  00C8               	movwf	(?_pad+1)^(0+128)
  5333     1369  0008               	return
  5334     136A                     __end_of_pad:
  5335                           
  5336                           	psect	text13
  5337     1F0A                     __ptext13:	
  5338 ;; *************** function _strlen *****************
  5339 ;; Defined at:
  5340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  s               1   18[BANK1 ] PTR const unsigned char 
  5343 ;;		 -> dbuf(32), 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  a               1   20[BANK1 ] PTR const unsigned char 
  5346 ;;		 -> dbuf(32), 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  2   18[BANK1 ] unsigned int 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5356 ;;      Params:         0       0       2       0       0
  5357 ;;      Locals:         0       0       1       0       0
  5358 ;;      Temps:          0       0       0       0       0
  5359 ;;      Totals:         0       0       3       0       0
  5360 ;;Total ram usage:        3 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 9
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_pad
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370     1F0A                     _strlen:	
  5371                           ;psect for function _strlen
  5372                           
  5373                           
  5374                           ;incstack = 0
  5375 ;; hardware stack exceeded
  5376                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5377     1F0A  1683               	bsf	3,5	;RP0=1, select bank1
  5378     1F0B  1303               	bcf	3,6	;RP1=0, select bank1
  5379     1F0C  0832               	movf	strlen@s^(0+128),w
  5380     1F0D  00B4               	movwf	strlen@a^(0+128)
  5381     1F0E                     l3789:
  5382     1F0E  0832               	movf	strlen@s^(0+128),w
  5383     1F0F  0084               	movwf	4
  5384     1F10  1783               	bsf	3,7	;select IRP bank2
  5385     1F11  0800               	movf	0,w
  5386     1F12  1903               	btfsc	3,2
  5387     1F13  2F17               	goto	l3791
  5388     1F14  3001               	movlw	1
  5389     1F15  07B2               	addwf	strlen@s^(0+128),f
  5390     1F16  2F0E               	goto	l3789
  5391     1F17                     l3791:
  5392     1F17  0834               	movf	strlen@a^(0+128),w
  5393     1F18  0232               	subwf	strlen@s^(0+128),w
  5394     1F19  00B2               	movwf	?_strlen^(0+128)
  5395     1F1A  01B3               	clrf	(?_strlen+1)^(0+128)
  5396     1F1B  1BB2               	btfsc	?_strlen^(0+128),7
  5397     1F1C  03B3               	decf	(?_strlen+1)^(0+128),f
  5398     1F1D  0008               	return
  5399     1F1E                     __end_of_strlen:
  5400                           
  5401                           	psect	text14
  5402     1FAC                     __ptext14:	
  5403 ;; *************** function _fputs *****************
  5404 ;; Defined at:
  5405 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  s               1   31[BANK1 ] PTR const unsigned char 
  5408 ;;		 -> dbuf(32), 
  5409 ;;  fp              2   32[BANK1 ] PTR struct _IO_FILE
  5410 ;;		 -> sprintf@f(11), 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  i               2   37[BANK1 ] int 
  5413 ;;  c               1   36[BANK1 ] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  2   31[BANK1 ] int 
  5416 ;; Registers used:
  5417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5423 ;;      Params:         0       0       3       0       0
  5424 ;;      Locals:         0       0       3       0       0
  5425 ;;      Temps:          0       0       2       0       0
  5426 ;;      Totals:         0       0       8       0       0
  5427 ;;Total ram usage:        8 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; Hardware stack levels required when called: 11
  5430 ;; This function calls:
  5431 ;;		_fputc
  5432 ;; This function is called by:
  5433 ;;		_pad
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437     1FAC                     _fputs:	
  5438                           ;psect for function _fputs
  5439                           
  5440                           
  5441                           ;incstack = 0
  5442 ;; hardware stack exceeded
  5443                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5444     1FAC  1683               	bsf	3,5	;RP0=1, select bank1
  5445     1FAD  1303               	bcf	3,6	;RP1=0, select bank1
  5446     1FAE  01C5               	clrf	fputs@i^(0+128)
  5447     1FAF  01C6               	clrf	(fputs@i+1)^(0+128)
  5448     1FB0                     l3783:
  5449     1FB0  0845               	movf	fputs@i^(0+128),w
  5450     1FB1  073F               	addwf	fputs@s^(0+128),w
  5451     1FB2  00C2               	movwf	??_fputs^(0+128)
  5452     1FB3  0842               	movf	??_fputs^(0+128),w
  5453     1FB4  0084               	movwf	4
  5454     1FB5  1783               	bsf	3,7	;select IRP bank2
  5455     1FB6  0800               	movf	0,w
  5456     1FB7  00C4               	movwf	fputs@c^(0+128)
  5457     1FB8  0844               	movf	fputs@c^(0+128),w
  5458     1FB9  1903               	btfsc	3,2
  5459     1FBA  0008               	return
  5460     1FBB  0844               	movf	fputs@c^(0+128),w
  5461     1FBC  00C2               	movwf	??_fputs^(0+128)
  5462     1FBD  01C3               	clrf	(??_fputs^(0+128)+1)
  5463     1FBE  0842               	movf	??_fputs^(0+128),w
  5464     1FBF  00B2               	movwf	fputc@c^(0+128)
  5465     1FC0  0843               	movf	(??_fputs+1)^(0+128),w
  5466     1FC1  00B3               	movwf	(fputc@c+1)^(0+128)
  5467     1FC2  0840               	movf	fputs@fp^(0+128),w
  5468     1FC3  00B4               	movwf	fputc@fp^(0+128)
  5469     1FC4  0841               	movf	(fputs@fp+1)^(0+128),w
  5470     1FC5  00B5               	movwf	(fputc@fp+1)^(0+128)
  5471     1FC6  120A  158A  2008  160A  158A  	fcall	_fputc
  5472     1FCB  3001               	movlw	1
  5473     1FCC  1683               	bsf	3,5	;RP0=1, select bank1
  5474     1FCD  1303               	bcf	3,6	;RP1=0, select bank1
  5475     1FCE  07C5               	addwf	fputs@i^(0+128),f
  5476     1FCF  1803               	skipnc
  5477     1FD0  0AC6               	incf	(fputs@i+1)^(0+128),f
  5478     1FD1  3000               	movlw	0
  5479     1FD2  07C6               	addwf	(fputs@i+1)^(0+128),f
  5480     1FD3  2FB0               	goto	l3783
  5481     1FD4                     __end_of_fputs:
  5482                           
  5483                           	psect	text15
  5484     1EE8                     __ptext15:	
  5485 ;; *************** function _abs *****************
  5486 ;; Defined at:
  5487 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  a               2   24[BANK1 ] int 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  2   24[BANK1 ] int 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5501 ;;      Params:         0       0       2       0       0
  5502 ;;      Locals:         0       0       0       0       0
  5503 ;;      Temps:          0       0       2       0       0
  5504 ;;      Totals:         0       0       4       0       0
  5505 ;;Total ram usage:        4 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 9
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_dtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515     1EE8                     _abs:	
  5516                           ;psect for function _abs
  5517                           
  5518                           
  5519                           ;incstack = 0
  5520 ;; hardware stack exceeded
  5521                           ; Regs used in _abs: [wreg+status,2+status,0]
  5522     1EE8  1683               	bsf	3,5	;RP0=1, select bank1
  5523     1EE9  1303               	bcf	3,6	;RP1=0, select bank1
  5524     1EEA  1FB9               	btfss	(abs@a+1)^(0+128),7
  5525     1EEB  0008               	return
  5526     1EEC  0938               	comf	abs@a^(0+128),w
  5527     1EED  00BA               	movwf	??_abs^(0+128)
  5528     1EEE  0939               	comf	(abs@a+1)^(0+128),w
  5529     1EEF  00BB               	movwf	(??_abs^(0+128)+1)
  5530     1EF0  0ABA               	incf	??_abs^(0+128),f
  5531     1EF1  1903               	skipnz
  5532     1EF2  0ABB               	incf	(??_abs^(0+128)+1),f
  5533     1EF3  083A               	movf	??_abs^(0+128),w
  5534     1EF4  00B8               	movwf	?_abs^(0+128)
  5535     1EF5  083B               	movf	(??_abs+1)^(0+128),w
  5536     1EF6  00B9               	movwf	(?_abs+1)^(0+128)
  5537     1EF7  0008               	return
  5538     1EF8                     __end_of_abs:
  5539                           
  5540                           	psect	text16
  5541     1217                     __ptext16:	
  5542 ;; *************** function ___awmod *****************
  5543 ;; Defined at:
  5544 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  divisor         2   18[BANK1 ] int 
  5547 ;;  dividend        2   20[BANK1 ] int 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  sign            1   23[BANK1 ] unsigned char 
  5550 ;;  counter         1   22[BANK1 ] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  2   18[BANK1 ] int 
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         0       0       4       0       0
  5561 ;;      Locals:         0       0       2       0       0
  5562 ;;      Temps:          0       0       0       0       0
  5563 ;;      Totals:         0       0       6       0       0
  5564 ;;Total ram usage:        6 bytes
  5565 ;; Hardware stack levels used: 1
  5566 ;; Hardware stack levels required when called: 9
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		_dtoa
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574     1217                     ___awmod:	
  5575                           ;psect for function ___awmod
  5576                           
  5577                           
  5578                           ;incstack = 0
  5579 ;; hardware stack exceeded
  5580                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5581     1217  1683               	bsf	3,5	;RP0=1, select bank1
  5582     1218  1303               	bcf	3,6	;RP1=0, select bank1
  5583     1219  01B7               	clrf	___awmod@sign^(0+128)
  5584     121A  1FB5               	btfss	(___awmod@dividend+1)^(0+128),7
  5585     121B  2A23               	goto	l3847
  5586     121C  09B4               	comf	___awmod@dividend^(0+128),f
  5587     121D  09B5               	comf	(___awmod@dividend+1)^(0+128),f
  5588     121E  0AB4               	incf	___awmod@dividend^(0+128),f
  5589     121F  1903               	skipnz
  5590     1220  0AB5               	incf	(___awmod@dividend+1)^(0+128),f
  5591     1221  3001               	movlw	1
  5592     1222  00B7               	movwf	___awmod@sign^(0+128)
  5593     1223                     l3847:
  5594     1223  1FB3               	btfss	(___awmod@divisor+1)^(0+128),7
  5595     1224  2A2A               	goto	l3851
  5596     1225  09B2               	comf	___awmod@divisor^(0+128),f
  5597     1226  09B3               	comf	(___awmod@divisor+1)^(0+128),f
  5598     1227  0AB2               	incf	___awmod@divisor^(0+128),f
  5599     1228  1903               	skipnz
  5600     1229  0AB3               	incf	(___awmod@divisor+1)^(0+128),f
  5601     122A                     l3851:
  5602     122A  0832               	movf	___awmod@divisor^(0+128),w
  5603     122B  0433               	iorwf	(___awmod@divisor+1)^(0+128),w
  5604     122C  1903               	btfsc	3,2
  5605     122D  2A55               	goto	l3869
  5606     122E  3001               	movlw	1
  5607     122F  00B6               	movwf	___awmod@counter^(0+128)
  5608     1230                     l3859:
  5609     1230  1BB3               	btfsc	(___awmod@divisor+1)^(0+128),7
  5610     1231  2A3C               	goto	l3861
  5611     1232  3001               	movlw	1
  5612     1233                     u5195:
  5613     1233  1003               	clrc
  5614     1234  0DB2               	rlf	___awmod@divisor^(0+128),f
  5615     1235  0DB3               	rlf	(___awmod@divisor+1)^(0+128),f
  5616     1236  3EFF               	addlw	-1
  5617     1237  1D03               	skipz
  5618     1238  2A33               	goto	u5195
  5619     1239  3001               	movlw	1
  5620     123A  07B6               	addwf	___awmod@counter^(0+128),f
  5621     123B  2A30               	goto	l3859
  5622     123C                     l3861:
  5623     123C  0833               	movf	(___awmod@divisor+1)^(0+128),w
  5624     123D  0235               	subwf	(___awmod@dividend+1)^(0+128),w
  5625     123E  1D03               	skipz
  5626     123F  2A42               	goto	u5215
  5627     1240  0832               	movf	___awmod@divisor^(0+128),w
  5628     1241  0234               	subwf	___awmod@dividend^(0+128),w
  5629     1242                     u5215:
  5630     1242  1C03               	skipc
  5631     1243  2A4A               	goto	l3865
  5632     1244  0832               	movf	___awmod@divisor^(0+128),w
  5633     1245  02B4               	subwf	___awmod@dividend^(0+128),f
  5634     1246  0833               	movf	(___awmod@divisor+1)^(0+128),w
  5635     1247  1C03               	skipc
  5636     1248  03B5               	decf	(___awmod@dividend+1)^(0+128),f
  5637     1249  02B5               	subwf	(___awmod@dividend+1)^(0+128),f
  5638     124A                     l3865:
  5639     124A  3001               	movlw	1
  5640     124B                     u5225:
  5641     124B  1003               	clrc
  5642     124C  0CB3               	rrf	(___awmod@divisor+1)^(0+128),f
  5643     124D  0CB2               	rrf	___awmod@divisor^(0+128),f
  5644     124E  3EFF               	addlw	-1
  5645     124F  1D03               	skipz
  5646     1250  2A4B               	goto	u5225
  5647     1251  3001               	movlw	1
  5648     1252  02B6               	subwf	___awmod@counter^(0+128),f
  5649     1253  1D03               	btfss	3,2
  5650     1254  2A3C               	goto	l3861
  5651     1255                     l3869:
  5652     1255  0837               	movf	___awmod@sign^(0+128),w
  5653     1256  1903               	btfsc	3,2
  5654     1257  2A5D               	goto	l3873
  5655     1258  09B4               	comf	___awmod@dividend^(0+128),f
  5656     1259  09B5               	comf	(___awmod@dividend+1)^(0+128),f
  5657     125A  0AB4               	incf	___awmod@dividend^(0+128),f
  5658     125B  1903               	skipnz
  5659     125C  0AB5               	incf	(___awmod@dividend+1)^(0+128),f
  5660     125D                     l3873:
  5661     125D  0835               	movf	(___awmod@dividend+1)^(0+128),w
  5662     125E  00B3               	movwf	(?___awmod+1)^(0+128)
  5663     125F  0834               	movf	___awmod@dividend^(0+128),w
  5664     1260  00B2               	movwf	?___awmod^(0+128)
  5665     1261  0008               	return
  5666     1262                     __end_of___awmod:
  5667                           
  5668                           	psect	text17
  5669     12B7                     __ptext17:	
  5670 ;; *************** function ___awdiv *****************
  5671 ;; Defined at:
  5672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  divisor         2   18[BANK1 ] int 
  5675 ;;  dividend        2   20[BANK1 ] int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  quotient        2   24[BANK1 ] int 
  5678 ;;  sign            1   23[BANK1 ] unsigned char 
  5679 ;;  counter         1   22[BANK1 ] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  2   18[BANK1 ] int 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         0       0       4       0       0
  5690 ;;      Locals:         0       0       4       0       0
  5691 ;;      Temps:          0       0       0       0       0
  5692 ;;      Totals:         0       0       8       0       0
  5693 ;;Total ram usage:        8 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; Hardware stack levels required when called: 9
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_dtoa
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703     12B7                     ___awdiv:	
  5704                           ;psect for function ___awdiv
  5705                           
  5706                           
  5707                           ;incstack = 0
  5708 ;; hardware stack exceeded
  5709                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5710     12B7  1683               	bsf	3,5	;RP0=1, select bank1
  5711     12B8  1303               	bcf	3,6	;RP1=0, select bank1
  5712     12B9  01B7               	clrf	___awdiv@sign^(0+128)
  5713     12BA  1FB3               	btfss	(___awdiv@divisor+1)^(0+128),7
  5714     12BB  2AC3               	goto	l3803
  5715     12BC  09B2               	comf	___awdiv@divisor^(0+128),f
  5716     12BD  09B3               	comf	(___awdiv@divisor+1)^(0+128),f
  5717     12BE  0AB2               	incf	___awdiv@divisor^(0+128),f
  5718     12BF  1903               	skipnz
  5719     12C0  0AB3               	incf	(___awdiv@divisor+1)^(0+128),f
  5720     12C1  3001               	movlw	1
  5721     12C2  00B7               	movwf	___awdiv@sign^(0+128)
  5722     12C3                     l3803:
  5723     12C3  1FB5               	btfss	(___awdiv@dividend+1)^(0+128),7
  5724     12C4  2ACC               	goto	l3809
  5725     12C5  09B4               	comf	___awdiv@dividend^(0+128),f
  5726     12C6  09B5               	comf	(___awdiv@dividend+1)^(0+128),f
  5727     12C7  0AB4               	incf	___awdiv@dividend^(0+128),f
  5728     12C8  1903               	skipnz
  5729     12C9  0AB5               	incf	(___awdiv@dividend+1)^(0+128),f
  5730     12CA  3001               	movlw	1
  5731     12CB  06B7               	xorwf	___awdiv@sign^(0+128),f
  5732     12CC                     l3809:
  5733     12CC  01B8               	clrf	___awdiv@quotient^(0+128)
  5734     12CD  01B9               	clrf	(___awdiv@quotient+1)^(0+128)
  5735     12CE  0832               	movf	___awdiv@divisor^(0+128),w
  5736     12CF  0433               	iorwf	(___awdiv@divisor+1)^(0+128),w
  5737     12D0  1903               	btfsc	3,2
  5738     12D1  2B01               	goto	l3831
  5739     12D2  3001               	movlw	1
  5740     12D3  00B6               	movwf	___awdiv@counter^(0+128)
  5741     12D4                     l3819:
  5742     12D4  1BB3               	btfsc	(___awdiv@divisor+1)^(0+128),7
  5743     12D5  2AE0               	goto	l3821
  5744     12D6  3001               	movlw	1
  5745     12D7                     u5095:
  5746     12D7  1003               	clrc
  5747     12D8  0DB2               	rlf	___awdiv@divisor^(0+128),f
  5748     12D9  0DB3               	rlf	(___awdiv@divisor+1)^(0+128),f
  5749     12DA  3EFF               	addlw	-1
  5750     12DB  1D03               	skipz
  5751     12DC  2AD7               	goto	u5095
  5752     12DD  3001               	movlw	1
  5753     12DE  07B6               	addwf	___awdiv@counter^(0+128),f
  5754     12DF  2AD4               	goto	l3819
  5755     12E0                     l3821:
  5756     12E0  3001               	movlw	1
  5757     12E1                     u5115:
  5758     12E1  1003               	clrc
  5759     12E2  0DB8               	rlf	___awdiv@quotient^(0+128),f
  5760     12E3  0DB9               	rlf	(___awdiv@quotient+1)^(0+128),f
  5761     12E4  3EFF               	addlw	-1
  5762     12E5  1D03               	skipz
  5763     12E6  2AE1               	goto	u5115
  5764     12E7  0833               	movf	(___awdiv@divisor+1)^(0+128),w
  5765     12E8  0235               	subwf	(___awdiv@dividend+1)^(0+128),w
  5766     12E9  1D03               	skipz
  5767     12EA  2AED               	goto	u5125
  5768     12EB  0832               	movf	___awdiv@divisor^(0+128),w
  5769     12EC  0234               	subwf	___awdiv@dividend^(0+128),w
  5770     12ED                     u5125:
  5771     12ED  1C03               	skipc
  5772     12EE  2AF6               	goto	l3827
  5773     12EF  0832               	movf	___awdiv@divisor^(0+128),w
  5774     12F0  02B4               	subwf	___awdiv@dividend^(0+128),f
  5775     12F1  0833               	movf	(___awdiv@divisor+1)^(0+128),w
  5776     12F2  1C03               	skipc
  5777     12F3  03B5               	decf	(___awdiv@dividend+1)^(0+128),f
  5778     12F4  02B5               	subwf	(___awdiv@dividend+1)^(0+128),f
  5779     12F5  1438               	bsf	___awdiv@quotient^(0+128),0
  5780     12F6                     l3827:
  5781     12F6  3001               	movlw	1
  5782     12F7                     u5135:
  5783     12F7  1003               	clrc
  5784     12F8  0CB3               	rrf	(___awdiv@divisor+1)^(0+128),f
  5785     12F9  0CB2               	rrf	___awdiv@divisor^(0+128),f
  5786     12FA  3EFF               	addlw	-1
  5787     12FB  1D03               	skipz
  5788     12FC  2AF7               	goto	u5135
  5789     12FD  3001               	movlw	1
  5790     12FE  02B6               	subwf	___awdiv@counter^(0+128),f
  5791     12FF  1D03               	btfss	3,2
  5792     1300  2AE0               	goto	l3821
  5793     1301                     l3831:
  5794     1301  0837               	movf	___awdiv@sign^(0+128),w
  5795     1302  1903               	btfsc	3,2
  5796     1303  2B09               	goto	l3835
  5797     1304  09B8               	comf	___awdiv@quotient^(0+128),f
  5798     1305  09B9               	comf	(___awdiv@quotient+1)^(0+128),f
  5799     1306  0AB8               	incf	___awdiv@quotient^(0+128),f
  5800     1307  1903               	skipnz
  5801     1308  0AB9               	incf	(___awdiv@quotient+1)^(0+128),f
  5802     1309                     l3835:
  5803     1309  0839               	movf	(___awdiv@quotient+1)^(0+128),w
  5804     130A  00B3               	movwf	(?___awdiv+1)^(0+128)
  5805     130B  0838               	movf	___awdiv@quotient^(0+128),w
  5806     130C  00B2               	movwf	?___awdiv^(0+128)
  5807     130D  0008               	return
  5808     130E                     __end_of___awdiv:
  5809                           
  5810                           	psect	text18
  5811     142E                     __ptext18:	
  5812 ;; *************** function _ctoa *****************
  5813 ;; Defined at:
  5814 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  fp              2   31[BANK1 ] PTR struct _IO_FILE
  5817 ;;		 -> sprintf@f(11), 
  5818 ;;  c               1   33[BANK1 ] unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  w               2   38[BANK1 ] int 
  5821 ;;  l               2   36[BANK1 ] int 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2   31[BANK1 ] int 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       0       3       0       0
  5832 ;;      Locals:         0       0       4       0       0
  5833 ;;      Temps:          0       0       2       0       0
  5834 ;;      Totals:         0       0       9       0       0
  5835 ;;Total ram usage:        9 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 11
  5838 ;; This function calls:
  5839 ;;		_fputc
  5840 ;; This function is called by:
  5841 ;;		_vfpfcnvrt
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     142E                     _ctoa:	
  5846                           ;psect for function _ctoa
  5847                           
  5848                           
  5849                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
  5850                           
  5851                           ;incstack = 0
  5852 ;; hardware stack exceeded
  5853                           ; Regs used in _ctoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5854     142E  1683               	bsf	3,5	;RP0=1, select bank1
  5855     142F  1303               	bcf	3,6	;RP1=0, select bank1
  5856     1430  0857               	movf	_width^(0+128),w
  5857     1431  0458               	iorwf	(_width+1)^(0+128),w
  5858     1432  1D03               	btfss	3,2
  5859     1433  2C39               	goto	l3955
  5860     1434  0858               	movf	(_width+1)^(0+128),w
  5861     1435  00C7               	movwf	(ctoa@w+1)^(0+128)
  5862     1436  0857               	movf	_width^(0+128),w
  5863     1437  00C6               	movwf	ctoa@w^(0+128)
  5864     1438  2C41               	goto	l3957
  5865     1439                     l3955:
  5866     1439  0857               	movf	_width^(0+128),w
  5867     143A  3EFF               	addlw	255
  5868     143B  00C6               	movwf	ctoa@w^(0+128)
  5869     143C  0858               	movf	(_width+1)^(0+128),w
  5870     143D  1803               	skipnc
  5871     143E  3E01               	addlw	1
  5872     143F  3EFF               	addlw	255
  5873     1440  00C7               	movwf	(ctoa@w+1)^(0+128)
  5874     1441                     l3957:
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  5877     1441  1C5D               	btfss	_flags^(0+128),0
  5878     1442  2C53               	goto	l3961
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  5881     1443  0841               	movf	ctoa@c^(0+128),w
  5882     1444  00C2               	movwf	??_ctoa^(0+128)
  5883     1445  01C3               	clrf	(??_ctoa^(0+128)+1)
  5884     1446  0842               	movf	??_ctoa^(0+128),w
  5885     1447  00B2               	movwf	fputc@c^(0+128)
  5886     1448  0843               	movf	(??_ctoa+1)^(0+128),w
  5887     1449  00B3               	movwf	(fputc@c+1)^(0+128)
  5888     144A  083F               	movf	ctoa@fp^(0+128),w
  5889     144B  00B4               	movwf	fputc@fp^(0+128)
  5890     144C  0840               	movf	(ctoa@fp+1)^(0+128),w
  5891     144D  00B5               	movwf	(fputc@fp+1)^(0+128)
  5892     144E  120A  158A  2008  160A  118A  	fcall	_fputc
  5893     1453                     l3961:
  5894                           
  5895                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  5896     1453  1683               	bsf	3,5	;RP0=1, select bank1
  5897     1454  1303               	bcf	3,6	;RP1=0, select bank1
  5898     1455  1FC7               	btfss	(ctoa@w+1)^(0+128),7
  5899     1456  2C59               	goto	l665
  5900     1457  01C6               	clrf	ctoa@w^(0+128)
  5901     1458  01C7               	clrf	(ctoa@w+1)^(0+128)
  5902     1459                     l665:
  5903                           
  5904                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  5905     1459  01C4               	clrf	ctoa@l^(0+128)
  5906     145A  01C5               	clrf	(ctoa@l+1)^(0+128)
  5907     145B                     l3971:	
  5908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  5909                           
  5910                           
  5911                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  5912     145B  0845               	movf	(ctoa@l+1)^(0+128),w
  5913     145C  3A80               	xorlw	128
  5914     145D  00C2               	movwf	??_ctoa^(0+128)
  5915     145E  0847               	movf	(ctoa@w+1)^(0+128),w
  5916     145F  3A80               	xorlw	128
  5917     1460  0242               	subwf	??_ctoa^(0+128),w
  5918     1461  1D03               	skipz
  5919     1462  2C65               	goto	u5465
  5920     1463  0846               	movf	ctoa@w^(0+128),w
  5921     1464  0244               	subwf	ctoa@l^(0+128),w
  5922     1465                     u5465:
  5923     1465  1803               	btfsc	3,0
  5924     1466  2C7F               	goto	l668
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  5927     1467  3020               	movlw	32
  5928     1468  1683               	bsf	3,5	;RP0=1, select bank1
  5929     1469  1303               	bcf	3,6	;RP1=0, select bank1
  5930     146A  00B2               	movwf	fputc@c^(0+128)
  5931     146B  3000               	movlw	0
  5932     146C  00B3               	movwf	(fputc@c^(0+128)+1)
  5933     146D  083F               	movf	ctoa@fp^(0+128),w
  5934     146E  00B4               	movwf	fputc@fp^(0+128)
  5935     146F  0840               	movf	(ctoa@fp+1)^(0+128),w
  5936     1470  00B5               	movwf	(fputc@fp+1)^(0+128)
  5937     1471  120A  158A  2008  160A  118A  	fcall	_fputc
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 495:         ++l;
  5940     1476  3001               	movlw	1
  5941     1477  1683               	bsf	3,5	;RP0=1, select bank1
  5942     1478  1303               	bcf	3,6	;RP1=0, select bank1
  5943     1479  07C4               	addwf	ctoa@l^(0+128),f
  5944     147A  1803               	skipnc
  5945     147B  0AC5               	incf	(ctoa@l+1)^(0+128),f
  5946     147C  3000               	movlw	0
  5947     147D  07C5               	addwf	(ctoa@l+1)^(0+128),f
  5948     147E  2C5B               	goto	l3971
  5949     147F                     l668:
  5950                           
  5951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  5952     147F  1683               	bsf	3,5	;RP0=1, select bank1
  5953     1480  1303               	bcf	3,6	;RP1=0, select bank1
  5954     1481  185D               	btfsc	_flags^(0+128),0
  5955     1482  2C91               	goto	l3975
  5956                           
  5957                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
  5958     1483  0841               	movf	ctoa@c^(0+128),w
  5959     1484  00C2               	movwf	??_ctoa^(0+128)
  5960     1485  01C3               	clrf	(??_ctoa^(0+128)+1)
  5961     1486  0842               	movf	??_ctoa^(0+128),w
  5962     1487  00B2               	movwf	fputc@c^(0+128)
  5963     1488  0843               	movf	(??_ctoa+1)^(0+128),w
  5964     1489  00B3               	movwf	(fputc@c+1)^(0+128)
  5965     148A  083F               	movf	ctoa@fp^(0+128),w
  5966     148B  00B4               	movwf	fputc@fp^(0+128)
  5967     148C  0840               	movf	(ctoa@fp+1)^(0+128),w
  5968     148D  00B5               	movwf	(fputc@fp+1)^(0+128)
  5969     148E  120A  158A  2008   	fcall	_fputc
  5970     1491                     l3975:
  5971                           
  5972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
  5973     1491  1683               	bsf	3,5	;RP0=1, select bank1
  5974     1492  1303               	bcf	3,6	;RP1=0, select bank1
  5975     1493  0844               	movf	ctoa@l^(0+128),w
  5976     1494  3E01               	addlw	1
  5977     1495  00BF               	movwf	?_ctoa^(0+128)
  5978     1496  0845               	movf	(ctoa@l+1)^(0+128),w
  5979     1497  1803               	skipnc
  5980     1498  3E01               	addlw	1
  5981     1499  3E00               	addlw	0
  5982     149A  00C0               	movwf	(?_ctoa+1)^(0+128)
  5983     149B  0008               	return
  5984     149C                     __end_of_ctoa:
  5985                           
  5986                           	psect	text19
  5987     0808                     __ptext19:	
  5988 ;; *************** function _fputc *****************
  5989 ;; Defined at:
  5990 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  c               2   18[BANK1 ] int 
  5993 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
  5994 ;;		 -> sprintf@f(11), 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2   18[BANK1 ] int 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6006 ;;      Params:         0       0       4       0       0
  6007 ;;      Locals:         0       0       0       0       0
  6008 ;;      Temps:          0       0       9       0       0
  6009 ;;      Totals:         0       0      13       0       0
  6010 ;;Total ram usage:       13 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 10
  6013 ;; This function calls:
  6014 ;;		_putch
  6015 ;; This function is called by:
  6016 ;;		_pad
  6017 ;;		_ctoa
  6018 ;;		_vfpfcnvrt
  6019 ;;		_fputs
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023     0808                     _fputc:	
  6024                           ;psect for function _fputc
  6025                           
  6026                           
  6027                           ;incstack = 0
  6028 ;; hardware stack exceeded
  6029                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6030     0808  1683               	bsf	3,5	;RP0=1, select bank1
  6031     0809  1303               	bcf	3,6	;RP1=0, select bank1
  6032     080A  0834               	movf	fputc@fp^(0+128),w
  6033     080B  0435               	iorwf	(fputc@fp+1)^(0+128),w
  6034     080C  1903               	btfsc	3,2
  6035     080D  2812               	goto	l3767
  6036     080E  0834               	movf	fputc@fp^(0+128),w
  6037     080F  0435               	iorwf	(fputc@fp+1)^(0+128),w
  6038     0810  1D03               	btfss	3,2
  6039     0811  2817               	goto	l3769
  6040     0812                     l3767:
  6041     0812  0832               	movf	fputc@c^(0+128),w
  6042     0813  120A  118A  27FB   	fcall	_putch
  6043     0816  0008               	return
  6044     0817                     l3769:
  6045     0817  0834               	movf	fputc@fp^(0+128),w
  6046     0818  3E09               	addlw	9
  6047     0819  00B6               	movwf	??_fputc^(0+128)
  6048     081A  0835               	movf	(fputc@fp+1)^(0+128),w
  6049     081B  1803               	skipnc
  6050     081C  3E01               	addlw	1
  6051     081D  3E00               	addlw	0
  6052     081E  00B7               	movwf	(??_fputc+1)^(0+128)
  6053     081F  0836               	movf	??_fputc^(0+128),w
  6054     0820  0084               	movwf	4
  6055     0821  1783               	bsf	3,7
  6056     0822  1C37               	btfss	(??_fputc+1)^(0+128),0
  6057     0823  1383               	bcf	3,7
  6058     0824  0800               	movf	0,w
  6059     0825  00B8               	movwf	(??_fputc+2)^(0+128)
  6060     0826  0A84               	incf	4,f
  6061     0827  0800               	movf	0,w
  6062     0828  00B9               	movwf	((??_fputc+2)^(0+128)+1)
  6063     0829  0838               	movf	(??_fputc+2)^(0+128),w
  6064     082A  0439               	iorwf	((??_fputc+2)^(0+128)+1),w
  6065     082B  1903               	btfsc	3,2
  6066     082C  285D               	goto	l3773
  6067     082D  0834               	movf	fputc@fp^(0+128),w
  6068     082E  3E09               	addlw	9
  6069     082F  00B6               	movwf	??_fputc^(0+128)
  6070     0830  0835               	movf	(fputc@fp+1)^(0+128),w
  6071     0831  1803               	skipnc
  6072     0832  3E01               	addlw	1
  6073     0833  3E00               	addlw	0
  6074     0834  00B7               	movwf	(??_fputc+1)^(0+128)
  6075     0835  0836               	movf	??_fputc^(0+128),w
  6076     0836  0084               	movwf	4
  6077     0837  1783               	bsf	3,7
  6078     0838  1C37               	btfss	(??_fputc+1)^(0+128),0
  6079     0839  1383               	bcf	3,7
  6080     083A  0800               	movf	0,w
  6081     083B  00B8               	movwf	(??_fputc+2)^(0+128)
  6082     083C  0A84               	incf	4,f
  6083     083D  0800               	movf	0,w
  6084     083E  00B9               	movwf	((??_fputc+2)^(0+128)+1)
  6085     083F  0834               	movf	fputc@fp^(0+128),w
  6086     0840  3E02               	addlw	2
  6087     0841  00BA               	movwf	(??_fputc+4)^(0+128)
  6088     0842  0835               	movf	(fputc@fp+1)^(0+128),w
  6089     0843  1803               	skipnc
  6090     0844  3E01               	addlw	1
  6091     0845  3E00               	addlw	0
  6092     0846  00BB               	movwf	(??_fputc+5)^(0+128)
  6093     0847  083A               	movf	(??_fputc+4)^(0+128),w
  6094     0848  0084               	movwf	4
  6095     0849  1783               	bsf	3,7
  6096     084A  1C3B               	btfss	(??_fputc+5)^(0+128),0
  6097     084B  1383               	bcf	3,7
  6098     084C  0800               	movf	0,w
  6099     084D  00BC               	movwf	(??_fputc+6)^(0+128)
  6100     084E  0A84               	incf	4,f
  6101     084F  0800               	movf	0,w
  6102     0850  00BD               	movwf	((??_fputc+6)^(0+128)+1)
  6103     0851  083D               	movf	(??_fputc+7)^(0+128),w
  6104     0852  3A80               	xorlw	128
  6105     0853  00BE               	movwf	(??_fputc+8)^(0+128)
  6106     0854  0839               	movf	(??_fputc+3)^(0+128),w
  6107     0855  3A80               	xorlw	128
  6108     0856  023E               	subwf	(??_fputc+8)^(0+128),w
  6109     0857  1D03               	skipz
  6110     0858  285B               	goto	u5025
  6111     0859  0838               	movf	(??_fputc+2)^(0+128),w
  6112     085A  023C               	subwf	(??_fputc+6)^(0+128),w
  6113     085B                     u5025:
  6114     085B  1803               	skipnc
  6115     085C  0008               	return
  6116     085D                     l3773:
  6117     085D  1683               	bsf	3,5	;RP0=1, select bank1
  6118     085E  1303               	bcf	3,6	;RP1=0, select bank1
  6119     085F  0834               	movf	fputc@fp^(0+128),w
  6120     0860  0084               	movwf	4
  6121     0861  1783               	bsf	3,7
  6122     0862  1C35               	btfss	(fputc@fp+1)^(0+128),0
  6123     0863  1383               	bcf	3,7
  6124     0864  0800               	movf	0,w
  6125     0865  00B6               	movwf	??_fputc^(0+128)
  6126     0866  0A84               	incf	4,f
  6127     0867  0800               	movf	0,w
  6128     0868  00B7               	movwf	(??_fputc^(0+128)+1)
  6129     0869  0834               	movf	fputc@fp^(0+128),w
  6130     086A  3E02               	addlw	2
  6131     086B  00B8               	movwf	(??_fputc+2)^(0+128)
  6132     086C  0835               	movf	(fputc@fp+1)^(0+128),w
  6133     086D  1803               	skipnc
  6134     086E  3E01               	addlw	1
  6135     086F  3E00               	addlw	0
  6136     0870  00B9               	movwf	(??_fputc+3)^(0+128)
  6137     0871  0838               	movf	(??_fputc+2)^(0+128),w
  6138     0872  0084               	movwf	4
  6139     0873  1783               	bsf	3,7
  6140     0874  1C39               	btfss	(??_fputc+3)^(0+128),0
  6141     0875  1383               	bcf	3,7
  6142     0876  0800               	movf	0,w
  6143     0877  0736               	addwf	??_fputc^(0+128),w
  6144     0878  00BB               	movwf	(??_fputc+5)^(0+128)
  6145     0879  0837               	movf	(??_fputc+1)^(0+128),w
  6146     087A  00BA               	movwf	(??_fputc+4)^(0+128)
  6147     087B  1803               	skipnc
  6148     087C  0ABA               	incf	(??_fputc+4)^(0+128),f
  6149     087D  1B80               	btfsc	0,7
  6150     087E  03BA               	decf	(??_fputc+4)^(0+128),f
  6151     087F  1683               	bsf	3,5	;RP0=1, select bank1
  6152     0880  1303               	bcf	3,6	;RP1=0, select bank1
  6153     0881  083A               	movf	(??_fputc+4)^(0+128),w
  6154     0882  00BC               	movwf	((??_fputc+5)^(0+128)+1)
  6155     0883  083B               	movf	(??_fputc+5)^(0+128),w
  6156     0884  0084               	movwf	4
  6157     0885  1783               	bsf	3,7
  6158     0886  1C3C               	btfss	(??_fputc+6)^(0+128),0
  6159     0887  1383               	bcf	3,7
  6160     0888  0832               	movf	fputc@c^(0+128),w
  6161     0889  0080               	movwf	0
  6162     088A  0834               	movf	fputc@fp^(0+128),w
  6163     088B  3E02               	addlw	2
  6164     088C  00B6               	movwf	??_fputc^(0+128)
  6165     088D  0835               	movf	(fputc@fp+1)^(0+128),w
  6166     088E  1803               	skipnc
  6167     088F  3E01               	addlw	1
  6168     0890  3E00               	addlw	0
  6169     0891  00B7               	movwf	(??_fputc+1)^(0+128)
  6170     0892  0836               	movf	??_fputc^(0+128),w
  6171     0893  0084               	movwf	4
  6172     0894  1783               	bsf	3,7
  6173     0895  1C37               	btfss	(??_fputc+1)^(0+128),0
  6174     0896  1383               	bcf	3,7
  6175     0897  3001               	movlw	1
  6176     0898  0780               	addwf	0,f
  6177     0899  0A84               	incf	4,f
  6178     089A  1803               	skipnc
  6179     089B  0A80               	incf	0,f
  6180     089C  0008               	return
  6181     089D                     __end_of_fputc:
  6182                           
  6183                           	psect	text20
  6184     07FB                     __ptext20:	
  6185 ;; *************** function _putch *****************
  6186 ;; Defined at:
  6187 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  c               1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  c               1    0[COMMON] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6201 ;;      Params:         0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         0       0       0       0       0
  6205 ;;Total ram usage:        0 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; Hardware stack levels required when called: 9
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_fputc
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215     07FB                     _putch:	
  6216                           ;psect for function _putch
  6217                           
  6218                           
  6219                           ;incstack = 0
  6220 ;; hardware stack exceeded
  6221                           ; Regs used in _putch: [wreg]
  6222     07FB  0008               	return
  6223     07FC                     __end_of_putch:
  6224                           
  6225                           	psect	text21
  6226     1FD4                     __ptext21:	
  6227 ;; *************** function _display *****************
  6228 ;; Defined at:
  6229 ;;		line 106 in file "newmain.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  RS              2   18[BANK1 ] int 
  6232 ;;  DC              2   20[BANK1 ] int 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      void 
  6237 ;; Registers used:
  6238 ;;		wreg
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6244 ;;      Params:         0       0       4       0       0
  6245 ;;      Locals:         0       0       0       0       0
  6246 ;;      Temps:          0       0       2       0       0
  6247 ;;      Totals:         0       0       6       0       0
  6248 ;;Total ram usage:        6 bytes
  6249 ;; Hardware stack levels used: 1
  6250 ;; Hardware stack levels required when called: 9
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_main
  6255 ;;		_display_string
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259     1FD4                     _display:	
  6260                           ;psect for function _display
  6261                           
  6262                           
  6263                           ;newmain.c: 106: void display(int RS, int DC);newmain.c: 107: {;newmain.c: 108:     RD0=
      +                          RS;
  6264                           
  6265                           ;incstack = 0
  6266 ;; hardware stack exceeded
  6267                           ; Regs used in _display: [wreg]
  6268     1FD4  1683               	bsf	3,5	;RP0=1, select bank1
  6269     1FD5  1303               	bcf	3,6	;RP1=0, select bank1
  6270     1FD6  1C32               	btfss	display@RS^(0+128),0
  6271     1FD7  2FDC               	goto	u4860
  6272     1FD8  1283               	bcf	3,5	;RP0=0, select bank0
  6273     1FD9  1303               	bcf	3,6	;RP1=0, select bank0
  6274     1FDA  1408               	bsf	8,0	;volatile
  6275     1FDB  2FDF               	goto	l3639
  6276     1FDC                     u4860:
  6277     1FDC  1283               	bcf	3,5	;RP0=0, select bank0
  6278     1FDD  1303               	bcf	3,6	;RP1=0, select bank0
  6279     1FDE  1008               	bcf	8,0	;volatile
  6280     1FDF                     l3639:
  6281                           
  6282                           ;newmain.c: 109:     PORTC=DC;
  6283     1FDF  1683               	bsf	3,5	;RP0=1, select bank1
  6284     1FE0  1303               	bcf	3,6	;RP1=0, select bank1
  6285     1FE1  0834               	movf	display@DC^(0+128),w
  6286     1FE2  1283               	bcf	3,5	;RP0=0, select bank0
  6287     1FE3  1303               	bcf	3,6	;RP1=0, select bank0
  6288     1FE4  0087               	movwf	7	;volatile
  6289                           
  6290                           ;newmain.c: 110:     RD1=1;
  6291     1FE5  1488               	bsf	8,1	;volatile
  6292                           
  6293                           ;newmain.c: 111:     _delay((unsigned long)((10)*(10000000/4000.0)));
  6294     1FE6  3021               	movlw	33
  6295     1FE7  1683               	bsf	3,5	;RP0=1, select bank1
  6296     1FE8  1303               	bcf	3,6	;RP1=0, select bank1
  6297     1FE9  00B7               	movwf	(??_display^(0+128)+1)
  6298     1FEA  3075               	movlw	117
  6299     1FEB  00B6               	movwf	??_display^(0+128)
  6300     1FEC                     u6227:
  6301     1FEC  0BB6               	decfsz	??_display^(0+128),f
  6302     1FED  2FEC               	goto	u6227
  6303     1FEE  0BB7               	decfsz	(??_display^(0+128)+1),f
  6304     1FEF  2FEC               	goto	u6227
  6305     1FF0  2FF1               	nop2
  6306                           
  6307                           ;newmain.c: 112:     RD1=0;
  6308     1FF1  1283               	bcf	3,5	;RP0=0, select bank0
  6309     1FF2  1303               	bcf	3,6	;RP1=0, select bank0
  6310     1FF3  1088               	bcf	8,1	;volatile
  6311                           
  6312                           ;newmain.c: 113:     _delay((unsigned long)((10)*(10000000/4000.0)));
  6313     1FF4  3021               	movlw	33
  6314     1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  6315     1FF6  1303               	bcf	3,6	;RP1=0, select bank1
  6316     1FF7  00B7               	movwf	(??_display^(0+128)+1)
  6317     1FF8  3075               	movlw	117
  6318     1FF9  00B6               	movwf	??_display^(0+128)
  6319     1FFA                     u6237:
  6320     1FFA  0BB6               	decfsz	??_display^(0+128),f
  6321     1FFB  2FFA               	goto	u6237
  6322     1FFC  0BB7               	decfsz	(??_display^(0+128)+1),f
  6323     1FFD  2FFA               	goto	u6237
  6324     1FFE  2FFF               	nop2
  6325     1FFF  0008               	return
  6326     2000                     __end_of_display:
  6327                           
  6328                           	psect	text22
  6329     13CA                     __ptext22:	
  6330 ;; *************** function _ISR *****************
  6331 ;; Defined at:
  6332 ;;		line 115 in file "newmain.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  i               2   16[BANK1 ] int 
  6337 ;;  c              10    6[BANK1 ] unsigned char [10]
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6347 ;;      Params:         0       0       0       0       0
  6348 ;;      Locals:         0       0      12       0       0
  6349 ;;      Temps:          0       0       6       0       0
  6350 ;;      Totals:         0       0      18       0       0
  6351 ;;Total ram usage:       18 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 8
  6354 ;; This function calls:
  6355 ;;		i1_display
  6356 ;;		i1_sprintf
  6357 ;; This function is called by:
  6358 ;;		Interrupt level 1
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362     13CA                     _ISR:	
  6363                           ;psect for function _ISR
  6364                           
  6365                           
  6366                           ;newmain.c: 118:     if(INTF ==1)
  6367     13CA  1C8B               	btfss	11,1	;volatile
  6368     13CB  2C23               	goto	i1l76
  6369                           
  6370                           ;newmain.c: 119:     {;newmain.c: 120:         char c[10];;newmain.c: 121:         count
      +                           =count+1;
  6371     13CC  085B               	movf	_count^(0+128),w
  6372     13CD  3E01               	addlw	1
  6373     13CE  00DB               	movwf	_count^(0+128)
  6374     13CF  085C               	movf	(_count+1)^(0+128),w
  6375     13D0  1803               	skipnc
  6376     13D1  3E01               	addlw	1
  6377     13D2  3E00               	addlw	0
  6378     13D3  00DC               	movwf	(_count+1)^(0+128)
  6379                           
  6380                           ;newmain.c: 122:         sprintf(c,'%04d',count);
  6381     13D4  30A6               	movlw	(low (ISR@c| 0))& (0+255)
  6382     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  6383     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  6384     13D7  00D8               	movwf	i1sprintf@s
  6385     13D8  3000               	movlw	0
  6386     13D9  00D9               	movwf	i1sprintf@s+1
  6387     13DA  3064               	movlw	100
  6388     13DB  00DA               	movwf	i1sprintf@fmt
  6389     13DC  30B4               	movlw	180
  6390     13DD  00DB               	movwf	i1sprintf@fmt+1
  6391     13DE  1683               	bsf	3,5	;RP0=1, select bank1
  6392     13DF  1303               	bcf	3,6	;RP1=0, select bank1
  6393     13E0  085C               	movf	(_count+1)^(0+128),w
  6394     13E1  1283               	bcf	3,5	;RP0=0, select bank0
  6395     13E2  1303               	bcf	3,6	;RP1=0, select bank0
  6396     13E3  00DD               	movwf	?i1_sprintf+5
  6397     13E4  1683               	bsf	3,5	;RP0=1, select bank1
  6398     13E5  1303               	bcf	3,6	;RP1=0, select bank1
  6399     13E6  085B               	movf	_count^(0+128),w
  6400     13E7  1283               	bcf	3,5	;RP0=0, select bank0
  6401     13E8  1303               	bcf	3,6	;RP1=0, select bank0
  6402     13E9  00DC               	movwf	?i1_sprintf+4
  6403     13EA  160A  118A  20A9  160A  118A  	fcall	i1_sprintf
  6404                           
  6405                           ;newmain.c: 123:         display(0, 0xc9);
  6406     13EF  3000               	movlw	0
  6407     13F0  00F0               	movwf	i1display@RS
  6408     13F1  00F1               	movwf	i1display@RS+1
  6409     13F2  30C9               	movlw	201
  6410     13F3  00F2               	movwf	i1display@DC
  6411     13F4  3000               	movlw	0
  6412     13F5  00F3               	movwf	i1display@DC+1
  6413     13F6  160A  158A  273F  160A  118A  	fcall	i1_display
  6414                           
  6415                           ;newmain.c: 124:         for(int i=0;c[i]!='\0';i++)
  6416     13FB  1683               	bsf	3,5	;RP0=1, select bank1
  6417     13FC  1303               	bcf	3,6	;RP1=0, select bank1
  6418     13FD  01B0               	clrf	ISR@i^(0+128)
  6419     13FE  01B1               	clrf	(ISR@i+1)^(0+128)
  6420     13FF                     i1l4479:
  6421     13FF  0830               	movf	ISR@i^(0+128),w
  6422     1400  3EA6               	addlw	(low (ISR@c| 0))& (0+255)
  6423     1401  0084               	movwf	4
  6424     1402  1383               	bcf	3,7	;select IRP bank1
  6425     1403  0800               	movf	0,w
  6426     1404  1903               	btfsc	3,2
  6427     1405  2C22               	goto	i1l75
  6428                           
  6429                           ;newmain.c: 125:         {;newmain.c: 126:             display(1, c[i]);
  6430     1406  3001               	movlw	1
  6431     1407  00F0               	movwf	i1display@RS
  6432     1408  3000               	movlw	0
  6433     1409  00F1               	movwf	i1display@RS+1
  6434     140A  0830               	movf	ISR@i^(0+128),w
  6435     140B  3EA6               	addlw	(low (ISR@c| 0))& (0+255)
  6436     140C  0084               	movwf	4
  6437     140D  0800               	movf	0,w
  6438     140E  00A0               	movwf	??_ISR^(0+128)
  6439     140F  01A1               	clrf	(??_ISR^(0+128)+1)
  6440     1410  0820               	movf	??_ISR^(0+128),w
  6441     1411  00F2               	movwf	i1display@DC
  6442     1412  0821               	movf	(??_ISR+1)^(0+128),w
  6443     1413  00F3               	movwf	i1display@DC+1
  6444     1414  160A  158A  273F  160A  118A  	fcall	i1_display
  6445                           
  6446                           ;newmain.c: 128:         }
  6447     1419  3001               	movlw	1
  6448     141A  1683               	bsf	3,5	;RP0=1, select bank1
  6449     141B  1303               	bcf	3,6	;RP1=0, select bank1
  6450     141C  07B0               	addwf	ISR@i^(0+128),f
  6451     141D  1803               	skipnc
  6452     141E  0AB1               	incf	(ISR@i+1)^(0+128),f
  6453     141F  3000               	movlw	0
  6454     1420  07B1               	addwf	(ISR@i+1)^(0+128),f
  6455     1421  2BFF               	goto	i1l4479
  6456     1422                     i1l75:
  6457                           
  6458                           ;newmain.c: 129:         INTF =0;
  6459     1422  108B               	bcf	11,1	;volatile
  6460     1423                     i1l76:
  6461     1423  0825               	movf	(??_ISR+5)^(0+128),w
  6462     1424  00FF               	movwf	127
  6463     1425  0824               	movf	(??_ISR+4)^(0+128),w
  6464     1426  008A               	movwf	10
  6465     1427  0823               	movf	(??_ISR+3)^(0+128),w
  6466     1428  0084               	movwf	4
  6467     1429  0E22               	swapf	(??_ISR+2)^(0+128),w
  6468     142A  0083               	movwf	3
  6469     142B  0EFE               	swapf	126,f
  6470     142C  0E7E               	swapf	126,w
  6471     142D  0009               	retfie
  6472     142E                     __end_of_ISR:
  6473                           
  6474                           	psect	intentry
  6475     0004                     __pintentry:	
  6476                           ;incstack = 0
  6477 ;; hardware stack exceeded
  6478                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6479                           
  6480     0004                     interrupt_function:
  6481     007E                     saved_w         set	btemp
  6482     0004  00FE               	movwf	btemp
  6483     0005  0E03               	swapf	3,w
  6484     0006  1683               	bsf	3,5	;RP0=1, select bank1
  6485     0007  1303               	bcf	3,6	;RP1=0, select bank1
  6486     0008  00A2               	movwf	(??_ISR+2)^(0+128)
  6487     0009  0804               	movf	4,w
  6488     000A  00A3               	movwf	(??_ISR+3)^(0+128)
  6489     000B  080A               	movf	10,w
  6490     000C  00A4               	movwf	(??_ISR+4)^(0+128)
  6491     000D  087F               	movf	btemp+1,w
  6492     000E  00A5               	movwf	(??_ISR+5)^(0+128)
  6493     000F  160A  118A  2BCA   	ljmp	_ISR
  6494                           
  6495                           	psect	text23
  6496     10A9                     __ptext23:	
  6497 ;; *************** function i1_sprintf *****************
  6498 ;; Defined at:
  6499 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  s               2   56[BANK0 ] PTR unsigned char 
  6502 ;;		 -> ISR@c(10), main@b(10), main@a(10), 
  6503 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  6504 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  f              11   65[BANK0 ] struct _IO_FILE
  6507 ;;  ap              2   76[BANK0 ] PTR void [1]
  6508 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6509 ;;  ret             2    0        int 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  2   56[BANK0 ] int 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6519 ;;      Params:         0       6       0       0       0
  6520 ;;      Locals:         0      13       0       0       0
  6521 ;;      Temps:          0       3       0       0       0
  6522 ;;      Totals:         0      22       0       0       0
  6523 ;;Total ram usage:       22 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 7
  6526 ;; This function calls:
  6527 ;;		i1_vfprintf
  6528 ;; This function is called by:
  6529 ;;		_ISR
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533     10A9                     i1_sprintf:	
  6534                           ;psect for function i1_sprintf
  6535                           
  6536                           
  6537                           ;incstack = 0
  6538 ;; hardware stack exceeded
  6539                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6540     10A9  305C               	movlw	(low ((?i1_sprintf| 0+4)))& (0+255)
  6541     10AA  1283               	bcf	3,5	;RP0=0, select bank0
  6542     10AB  1303               	bcf	3,6	;RP1=0, select bank0
  6543     10AC  00EC               	movwf	i1sprintf@ap
  6544     10AD  3000               	movlw	0
  6545     10AE  00ED               	movwf	i1sprintf@ap+1
  6546     10AF  0858               	movf	i1sprintf@s,w
  6547     10B0  00E1               	movwf	i1sprintf@f
  6548     10B1  0859               	movf	i1sprintf@s+1,w
  6549     10B2  00E2               	movwf	i1sprintf@f+1
  6550     10B3  01E3               	clrf	i1sprintf@f+2
  6551     10B4  01E4               	clrf	i1sprintf@f+3
  6552     10B5  01EA               	clrf	i1sprintf@f+9
  6553     10B6  01EB               	clrf	i1sprintf@f+10
  6554     10B7  3061               	movlw	low i1sprintf@f
  6555     10B8  00D0               	movwf	i1vfprintf@fp
  6556     10B9  3000               	movlw	high i1sprintf@f
  6557     10BA  00D1               	movwf	i1vfprintf@fp+1
  6558     10BB  085A               	movf	i1sprintf@fmt,w
  6559     10BC  00D2               	movwf	i1vfprintf@fmt
  6560     10BD  085B               	movf	i1sprintf@fmt+1,w
  6561     10BE  00D3               	movwf	i1vfprintf@fmt+1
  6562     10BF  306C               	movlw	(low (i1sprintf@ap| 0))& (0+255)
  6563     10C0  00D4               	movwf	i1vfprintf@ap
  6564     10C1  3000               	movlw	0
  6565     10C2  00D5               	movwf	i1vfprintf@ap+1
  6566     10C3  160A  118A  20DC   	fcall	i1_vfprintf
  6567     10C6  1283               	bcf	3,5	;RP0=0, select bank0
  6568     10C7  1303               	bcf	3,6	;RP1=0, select bank0
  6569     10C8  0863               	movf	i1sprintf@f+2,w
  6570     10C9  0758               	addwf	i1sprintf@s,w
  6571     10CA  00DF               	movwf	??i1_sprintf+1
  6572     10CB  0859               	movf	i1sprintf@s+1,w
  6573     10CC  00DE               	movwf	??i1_sprintf
  6574     10CD  1803               	skipnc
  6575     10CE  0ADE               	incf	??i1_sprintf,f
  6576     10CF  1BE3               	btfsc	i1sprintf@f+2,7
  6577     10D0  03DE               	decf	??i1_sprintf,f
  6578     10D1  1283               	bcf	3,5	;RP0=0, select bank0
  6579     10D2  1303               	bcf	3,6	;RP1=0, select bank0
  6580     10D3  085E               	movf	??i1_sprintf,w
  6581     10D4  00E0               	movwf	??i1_sprintf+2
  6582     10D5  085F               	movf	??i1_sprintf+1,w
  6583     10D6  0084               	movwf	4
  6584     10D7  1783               	bsf	3,7
  6585     10D8  1C60               	btfss	??i1_sprintf+2,0
  6586     10D9  1383               	bcf	3,7
  6587     10DA  0180               	clrf	0
  6588     10DB  0008               	return
  6589     10DC                     __end_ofi1_sprintf:
  6590                           
  6591                           	psect	text24
  6592     10DC                     __ptext24:	
  6593 ;; *************** function i1_vfprintf *****************
  6594 ;; Defined at:
  6595 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  6598 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  6599 ;;  fmt             2   50[BANK0 ] PTR const unsigned char 
  6600 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6601 ;;  ap              2   52[BANK0 ] PTR PTR void 
  6602 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  cfmt            2   54[BANK0 ] PTR unsigned char 
  6605 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2   48[BANK0 ] int 
  6608 ;; Registers used:
  6609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6615 ;;      Params:         0       6       0       0       0
  6616 ;;      Locals:         0       2       0       0       0
  6617 ;;      Temps:          0       0       0       0       0
  6618 ;;      Totals:         0       8       0       0       0
  6619 ;;Total ram usage:        8 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; Hardware stack levels required when called: 6
  6622 ;; This function calls:
  6623 ;;		i1_vfpfcnvrt
  6624 ;; This function is called by:
  6625 ;;		i1_sprintf
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629     10DC                     i1_vfprintf:	
  6630                           ;psect for function i1_vfprintf
  6631                           
  6632                           
  6633                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6634                           
  6635                           ;incstack = 0
  6636 ;; hardware stack exceeded
  6637                           ; Regs used in i1_vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6638     10DC  1283               	bcf	3,5	;RP0=0, select bank0
  6639     10DD  1303               	bcf	3,6	;RP1=0, select bank0
  6640     10DE  0852               	movf	i1vfprintf@fmt,w
  6641     10DF  00D6               	movwf	i1vfprintf@cfmt
  6642     10E0  0853               	movf	i1vfprintf@fmt+1,w
  6643     10E1  00D7               	movwf	i1vfprintf@cfmt+1
  6644                           
  6645                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  6646     10E2  1683               	bsf	3,5	;RP0=1, select bank3
  6647     10E3  1703               	bsf	3,6	;RP1=1, select bank3
  6648     10E4  01E7               	clrf	_nout^(0+384)
  6649     10E5  01E8               	clrf	(_nout+1)^(0+384)
  6650     10E6                     i1l3631:	
  6651                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6652                           
  6653                           
  6654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6655     10E6  1283               	bcf	3,5	;RP0=0, select bank0
  6656     10E7  1303               	bcf	3,6	;RP1=0, select bank0
  6657     10E8  0857               	movf	i1vfprintf@cfmt+1,w
  6658     10E9  00FF               	movwf	127
  6659     10EA  0856               	movf	i1vfprintf@cfmt,w
  6660     10EB  0084               	movwf	4
  6661     10EC  160A  118A  2000  160A  118A  	fcall	stringtab
  6662     10F1  3A00               	xorlw	0
  6663     10F2  1903               	btfsc	3,2
  6664     10F3  2912               	goto	i1l3633
  6665                           
  6666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  6667     10F4  0850               	movf	i1vfprintf@fp,w
  6668     10F5  00BF               	movwf	i1vfpfcnvrt@fp
  6669     10F6  0851               	movf	i1vfprintf@fp+1,w
  6670     10F7  00C0               	movwf	i1vfpfcnvrt@fp+1
  6671     10F8  3056               	movlw	(low (i1vfprintf@cfmt| 0))& (0+255)
  6672     10F9  00C1               	movwf	i1vfpfcnvrt@fmt
  6673     10FA  0854               	movf	i1vfprintf@ap,w
  6674     10FB  00C2               	movwf	i1vfpfcnvrt@ap
  6675     10FC  0855               	movf	i1vfprintf@ap+1,w
  6676     10FD  00C3               	movwf	i1vfpfcnvrt@ap+1
  6677     10FE  120A  158A  2451  160A  118A  	fcall	i1_vfpfcnvrt
  6678     1103  1283               	bcf	3,5	;RP0=0, select bank0
  6679     1104  1303               	bcf	3,6	;RP1=0, select bank0
  6680     1105  083F               	movf	?i1_vfpfcnvrt,w
  6681     1106  1683               	bsf	3,5	;RP0=1, select bank3
  6682     1107  1703               	bsf	3,6	;RP1=1, select bank3
  6683     1108  07E7               	addwf	_nout^(0+384),f
  6684     1109  1803               	skipnc
  6685     110A  0AE8               	incf	(_nout+1)^(0+384),f
  6686     110B  1283               	bcf	3,5	;RP0=0, select bank0
  6687     110C  1303               	bcf	3,6	;RP1=0, select bank0
  6688     110D  0840               	movf	?i1_vfpfcnvrt+1,w
  6689     110E  1683               	bsf	3,5	;RP0=1, select bank3
  6690     110F  1703               	bsf	3,6	;RP1=1, select bank3
  6691     1110  07E8               	addwf	(_nout+1)^(0+384),f
  6692     1111  28E6               	goto	i1l3631
  6693     1112                     i1l3633:
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6696     1112  01D0               	clrf	?i1_vfprintf
  6697     1113  01D1               	clrf	?i1_vfprintf+1
  6698     1114  0008               	return
  6699     1115                     __end_ofi1_vfprintf:
  6700                           
  6701                           	psect	text25
  6702     0C51                     __ptext25:	
  6703 ;; *************** function i1_vfpfcnvrt *****************
  6704 ;; Defined at:
  6705 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  6708 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  6709 ;;  fmt             1   33[BANK0 ] PTR PTR unsigned char 
  6710 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6711 ;;  ap              2   34[BANK0 ] PTR PTR void 
  6712 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  convarg         4   41[BANK0 ] struct .
  6715 ;;  cp              2   46[BANK0 ] PTR unsigned char 
  6716 ;;		 -> ROM(8192), STR_2(5), STR_1(5), 
  6717 ;;  c               1   45[BANK0 ] unsigned char 
  6718 ;;  done            1   40[BANK0 ] _Bool 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  2   31[BANK0 ] int 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6728 ;;      Params:         0       5       0       0       0
  6729 ;;      Locals:         0       8       0       0       0
  6730 ;;      Temps:          0       4       0       0       0
  6731 ;;      Totals:         0      17       0       0       0
  6732 ;;Total ram usage:       17 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 5
  6735 ;; This function calls:
  6736 ;;		i1_ctoa
  6737 ;;		i1_dtoa
  6738 ;;		i1_fputc
  6739 ;;		i1_otoa
  6740 ;;		i1_read_prec_or_width
  6741 ;;		i1_utoa
  6742 ;;		i1_xtoa
  6743 ;; This function is called by:
  6744 ;;		i1_vfprintf
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748     0C51                     i1_vfpfcnvrt:	
  6749                           ;psect for function i1_vfpfcnvrt
  6750                           
  6751                           
  6752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6753                           
  6754                           ;incstack = 0
  6755 ;; hardware stack exceeded
  6756                           ; Regs used in i1_vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6757     0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6758     0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6759     0C53  0841               	movf	i1vfpfcnvrt@fmt,w
  6760     0C54  0084               	movwf	4
  6761     0C55  1383               	bcf	3,7	;select IRP bank0
  6762     0C56  0800               	movf	0,w
  6763     0C57  00C4               	movwf	??i1_vfpfcnvrt
  6764     0C58  0A84               	incf	4,f
  6765     0C59  0800               	movf	0,w
  6766     0C5A  00C5               	movwf	??i1_vfpfcnvrt+1
  6767     0C5B  0845               	movf	??i1_vfpfcnvrt+1,w
  6768     0C5C  00FF               	movwf	127
  6769     0C5D  0844               	movf	??i1_vfpfcnvrt,w
  6770     0C5E  0084               	movwf	4
  6771     0C5F  160A  118A  2000  120A  158A  	fcall	stringtab
  6772     0C64  3A25               	xorlw	37
  6773     0C65  1D03               	skipz
  6774     0C66  2FD5               	goto	i1l3605
  6775                           
  6776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6777     0C67  0841               	movf	i1vfpfcnvrt@fmt,w
  6778     0C68  0084               	movwf	4
  6779     0C69  3001               	movlw	1
  6780     0C6A  1383               	bcf	3,7	;select IRP bank0
  6781     0C6B  0780               	addwf	0,f
  6782     0C6C  0A84               	incf	4,f
  6783     0C6D  1803               	skipnc
  6784     0C6E  0A80               	incf	0,f
  6785                           
  6786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6787     0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  6788     0C70  1303               	bcf	3,6	;RP1=0, select bank1
  6789     0C71  01D7               	clrf	_width^(0+128)
  6790     0C72  01D8               	clrf	(_width+1)^(0+128)
  6791     0C73  3000               	movlw	0
  6792     0C74  00DD               	movwf	_flags^(0+128)
  6793                           
  6794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6795     0C75  30FF               	movlw	255
  6796     0C76  00D9               	movwf	_prec^(0+128)
  6797     0C77  30FF               	movlw	255
  6798     0C78  00DA               	movwf	(_prec^(0+128)+1)
  6799                           
  6800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6801     0C79  1283               	bcf	3,5	;RP0=0, select bank0
  6802     0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  6803     0C7B  01C8               	clrf	i1vfpfcnvrt@done
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6806     0C7C  2C9D               	goto	i1l3453
  6807     0C7D                     i1l766:	
  6808                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1213:            
      +                               case '-' :
  6809                           
  6810                           
  6811                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  6812     0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  6813     0C7E  1303               	bcf	3,6	;RP1=0, select bank1
  6814     0C7F  145D               	bsf	_flags^(0+128),0
  6815     0C80                     i1l3439:
  6816                           
  6817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  6818     0C80  1283               	bcf	3,5	;RP0=0, select bank0
  6819     0C81  1303               	bcf	3,6	;RP1=0, select bank0
  6820     0C82  0841               	movf	i1vfpfcnvrt@fmt,w
  6821     0C83  0084               	movwf	4
  6822     0C84  3001               	movlw	1
  6823     0C85  1383               	bcf	3,7	;select IRP bank0
  6824     0C86  0780               	addwf	0,f
  6825     0C87  0A84               	incf	4,f
  6826     0C88  1803               	skipnc
  6827     0C89  0A80               	incf	0,f
  6828                           
  6829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  6830     0C8A  2C9D               	goto	i1l3453
  6831     0C8B                     i1l768:	
  6832                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  6833                           
  6834                           
  6835                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  6836     0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  6837     0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  6838     0C8D  14DD               	bsf	_flags^(0+128),1
  6839     0C8E  2C80               	goto	i1l3439
  6840     0C8F                     i1l769:	
  6841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1225:            
      +                               case '+' :
  6842                           
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  6845     0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  6846     0C90  1303               	bcf	3,6	;RP1=0, select bank1
  6847     0C91  155D               	bsf	_flags^(0+128),2
  6848     0C92  2C80               	goto	i1l3439
  6849     0C93                     i1l770:	
  6850                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1231:            
      +                               case ' ' :
  6851                           
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  6854     0C93  1683               	bsf	3,5	;RP0=1, select bank1
  6855     0C94  1303               	bcf	3,6	;RP1=0, select bank1
  6856     0C95  15DD               	bsf	_flags^(0+128),3
  6857     0C96  2C80               	goto	i1l3439
  6858     0C97                     i1l771:	
  6859                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1237:            
      +                               case '#' :
  6860                           
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  6863     0C97  1683               	bsf	3,5	;RP0=1, select bank1
  6864     0C98  1303               	bcf	3,6	;RP1=0, select bank1
  6865     0C99  165D               	bsf	_flags^(0+128),4
  6866     0C9A  2C80               	goto	i1l3439
  6867     0C9B                     i1l772:	
  6868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  6869                           
  6870                           
  6871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6872     0C9B  3001               	movlw	1
  6873     0C9C  00C8               	movwf	i1vfpfcnvrt@done
  6874     0C9D                     i1l3453:	
  6875                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6876                           
  6877                           
  6878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6879     0C9D  0848               	movf	i1vfpfcnvrt@done,w
  6880     0C9E  1D03               	btfss	3,2
  6881     0C9F  2CC2               	goto	i1l773
  6882     0CA0  0841               	movf	i1vfpfcnvrt@fmt,w
  6883     0CA1  0084               	movwf	4
  6884     0CA2  1383               	bcf	3,7	;select IRP bank0
  6885     0CA3  0800               	movf	0,w
  6886     0CA4  00C4               	movwf	??i1_vfpfcnvrt
  6887     0CA5  0A84               	incf	4,f
  6888     0CA6  0800               	movf	0,w
  6889     0CA7  00C5               	movwf	??i1_vfpfcnvrt+1
  6890     0CA8  0845               	movf	??i1_vfpfcnvrt+1,w
  6891     0CA9  00FF               	movwf	127
  6892     0CAA  0844               	movf	??i1_vfpfcnvrt,w
  6893     0CAB  0084               	movwf	4
  6894     0CAC  160A  118A  2000  120A  158A  	fcall	stringtab
  6895                           
  6896                           ; Switch size 1, requested type "simple"
  6897                           ; Number of cases is 5, Range of values is 32 to 48
  6898                           ; switch strategies available:
  6899                           ; Name         Instructions Cycles
  6900                           ; simple_byte           16     9 (average)
  6901                           ; direct_byte           62    11 (fixed)
  6902                           ; jumptable            263     9 (fixed)
  6903                           ;	Chosen strategy is simple_byte
  6904     0CB1  3A20               	xorlw	32	; case 32
  6905     0CB2  1903               	skipnz
  6906     0CB3  2C93               	goto	i1l770
  6907     0CB4  3A03               	xorlw	3	; case 35
  6908     0CB5  1903               	skipnz
  6909     0CB6  2C97               	goto	i1l771
  6910     0CB7  3A08               	xorlw	8	; case 43
  6911     0CB8  1903               	skipnz
  6912     0CB9  2C8F               	goto	i1l769
  6913     0CBA  3A06               	xorlw	6	; case 45
  6914     0CBB  1903               	skipnz
  6915     0CBC  2C7D               	goto	i1l766
  6916     0CBD  3A1D               	xorlw	29	; case 48
  6917     0CBE  1903               	skipnz
  6918     0CBF  2C8B               	goto	i1l768
  6919     0CC0  2C9B               	goto	i1l772
  6920     0CC1  2C9D               	goto	i1l3453
  6921     0CC2                     i1l773:
  6922                           
  6923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  6924     0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  6925     0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  6926     0CC4  1C5D               	btfss	_flags^(0+128),0
  6927     0CC5  2CC8               	goto	i1l3457
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  6930     0CC6  30FD               	movlw	253
  6931     0CC7  05DD               	andwf	_flags^(0+128),f
  6932     0CC8                     i1l3457:
  6933                           
  6934                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6935     0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  6936     0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  6937     0CCA  0841               	movf	i1vfpfcnvrt@fmt,w
  6938     0CCB  00F6               	movwf	i1read_prec_or_width@fmt
  6939     0CCC  0842               	movf	i1vfpfcnvrt@ap,w
  6940     0CCD  00F7               	movwf	i1read_prec_or_width@ap
  6941     0CCE  0843               	movf	i1vfpfcnvrt@ap+1,w
  6942     0CCF  00F8               	movwf	i1read_prec_or_width@ap+1
  6943     0CD0  160A  118A  249C  120A  158A  	fcall	i1_read_prec_or_width
  6944     0CD5  0877               	movf	?i1_read_prec_or_width+1,w
  6945     0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  6946     0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  6947     0CD8  00D8               	movwf	(_width+1)^(0+128)
  6948     0CD9  0876               	movf	?i1_read_prec_or_width,w
  6949     0CDA  00D7               	movwf	_width^(0+128)
  6950                           
  6951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6952     0CDB  1FD8               	btfss	(_width+1)^(0+128),7
  6953     0CDC  2CE3               	goto	i1l3465
  6954                           
  6955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6956     0CDD  145D               	bsf	_flags^(0+128),0
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6959     0CDE  09D7               	comf	_width^(0+128),f
  6960     0CDF  09D8               	comf	(_width+1)^(0+128),f
  6961     0CE0  0AD7               	incf	_width^(0+128),f
  6962     0CE1  1903               	skipnz
  6963     0CE2  0AD8               	incf	(_width+1)^(0+128),f
  6964     0CE3                     i1l3465:
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  6967     0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6968     0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  6969     0CE5  0841               	movf	i1vfpfcnvrt@fmt,w
  6970     0CE6  0084               	movwf	4
  6971     0CE7  1383               	bcf	3,7	;select IRP bank0
  6972     0CE8  0800               	movf	0,w
  6973     0CE9  00C4               	movwf	??i1_vfpfcnvrt
  6974     0CEA  0A84               	incf	4,f
  6975     0CEB  0800               	movf	0,w
  6976     0CEC  00C5               	movwf	??i1_vfpfcnvrt+1
  6977     0CED  0845               	movf	??i1_vfpfcnvrt+1,w
  6978     0CEE  00FF               	movwf	127
  6979     0CEF  0844               	movf	??i1_vfpfcnvrt,w
  6980     0CF0  0084               	movwf	4
  6981     0CF1  160A  118A  2000  120A  158A  	fcall	stringtab
  6982     0CF6  3A2E               	xorlw	46
  6983     0CF7  1D03               	skipz
  6984     0CF8  2D12               	goto	i1l3471
  6985                           
  6986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  6987     0CF9  0841               	movf	i1vfpfcnvrt@fmt,w
  6988     0CFA  0084               	movwf	4
  6989     0CFB  3001               	movlw	1
  6990     0CFC  1383               	bcf	3,7	;select IRP bank0
  6991     0CFD  0780               	addwf	0,f
  6992     0CFE  0A84               	incf	4,f
  6993     0CFF  1803               	skipnc
  6994     0D00  0A80               	incf	0,f
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6997     0D01  0841               	movf	i1vfpfcnvrt@fmt,w
  6998     0D02  00F6               	movwf	i1read_prec_or_width@fmt
  6999     0D03  0842               	movf	i1vfpfcnvrt@ap,w
  7000     0D04  00F7               	movwf	i1read_prec_or_width@ap
  7001     0D05  0843               	movf	i1vfpfcnvrt@ap+1,w
  7002     0D06  00F8               	movwf	i1read_prec_or_width@ap+1
  7003     0D07  160A  118A  249C  120A  158A  	fcall	i1_read_prec_or_width
  7004     0D0C  0877               	movf	?i1_read_prec_or_width+1,w
  7005     0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  7006     0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  7007     0D0F  00DA               	movwf	(_prec+1)^(0+128)
  7008     0D10  0876               	movf	?i1_read_prec_or_width,w
  7009     0D11  00D9               	movwf	_prec^(0+128)
  7010     0D12                     i1l3471:
  7011                           
  7012                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  7013     0D12  1283               	bcf	3,5	;RP0=0, select bank0
  7014     0D13  0841               	movf	i1vfpfcnvrt@fmt,w
  7015     0D14  0084               	movwf	4
  7016     0D15  1383               	bcf	3,7	;select IRP bank0
  7017     0D16  0800               	movf	0,w
  7018     0D17  00C4               	movwf	??i1_vfpfcnvrt
  7019     0D18  0A84               	incf	4,f
  7020     0D19  0800               	movf	0,w
  7021     0D1A  00C5               	movwf	??i1_vfpfcnvrt+1
  7022     0D1B  0845               	movf	??i1_vfpfcnvrt+1,w
  7023     0D1C  00FF               	movwf	127
  7024     0D1D  0844               	movf	??i1_vfpfcnvrt,w
  7025     0D1E  0084               	movwf	4
  7026     0D1F  160A  118A  2000  120A  158A  	fcall	stringtab
  7027     0D24  3A63               	xorlw	99
  7028     0D25  1D03               	skipz
  7029     0D26  2D56               	goto	i1l3481
  7030                           
  7031                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  7032     0D27  0841               	movf	i1vfpfcnvrt@fmt,w
  7033     0D28  0084               	movwf	4
  7034     0D29  3001               	movlw	1
  7035     0D2A  1383               	bcf	3,7	;select IRP bank0
  7036     0D2B  0780               	addwf	0,f
  7037     0D2C  0A84               	incf	4,f
  7038     0D2D  1803               	skipnc
  7039     0D2E  0A80               	incf	0,f
  7040                           
  7041                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7042     0D2F  0842               	movf	i1vfpfcnvrt@ap,w
  7043     0D30  0084               	movwf	4
  7044     0D31  1783               	bsf	3,7
  7045     0D32  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7046     0D33  1383               	bcf	3,7
  7047     0D34  0800               	movf	0,w
  7048     0D35  00C4               	movwf	??i1_vfpfcnvrt
  7049     0D36  3002               	movlw	2
  7050     0D37  0780               	addwf	0,f
  7051     0D38  0A84               	incf	4,f
  7052     0D39  0800               	movf	0,w
  7053     0D3A  00C5               	movwf	??i1_vfpfcnvrt+1
  7054     0D3B  3000               	movlw	0
  7055     0D3C  1803               	skipnc
  7056     0D3D  0A80               	incf	0,f
  7057     0D3E  0780               	addwf	0,f
  7058     0D3F  0844               	movf	??i1_vfpfcnvrt,w
  7059     0D40  0084               	movwf	4
  7060     0D41  1783               	bsf	3,7
  7061     0D42  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7062     0D43  1383               	bcf	3,7
  7063     0D44  0800               	movf	0,w
  7064     0D45  00CD               	movwf	i1vfpfcnvrt@c
  7065                           
  7066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  7067     0D46  083F               	movf	i1vfpfcnvrt@fp,w
  7068     0D47  00A0               	movwf	i1ctoa@fp
  7069     0D48  0840               	movf	i1vfpfcnvrt@fp+1,w
  7070     0D49  00A1               	movwf	i1ctoa@fp+1
  7071     0D4A  084D               	movf	i1vfpfcnvrt@c,w
  7072     0D4B  00A2               	movwf	i1ctoa@c
  7073     0D4C  160A  118A  258E   	fcall	i1_ctoa
  7074     0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  7075     0D50  1303               	bcf	3,6	;RP1=0, select bank0
  7076     0D51  0821               	movf	?i1_ctoa+1,w
  7077     0D52  00C0               	movwf	?i1_vfpfcnvrt+1
  7078     0D53  0820               	movf	?i1_ctoa,w
  7079     0D54  00BF               	movwf	?i1_vfpfcnvrt
  7080     0D55  0008               	return
  7081     0D56                     i1l3481:
  7082                           
  7083                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7084     0D56  0841               	movf	i1vfpfcnvrt@fmt,w
  7085     0D57  0084               	movwf	4
  7086     0D58  1383               	bcf	3,7	;select IRP bank0
  7087     0D59  0800               	movf	0,w
  7088     0D5A  00CE               	movwf	i1vfpfcnvrt@cp
  7089     0D5B  0A84               	incf	4,f
  7090     0D5C  0800               	movf	0,w
  7091     0D5D  0384               	decf	4,f
  7092     0D5E  00CF               	movwf	i1vfpfcnvrt@cp+1
  7093                           
  7094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  7095     0D5F  084F               	movf	i1vfpfcnvrt@cp+1,w
  7096     0D60  00FF               	movwf	127
  7097     0D61  084E               	movf	i1vfpfcnvrt@cp,w
  7098     0D62  0084               	movwf	4
  7099     0D63  160A  118A  2000  120A  158A  	fcall	stringtab
  7100     0D68  00CD               	movwf	i1vfpfcnvrt@c
  7101                           
  7102                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  7103     0D69  2D8A               	goto	i1l3499
  7104     0D6A                     i1l3485:
  7105                           
  7106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  7107     0D6A  3001               	movlw	1
  7108     0D6B  07CE               	addwf	i1vfpfcnvrt@cp,f
  7109     0D6C  1803               	skipnc
  7110     0D6D  0ACF               	incf	i1vfpfcnvrt@cp+1,f
  7111     0D6E  3000               	movlw	0
  7112     0D6F  07CF               	addwf	i1vfpfcnvrt@cp+1,f
  7113                           
  7114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  7115     0D70  084F               	movf	i1vfpfcnvrt@cp+1,w
  7116     0D71  00FF               	movwf	127
  7117     0D72  084E               	movf	i1vfpfcnvrt@cp,w
  7118     0D73  0084               	movwf	4
  7119     0D74  160A  118A  2000  120A  158A  	fcall	stringtab
  7120     0D79  3A68               	xorlw	104
  7121     0D7A  1D03               	skipz
  7122     0D7B  2DAA               	goto	i1l3501
  7123                           
  7124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  7125     0D7C  3048               	movlw	72
  7126     0D7D  00CD               	movwf	i1vfpfcnvrt@c
  7127     0D7E                     i1l3491:
  7128                           
  7129                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  7130     0D7E  3001               	movlw	1
  7131     0D7F  07CE               	addwf	i1vfpfcnvrt@cp,f
  7132     0D80  1803               	skipnc
  7133     0D81  0ACF               	incf	i1vfpfcnvrt@cp+1,f
  7134     0D82  3000               	movlw	0
  7135     0D83  07CF               	addwf	i1vfpfcnvrt@cp+1,f
  7136     0D84  2DAA               	goto	i1l3501
  7137     0D85                     i1l788:	
  7138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1339:    case 'd'
      +                          :
  7139                           
  7140     0D85                     i1l791:	
  7141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1348:    case 'n'
      +                          :
  7142                           
  7143                           
  7144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  7145     0D85  3069               	movlw	105
  7146     0D86  00CD               	movwf	i1vfpfcnvrt@c
  7147                           
  7148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
  7149     0D87  2DAA               	goto	i1l3501
  7150     0D88                     i1l3495:
  7151                           
  7152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  7153     0D88  01CD               	clrf	i1vfpfcnvrt@c
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
  7156     0D89  2DAA               	goto	i1l3501
  7157     0D8A                     i1l3499:
  7158     0D8A  084D               	movf	i1vfpfcnvrt@c,w
  7159                           
  7160                           ; Switch size 1, requested type "simple"
  7161                           ; Number of cases is 10, Range of values is 88 to 122
  7162                           ; switch strategies available:
  7163                           ; Name         Instructions Cycles
  7164                           ; simple_byte           31    16 (average)
  7165                           ; direct_byte          116    11 (fixed)
  7166                           ; jumptable            263     9 (fixed)
  7167                           ;	Chosen strategy is simple_byte
  7168     0D8B  3A58               	xorlw	88	; case 88
  7169     0D8C  1903               	skipnz
  7170     0D8D  2D85               	goto	i1l791
  7171     0D8E  3A3C               	xorlw	60	; case 100
  7172     0D8F  1903               	skipnz
  7173     0D90  2D85               	goto	i1l791
  7174     0D91  3A0C               	xorlw	12	; case 104
  7175     0D92  1903               	skipnz
  7176     0D93  2D6A               	goto	i1l3485
  7177     0D94  3A01               	xorlw	1	; case 105
  7178     0D95  1903               	skipnz
  7179     0D96  2D85               	goto	i1l791
  7180     0D97  3A07               	xorlw	7	; case 110
  7181     0D98  1903               	skipnz
  7182     0D99  2D85               	goto	i1l791
  7183     0D9A  3A01               	xorlw	1	; case 111
  7184     0D9B  1903               	skipnz
  7185     0D9C  2D85               	goto	i1l788
  7186     0D9D  3A1B               	xorlw	27	; case 116
  7187     0D9E  1903               	skipnz
  7188     0D9F  2D7E               	goto	i1l3491
  7189     0DA0  3A01               	xorlw	1	; case 117
  7190     0DA1  1903               	skipnz
  7191     0DA2  2D85               	goto	i1l791
  7192     0DA3  3A0D               	xorlw	13	; case 120
  7193     0DA4  1903               	skipnz
  7194     0DA5  2D85               	goto	i1l791
  7195     0DA6  3A02               	xorlw	2	; case 122
  7196     0DA7  1903               	skipnz
  7197     0DA8  2D7E               	goto	i1l3491
  7198     0DA9  2D88               	goto	i1l3495
  7199     0DAA                     i1l3501:
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7202     0DAA  084F               	movf	i1vfpfcnvrt@cp+1,w
  7203     0DAB  00FF               	movwf	127
  7204     0DAC  084E               	movf	i1vfpfcnvrt@cp,w
  7205     0DAD  0084               	movwf	4
  7206     0DAE  160A  118A  2000  120A  158A  	fcall	stringtab
  7207     0DB3  3A64               	xorlw	100
  7208     0DB4  1903               	skipnz
  7209     0DB5  2DFA               	goto	i1l3517
  7210     0DB6  084F               	movf	i1vfpfcnvrt@cp+1,w
  7211     0DB7  00FF               	movwf	127
  7212     0DB8  084E               	movf	i1vfpfcnvrt@cp,w
  7213     0DB9  0084               	movwf	4
  7214     0DBA  160A  118A  2000  120A  158A  	fcall	stringtab
  7215     0DBF  3A69               	xorlw	105
  7216     0DC0  1903               	btfsc	3,2
  7217     0DC1  2DFA               	goto	i1l3517
  7218     0DC2  2E33               	goto	i1l3525
  7219     0DC3                     i1l3505:
  7220     0DC3                     i1l3507:	
  7221                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
  7222                           
  7223                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7224                           
  7225     0DC3  2DDF               	goto	i1l3513
  7226     0DC4                     i1l3509:	
  7227                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1370:      break;
  7228                           
  7229                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  7230                           
  7231                           
  7232                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7233     0DC4  0842               	movf	i1vfpfcnvrt@ap,w
  7234     0DC5  0084               	movwf	4
  7235     0DC6  1783               	bsf	3,7
  7236     0DC7  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7237     0DC8  1383               	bcf	3,7
  7238     0DC9  0800               	movf	0,w
  7239     0DCA  00C4               	movwf	??i1_vfpfcnvrt
  7240     0DCB  3002               	movlw	2
  7241     0DCC  0780               	addwf	0,f
  7242     0DCD  0A84               	incf	4,f
  7243     0DCE  0800               	movf	0,w
  7244     0DCF  00C5               	movwf	??i1_vfpfcnvrt+1
  7245     0DD0  3000               	movlw	0
  7246     0DD1  1803               	skipnc
  7247     0DD2  0A80               	incf	0,f
  7248     0DD3  0780               	addwf	0,f
  7249     0DD4  0844               	movf	??i1_vfpfcnvrt,w
  7250     0DD5  0084               	movwf	4
  7251     0DD6  1783               	bsf	3,7
  7252     0DD7  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7253     0DD8  1383               	bcf	3,7
  7254     0DD9  0800               	movf	0,w
  7255     0DDA  00C9               	movwf	i1vfpfcnvrt@convarg
  7256     0DDB  01CA               	clrf	i1vfpfcnvrt@convarg+1
  7257     0DDC  1BC9               	btfsc	i1vfpfcnvrt@convarg,7
  7258     0DDD  03CA               	decf	i1vfpfcnvrt@convarg+1,f
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1375:      break;
  7261     0DDE  2E0B               	goto	i1l3519
  7262     0DDF                     i1l3511:
  7263     0DDF                     i1l3513:	
  7264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1390:      break;
  7265                           
  7266                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  7267                           
  7268                           
  7269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7270     0DDF  0842               	movf	i1vfpfcnvrt@ap,w
  7271     0DE0  0084               	movwf	4
  7272     0DE1  1783               	bsf	3,7
  7273     0DE2  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7274     0DE3  1383               	bcf	3,7
  7275     0DE4  0800               	movf	0,w
  7276     0DE5  00C4               	movwf	??i1_vfpfcnvrt
  7277     0DE6  3002               	movlw	2
  7278     0DE7  0780               	addwf	0,f
  7279     0DE8  0A84               	incf	4,f
  7280     0DE9  0800               	movf	0,w
  7281     0DEA  00C5               	movwf	??i1_vfpfcnvrt+1
  7282     0DEB  3000               	movlw	0
  7283     0DEC  1803               	skipnc
  7284     0DED  0A80               	incf	0,f
  7285     0DEE  0780               	addwf	0,f
  7286     0DEF  0844               	movf	??i1_vfpfcnvrt,w
  7287     0DF0  0084               	movwf	4
  7288     0DF1  1783               	bsf	3,7
  7289     0DF2  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7290     0DF3  1383               	bcf	3,7
  7291     0DF4  0800               	movf	0,w
  7292     0DF5  00C9               	movwf	i1vfpfcnvrt@convarg
  7293     0DF6  0A84               	incf	4,f
  7294     0DF7  0800               	movf	0,w
  7295     0DF8  00CA               	movwf	i1vfpfcnvrt@convarg+1
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1400:      break;
  7298     0DF9  2E0B               	goto	i1l3519
  7299     0DFA                     i1l3517:
  7300     0DFA  084D               	movf	i1vfpfcnvrt@c,w
  7301                           
  7302                           ; Switch size 1, requested type "simple"
  7303                           ; Number of cases is 5, Range of values is 72 to 122
  7304                           ; switch strategies available:
  7305                           ; Name         Instructions Cycles
  7306                           ; simple_byte           16     9 (average)
  7307                           ; direct_byte          164    11 (fixed)
  7308                           ; jumptable            263     9 (fixed)
  7309                           ;	Chosen strategy is simple_byte
  7310     0DFB  3A48               	xorlw	72	; case 72
  7311     0DFC  1903               	skipnz
  7312     0DFD  2DC4               	goto	i1l3509
  7313     0DFE  3A20               	xorlw	32	; case 104
  7314     0DFF  1903               	skipnz
  7315     0E00  2DC3               	goto	i1l3507
  7316     0E01  3A01               	xorlw	1	; case 105
  7317     0E02  1903               	skipnz
  7318     0E03  2DC3               	goto	i1l3505
  7319     0E04  3A1D               	xorlw	29	; case 116
  7320     0E05  1903               	skipnz
  7321     0E06  2DDF               	goto	i1l3511
  7322     0E07  3A0E               	xorlw	14	; case 122
  7323     0E08  1903               	skipnz
  7324     0E09  2DDF               	goto	i1l3513
  7325     0E0A  2E0B               	goto	i1l3519
  7326     0E0B                     i1l3519:
  7327                           
  7328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7329     0E0B  3001               	movlw	1
  7330     0E0C  00C4               	movwf	??i1_vfpfcnvrt
  7331     0E0D  0844               	movf	??i1_vfpfcnvrt,w
  7332     0E0E  074E               	addwf	i1vfpfcnvrt@cp,w
  7333     0E0F  00C6               	movwf	??i1_vfpfcnvrt+2
  7334     0E10  084F               	movf	i1vfpfcnvrt@cp+1,w
  7335     0E11  00C5               	movwf	??i1_vfpfcnvrt+1
  7336     0E12  1803               	skipnc
  7337     0E13  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7338     0E14  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7339     0E15  03C5               	decf	??i1_vfpfcnvrt+1,f
  7340     0E16  0845               	movf	??i1_vfpfcnvrt+1,w
  7341     0E17  00C7               	movwf	??i1_vfpfcnvrt+3
  7342     0E18  0841               	movf	i1vfpfcnvrt@fmt,w
  7343     0E19  0084               	movwf	4
  7344     0E1A  0846               	movf	??i1_vfpfcnvrt+2,w
  7345     0E1B  1383               	bcf	3,7	;select IRP bank0
  7346     0E1C  0080               	movwf	0
  7347     0E1D  0847               	movf	??i1_vfpfcnvrt+3,w
  7348     0E1E  0A84               	incf	4,f
  7349     0E1F  0080               	movwf	0
  7350     0E20  0384               	decf	4,f
  7351                           
  7352                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  7353     0E21  083F               	movf	i1vfpfcnvrt@fp,w
  7354     0E22  00AF               	movwf	i1dtoa@fp
  7355     0E23  0840               	movf	i1vfpfcnvrt@fp+1,w
  7356     0E24  00B0               	movwf	i1dtoa@fp+1
  7357     0E25  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7358     0E26  00B2               	movwf	i1dtoa@d+1
  7359     0E27  0849               	movf	i1vfpfcnvrt@convarg,w
  7360     0E28  00B1               	movwf	i1dtoa@d
  7361     0E29  120A  158A  2250   	fcall	i1_dtoa
  7362     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  7363     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  7364     0E2E  0830               	movf	?i1_dtoa+1,w
  7365     0E2F  00C0               	movwf	?i1_vfpfcnvrt+1
  7366     0E30  082F               	movf	?i1_dtoa,w
  7367     0E31  00BF               	movwf	?i1_vfpfcnvrt
  7368     0E32  0008               	return
  7369     0E33                     i1l3525:
  7370     0E33  084F               	movf	i1vfpfcnvrt@cp+1,w
  7371     0E34  00FF               	movwf	127
  7372     0E35  084E               	movf	i1vfpfcnvrt@cp,w
  7373     0E36  0084               	movwf	4
  7374     0E37  160A  118A  2000  120A  158A  	fcall	stringtab
  7375     0E3C  3A78               	xorlw	120
  7376     0E3D  1903               	skipnz
  7377     0E3E  2E9C               	goto	i1l3545
  7378     0E3F  084F               	movf	i1vfpfcnvrt@cp+1,w
  7379     0E40  00FF               	movwf	127
  7380     0E41  084E               	movf	i1vfpfcnvrt@cp,w
  7381     0E42  0084               	movwf	4
  7382     0E43  160A  118A  2000  120A  158A  	fcall	stringtab
  7383     0E48  3A58               	xorlw	88
  7384     0E49  1903               	skipnz
  7385     0E4A  2E9C               	goto	i1l3545
  7386     0E4B  084F               	movf	i1vfpfcnvrt@cp+1,w
  7387     0E4C  00FF               	movwf	127
  7388     0E4D  084E               	movf	i1vfpfcnvrt@cp,w
  7389     0E4E  0084               	movwf	4
  7390     0E4F  160A  118A  2000  120A  158A  	fcall	stringtab
  7391     0E54  3A6F               	xorlw	111
  7392     0E55  1903               	skipnz
  7393     0E56  2E9C               	goto	i1l3545
  7394     0E57  084F               	movf	i1vfpfcnvrt@cp+1,w
  7395     0E58  00FF               	movwf	127
  7396     0E59  084E               	movf	i1vfpfcnvrt@cp,w
  7397     0E5A  0084               	movwf	4
  7398     0E5B  160A  118A  2000  120A  158A  	fcall	stringtab
  7399     0E60  3A75               	xorlw	117
  7400     0E61  1903               	btfsc	3,2
  7401     0E62  2E9C               	goto	i1l3545
  7402     0E63  2F1A               	goto	i1l3565
  7403     0E64                     i1l3533:
  7404     0E64                     i1l3535:	
  7405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
  7406                           
  7407                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  7408                           
  7409     0E64  2E81               	goto	i1l3541
  7410     0E65                     i1l3537:	
  7411                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1461:      break;
  7412                           
  7413                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  7414                           
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  7417     0E65  0842               	movf	i1vfpfcnvrt@ap,w
  7418     0E66  0084               	movwf	4
  7419     0E67  1783               	bsf	3,7
  7420     0E68  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7421     0E69  1383               	bcf	3,7
  7422     0E6A  0800               	movf	0,w
  7423     0E6B  00C4               	movwf	??i1_vfpfcnvrt
  7424     0E6C  3002               	movlw	2
  7425     0E6D  0780               	addwf	0,f
  7426     0E6E  0A84               	incf	4,f
  7427     0E6F  0800               	movf	0,w
  7428     0E70  00C5               	movwf	??i1_vfpfcnvrt+1
  7429     0E71  3000               	movlw	0
  7430     0E72  1803               	skipnc
  7431     0E73  0A80               	incf	0,f
  7432     0E74  0780               	addwf	0,f
  7433     0E75  0844               	movf	??i1_vfpfcnvrt,w
  7434     0E76  0084               	movwf	4
  7435     0E77  1783               	bsf	3,7
  7436     0E78  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7437     0E79  1383               	bcf	3,7
  7438     0E7A  0800               	movf	0,w
  7439     0E7B  00C6               	movwf	??i1_vfpfcnvrt+2
  7440     0E7C  01C7               	clrf	??i1_vfpfcnvrt+3
  7441     0E7D  0846               	movf	??i1_vfpfcnvrt+2,w
  7442     0E7E  00C9               	movwf	i1vfpfcnvrt@convarg
  7443     0E7F  0847               	movf	??i1_vfpfcnvrt+3,w
  7444     0E80  2E9A               	goto	L13
  7445     0E81                     i1l3539:	
  7446                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1466:      break;
  7447                           
  7448     0E81                     i1l3541:	
  7449                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1481:      break;
  7450                           
  7451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  7452                           
  7453                           
  7454                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7455     0E81  0842               	movf	i1vfpfcnvrt@ap,w
  7456     0E82  0084               	movwf	4
  7457     0E83  1783               	bsf	3,7
  7458     0E84  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7459     0E85  1383               	bcf	3,7
  7460     0E86  0800               	movf	0,w
  7461     0E87  00C4               	movwf	??i1_vfpfcnvrt
  7462     0E88  3002               	movlw	2
  7463     0E89  0780               	addwf	0,f
  7464     0E8A  0A84               	incf	4,f
  7465     0E8B  0800               	movf	0,w
  7466     0E8C  00C5               	movwf	??i1_vfpfcnvrt+1
  7467     0E8D  3000               	movlw	0
  7468     0E8E  1803               	skipnc
  7469     0E8F  0A80               	incf	0,f
  7470     0E90  0780               	addwf	0,f
  7471     0E91  0844               	movf	??i1_vfpfcnvrt,w
  7472     0E92  0084               	movwf	4
  7473     0E93  1783               	bsf	3,7
  7474     0E94  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7475     0E95  1383               	bcf	3,7
  7476     0E96  0800               	movf	0,w
  7477     0E97  00C9               	movwf	i1vfpfcnvrt@convarg
  7478     0E98  0A84               	incf	4,f
  7479     0E99  0800               	movf	0,w
  7480     0E9A                     L13:
  7481     0E9A  00CA               	movwf	i1vfpfcnvrt@convarg+1
  7482                           
  7483                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1491:      break;
  7484     0E9B  2EAD               	goto	i1l3547
  7485     0E9C                     i1l3545:
  7486     0E9C  084D               	movf	i1vfpfcnvrt@c,w
  7487                           
  7488                           ; Switch size 1, requested type "simple"
  7489                           ; Number of cases is 5, Range of values is 72 to 122
  7490                           ; switch strategies available:
  7491                           ; Name         Instructions Cycles
  7492                           ; simple_byte           16     9 (average)
  7493                           ; direct_byte          164    11 (fixed)
  7494                           ; jumptable            263     9 (fixed)
  7495                           ;	Chosen strategy is simple_byte
  7496     0E9D  3A48               	xorlw	72	; case 72
  7497     0E9E  1903               	skipnz
  7498     0E9F  2E65               	goto	i1l3537
  7499     0EA0  3A20               	xorlw	32	; case 104
  7500     0EA1  1903               	skipnz
  7501     0EA2  2E64               	goto	i1l3535
  7502     0EA3  3A01               	xorlw	1	; case 105
  7503     0EA4  1903               	skipnz
  7504     0EA5  2E64               	goto	i1l3533
  7505     0EA6  3A1D               	xorlw	29	; case 116
  7506     0EA7  1903               	skipnz
  7507     0EA8  2E81               	goto	i1l3539
  7508     0EA9  3A0E               	xorlw	14	; case 122
  7509     0EAA  1903               	skipnz
  7510     0EAB  2E81               	goto	i1l3541
  7511     0EAC  2EAD               	goto	i1l3547
  7512     0EAD                     i1l3547:
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  7515     0EAD  3001               	movlw	1
  7516     0EAE  00C4               	movwf	??i1_vfpfcnvrt
  7517     0EAF  0844               	movf	??i1_vfpfcnvrt,w
  7518     0EB0  074E               	addwf	i1vfpfcnvrt@cp,w
  7519     0EB1  00C6               	movwf	??i1_vfpfcnvrt+2
  7520     0EB2  084F               	movf	i1vfpfcnvrt@cp+1,w
  7521     0EB3  00C5               	movwf	??i1_vfpfcnvrt+1
  7522     0EB4  1803               	skipnc
  7523     0EB5  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7524     0EB6  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7525     0EB7  03C5               	decf	??i1_vfpfcnvrt+1,f
  7526     0EB8  0845               	movf	??i1_vfpfcnvrt+1,w
  7527     0EB9  00C7               	movwf	??i1_vfpfcnvrt+3
  7528     0EBA  0841               	movf	i1vfpfcnvrt@fmt,w
  7529     0EBB  0084               	movwf	4
  7530     0EBC  0846               	movf	??i1_vfpfcnvrt+2,w
  7531     0EBD  1383               	bcf	3,7	;select IRP bank0
  7532     0EBE  0080               	movwf	0
  7533     0EBF  0847               	movf	??i1_vfpfcnvrt+3,w
  7534     0EC0  0A84               	incf	4,f
  7535     0EC1  0080               	movwf	0
  7536     0EC2  0384               	decf	4,f
  7537                           
  7538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  7539     0EC3  2F04               	goto	i1l3563
  7540     0EC4                     i1l3549:
  7541                           
  7542                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  7543     0EC4  083F               	movf	i1vfpfcnvrt@fp,w
  7544     0EC5  00AF               	movwf	i1otoa@fp
  7545     0EC6  0840               	movf	i1vfpfcnvrt@fp+1,w
  7546     0EC7  00B0               	movwf	i1otoa@fp+1
  7547     0EC8  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7548     0EC9  00B2               	movwf	i1otoa@d+1
  7549     0ECA  0849               	movf	i1vfpfcnvrt@convarg,w
  7550     0ECB  00B1               	movwf	i1otoa@d
  7551     0ECC  120A  158A  209D   	fcall	i1_otoa
  7552     0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  7553     0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  7554     0ED1  0830               	movf	?i1_otoa+1,w
  7555     0ED2  00C0               	movwf	?i1_vfpfcnvrt+1
  7556     0ED3  082F               	movf	?i1_otoa,w
  7557     0ED4  00BF               	movwf	?i1_vfpfcnvrt
  7558     0ED5  0008               	return
  7559     0ED6                     i1l3553:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  7562     0ED6  083F               	movf	i1vfpfcnvrt@fp,w
  7563     0ED7  00AF               	movwf	i1utoa@fp
  7564     0ED8  0840               	movf	i1vfpfcnvrt@fp+1,w
  7565     0ED9  00B0               	movwf	i1utoa@fp+1
  7566     0EDA  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7567     0EDB  00B2               	movwf	i1utoa@d+1
  7568     0EDC  0849               	movf	i1vfpfcnvrt@convarg,w
  7569     0EDD  00B1               	movwf	i1utoa@d
  7570     0EDE  160A  118A  269D   	fcall	i1_utoa
  7571     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  7572     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  7573     0EE3  0830               	movf	?i1_utoa+1,w
  7574     0EE4  00C0               	movwf	?i1_vfpfcnvrt+1
  7575     0EE5  082F               	movf	?i1_utoa,w
  7576     0EE6  00BF               	movwf	?i1_vfpfcnvrt
  7577     0EE7  0008               	return
  7578     0EE8                     i1l3557:
  7579                           
  7580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  7581     0EE8  083F               	movf	i1vfpfcnvrt@fp,w
  7582     0EE9  00AF               	movwf	i1xtoa@fp
  7583     0EEA  0840               	movf	i1vfpfcnvrt@fp+1,w
  7584     0EEB  00B0               	movwf	i1xtoa@fp+1
  7585     0EEC  084A               	movf	i1vfpfcnvrt@convarg+1,w
  7586     0EED  00B2               	movwf	i1xtoa@d+1
  7587     0EEE  0849               	movf	i1vfpfcnvrt@convarg,w
  7588     0EEF  00B1               	movwf	i1xtoa@d
  7589     0EF0  084F               	movf	i1vfpfcnvrt@cp+1,w
  7590     0EF1  00FF               	movwf	127
  7591     0EF2  084E               	movf	i1vfpfcnvrt@cp,w
  7592     0EF3  0084               	movwf	4
  7593     0EF4  160A  118A  2000  120A  158A  	fcall	stringtab
  7594     0EF9  00B3               	movwf	i1xtoa@x
  7595     0EFA  120A  158A  2163   	fcall	i1_xtoa
  7596     0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  7597     0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  7598     0EFF  0830               	movf	?i1_xtoa+1,w
  7599     0F00  00C0               	movwf	?i1_vfpfcnvrt+1
  7600     0F01  082F               	movf	?i1_xtoa,w
  7601     0F02  00BF               	movwf	?i1_vfpfcnvrt
  7602     0F03  0008               	return
  7603     0F04                     i1l3563:
  7604     0F04  084F               	movf	i1vfpfcnvrt@cp+1,w
  7605     0F05  00FF               	movwf	127
  7606     0F06  084E               	movf	i1vfpfcnvrt@cp,w
  7607     0F07  0084               	movwf	4
  7608     0F08  160A  118A  2000  120A  158A  	fcall	stringtab
  7609                           
  7610                           ; Switch size 1, requested type "simple"
  7611                           ; Number of cases is 4, Range of values is 88 to 120
  7612                           ; switch strategies available:
  7613                           ; Name         Instructions Cycles
  7614                           ; simple_byte           13     7 (average)
  7615                           ; direct_byte          110    11 (fixed)
  7616                           ; jumptable            263     9 (fixed)
  7617                           ;	Chosen strategy is simple_byte
  7618     0F0D  3A58               	xorlw	88	; case 88
  7619     0F0E  1903               	skipnz
  7620     0F0F  2EE8               	goto	i1l3557
  7621     0F10  3A37               	xorlw	55	; case 111
  7622     0F11  1903               	skipnz
  7623     0F12  2EC4               	goto	i1l3549
  7624     0F13  3A1A               	xorlw	26	; case 117
  7625     0F14  1903               	skipnz
  7626     0F15  2ED6               	goto	i1l3553
  7627     0F16  3A0D               	xorlw	13	; case 120
  7628     0F17  1903               	skipnz
  7629     0F18  2EE8               	goto	i1l3557
  7630     0F19  2F1A               	goto	i1l3565
  7631     0F1A                     i1l3565:
  7632                           
  7633                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  7634     0F1A  084F               	movf	i1vfpfcnvrt@cp+1,w
  7635     0F1B  00FF               	movwf	127
  7636     0F1C  084E               	movf	i1vfpfcnvrt@cp,w
  7637     0F1D  0084               	movwf	4
  7638     0F1E  160A  118A  2000  120A  158A  	fcall	stringtab
  7639     0F23  3A6E               	xorlw	110
  7640     0F24  1903               	btfsc	3,2
  7641     0F25  2F72               	goto	i1l3581
  7642     0F26  2F9E               	goto	i1l3589
  7643     0F27                     i1l3569:
  7644     0F27                     i1l3571:	
  7645                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1600:      break;
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  7648                           
  7649     0F27  2F4B               	goto	i1l3577
  7650     0F28                     i1l3573:	
  7651                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1604:      break;
  7652                           
  7653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  7654                           
  7655                           
  7656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  7657     0F28  0842               	movf	i1vfpfcnvrt@ap,w
  7658     0F29  0084               	movwf	4
  7659     0F2A  1783               	bsf	3,7
  7660     0F2B  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7661     0F2C  1383               	bcf	3,7
  7662     0F2D  0800               	movf	0,w
  7663     0F2E  00C4               	movwf	??i1_vfpfcnvrt
  7664     0F2F  3002               	movlw	2
  7665     0F30  0780               	addwf	0,f
  7666     0F31  0A84               	incf	4,f
  7667     0F32  0800               	movf	0,w
  7668     0F33  00C5               	movwf	??i1_vfpfcnvrt+1
  7669     0F34  3000               	movlw	0
  7670     0F35  1803               	skipnc
  7671     0F36  0A80               	incf	0,f
  7672     0F37  0780               	addwf	0,f
  7673     0F38  0844               	movf	??i1_vfpfcnvrt,w
  7674     0F39  0084               	movwf	4
  7675     0F3A  1783               	bsf	3,7
  7676     0F3B  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7677     0F3C  1383               	bcf	3,7
  7678     0F3D  0800               	movf	0,w
  7679     0F3E  00C6               	movwf	??i1_vfpfcnvrt+2
  7680     0F3F  0A84               	incf	4,f
  7681     0F40  0800               	movf	0,w
  7682     0F41  00C7               	movwf	??i1_vfpfcnvrt+3
  7683     0F42  0846               	movf	??i1_vfpfcnvrt+2,w
  7684     0F43  0084               	movwf	4
  7685     0F44  1783               	bsf	3,7
  7686     0F45  1C47               	btfss	??i1_vfpfcnvrt+3,0
  7687     0F46  1383               	bcf	3,7
  7688     0F47  1683               	bsf	3,5	;RP0=1, select bank3
  7689     0F48  1703               	bsf	3,6	;RP1=1, select bank3
  7690     0F49  0867               	movf	_nout^(0+384),w
  7691     0F4A  2F70               	goto	L16
  7692     0F4B                     i1l3575:	
  7693                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1609:      break;
  7694                           
  7695     0F4B                     i1l3577:	
  7696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1624:      break;
  7697                           
  7698                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  7699                           
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  7702     0F4B  0842               	movf	i1vfpfcnvrt@ap,w
  7703     0F4C  0084               	movwf	4
  7704     0F4D  1783               	bsf	3,7
  7705     0F4E  1C43               	btfss	i1vfpfcnvrt@ap+1,0
  7706     0F4F  1383               	bcf	3,7
  7707     0F50  0800               	movf	0,w
  7708     0F51  00C4               	movwf	??i1_vfpfcnvrt
  7709     0F52  3002               	movlw	2
  7710     0F53  0780               	addwf	0,f
  7711     0F54  0A84               	incf	4,f
  7712     0F55  0800               	movf	0,w
  7713     0F56  00C5               	movwf	??i1_vfpfcnvrt+1
  7714     0F57  3000               	movlw	0
  7715     0F58  1803               	skipnc
  7716     0F59  0A80               	incf	0,f
  7717     0F5A  0780               	addwf	0,f
  7718     0F5B  0844               	movf	??i1_vfpfcnvrt,w
  7719     0F5C  0084               	movwf	4
  7720     0F5D  1783               	bsf	3,7
  7721     0F5E  1C45               	btfss	??i1_vfpfcnvrt+1,0
  7722     0F5F  1383               	bcf	3,7
  7723     0F60  0800               	movf	0,w
  7724     0F61  00C6               	movwf	??i1_vfpfcnvrt+2
  7725     0F62  0A84               	incf	4,f
  7726     0F63  0800               	movf	0,w
  7727     0F64  00C7               	movwf	??i1_vfpfcnvrt+3
  7728     0F65  0846               	movf	??i1_vfpfcnvrt+2,w
  7729     0F66  0084               	movwf	4
  7730     0F67  1783               	bsf	3,7
  7731     0F68  1C47               	btfss	??i1_vfpfcnvrt+3,0
  7732     0F69  1383               	bcf	3,7
  7733     0F6A  1683               	bsf	3,5	;RP0=1, select bank3
  7734     0F6B  1703               	bsf	3,6	;RP1=1, select bank3
  7735     0F6C  0867               	movf	_nout^(0+384),w
  7736     0F6D  0080               	movwf	0
  7737     0F6E  0A84               	incf	4,f
  7738     0F6F  0868               	movf	(_nout+1)^(0+384),w
  7739     0F70                     L16:
  7740     0F70  0080               	movwf	0
  7741                           
  7742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1634:      break;
  7743     0F71  2F83               	goto	i1l3583
  7744     0F72                     i1l3581:
  7745     0F72  084D               	movf	i1vfpfcnvrt@c,w
  7746                           
  7747                           ; Switch size 1, requested type "simple"
  7748                           ; Number of cases is 5, Range of values is 72 to 122
  7749                           ; switch strategies available:
  7750                           ; Name         Instructions Cycles
  7751                           ; simple_byte           16     9 (average)
  7752                           ; direct_byte          164    11 (fixed)
  7753                           ; jumptable            263     9 (fixed)
  7754                           ;	Chosen strategy is simple_byte
  7755     0F73  3A48               	xorlw	72	; case 72
  7756     0F74  1903               	skipnz
  7757     0F75  2F28               	goto	i1l3573
  7758     0F76  3A20               	xorlw	32	; case 104
  7759     0F77  1903               	skipnz
  7760     0F78  2F27               	goto	i1l3571
  7761     0F79  3A01               	xorlw	1	; case 105
  7762     0F7A  1903               	skipnz
  7763     0F7B  2F27               	goto	i1l3569
  7764     0F7C  3A1D               	xorlw	29	; case 116
  7765     0F7D  1903               	skipnz
  7766     0F7E  2F4B               	goto	i1l3575
  7767     0F7F  3A0E               	xorlw	14	; case 122
  7768     0F80  1903               	skipnz
  7769     0F81  2F4B               	goto	i1l3577
  7770     0F82  2F83               	goto	i1l3583
  7771     0F83                     i1l3583:
  7772                           
  7773                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  7774     0F83  3001               	movlw	1
  7775     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  7776     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  7777     0F86  00C4               	movwf	??i1_vfpfcnvrt
  7778     0F87  0844               	movf	??i1_vfpfcnvrt,w
  7779     0F88  074E               	addwf	i1vfpfcnvrt@cp,w
  7780     0F89  00C6               	movwf	??i1_vfpfcnvrt+2
  7781     0F8A  084F               	movf	i1vfpfcnvrt@cp+1,w
  7782     0F8B  00C5               	movwf	??i1_vfpfcnvrt+1
  7783     0F8C  1803               	skipnc
  7784     0F8D  0AC5               	incf	??i1_vfpfcnvrt+1,f
  7785     0F8E  1BC4               	btfsc	??i1_vfpfcnvrt,7
  7786     0F8F  03C5               	decf	??i1_vfpfcnvrt+1,f
  7787     0F90  0845               	movf	??i1_vfpfcnvrt+1,w
  7788     0F91  00C7               	movwf	??i1_vfpfcnvrt+3
  7789     0F92  0841               	movf	i1vfpfcnvrt@fmt,w
  7790     0F93  0084               	movwf	4
  7791     0F94  0846               	movf	??i1_vfpfcnvrt+2,w
  7792     0F95  1383               	bcf	3,7	;select IRP bank0
  7793     0F96  0080               	movwf	0
  7794     0F97  0847               	movf	??i1_vfpfcnvrt+3,w
  7795     0F98  0A84               	incf	4,f
  7796     0F99  0080               	movwf	0
  7797     0F9A  0384               	decf	4,f
  7798     0F9B                     i1l3585:
  7799                           
  7800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  7801     0F9B  01BF               	clrf	?i1_vfpfcnvrt
  7802     0F9C  01C0               	clrf	?i1_vfpfcnvrt+1
  7803     0F9D  0008               	return
  7804     0F9E                     i1l3589:
  7805                           
  7806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  7807     0F9E  0841               	movf	i1vfpfcnvrt@fmt,w
  7808     0F9F  0084               	movwf	4
  7809     0FA0  1383               	bcf	3,7	;select IRP bank0
  7810     0FA1  0800               	movf	0,w
  7811     0FA2  00C4               	movwf	??i1_vfpfcnvrt
  7812     0FA3  0A84               	incf	4,f
  7813     0FA4  0800               	movf	0,w
  7814     0FA5  00C5               	movwf	??i1_vfpfcnvrt+1
  7815     0FA6  0845               	movf	??i1_vfpfcnvrt+1,w
  7816     0FA7  00FF               	movwf	127
  7817     0FA8  0844               	movf	??i1_vfpfcnvrt,w
  7818     0FA9  0084               	movwf	4
  7819     0FAA  160A  118A  2000  120A  158A  	fcall	stringtab
  7820     0FAF  3A25               	xorlw	37
  7821     0FB0  1D03               	skipz
  7822     0FB1  2FCC               	goto	i1l3599
  7823                           
  7824                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  7825     0FB2  0841               	movf	i1vfpfcnvrt@fmt,w
  7826     0FB3  0084               	movwf	4
  7827     0FB4  3001               	movlw	1
  7828     0FB5  1383               	bcf	3,7	;select IRP bank0
  7829     0FB6  0780               	addwf	0,f
  7830     0FB7  0A84               	incf	4,f
  7831     0FB8  1803               	skipnc
  7832     0FB9  0A80               	incf	0,f
  7833                           
  7834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  7835     0FBA  3025               	movlw	37
  7836     0FBB  00F0               	movwf	i1fputc@c
  7837     0FBC  3000               	movlw	0
  7838     0FBD  00F1               	movwf	i1fputc@c+1
  7839     0FBE  083F               	movf	i1vfpfcnvrt@fp,w
  7840     0FBF  00F2               	movwf	i1fputc@fp
  7841     0FC0  0840               	movf	i1vfpfcnvrt@fp+1,w
  7842     0FC1  00F3               	movwf	i1fputc@fp+1
  7843     0FC2  160A  118A  260E   	fcall	i1_fputc
  7844     0FC5                     i1l3595:
  7845                           
  7846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  7847     0FC5  3001               	movlw	1
  7848     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  7849     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  7850     0FC8  00BF               	movwf	?i1_vfpfcnvrt
  7851     0FC9  3000               	movlw	0
  7852     0FCA  00C0               	movwf	?i1_vfpfcnvrt+1
  7853     0FCB  0008               	return
  7854     0FCC                     i1l3599:
  7855                           
  7856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7857     0FCC  0841               	movf	i1vfpfcnvrt@fmt,w
  7858     0FCD  0084               	movwf	4
  7859     0FCE  3001               	movlw	1
  7860     0FCF  1383               	bcf	3,7	;select IRP bank0
  7861     0FD0  0780               	addwf	0,f
  7862     0FD1  0A84               	incf	4,f
  7863     0FD2  1803               	skipnc
  7864     0FD3  0A80               	incf	0,f
  7865     0FD4  2F9B               	goto	i1l3585
  7866     0FD5                     i1l3605:
  7867                           
  7868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7869     0FD5  0841               	movf	i1vfpfcnvrt@fmt,w
  7870     0FD6  0084               	movwf	4
  7871     0FD7  1383               	bcf	3,7	;select IRP bank0
  7872     0FD8  0800               	movf	0,w
  7873     0FD9  00C4               	movwf	??i1_vfpfcnvrt
  7874     0FDA  0A84               	incf	4,f
  7875     0FDB  0800               	movf	0,w
  7876     0FDC  00C5               	movwf	??i1_vfpfcnvrt+1
  7877     0FDD  0845               	movf	??i1_vfpfcnvrt+1,w
  7878     0FDE  00FF               	movwf	127
  7879     0FDF  0844               	movf	??i1_vfpfcnvrt,w
  7880     0FE0  0084               	movwf	4
  7881     0FE1  160A  118A  2000  120A  158A  	fcall	stringtab
  7882     0FE6  00C6               	movwf	??i1_vfpfcnvrt+2
  7883     0FE7  01C7               	clrf	??i1_vfpfcnvrt+3
  7884     0FE8  0846               	movf	??i1_vfpfcnvrt+2,w
  7885     0FE9  00F0               	movwf	i1fputc@c
  7886     0FEA  0847               	movf	??i1_vfpfcnvrt+3,w
  7887     0FEB  00F1               	movwf	i1fputc@c+1
  7888     0FEC  083F               	movf	i1vfpfcnvrt@fp,w
  7889     0FED  00F2               	movwf	i1fputc@fp
  7890     0FEE  0840               	movf	i1vfpfcnvrt@fp+1,w
  7891     0FEF  00F3               	movwf	i1fputc@fp+1
  7892     0FF0  160A  118A  260E  120A  158A  	fcall	i1_fputc
  7893                           
  7894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  7895     0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  7896     0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  7897     0FF7  0841               	movf	i1vfpfcnvrt@fmt,w
  7898     0FF8  0084               	movwf	4
  7899     0FF9  3001               	movlw	1
  7900     0FFA  1383               	bcf	3,7	;select IRP bank0
  7901     0FFB  0780               	addwf	0,f
  7902     0FFC  0A84               	incf	4,f
  7903     0FFD  1803               	skipnc
  7904     0FFE  0A80               	incf	0,f
  7905     0FFF  2FC5               	goto	i1l3595
  7906     1000                     __end_ofi1_vfpfcnvrt:
  7907                           
  7908                           	psect	text26
  7909     0963                     __ptext26:	
  7910 ;; *************** function i1_xtoa *****************
  7911 ;; Defined at:
  7912 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  7915 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  7916 ;;  d               2   17[BANK0 ] unsigned int 
  7917 ;;  x               1   19[BANK0 ] unsigned char 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  i               2   29[BANK0 ] int 
  7920 ;;  w               2   25[BANK0 ] int 
  7921 ;;  p               2   23[BANK0 ] int 
  7922 ;;  c               1   28[BANK0 ] unsigned char 
  7923 ;;  d_nonzero       1   27[BANK0 ] _Bool 
  7924 ;;  a               1   22[BANK0 ] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  2   15[BANK0 ] int 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7934 ;;      Params:         0       5       0       0       0
  7935 ;;      Locals:         0      11       0       0       0
  7936 ;;      Temps:          0       0       0       0       0
  7937 ;;      Totals:         0      16       0       0       0
  7938 ;;Total ram usage:       16 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; Hardware stack levels required when called: 4
  7941 ;; This function calls:
  7942 ;;		i1_pad
  7943 ;; This function is called by:
  7944 ;;		i1_vfpfcnvrt
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948     0963                     i1_xtoa:	
  7949                           ;psect for function i1_xtoa
  7950                           
  7951                           
  7952                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  7953                           
  7954                           ;incstack = 0
  7955 ;; hardware stack exceeded
  7956                           ; Regs used in i1_xtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7957     0963  1683               	bsf	3,5	;RP0=1, select bank1
  7958     0964  1303               	bcf	3,6	;RP1=0, select bank1
  7959     0965  1BDA               	btfsc	(_prec+1)^(0+128),7
  7960     0966  2969               	goto	i1l3165
  7961                           
  7962                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  7963     0967  30FD               	movlw	253
  7964     0968  05DD               	andwf	_flags^(0+128),f
  7965     0969                     i1l3165:
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  7968     0969  1FDA               	btfss	(_prec+1)^(0+128),7
  7969     096A  2972               	goto	i1l3169
  7970     096B  3001               	movlw	1
  7971     096C  1283               	bcf	3,5	;RP0=0, select bank0
  7972     096D  1303               	bcf	3,6	;RP1=0, select bank0
  7973     096E  00B7               	movwf	i1xtoa@p
  7974     096F  3000               	movlw	0
  7975     0970  00B8               	movwf	i1xtoa@p+1
  7976     0971  297C               	goto	i1l735
  7977     0972                     i1l3169:
  7978     0972  085A               	movf	(_prec+1)^(0+128),w
  7979     0973  1283               	bcf	3,5	;RP0=0, select bank0
  7980     0974  1303               	bcf	3,6	;RP1=0, select bank0
  7981     0975  00B8               	movwf	i1xtoa@p+1
  7982     0976  1683               	bsf	3,5	;RP0=1, select bank1
  7983     0977  1303               	bcf	3,6	;RP1=0, select bank1
  7984     0978  0859               	movf	_prec^(0+128),w
  7985     0979  1283               	bcf	3,5	;RP0=0, select bank0
  7986     097A  1303               	bcf	3,6	;RP1=0, select bank0
  7987     097B  00B7               	movwf	i1xtoa@p
  7988     097C                     i1l735:
  7989                           
  7990                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  7991     097C  1683               	bsf	3,5	;RP0=1, select bank1
  7992     097D  1303               	bcf	3,6	;RP1=0, select bank1
  7993     097E  0858               	movf	(_width+1)^(0+128),w
  7994     097F  1283               	bcf	3,5	;RP0=0, select bank0
  7995     0980  1303               	bcf	3,6	;RP1=0, select bank0
  7996     0981  00BA               	movwf	i1xtoa@w+1
  7997     0982  1683               	bsf	3,5	;RP0=1, select bank1
  7998     0983  1303               	bcf	3,6	;RP1=0, select bank1
  7999     0984  0857               	movf	_width^(0+128),w
  8000     0985  1283               	bcf	3,5	;RP0=0, select bank0
  8001     0986  1303               	bcf	3,6	;RP1=0, select bank0
  8002     0987  00B9               	movwf	i1xtoa@w
  8003                           
  8004                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  8005     0988  0831               	movf	i1xtoa@d,w
  8006     0989  0432               	iorwf	i1xtoa@d+1,w
  8007     098A  1903               	btfsc	3,2
  8008     098B  298E               	goto	u438_20
  8009     098C  3001               	movlw	1
  8010     098D  298F               	goto	u439_20
  8011     098E                     u438_20:
  8012     098E  3000               	movlw	0
  8013     098F                     u439_20:
  8014     098F  00BB               	movwf	i1xtoa@d_nonzero
  8015                           
  8016                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  8017     0990  1683               	bsf	3,5	;RP0=1, select bank1
  8018     0991  1303               	bcf	3,6	;RP1=0, select bank1
  8019     0992  1E5D               	btfss	_flags^(0+128),4
  8020     0993  299F               	goto	i1l3179
  8021     0994  1283               	bcf	3,5	;RP0=0, select bank0
  8022     0995  1303               	bcf	3,6	;RP1=0, select bank0
  8023     0996  083B               	movf	i1xtoa@d_nonzero,w
  8024     0997  1903               	btfsc	3,2
  8025     0998  299F               	goto	i1l3179
  8026                           
  8027                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  8028     0999  30FE               	movlw	254
  8029     099A  07B9               	addwf	i1xtoa@w,f
  8030     099B  1803               	skipnc
  8031     099C  0ABA               	incf	i1xtoa@w+1,f
  8032     099D  30FF               	movlw	255
  8033     099E  07BA               	addwf	i1xtoa@w+1,f
  8034     099F                     i1l3179:
  8035                           
  8036                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  8037     099F  3078               	movlw	120
  8038     09A0  1283               	bcf	3,5	;RP0=0, select bank0
  8039     09A1  0633               	xorwf	i1xtoa@x,w
  8040     09A2  1903               	btfsc	3,2
  8041     09A3  29A6               	goto	i1l3183
  8042     09A4  3041               	movlw	65
  8043     09A5  29A7               	goto	L17
  8044     09A6                     i1l3183:
  8045     09A6  3061               	movlw	97
  8046     09A7                     L17:
  8047     09A7  00B4               	movwf	i1_xtoa$641
  8048     09A8  3000               	movlw	0
  8049     09A9  00B5               	movwf	i1_xtoa$641+1
  8050     09AA  0834               	movf	i1_xtoa$641,w
  8051     09AB  00B6               	movwf	i1xtoa@a
  8052                           
  8053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  8054     09AC  301F               	movlw	31
  8055     09AD  00BD               	movwf	i1xtoa@i
  8056     09AE  3000               	movlw	0
  8057     09AF  00BE               	movwf	i1xtoa@i+1
  8058                           
  8059                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  8060     09B0  1283               	bcf	3,5	;RP0=0, select bank2
  8061     09B1  1703               	bsf	3,6	;RP1=1, select bank2
  8062     09B2  01AF               	clrf	(_dbuf^(0+256)+31)
  8063                           
  8064                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  8065     09B3  29E4               	goto	i1l3205
  8066     09B4                     i1l3187:
  8067                           
  8068                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
  8069     09B4  30FF               	movlw	255
  8070     09B5  1283               	bcf	3,5	;RP0=0, select bank0
  8071     09B6  1303               	bcf	3,6	;RP1=0, select bank0
  8072     09B7  07BD               	addwf	i1xtoa@i,f
  8073     09B8  1803               	skipnc
  8074     09B9  0ABE               	incf	i1xtoa@i+1,f
  8075     09BA  30FF               	movlw	255
  8076     09BB  07BE               	addwf	i1xtoa@i+1,f
  8077                           
  8078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  8079     09BC  0831               	movf	i1xtoa@d,w
  8080     09BD  00BC               	movwf	i1xtoa@c
  8081     09BE  300F               	movlw	15
  8082     09BF  05BC               	andwf	i1xtoa@c,f
  8083                           
  8084                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  8085     09C0  300A               	movlw	10
  8086     09C1  023C               	subwf	i1xtoa@c,w
  8087     09C2  1803               	skipnc
  8088     09C3  29C6               	goto	i1l3195
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  8091     09C4  3030               	movlw	48
  8092     09C5  29C8               	goto	L18
  8093     09C6                     i1l3195:	
  8094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
  8095                           
  8096                           
  8097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  8098     09C6  0836               	movf	i1xtoa@a,w
  8099     09C7  3EF6               	addlw	246
  8100     09C8                     L18:
  8101     09C8  07BC               	addwf	i1xtoa@c,f
  8102                           
  8103                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  8104     09C9  083D               	movf	i1xtoa@i,w
  8105     09CA  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8106     09CB  0084               	movwf	4
  8107     09CC  083C               	movf	i1xtoa@c,w
  8108     09CD  1783               	bsf	3,7	;select IRP bank2
  8109     09CE  0080               	movwf	0
  8110                           
  8111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  8112     09CF  30FF               	movlw	255
  8113     09D0  07B7               	addwf	i1xtoa@p,f
  8114     09D1  1803               	skipnc
  8115     09D2  0AB8               	incf	i1xtoa@p+1,f
  8116     09D3  30FF               	movlw	255
  8117     09D4  07B8               	addwf	i1xtoa@p+1,f
  8118                           
  8119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  8120     09D5  30FF               	movlw	255
  8121     09D6  07B9               	addwf	i1xtoa@w,f
  8122     09D7  1803               	skipnc
  8123     09D8  0ABA               	incf	i1xtoa@w+1,f
  8124     09D9  30FF               	movlw	255
  8125     09DA  07BA               	addwf	i1xtoa@w+1,f
  8126                           
  8127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  8128     09DB  0E31               	swapf	i1xtoa@d,w
  8129     09DC  390F               	andlw	15
  8130     09DD  00B1               	movwf	i1xtoa@d
  8131     09DE  0E32               	swapf	i1xtoa@d+1,w
  8132     09DF  39F0               	andlw	240
  8133     09E0  04B1               	iorwf	i1xtoa@d,f
  8134     09E1  0E32               	swapf	i1xtoa@d+1,w
  8135     09E2  390F               	andlw	15
  8136     09E3  00B2               	movwf	i1xtoa@d+1
  8137     09E4                     i1l3205:
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  8140     09E4  1303               	bcf	3,6	;RP1=0, select bank0
  8141     09E5  083E               	movf	i1xtoa@i+1,w
  8142     09E6  3A80               	xorlw	128
  8143     09E7  00FF               	movwf	127
  8144     09E8  3080               	movlw	128
  8145     09E9  027F               	subwf	127,w
  8146     09EA  1D03               	skipz
  8147     09EB  29EE               	goto	u444_25
  8148     09EC  3002               	movlw	2
  8149     09ED  023D               	subwf	i1xtoa@i,w
  8150     09EE                     u444_25:
  8151     09EE  1C03               	skipc
  8152     09EF  2A12               	goto	i1l749
  8153     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  8154     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  8155     09F2  0831               	movf	i1xtoa@d,w
  8156     09F3  0432               	iorwf	i1xtoa@d+1,w
  8157     09F4  1D03               	btfss	3,2
  8158     09F5  29B4               	goto	i1l3187
  8159     09F6  0838               	movf	i1xtoa@p+1,w
  8160     09F7  3A80               	xorlw	128
  8161     09F8  00FF               	movwf	127
  8162     09F9  3080               	movlw	128
  8163     09FA  027F               	subwf	127,w
  8164     09FB  1D03               	skipz
  8165     09FC  29FF               	goto	u446_25
  8166     09FD  3001               	movlw	1
  8167     09FE  0237               	subwf	i1xtoa@p,w
  8168     09FF                     u446_25:
  8169     09FF  1803               	skipnc
  8170     0A00  29B4               	goto	i1l3187
  8171     0A01  1283               	bcf	3,5	;RP0=0, select bank0
  8172     0A02  1303               	bcf	3,6	;RP1=0, select bank0
  8173     0A03  083A               	movf	i1xtoa@w+1,w
  8174     0A04  3A80               	xorlw	128
  8175     0A05  00FF               	movwf	127
  8176     0A06  3080               	movlw	128
  8177     0A07  027F               	subwf	127,w
  8178     0A08  1D03               	skipz
  8179     0A09  2A0C               	goto	u447_25
  8180     0A0A  3001               	movlw	1
  8181     0A0B  0239               	subwf	i1xtoa@w,w
  8182     0A0C                     u447_25:
  8183     0A0C  1C03               	skipc
  8184     0A0D  2A12               	goto	i1l749
  8185     0A0E  1683               	bsf	3,5	;RP0=1, select bank1
  8186     0A0F  1303               	bcf	3,6	;RP1=0, select bank1
  8187     0A10  18DD               	btfsc	_flags^(0+128),1
  8188     0A11  29B4               	goto	i1l3187
  8189     0A12                     i1l749:
  8190                           
  8191                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
  8192     0A12  1683               	bsf	3,5	;RP0=1, select bank1
  8193     0A13  1303               	bcf	3,6	;RP1=0, select bank1
  8194     0A14  1E5D               	btfss	_flags^(0+128),4
  8195     0A15  2A3A               	goto	i1l3225
  8196     0A16  1283               	bcf	3,5	;RP0=0, select bank0
  8197     0A17  1303               	bcf	3,6	;RP1=0, select bank0
  8198     0A18  083B               	movf	i1xtoa@d_nonzero,w
  8199     0A19  1903               	btfsc	3,2
  8200     0A1A  2A3A               	goto	i1l3225
  8201     0A1B  1683               	bsf	3,5	;RP0=1, select bank1
  8202     0A1C  1303               	bcf	3,6	;RP1=0, select bank1
  8203     0A1D  0859               	movf	_prec^(0+128),w
  8204     0A1E  045A               	iorwf	(_prec+1)^(0+128),w
  8205     0A1F  1903               	btfsc	3,2
  8206     0A20  2A3A               	goto	i1l3225
  8207                           
  8208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1138:         --i;
  8209     0A21  30FF               	movlw	255
  8210     0A22  1283               	bcf	3,5	;RP0=0, select bank0
  8211     0A23  1303               	bcf	3,6	;RP1=0, select bank0
  8212     0A24  07BD               	addwf	i1xtoa@i,f
  8213     0A25  1803               	skipnc
  8214     0A26  0ABE               	incf	i1xtoa@i+1,f
  8215     0A27  30FF               	movlw	255
  8216     0A28  07BE               	addwf	i1xtoa@i+1,f
  8217                           
  8218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
  8219     0A29  083D               	movf	i1xtoa@i,w
  8220     0A2A  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8221     0A2B  0084               	movwf	4
  8222     0A2C  0833               	movf	i1xtoa@x,w
  8223     0A2D  1783               	bsf	3,7	;select IRP bank2
  8224     0A2E  0080               	movwf	0
  8225                           
  8226                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
  8227     0A2F  30FF               	movlw	255
  8228     0A30  07BD               	addwf	i1xtoa@i,f
  8229     0A31  1803               	skipnc
  8230     0A32  0ABE               	incf	i1xtoa@i+1,f
  8231     0A33  30FF               	movlw	255
  8232     0A34  07BE               	addwf	i1xtoa@i+1,f
  8233                           
  8234                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
  8235     0A35  083D               	movf	i1xtoa@i,w
  8236     0A36  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8237     0A37  0084               	movwf	4
  8238     0A38  3030               	movlw	48
  8239     0A39  0080               	movwf	0
  8240     0A3A                     i1l3225:
  8241                           
  8242                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  8243     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  8244     0A3B  082F               	movf	i1xtoa@fp,w
  8245     0A3C  00A8               	movwf	i1pad@fp
  8246     0A3D  0830               	movf	i1xtoa@fp+1,w
  8247     0A3E  00A9               	movwf	i1pad@fp+1
  8248     0A3F  083D               	movf	i1xtoa@i,w
  8249     0A40  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8250     0A41  00AA               	movwf	i1pad@buf
  8251     0A42  083A               	movf	i1xtoa@w+1,w
  8252     0A43  00AC               	movwf	i1pad@p+1
  8253     0A44  0839               	movf	i1xtoa@w,w
  8254     0A45  00AB               	movwf	i1pad@p
  8255     0A46  160A  118A  236A   	fcall	i1_pad
  8256     0A49  1283               	bcf	3,5	;RP0=0, select bank0
  8257     0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  8258     0A4B  0829               	movf	?i1_pad+1,w
  8259     0A4C  00B0               	movwf	?i1_xtoa+1
  8260     0A4D  0828               	movf	?i1_pad,w
  8261     0A4E  00AF               	movwf	?i1_xtoa
  8262     0A4F  0008               	return
  8263     0A50                     __end_ofi1_xtoa:
  8264                           
  8265                           	psect	text27
  8266     169D                     __ptext27:	
  8267 ;; *************** function i1_utoa *****************
  8268 ;; Defined at:
  8269 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  8272 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  8273 ;;  d               2   17[BANK0 ] unsigned int 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  i               2   23[BANK0 ] int 
  8276 ;;  w               2   21[BANK0 ] int 
  8277 ;;  p               2   19[BANK0 ] int 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  2   15[BANK0 ] int 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8287 ;;      Params:         0       4       0       0       0
  8288 ;;      Locals:         0       6       0       0       0
  8289 ;;      Temps:          0       0       0       0       0
  8290 ;;      Totals:         0      10       0       0       0
  8291 ;;Total ram usage:       10 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 4
  8294 ;; This function calls:
  8295 ;;		i1___lwdiv
  8296 ;;		i1___lwmod
  8297 ;;		i1_pad
  8298 ;; This function is called by:
  8299 ;;		i1_vfpfcnvrt
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303     169D                     i1_utoa:	
  8304                           ;psect for function i1_utoa
  8305                           
  8306                           
  8307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
  8308                           
  8309                           ;incstack = 0
  8310 ;; hardware stack exceeded
  8311                           ; Regs used in i1_utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8312     169D  1683               	bsf	3,5	;RP0=1, select bank1
  8313     169E  1303               	bcf	3,6	;RP1=0, select bank1
  8314     169F  1BDA               	btfsc	(_prec+1)^(0+128),7
  8315     16A0  2EA3               	goto	i1l3127
  8316                           
  8317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  8318     16A1  30FD               	movlw	253
  8319     16A2  05DD               	andwf	_flags^(0+128),f
  8320     16A3                     i1l3127:
  8321                           
  8322                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  8323     16A3  1FDA               	btfss	(_prec+1)^(0+128),7
  8324     16A4  2EAC               	goto	i1l3131
  8325     16A5  3001               	movlw	1
  8326     16A6  1283               	bcf	3,5	;RP0=0, select bank0
  8327     16A7  1303               	bcf	3,6	;RP1=0, select bank0
  8328     16A8  00B3               	movwf	i1utoa@p
  8329     16A9  3000               	movlw	0
  8330     16AA  00B4               	movwf	i1utoa@p+1
  8331     16AB  2EB6               	goto	i1l720
  8332     16AC                     i1l3131:
  8333     16AC  085A               	movf	(_prec+1)^(0+128),w
  8334     16AD  1283               	bcf	3,5	;RP0=0, select bank0
  8335     16AE  1303               	bcf	3,6	;RP1=0, select bank0
  8336     16AF  00B4               	movwf	i1utoa@p+1
  8337     16B0  1683               	bsf	3,5	;RP0=1, select bank1
  8338     16B1  1303               	bcf	3,6	;RP1=0, select bank1
  8339     16B2  0859               	movf	_prec^(0+128),w
  8340     16B3  1283               	bcf	3,5	;RP0=0, select bank0
  8341     16B4  1303               	bcf	3,6	;RP1=0, select bank0
  8342     16B5  00B3               	movwf	i1utoa@p
  8343     16B6                     i1l720:
  8344                           
  8345                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  8346     16B6  1683               	bsf	3,5	;RP0=1, select bank1
  8347     16B7  1303               	bcf	3,6	;RP1=0, select bank1
  8348     16B8  0858               	movf	(_width+1)^(0+128),w
  8349     16B9  1283               	bcf	3,5	;RP0=0, select bank0
  8350     16BA  1303               	bcf	3,6	;RP1=0, select bank0
  8351     16BB  00B6               	movwf	i1utoa@w+1
  8352     16BC  1683               	bsf	3,5	;RP0=1, select bank1
  8353     16BD  1303               	bcf	3,6	;RP1=0, select bank1
  8354     16BE  0857               	movf	_width^(0+128),w
  8355     16BF  1283               	bcf	3,5	;RP0=0, select bank0
  8356     16C0  1303               	bcf	3,6	;RP1=0, select bank0
  8357     16C1  00B5               	movwf	i1utoa@w
  8358                           
  8359                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  8360     16C2  301F               	movlw	31
  8361     16C3  00B7               	movwf	i1utoa@i
  8362     16C4  3000               	movlw	0
  8363     16C5  00B8               	movwf	i1utoa@i+1
  8364                           
  8365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  8366     16C6  1283               	bcf	3,5	;RP0=0, select bank2
  8367     16C7  1703               	bsf	3,6	;RP1=1, select bank2
  8368     16C8  01AF               	clrf	(_dbuf^(0+256)+31)
  8369                           
  8370                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8371     16C9  2F27               	goto	i1l3145
  8372     16CA                     i1l3147:
  8373     16CA  0831               	movf	i1utoa@d,w
  8374     16CB  0432               	iorwf	i1utoa@d+1,w
  8375     16CC  1D03               	btfss	3,2
  8376     16CD  2EEA               	goto	i1l3135
  8377     16CE  0834               	movf	i1utoa@p+1,w
  8378     16CF  3A80               	xorlw	128
  8379     16D0  00FF               	movwf	127
  8380     16D1  3080               	movlw	128
  8381     16D2  027F               	subwf	127,w
  8382     16D3  1D03               	skipz
  8383     16D4  2ED7               	goto	u433_25
  8384     16D5  3001               	movlw	1
  8385     16D6  0233               	subwf	i1utoa@p,w
  8386     16D7                     u433_25:
  8387     16D7  1803               	skipnc
  8388     16D8  2EEA               	goto	i1l3135
  8389     16D9  1283               	bcf	3,5	;RP0=0, select bank0
  8390     16DA  1303               	bcf	3,6	;RP1=0, select bank0
  8391     16DB  0836               	movf	i1utoa@w+1,w
  8392     16DC  3A80               	xorlw	128
  8393     16DD  00FF               	movwf	127
  8394     16DE  3080               	movlw	128
  8395     16DF  027F               	subwf	127,w
  8396     16E0  1D03               	skipz
  8397     16E1  2EE4               	goto	u434_25
  8398     16E2  3001               	movlw	1
  8399     16E3  0235               	subwf	i1utoa@w,w
  8400     16E4                     u434_25:
  8401     16E4  1C03               	skipc
  8402     16E5  2F2C               	goto	i1l3155
  8403     16E6  1683               	bsf	3,5	;RP0=1, select bank1
  8404     16E7  1303               	bcf	3,6	;RP1=0, select bank1
  8405     16E8  1CDD               	btfss	_flags^(0+128),1
  8406     16E9  2F2C               	goto	i1l3155
  8407     16EA                     i1l3135:
  8408                           
  8409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  8410     16EA  30FF               	movlw	255
  8411     16EB  1283               	bcf	3,5	;RP0=0, select bank0
  8412     16EC  1303               	bcf	3,6	;RP1=0, select bank0
  8413     16ED  07B7               	addwf	i1utoa@i,f
  8414     16EE  1803               	skipnc
  8415     16EF  0AB8               	incf	i1utoa@i+1,f
  8416     16F0  30FF               	movlw	255
  8417     16F1  07B8               	addwf	i1utoa@i+1,f
  8418                           
  8419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  8420     16F2  0837               	movf	i1utoa@i,w
  8421     16F3  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8422     16F4  0084               	movwf	4
  8423     16F5  300A               	movlw	10
  8424     16F6  00F0               	movwf	i1___lwmod@divisor
  8425     16F7  3000               	movlw	0
  8426     16F8  00F1               	movwf	i1___lwmod@divisor+1
  8427     16F9  0832               	movf	i1utoa@d+1,w
  8428     16FA  00F3               	movwf	i1___lwmod@dividend+1
  8429     16FB  0831               	movf	i1utoa@d,w
  8430     16FC  00F2               	movwf	i1___lwmod@dividend
  8431     16FD  160A  118A  2047  160A  118A  	fcall	i1___lwmod
  8432     1702  0870               	movf	?i1___lwmod,w
  8433     1703  3E30               	addlw	48
  8434     1704  1783               	bsf	3,7	;select IRP bank2
  8435     1705  0080               	movwf	0
  8436                           
  8437                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  8438     1706  30FF               	movlw	255
  8439     1707  1283               	bcf	3,5	;RP0=0, select bank0
  8440     1708  1303               	bcf	3,6	;RP1=0, select bank0
  8441     1709  07B3               	addwf	i1utoa@p,f
  8442     170A  1803               	skipnc
  8443     170B  0AB4               	incf	i1utoa@p+1,f
  8444     170C  30FF               	movlw	255
  8445     170D  07B4               	addwf	i1utoa@p+1,f
  8446                           
  8447                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  8448     170E  30FF               	movlw	255
  8449     170F  07B5               	addwf	i1utoa@w,f
  8450     1710  1803               	skipnc
  8451     1711  0AB6               	incf	i1utoa@w+1,f
  8452     1712  30FF               	movlw	255
  8453     1713  07B6               	addwf	i1utoa@w+1,f
  8454                           
  8455                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  8456     1714  300A               	movlw	10
  8457     1715  00F0               	movwf	i1___lwdiv@divisor
  8458     1716  3000               	movlw	0
  8459     1717  00F1               	movwf	i1___lwdiv@divisor+1
  8460     1718  0832               	movf	i1utoa@d+1,w
  8461     1719  00F3               	movwf	i1___lwdiv@dividend+1
  8462     171A  0831               	movf	i1utoa@d,w
  8463     171B  00F2               	movwf	i1___lwdiv@dividend
  8464     171C  160A  118A  2115  160A  118A  	fcall	i1___lwdiv
  8465     1721  0871               	movf	?i1___lwdiv+1,w
  8466     1722  1283               	bcf	3,5	;RP0=0, select bank0
  8467     1723  1303               	bcf	3,6	;RP1=0, select bank0
  8468     1724  00B2               	movwf	i1utoa@d+1
  8469     1725  0870               	movf	?i1___lwdiv,w
  8470     1726  00B1               	movwf	i1utoa@d
  8471     1727                     i1l3145:
  8472                           
  8473                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8474     1727  1303               	bcf	3,6	;RP1=0, select bank0
  8475     1728  0837               	movf	i1utoa@i,w
  8476     1729  0438               	iorwf	i1utoa@i+1,w
  8477     172A  1D03               	btfss	3,2
  8478     172B  2ECA               	goto	i1l3147
  8479     172C                     i1l3155:
  8480                           
  8481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  8482     172C  1283               	bcf	3,5	;RP0=0, select bank0
  8483     172D  1303               	bcf	3,6	;RP1=0, select bank0
  8484     172E  082F               	movf	i1utoa@fp,w
  8485     172F  00A8               	movwf	i1pad@fp
  8486     1730  0830               	movf	i1utoa@fp+1,w
  8487     1731  00A9               	movwf	i1pad@fp+1
  8488     1732  0837               	movf	i1utoa@i,w
  8489     1733  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8490     1734  00AA               	movwf	i1pad@buf
  8491     1735  0836               	movf	i1utoa@w+1,w
  8492     1736  00AC               	movwf	i1pad@p+1
  8493     1737  0835               	movf	i1utoa@w,w
  8494     1738  00AB               	movwf	i1pad@p
  8495     1739  160A  118A  236A   	fcall	i1_pad
  8496     173C  1283               	bcf	3,5	;RP0=0, select bank0
  8497     173D  1303               	bcf	3,6	;RP1=0, select bank0
  8498     173E  0829               	movf	?i1_pad+1,w
  8499     173F  00B0               	movwf	?i1_utoa+1
  8500     1740  0828               	movf	?i1_pad,w
  8501     1741  00AF               	movwf	?i1_utoa
  8502     1742  0008               	return
  8503     1743                     __end_ofi1_utoa:
  8504                           
  8505                           	psect	text28
  8506     1047                     __ptext28:	
  8507 ;; *************** function i1___lwmod *****************
  8508 ;; Defined at:
  8509 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  divisor         2    0[COMMON] unsigned int 
  8512 ;;  dividend        2    2[COMMON] unsigned int 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  counter         1    4[COMMON] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  2    0[COMMON] unsigned int 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8524 ;;      Params:         4       0       0       0       0
  8525 ;;      Locals:         1       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0
  8527 ;;      Totals:         5       0       0       0       0
  8528 ;;Total ram usage:        5 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		i1_utoa
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537     1047                     i1___lwmod:	
  8538                           ;psect for function i1___lwmod
  8539                           
  8540                           
  8541                           ;incstack = 0
  8542 ;; hardware stack exceeded
  8543                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8544     1047  0870               	movf	i1___lwmod@divisor,w
  8545     1048  0471               	iorwf	i1___lwmod@divisor+1,w
  8546     1049  1903               	btfsc	3,2
  8547     104A  2872               	goto	i1l2693
  8548     104B  3001               	movlw	1
  8549     104C  00F4               	movwf	i1___lwmod@counter
  8550     104D                     i1l2683:
  8551     104D  1BF1               	btfsc	i1___lwmod@divisor+1,7
  8552     104E  2859               	goto	i1l2685
  8553     104F  3001               	movlw	1
  8554     1050                     u336_25:
  8555     1050  1003               	clrc
  8556     1051  0DF0               	rlf	i1___lwmod@divisor,f
  8557     1052  0DF1               	rlf	i1___lwmod@divisor+1,f
  8558     1053  3EFF               	addlw	-1
  8559     1054  1D03               	skipz
  8560     1055  2850               	goto	u336_25
  8561     1056  3001               	movlw	1
  8562     1057  07F4               	addwf	i1___lwmod@counter,f
  8563     1058  284D               	goto	i1l2683
  8564     1059                     i1l2685:
  8565     1059  0871               	movf	i1___lwmod@divisor+1,w
  8566     105A  0273               	subwf	i1___lwmod@dividend+1,w
  8567     105B  1D03               	skipz
  8568     105C  285F               	goto	u338_25
  8569     105D  0870               	movf	i1___lwmod@divisor,w
  8570     105E  0272               	subwf	i1___lwmod@dividend,w
  8571     105F                     u338_25:
  8572     105F  1C03               	skipc
  8573     1060  2867               	goto	i1l2689
  8574     1061  0870               	movf	i1___lwmod@divisor,w
  8575     1062  02F2               	subwf	i1___lwmod@dividend,f
  8576     1063  0871               	movf	i1___lwmod@divisor+1,w
  8577     1064  1C03               	skipc
  8578     1065  03F3               	decf	i1___lwmod@dividend+1,f
  8579     1066  02F3               	subwf	i1___lwmod@dividend+1,f
  8580     1067                     i1l2689:
  8581     1067  3001               	movlw	1
  8582     1068                     u339_25:
  8583     1068  1003               	clrc
  8584     1069  0CF1               	rrf	i1___lwmod@divisor+1,f
  8585     106A  0CF0               	rrf	i1___lwmod@divisor,f
  8586     106B  3EFF               	addlw	-1
  8587     106C  1D03               	skipz
  8588     106D  2868               	goto	u339_25
  8589     106E  3001               	movlw	1
  8590     106F  02F4               	subwf	i1___lwmod@counter,f
  8591     1070  1D03               	btfss	3,2
  8592     1071  2859               	goto	i1l2685
  8593     1072                     i1l2693:
  8594     1072  0873               	movf	i1___lwmod@dividend+1,w
  8595     1073  00F1               	movwf	?i1___lwmod+1
  8596     1074  0872               	movf	i1___lwmod@dividend,w
  8597     1075  00F0               	movwf	?i1___lwmod
  8598     1076  0008               	return
  8599     1077                     __end_ofi1___lwmod:
  8600                           
  8601                           	psect	text29
  8602     1115                     __ptext29:	
  8603 ;; *************** function i1___lwdiv *****************
  8604 ;; Defined at:
  8605 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  divisor         2    0[COMMON] unsigned int 
  8608 ;;  dividend        2    2[COMMON] unsigned int 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  quotient        2    4[COMMON] unsigned int 
  8611 ;;  counter         1    6[COMMON] unsigned char 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  2    0[COMMON] unsigned int 
  8614 ;; Registers used:
  8615 ;;		wreg, status,2, status,0
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8621 ;;      Params:         4       0       0       0       0
  8622 ;;      Locals:         3       0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0
  8624 ;;      Totals:         7       0       0       0       0
  8625 ;;Total ram usage:        7 bytes
  8626 ;; Hardware stack levels used: 1
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		i1_utoa
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634     1115                     i1___lwdiv:	
  8635                           ;psect for function i1___lwdiv
  8636                           
  8637                           
  8638                           ;incstack = 0
  8639 ;; hardware stack exceeded
  8640                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8641     1115  01F4               	clrf	i1___lwdiv@quotient
  8642     1116  01F5               	clrf	i1___lwdiv@quotient+1
  8643     1117  0870               	movf	i1___lwdiv@divisor,w
  8644     1118  0471               	iorwf	i1___lwdiv@divisor+1,w
  8645     1119  1903               	btfsc	3,2
  8646     111A  294A               	goto	i1l2671
  8647     111B  3001               	movlw	1
  8648     111C  00F6               	movwf	i1___lwdiv@counter
  8649     111D                     i1l2659:
  8650     111D  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8651     111E  2929               	goto	i1l2661
  8652     111F  3001               	movlw	1
  8653     1120                     u329_25:
  8654     1120  1003               	clrc
  8655     1121  0DF0               	rlf	i1___lwdiv@divisor,f
  8656     1122  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8657     1123  3EFF               	addlw	-1
  8658     1124  1D03               	skipz
  8659     1125  2920               	goto	u329_25
  8660     1126  3001               	movlw	1
  8661     1127  07F6               	addwf	i1___lwdiv@counter,f
  8662     1128  291D               	goto	i1l2659
  8663     1129                     i1l2661:
  8664     1129  3001               	movlw	1
  8665     112A                     u331_25:
  8666     112A  1003               	clrc
  8667     112B  0DF4               	rlf	i1___lwdiv@quotient,f
  8668     112C  0DF5               	rlf	i1___lwdiv@quotient+1,f
  8669     112D  3EFF               	addlw	-1
  8670     112E  1D03               	skipz
  8671     112F  292A               	goto	u331_25
  8672     1130  0871               	movf	i1___lwdiv@divisor+1,w
  8673     1131  0273               	subwf	i1___lwdiv@dividend+1,w
  8674     1132  1D03               	skipz
  8675     1133  2936               	goto	u332_25
  8676     1134  0870               	movf	i1___lwdiv@divisor,w
  8677     1135  0272               	subwf	i1___lwdiv@dividend,w
  8678     1136                     u332_25:
  8679     1136  1C03               	skipc
  8680     1137  293F               	goto	i1l2667
  8681     1138  0870               	movf	i1___lwdiv@divisor,w
  8682     1139  02F2               	subwf	i1___lwdiv@dividend,f
  8683     113A  0871               	movf	i1___lwdiv@divisor+1,w
  8684     113B  1C03               	skipc
  8685     113C  03F3               	decf	i1___lwdiv@dividend+1,f
  8686     113D  02F3               	subwf	i1___lwdiv@dividend+1,f
  8687     113E  1474               	bsf	i1___lwdiv@quotient,0
  8688     113F                     i1l2667:
  8689     113F  3001               	movlw	1
  8690     1140                     u333_25:
  8691     1140  1003               	clrc
  8692     1141  0CF1               	rrf	i1___lwdiv@divisor+1,f
  8693     1142  0CF0               	rrf	i1___lwdiv@divisor,f
  8694     1143  3EFF               	addlw	-1
  8695     1144  1D03               	skipz
  8696     1145  2940               	goto	u333_25
  8697     1146  3001               	movlw	1
  8698     1147  02F6               	subwf	i1___lwdiv@counter,f
  8699     1148  1D03               	btfss	3,2
  8700     1149  2929               	goto	i1l2661
  8701     114A                     i1l2671:
  8702     114A  0875               	movf	i1___lwdiv@quotient+1,w
  8703     114B  00F1               	movwf	?i1___lwdiv+1
  8704     114C  0874               	movf	i1___lwdiv@quotient,w
  8705     114D  00F0               	movwf	?i1___lwdiv
  8706     114E  0008               	return
  8707     114F                     __end_ofi1___lwdiv:
  8708                           
  8709                           	psect	text30
  8710     149C                     __ptext30:	
  8711 ;; *************** function i1_read_prec_or_width *****************
  8712 ;; Defined at:
  8713 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  8716 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  8717 ;;  ap              2    7[COMMON] PTR PTR void [1]
  8718 ;;		 -> i1sprintf@ap(2), sprintf@ap(1), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  n               2   12[COMMON] int 
  8721 ;;  c               1   11[COMMON] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  2    6[COMMON] int 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8731 ;;      Params:         3       0       0       0       0
  8732 ;;      Locals:         3       0       0       0       0
  8733 ;;      Temps:          2       0       0       0       0
  8734 ;;      Totals:         8       0       0       0       0
  8735 ;;Total ram usage:        8 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 1
  8738 ;; This function calls:
  8739 ;;		i1___wmul
  8740 ;; This function is called by:
  8741 ;;		i1_vfpfcnvrt
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745     149C                     i1_read_prec_or_width:	
  8746                           ;psect for function i1_read_prec_or_width
  8747                           
  8748                           
  8749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  8750                           
  8751                           ;incstack = 0
  8752 ;; hardware stack exceeded
  8753                           ; Regs used in i1_read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8754     149C  01FC               	clrf	i1read_prec_or_width@n
  8755     149D  01FD               	clrf	i1read_prec_or_width@n+1
  8756                           
  8757                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  8758     149E  0876               	movf	i1read_prec_or_width@fmt,w
  8759     149F  0084               	movwf	4
  8760     14A0  1383               	bcf	3,7	;select IRP bank0
  8761     14A1  0800               	movf	0,w
  8762     14A2  00F9               	movwf	??i1_read_prec_or_width
  8763     14A3  0A84               	incf	4,f
  8764     14A4  0800               	movf	0,w
  8765     14A5  00FA               	movwf	??i1_read_prec_or_width+1
  8766     14A6  087A               	movf	??i1_read_prec_or_width+1,w
  8767     14A7  1283               	bcf	3,5	;RP0=0, select bank0
  8768     14A8  1303               	bcf	3,6	;RP1=0, select bank0
  8769     14A9  00FF               	movwf	127
  8770     14AA  0879               	movf	??i1_read_prec_or_width,w
  8771     14AB  0084               	movwf	4
  8772     14AC  160A  118A  2000  160A  118A  	fcall	stringtab
  8773     14B1  3A2A               	xorlw	42
  8774     14B2  1D03               	skipz
  8775     14B3  2CF4               	goto	i1l3239
  8776                           
  8777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  8778     14B4  0876               	movf	i1read_prec_or_width@fmt,w
  8779     14B5  0084               	movwf	4
  8780     14B6  3001               	movlw	1
  8781     14B7  1383               	bcf	3,7	;select IRP bank0
  8782     14B8  0780               	addwf	0,f
  8783     14B9  0A84               	incf	4,f
  8784     14BA  1803               	skipnc
  8785     14BB  0A80               	incf	0,f
  8786                           
  8787                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  8788     14BC  0877               	movf	i1read_prec_or_width@ap,w
  8789     14BD  0084               	movwf	4
  8790     14BE  1783               	bsf	3,7
  8791     14BF  1C78               	btfss	i1read_prec_or_width@ap+1,0
  8792     14C0  1383               	bcf	3,7
  8793     14C1  0800               	movf	0,w
  8794     14C2  00F9               	movwf	??i1_read_prec_or_width
  8795     14C3  3002               	movlw	2
  8796     14C4  0780               	addwf	0,f
  8797     14C5  0A84               	incf	4,f
  8798     14C6  0800               	movf	0,w
  8799     14C7  00FA               	movwf	??i1_read_prec_or_width+1
  8800     14C8  3000               	movlw	0
  8801     14C9  1803               	skipnc
  8802     14CA  0A80               	incf	0,f
  8803     14CB  0780               	addwf	0,f
  8804     14CC  0879               	movf	??i1_read_prec_or_width,w
  8805     14CD  0084               	movwf	4
  8806     14CE  1783               	bsf	3,7
  8807     14CF  1C7A               	btfss	??i1_read_prec_or_width+1,0
  8808     14D0  1383               	bcf	3,7
  8809     14D1  0800               	movf	0,w
  8810     14D2  00FC               	movwf	i1read_prec_or_width@n
  8811     14D3  0A84               	incf	4,f
  8812     14D4  0800               	movf	0,w
  8813     14D5  00FD               	movwf	i1read_prec_or_width@n+1
  8814                           
  8815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  8816     14D6  2D0D               	goto	i1l3241
  8817     14D7                     i1l3235:
  8818                           
  8819                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  8820     14D7  087D               	movf	i1read_prec_or_width@n+1,w
  8821     14D8  00F1               	movwf	i1___wmul@multiplier+1
  8822     14D9  087C               	movf	i1read_prec_or_width@n,w
  8823     14DA  00F0               	movwf	i1___wmul@multiplier
  8824     14DB  300A               	movlw	10
  8825     14DC  00F2               	movwf	i1___wmul@multiplicand
  8826     14DD  3000               	movlw	0
  8827     14DE  00F3               	movwf	i1___wmul@multiplicand+1
  8828     14DF  160A  158A  271E  160A  118A  	fcall	i1___wmul
  8829     14E4  087B               	movf	i1read_prec_or_width@c,w
  8830     14E5  0770               	addwf	?i1___wmul,w
  8831     14E6  00FC               	movwf	i1read_prec_or_width@n
  8832     14E7  3000               	movlw	0
  8833     14E8  1803               	skipnc
  8834     14E9  3001               	movlw	1
  8835     14EA  0771               	addwf	?i1___wmul+1,w
  8836     14EB  00FD               	movwf	i1read_prec_or_width@n+1
  8837                           
  8838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  8839     14EC  0876               	movf	i1read_prec_or_width@fmt,w
  8840     14ED  0084               	movwf	4
  8841     14EE  3001               	movlw	1
  8842     14EF  1383               	bcf	3,7	;select IRP bank0
  8843     14F0  0780               	addwf	0,f
  8844     14F1  0A84               	incf	4,f
  8845     14F2  1803               	skipnc
  8846     14F3  0A80               	incf	0,f
  8847     14F4                     i1l3239:
  8848                           
  8849                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  8850     14F4  0876               	movf	i1read_prec_or_width@fmt,w
  8851     14F5  0084               	movwf	4
  8852     14F6  1383               	bcf	3,7	;select IRP bank0
  8853     14F7  0800               	movf	0,w
  8854     14F8  00F9               	movwf	??i1_read_prec_or_width
  8855     14F9  0A84               	incf	4,f
  8856     14FA  0800               	movf	0,w
  8857     14FB  00FA               	movwf	??i1_read_prec_or_width+1
  8858     14FC  087A               	movf	??i1_read_prec_or_width+1,w
  8859     14FD  1283               	bcf	3,5	;RP0=0, select bank0
  8860     14FE  1303               	bcf	3,6	;RP1=0, select bank0
  8861     14FF  00FF               	movwf	127
  8862     1500  0879               	movf	??i1_read_prec_or_width,w
  8863     1501  0084               	movwf	4
  8864     1502  160A  118A  2000  160A  118A  	fcall	stringtab
  8865     1507  3ED0               	addlw	208
  8866     1508  00FB               	movwf	i1read_prec_or_width@c
  8867     1509  300A               	movlw	10
  8868     150A  027B               	subwf	i1read_prec_or_width@c,w
  8869     150B  1C03               	skipc
  8870     150C  2CD7               	goto	i1l3235
  8871     150D                     i1l3241:
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  8874     150D  087D               	movf	i1read_prec_or_width@n+1,w
  8875     150E  00F7               	movwf	?i1_read_prec_or_width+1
  8876     150F  087C               	movf	i1read_prec_or_width@n,w
  8877     1510  00F6               	movwf	?i1_read_prec_or_width
  8878     1511  0008               	return
  8879     1512                     __end_ofi1_read_prec_or_width:
  8880                           
  8881                           	psect	text31
  8882     1F1E                     __ptext31:	
  8883 ;; *************** function i1___wmul *****************
  8884 ;; Defined at:
  8885 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  multiplier      2    0[COMMON] unsigned int 
  8888 ;;  multiplicand    2    2[COMMON] unsigned int 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  product         2    4[COMMON] unsigned int 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  2    0[COMMON] unsigned int 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8900 ;;      Params:         4       0       0       0       0
  8901 ;;      Locals:         2       0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0
  8903 ;;      Totals:         6       0       0       0       0
  8904 ;;Total ram usage:        6 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		i1_read_prec_or_width
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913     1F1E                     i1___wmul:	
  8914                           ;psect for function i1___wmul
  8915                           
  8916                           
  8917                           ;incstack = 0
  8918 ;; hardware stack exceeded
  8919                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  8920     1F1E  01F4               	clrf	i1___wmul@product
  8921     1F1F  01F5               	clrf	i1___wmul@product+1
  8922     1F20                     i1l2555:
  8923     1F20  1C70               	btfss	i1___wmul@multiplier,0
  8924     1F21  2F28               	goto	i1l162
  8925     1F22  0872               	movf	i1___wmul@multiplicand,w
  8926     1F23  07F4               	addwf	i1___wmul@product,f
  8927     1F24  1803               	skipnc
  8928     1F25  0AF5               	incf	i1___wmul@product+1,f
  8929     1F26  0873               	movf	i1___wmul@multiplicand+1,w
  8930     1F27  07F5               	addwf	i1___wmul@product+1,f
  8931     1F28                     i1l162:
  8932     1F28  3001               	movlw	1
  8933     1F29                     u306_25:
  8934     1F29  1003               	clrc
  8935     1F2A  0DF2               	rlf	i1___wmul@multiplicand,f
  8936     1F2B  0DF3               	rlf	i1___wmul@multiplicand+1,f
  8937     1F2C  3EFF               	addlw	-1
  8938     1F2D  1D03               	skipz
  8939     1F2E  2F29               	goto	u306_25
  8940     1F2F  3001               	movlw	1
  8941     1F30                     u307_25:
  8942     1F30  1003               	clrc
  8943     1F31  0CF1               	rrf	i1___wmul@multiplier+1,f
  8944     1F32  0CF0               	rrf	i1___wmul@multiplier,f
  8945     1F33  3EFF               	addlw	-1
  8946     1F34  1D03               	skipz
  8947     1F35  2F30               	goto	u307_25
  8948     1F36  0870               	movf	i1___wmul@multiplier,w
  8949     1F37  0471               	iorwf	i1___wmul@multiplier+1,w
  8950     1F38  1D03               	btfss	3,2
  8951     1F39  2F20               	goto	i1l2555
  8952     1F3A  0875               	movf	i1___wmul@product+1,w
  8953     1F3B  00F1               	movwf	?i1___wmul+1
  8954     1F3C  0874               	movf	i1___wmul@product,w
  8955     1F3D  00F0               	movwf	?i1___wmul
  8956     1F3E  0008               	return
  8957     1F3F                     __end_ofi1___wmul:
  8958                           
  8959                           	psect	text32
  8960     089D                     __ptext32:	
  8961 ;; *************** function i1_otoa *****************
  8962 ;; Defined at:
  8963 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  8966 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  8967 ;;  d               2   17[BANK0 ] unsigned int 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  i               2   26[BANK0 ] int 
  8970 ;;  w               2   23[BANK0 ] int 
  8971 ;;  p               2   21[BANK0 ] int 
  8972 ;;  t               1   25[BANK0 ] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  2   15[BANK0 ] int 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8982 ;;      Params:         0       4       0       0       0
  8983 ;;      Locals:         0       7       0       0       0
  8984 ;;      Temps:          0       2       0       0       0
  8985 ;;      Totals:         0      13       0       0       0
  8986 ;;Total ram usage:       13 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 4
  8989 ;; This function calls:
  8990 ;;		i1_pad
  8991 ;; This function is called by:
  8992 ;;		i1_vfpfcnvrt
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996     089D                     i1_otoa:	
  8997                           ;psect for function i1_otoa
  8998                           
  8999                           
  9000                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
  9001                           
  9002                           ;incstack = 0
  9003 ;; hardware stack exceeded
  9004                           ; Regs used in i1_otoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9005     089D  1683               	bsf	3,5	;RP0=1, select bank1
  9006     089E  1303               	bcf	3,6	;RP1=0, select bank1
  9007     089F  1BDA               	btfsc	(_prec+1)^(0+128),7
  9008     08A0  28A3               	goto	i1l3077
  9009                           
  9010                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
  9011     08A1  30FD               	movlw	253
  9012     08A2  05DD               	andwf	_flags^(0+128),f
  9013     08A3                     i1l3077:
  9014                           
  9015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
  9016     08A3  1FDA               	btfss	(_prec+1)^(0+128),7
  9017     08A4  28AC               	goto	i1l3081
  9018     08A5  3001               	movlw	1
  9019     08A6  1283               	bcf	3,5	;RP0=0, select bank0
  9020     08A7  1303               	bcf	3,6	;RP1=0, select bank0
  9021     08A8  00B5               	movwf	i1otoa@p
  9022     08A9  3000               	movlw	0
  9023     08AA  00B6               	movwf	i1otoa@p+1
  9024     08AB  28B6               	goto	i1l702
  9025     08AC                     i1l3081:
  9026     08AC  085A               	movf	(_prec+1)^(0+128),w
  9027     08AD  1283               	bcf	3,5	;RP0=0, select bank0
  9028     08AE  1303               	bcf	3,6	;RP1=0, select bank0
  9029     08AF  00B6               	movwf	i1otoa@p+1
  9030     08B0  1683               	bsf	3,5	;RP0=1, select bank1
  9031     08B1  1303               	bcf	3,6	;RP1=0, select bank1
  9032     08B2  0859               	movf	_prec^(0+128),w
  9033     08B3  1283               	bcf	3,5	;RP0=0, select bank0
  9034     08B4  1303               	bcf	3,6	;RP1=0, select bank0
  9035     08B5  00B5               	movwf	i1otoa@p
  9036     08B6                     i1l702:
  9037                           
  9038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
  9039     08B6  1683               	bsf	3,5	;RP0=1, select bank1
  9040     08B7  1303               	bcf	3,6	;RP1=0, select bank1
  9041     08B8  0858               	movf	(_width+1)^(0+128),w
  9042     08B9  1283               	bcf	3,5	;RP0=0, select bank0
  9043     08BA  1303               	bcf	3,6	;RP1=0, select bank0
  9044     08BB  00B8               	movwf	i1otoa@w+1
  9045     08BC  1683               	bsf	3,5	;RP0=1, select bank1
  9046     08BD  1303               	bcf	3,6	;RP1=0, select bank1
  9047     08BE  0857               	movf	_width^(0+128),w
  9048     08BF  1283               	bcf	3,5	;RP0=0, select bank0
  9049     08C0  1303               	bcf	3,6	;RP1=0, select bank0
  9050     08C1  00B7               	movwf	i1otoa@w
  9051                           
  9052                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
  9053     08C2  301F               	movlw	31
  9054     08C3  00BA               	movwf	i1otoa@i
  9055     08C4  3000               	movlw	0
  9056     08C5  00BB               	movwf	i1otoa@i+1
  9057                           
  9058                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
  9059     08C6  1283               	bcf	3,5	;RP0=0, select bank2
  9060     08C7  1703               	bsf	3,6	;RP1=1, select bank2
  9061     08C8  01AF               	clrf	(_dbuf^(0+256)+31)
  9062                           
  9063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 899:     t = 0;
  9064     08C9  1283               	bcf	3,5	;RP0=0, select bank0
  9065     08CA  1303               	bcf	3,6	;RP1=0, select bank0
  9066     08CB  01B9               	clrf	i1otoa@t
  9067                           
  9068                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  9069     08CC  291F               	goto	i1l3099
  9070     08CD                     i1l3101:
  9071     08CD  1283               	bcf	3,5	;RP0=0, select bank0
  9072     08CE  1303               	bcf	3,6	;RP1=0, select bank0
  9073     08CF  0831               	movf	i1otoa@d,w
  9074     08D0  0432               	iorwf	i1otoa@d+1,w
  9075     08D1  1D03               	btfss	3,2
  9076     08D2  28EF               	goto	i1l3087
  9077     08D3  0836               	movf	i1otoa@p+1,w
  9078     08D4  3A80               	xorlw	128
  9079     08D5  00FF               	movwf	127
  9080     08D6  3080               	movlw	128
  9081     08D7  027F               	subwf	127,w
  9082     08D8  1D03               	skipz
  9083     08D9  28DC               	goto	u423_25
  9084     08DA  3001               	movlw	1
  9085     08DB  0235               	subwf	i1otoa@p,w
  9086     08DC                     u423_25:
  9087     08DC  1803               	skipnc
  9088     08DD  28EF               	goto	i1l3087
  9089     08DE  1283               	bcf	3,5	;RP0=0, select bank0
  9090     08DF  1303               	bcf	3,6	;RP1=0, select bank0
  9091     08E0  0838               	movf	i1otoa@w+1,w
  9092     08E1  3A80               	xorlw	128
  9093     08E2  00FF               	movwf	127
  9094     08E3  3080               	movlw	128
  9095     08E4  027F               	subwf	127,w
  9096     08E5  1D03               	skipz
  9097     08E6  28E9               	goto	u424_25
  9098     08E7  3001               	movlw	1
  9099     08E8  0237               	subwf	i1otoa@w,w
  9100     08E9                     u424_25:
  9101     08E9  1C03               	skipc
  9102     08EA  292A               	goto	i1l3109
  9103     08EB  1683               	bsf	3,5	;RP0=1, select bank1
  9104     08EC  1303               	bcf	3,6	;RP1=0, select bank1
  9105     08ED  1CDD               	btfss	_flags^(0+128),1
  9106     08EE  292A               	goto	i1l3109
  9107     08EF                     i1l3087:
  9108                           
  9109                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 911:         --i;
  9110     08EF  30FF               	movlw	255
  9111     08F0  1283               	bcf	3,5	;RP0=0, select bank0
  9112     08F1  1303               	bcf	3,6	;RP1=0, select bank0
  9113     08F2  07BA               	addwf	i1otoa@i,f
  9114     08F3  1803               	skipnc
  9115     08F4  0ABB               	incf	i1otoa@i+1,f
  9116     08F5  30FF               	movlw	255
  9117     08F6  07BB               	addwf	i1otoa@i+1,f
  9118                           
  9119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
  9120     08F7  0831               	movf	i1otoa@d,w
  9121     08F8  00B9               	movwf	i1otoa@t
  9122     08F9  3007               	movlw	7
  9123     08FA  05B9               	andwf	i1otoa@t,f
  9124                           
  9125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
  9126     08FB  083A               	movf	i1otoa@i,w
  9127     08FC  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9128     08FD  0084               	movwf	4
  9129     08FE  0839               	movf	i1otoa@t,w
  9130     08FF  3E30               	addlw	48
  9131     0900  1783               	bsf	3,7	;select IRP bank2
  9132     0901  0080               	movwf	0
  9133                           
  9134                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 919:         --p;
  9135     0902  30FF               	movlw	255
  9136     0903  07B5               	addwf	i1otoa@p,f
  9137     0904  1803               	skipnc
  9138     0905  0AB6               	incf	i1otoa@p+1,f
  9139     0906  30FF               	movlw	255
  9140     0907  07B6               	addwf	i1otoa@p+1,f
  9141                           
  9142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 923:         --w;
  9143     0908  30FF               	movlw	255
  9144     0909  07B7               	addwf	i1otoa@w,f
  9145     090A  1803               	skipnc
  9146     090B  0AB8               	incf	i1otoa@w+1,f
  9147     090C  30FF               	movlw	255
  9148     090D  07B8               	addwf	i1otoa@w+1,f
  9149                           
  9150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
  9151     090E  0832               	movf	i1otoa@d+1,w
  9152     090F  00B4               	movwf	??i1_otoa+1
  9153     0910  0831               	movf	i1otoa@d,w
  9154     0911  00B3               	movwf	??i1_otoa
  9155     0912  1003               	clrc
  9156     0913  0CB4               	rrf	??i1_otoa+1,f
  9157     0914  0CB3               	rrf	??i1_otoa,f
  9158     0915  1003               	clrc
  9159     0916  0CB4               	rrf	??i1_otoa+1,f
  9160     0917  0CB3               	rrf	??i1_otoa,f
  9161     0918  1003               	clrc
  9162     0919  0CB4               	rrf	??i1_otoa+1,f
  9163     091A  0CB3               	rrf	??i1_otoa,f
  9164     091B  0833               	movf	??i1_otoa,w
  9165     091C  00B1               	movwf	i1otoa@d
  9166     091D  0834               	movf	??i1_otoa+1,w
  9167     091E  00B2               	movwf	i1otoa@d+1
  9168     091F                     i1l3099:
  9169                           
  9170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  9171     091F  083B               	movf	i1otoa@i+1,w
  9172     0920  3A80               	xorlw	128
  9173     0921  00FF               	movwf	127
  9174     0922  3080               	movlw	128
  9175     0923  027F               	subwf	127,w
  9176     0924  1D03               	skipz
  9177     0925  2928               	goto	u421_25
  9178     0926  3001               	movlw	1
  9179     0927  023A               	subwf	i1otoa@i,w
  9180     0928                     u421_25:
  9181     0928  1803               	btfsc	3,0
  9182     0929  28CD               	goto	i1l3101
  9183     092A                     i1l3109:
  9184                           
  9185                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  9186     092A  1283               	bcf	3,5	;RP0=0, select bank0
  9187     092B  1303               	bcf	3,6	;RP1=0, select bank0
  9188     092C  0839               	movf	i1otoa@t,w
  9189     092D  1D03               	btfss	3,2
  9190     092E  2935               	goto	i1l712
  9191     092F  1683               	bsf	3,5	;RP0=1, select bank1
  9192     0930  1303               	bcf	3,6	;RP1=0, select bank1
  9193     0931  0859               	movf	_prec^(0+128),w
  9194     0932  045A               	iorwf	(_prec+1)^(0+128),w
  9195     0933  1D03               	btfss	3,2
  9196     0934  294D               	goto	i1l3119
  9197     0935                     i1l712:
  9198     0935  1683               	bsf	3,5	;RP0=1, select bank1
  9199     0936  1303               	bcf	3,6	;RP1=0, select bank1
  9200     0937  1E5D               	btfss	_flags^(0+128),4
  9201     0938  294D               	goto	i1l3119
  9202                           
  9203                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 930:         --i;
  9204     0939  30FF               	movlw	255
  9205     093A  1283               	bcf	3,5	;RP0=0, select bank0
  9206     093B  1303               	bcf	3,6	;RP1=0, select bank0
  9207     093C  07BA               	addwf	i1otoa@i,f
  9208     093D  1803               	skipnc
  9209     093E  0ABB               	incf	i1otoa@i+1,f
  9210     093F  30FF               	movlw	255
  9211     0940  07BB               	addwf	i1otoa@i+1,f
  9212                           
  9213                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
  9214     0941  083A               	movf	i1otoa@i,w
  9215     0942  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9216     0943  0084               	movwf	4
  9217     0944  3030               	movlw	48
  9218     0945  1783               	bsf	3,7	;select IRP bank2
  9219     0946  0080               	movwf	0
  9220                           
  9221                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 932:         --w;
  9222     0947  30FF               	movlw	255
  9223     0948  07B7               	addwf	i1otoa@w,f
  9224     0949  1803               	skipnc
  9225     094A  0AB8               	incf	i1otoa@w+1,f
  9226     094B  30FF               	movlw	255
  9227     094C  07B8               	addwf	i1otoa@w+1,f
  9228     094D                     i1l3119:
  9229                           
  9230                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
  9231     094D  1283               	bcf	3,5	;RP0=0, select bank0
  9232     094E  082F               	movf	i1otoa@fp,w
  9233     094F  00A8               	movwf	i1pad@fp
  9234     0950  0830               	movf	i1otoa@fp+1,w
  9235     0951  00A9               	movwf	i1pad@fp+1
  9236     0952  083A               	movf	i1otoa@i,w
  9237     0953  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9238     0954  00AA               	movwf	i1pad@buf
  9239     0955  0838               	movf	i1otoa@w+1,w
  9240     0956  00AC               	movwf	i1pad@p+1
  9241     0957  0837               	movf	i1otoa@w,w
  9242     0958  00AB               	movwf	i1pad@p
  9243     0959  160A  118A  236A   	fcall	i1_pad
  9244     095C  1283               	bcf	3,5	;RP0=0, select bank0
  9245     095D  1303               	bcf	3,6	;RP1=0, select bank0
  9246     095E  0829               	movf	?i1_pad+1,w
  9247     095F  00B0               	movwf	?i1_otoa+1
  9248     0960  0828               	movf	?i1_pad,w
  9249     0961  00AF               	movwf	?i1_otoa
  9250     0962  0008               	return
  9251     0963                     __end_ofi1_otoa:
  9252                           
  9253                           	psect	text33
  9254     0A50                     __ptext33:	
  9255 ;; *************** function i1_dtoa *****************
  9256 ;; Defined at:
  9257 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9260 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9261 ;;  d               2   17[BANK0 ] int 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  i               2   26[BANK0 ] int 
  9264 ;;  w               2   23[BANK0 ] int 
  9265 ;;  p               2   21[BANK0 ] int 
  9266 ;;  s               1   25[BANK0 ] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2   15[BANK0 ] int 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9276 ;;      Params:         0       4       0       0       0
  9277 ;;      Locals:         0       9       0       0       0
  9278 ;;      Temps:          0       0       0       0       0
  9279 ;;      Totals:         0      13       0       0       0
  9280 ;;Total ram usage:       13 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; Hardware stack levels required when called: 4
  9283 ;; This function calls:
  9284 ;;		i1___awdiv
  9285 ;;		i1___awmod
  9286 ;;		i1_abs
  9287 ;;		i1_pad
  9288 ;; This function is called by:
  9289 ;;		i1_vfpfcnvrt
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293     0A50                     i1_dtoa:	
  9294                           ;psect for function i1_dtoa
  9295                           
  9296                           
  9297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
  9298                           
  9299                           ;incstack = 0
  9300 ;; hardware stack exceeded
  9301                           ; Regs used in i1_dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9302     0A50  1283               	bcf	3,5	;RP0=0, select bank0
  9303     0A51  1303               	bcf	3,6	;RP1=0, select bank0
  9304     0A52  1FB2               	btfss	i1dtoa@d+1,7
  9305     0A53  2A56               	goto	u405_20
  9306     0A54  3001               	movlw	1
  9307     0A55  2A57               	goto	u406_20
  9308     0A56                     u405_20:
  9309     0A56  3000               	movlw	0
  9310     0A57                     u406_20:
  9311     0A57  00B9               	movwf	i1dtoa@s
  9312                           
  9313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  9314     0A58  1683               	bsf	3,5	;RP0=1, select bank1
  9315     0A59  1303               	bcf	3,6	;RP1=0, select bank1
  9316     0A5A  1BDA               	btfsc	(_prec+1)^(0+128),7
  9317     0A5B  2A5E               	goto	i1l3019
  9318                           
  9319                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  9320     0A5C  30FD               	movlw	253
  9321     0A5D  05DD               	andwf	_flags^(0+128),f
  9322     0A5E                     i1l3019:
  9323                           
  9324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  9325     0A5E  1FDA               	btfss	(_prec+1)^(0+128),7
  9326     0A5F  2A67               	goto	i1l3023
  9327     0A60  3001               	movlw	1
  9328     0A61  1283               	bcf	3,5	;RP0=0, select bank0
  9329     0A62  1303               	bcf	3,6	;RP1=0, select bank0
  9330     0A63  00B5               	movwf	i1dtoa@p
  9331     0A64  3000               	movlw	0
  9332     0A65  00B6               	movwf	i1dtoa@p+1
  9333     0A66  2A71               	goto	i1l677
  9334     0A67                     i1l3023:
  9335     0A67  085A               	movf	(_prec+1)^(0+128),w
  9336     0A68  1283               	bcf	3,5	;RP0=0, select bank0
  9337     0A69  1303               	bcf	3,6	;RP1=0, select bank0
  9338     0A6A  00B6               	movwf	i1dtoa@p+1
  9339     0A6B  1683               	bsf	3,5	;RP0=1, select bank1
  9340     0A6C  1303               	bcf	3,6	;RP1=0, select bank1
  9341     0A6D  0859               	movf	_prec^(0+128),w
  9342     0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  9343     0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  9344     0A70  00B5               	movwf	i1dtoa@p
  9345     0A71                     i1l677:
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  9348     0A71  1683               	bsf	3,5	;RP0=1, select bank1
  9349     0A72  1303               	bcf	3,6	;RP1=0, select bank1
  9350     0A73  0858               	movf	(_width+1)^(0+128),w
  9351     0A74  1283               	bcf	3,5	;RP0=0, select bank0
  9352     0A75  1303               	bcf	3,6	;RP1=0, select bank0
  9353     0A76  00B8               	movwf	i1dtoa@w+1
  9354     0A77  1683               	bsf	3,5	;RP0=1, select bank1
  9355     0A78  1303               	bcf	3,6	;RP1=0, select bank1
  9356     0A79  0857               	movf	_width^(0+128),w
  9357     0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  9358     0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  9359     0A7C  00B7               	movwf	i1dtoa@w
  9360                           
  9361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  9362     0A7D  0839               	movf	i1dtoa@s,w
  9363     0A7E  1D03               	btfss	3,2
  9364     0A7F  2A84               	goto	i1l3029
  9365     0A80  1683               	bsf	3,5	;RP0=1, select bank1
  9366     0A81  1303               	bcf	3,6	;RP1=0, select bank1
  9367     0A82  1D5D               	btfss	_flags^(0+128),2
  9368     0A83  2A96               	goto	i1l678
  9369     0A84                     i1l3029:
  9370                           
  9371                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  9372     0A84  30FF               	movlw	255
  9373     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  9374     0A86  07B7               	addwf	i1dtoa@w,f
  9375     0A87  1803               	skipnc
  9376     0A88  0AB8               	incf	i1dtoa@w+1,f
  9377     0A89  30FF               	movlw	255
  9378     0A8A  07B8               	addwf	i1dtoa@w+1,f
  9379                           
  9380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  9381     0A8B  0839               	movf	i1dtoa@s,w
  9382     0A8C  1D03               	btfss	3,2
  9383     0A8D  2A90               	goto	i1l3035
  9384     0A8E  302B               	movlw	43
  9385     0A8F  2A91               	goto	L19
  9386     0A90                     i1l3035:
  9387     0A90  302D               	movlw	45
  9388     0A91                     L19:
  9389     0A91  00B3               	movwf	i1_dtoa$616
  9390     0A92  3000               	movlw	0
  9391     0A93  00B4               	movwf	i1_dtoa$616+1
  9392     0A94  0833               	movf	i1_dtoa$616,w
  9393     0A95  2AA1               	goto	L20
  9394     0A96                     i1l678:	
  9395                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 545:  else if (fl
      +                          ags & (1 << 3)) {
  9396                           
  9397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  9398                           
  9399     0A96  1DDD               	btfss	_flags^(0+128),3
  9400     0A97  2AA2               	goto	i1l685
  9401                           
  9402                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 546:         --w;
  9403     0A98  30FF               	movlw	255
  9404     0A99  1283               	bcf	3,5	;RP0=0, select bank0
  9405     0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  9406     0A9B  07B7               	addwf	i1dtoa@w,f
  9407     0A9C  1803               	skipnc
  9408     0A9D  0AB8               	incf	i1dtoa@w+1,f
  9409     0A9E  30FF               	movlw	255
  9410     0A9F  07B8               	addwf	i1dtoa@w+1,f
  9411                           
  9412                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
  9413     0AA0  3020               	movlw	32
  9414     0AA1                     L20:
  9415     0AA1  00B9               	movwf	i1dtoa@s
  9416     0AA2                     i1l685:
  9417                           
  9418                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  9419     0AA2  301F               	movlw	31
  9420     0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  9421     0AA4  00BA               	movwf	i1dtoa@i
  9422     0AA5  3000               	movlw	0
  9423     0AA6  00BB               	movwf	i1dtoa@i+1
  9424                           
  9425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  9426     0AA7  1283               	bcf	3,5	;RP0=0, select bank2
  9427     0AA8  1703               	bsf	3,6	;RP1=1, select bank2
  9428     0AA9  01AF               	clrf	(_dbuf^(0+256)+31)
  9429                           
  9430                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9431     0AAA  2B13               	goto	i1l3053
  9432     0AAB                     i1l3055:
  9433     0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  9434     0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  9435     0AAD  0831               	movf	i1dtoa@d,w
  9436     0AAE  0432               	iorwf	i1dtoa@d+1,w
  9437     0AAF  1D03               	btfss	3,2
  9438     0AB0  2ACD               	goto	i1l3043
  9439     0AB1  0836               	movf	i1dtoa@p+1,w
  9440     0AB2  3A80               	xorlw	128
  9441     0AB3  00FF               	movwf	127
  9442     0AB4  3080               	movlw	128
  9443     0AB5  027F               	subwf	127,w
  9444     0AB6  1D03               	skipz
  9445     0AB7  2ABA               	goto	u415_25
  9446     0AB8  3001               	movlw	1
  9447     0AB9  0235               	subwf	i1dtoa@p,w
  9448     0ABA                     u415_25:
  9449     0ABA  1803               	skipnc
  9450     0ABB  2ACD               	goto	i1l3043
  9451     0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  9452     0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  9453     0ABE  0838               	movf	i1dtoa@w+1,w
  9454     0ABF  3A80               	xorlw	128
  9455     0AC0  00FF               	movwf	127
  9456     0AC1  3080               	movlw	128
  9457     0AC2  027F               	subwf	127,w
  9458     0AC3  1D03               	skipz
  9459     0AC4  2AC7               	goto	u416_25
  9460     0AC5  3001               	movlw	1
  9461     0AC6  0237               	subwf	i1dtoa@w,w
  9462     0AC7                     u416_25:
  9463     0AC7  1C03               	skipc
  9464     0AC8  2B1F               	goto	i1l3063
  9465     0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  9466     0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  9467     0ACB  1CDD               	btfss	_flags^(0+128),1
  9468     0ACC  2B1F               	goto	i1l3063
  9469     0ACD                     i1l3043:
  9470                           
  9471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  9472     0ACD  30FF               	movlw	255
  9473     0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  9474     0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  9475     0AD0  07BA               	addwf	i1dtoa@i,f
  9476     0AD1  1803               	skipnc
  9477     0AD2  0ABB               	incf	i1dtoa@i+1,f
  9478     0AD3  30FF               	movlw	255
  9479     0AD4  07BB               	addwf	i1dtoa@i+1,f
  9480                           
  9481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  9482     0AD5  083A               	movf	i1dtoa@i,w
  9483     0AD6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9484     0AD7  0084               	movwf	4
  9485     0AD8  300A               	movlw	10
  9486     0AD9  00F0               	movwf	i1___awmod@divisor
  9487     0ADA  3000               	movlw	0
  9488     0ADB  00F1               	movwf	i1___awmod@divisor+1
  9489     0ADC  0832               	movf	i1dtoa@d+1,w
  9490     0ADD  00F3               	movwf	i1___awmod@dividend+1
  9491     0ADE  0831               	movf	i1dtoa@d,w
  9492     0ADF  00F2               	movwf	i1___awmod@dividend
  9493     0AE0  160A  118A  21CE  120A  158A  	fcall	i1___awmod
  9494     0AE5  0871               	movf	?i1___awmod+1,w
  9495     0AE6  00F7               	movwf	i1abs@a+1
  9496     0AE7  0870               	movf	?i1___awmod,w
  9497     0AE8  00F6               	movwf	i1abs@a
  9498     0AE9  160A  158A  26DA  120A  158A  	fcall	i1_abs
  9499     0AEE  0876               	movf	?i1_abs,w
  9500     0AEF  3E30               	addlw	48
  9501     0AF0  1783               	bsf	3,7	;select IRP bank2
  9502     0AF1  0080               	movwf	0
  9503                           
  9504                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
  9505     0AF2  30FF               	movlw	255
  9506     0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  9507     0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  9508     0AF5  07B5               	addwf	i1dtoa@p,f
  9509     0AF6  1803               	skipnc
  9510     0AF7  0AB6               	incf	i1dtoa@p+1,f
  9511     0AF8  30FF               	movlw	255
  9512     0AF9  07B6               	addwf	i1dtoa@p+1,f
  9513                           
  9514                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  9515     0AFA  30FF               	movlw	255
  9516     0AFB  07B7               	addwf	i1dtoa@w,f
  9517     0AFC  1803               	skipnc
  9518     0AFD  0AB8               	incf	i1dtoa@w+1,f
  9519     0AFE  30FF               	movlw	255
  9520     0AFF  07B8               	addwf	i1dtoa@w+1,f
  9521                           
  9522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  9523     0B00  300A               	movlw	10
  9524     0B01  00F0               	movwf	i1___awdiv@divisor
  9525     0B02  3000               	movlw	0
  9526     0B03  00F1               	movwf	i1___awdiv@divisor+1
  9527     0B04  0832               	movf	i1dtoa@d+1,w
  9528     0B05  00F3               	movwf	i1___awdiv@dividend+1
  9529     0B06  0831               	movf	i1dtoa@d,w
  9530     0B07  00F2               	movwf	i1___awdiv@dividend
  9531     0B08  160A  118A  2262  120A  158A  	fcall	i1___awdiv
  9532     0B0D  0871               	movf	?i1___awdiv+1,w
  9533     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  9534     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  9535     0B10  00B2               	movwf	i1dtoa@d+1
  9536     0B11  0870               	movf	?i1___awdiv,w
  9537     0B12  00B1               	movwf	i1dtoa@d
  9538     0B13                     i1l3053:
  9539                           
  9540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9541     0B13  1303               	bcf	3,6	;RP1=0, select bank0
  9542     0B14  083B               	movf	i1dtoa@i+1,w
  9543     0B15  3A80               	xorlw	128
  9544     0B16  00FF               	movwf	127
  9545     0B17  3080               	movlw	128
  9546     0B18  027F               	subwf	127,w
  9547     0B19  1D03               	skipz
  9548     0B1A  2B1D               	goto	u413_25
  9549     0B1B  3001               	movlw	1
  9550     0B1C  023A               	subwf	i1dtoa@i,w
  9551     0B1D                     u413_25:
  9552     0B1D  1803               	btfsc	3,0
  9553     0B1E  2AAB               	goto	i1l3055
  9554     0B1F                     i1l3063:
  9555                           
  9556                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  9557     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  9558     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  9559     0B21  0839               	movf	i1dtoa@s,w
  9560     0B22  1903               	btfsc	3,2
  9561     0B23  2B30               	goto	i1l3069
  9562                           
  9563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  9564     0B24  30FF               	movlw	255
  9565     0B25  07BA               	addwf	i1dtoa@i,f
  9566     0B26  1803               	skipnc
  9567     0B27  0ABB               	incf	i1dtoa@i+1,f
  9568     0B28  30FF               	movlw	255
  9569     0B29  07BB               	addwf	i1dtoa@i+1,f
  9570                           
  9571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  9572     0B2A  083A               	movf	i1dtoa@i,w
  9573     0B2B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9574     0B2C  0084               	movwf	4
  9575     0B2D  0839               	movf	i1dtoa@s,w
  9576     0B2E  1783               	bsf	3,7	;select IRP bank2
  9577     0B2F  0080               	movwf	0
  9578     0B30                     i1l3069:
  9579                           
  9580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  9581     0B30  082F               	movf	i1dtoa@fp,w
  9582     0B31  00A8               	movwf	i1pad@fp
  9583     0B32  0830               	movf	i1dtoa@fp+1,w
  9584     0B33  00A9               	movwf	i1pad@fp+1
  9585     0B34  083A               	movf	i1dtoa@i,w
  9586     0B35  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9587     0B36  00AA               	movwf	i1pad@buf
  9588     0B37  0838               	movf	i1dtoa@w+1,w
  9589     0B38  00AC               	movwf	i1pad@p+1
  9590     0B39  0837               	movf	i1dtoa@w,w
  9591     0B3A  00AB               	movwf	i1pad@p
  9592     0B3B  160A  118A  236A   	fcall	i1_pad
  9593     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  9594     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  9595     0B40  0829               	movf	?i1_pad+1,w
  9596     0B41  00B0               	movwf	?i1_dtoa+1
  9597     0B42  0828               	movf	?i1_pad,w
  9598     0B43  00AF               	movwf	?i1_dtoa
  9599     0B44  0008               	return
  9600     0B45                     __end_ofi1_dtoa:
  9601                           
  9602                           	psect	text34
  9603     136A                     __ptext34:	
  9604 ;; *************** function i1_pad *****************
  9605 ;; Defined at:
  9606 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  9609 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9610 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  9611 ;;		 -> dbuf(32), 
  9612 ;;  p               2   11[BANK0 ] int 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  i               2   13[BANK0 ] int 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  2    8[BANK0 ] int 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9624 ;;      Params:         0       5       0       0       0
  9625 ;;      Locals:         0       2       0       0       0
  9626 ;;      Temps:          1       0       0       0       0
  9627 ;;      Totals:         1       7       0       0       0
  9628 ;;Total ram usage:        8 bytes
  9629 ;; Hardware stack levels used: 1
  9630 ;; Hardware stack levels required when called: 3
  9631 ;; This function calls:
  9632 ;;		i1_fputc
  9633 ;;		i1_fputs
  9634 ;;		i1_strlen
  9635 ;; This function is called by:
  9636 ;;		i1_dtoa
  9637 ;;		i1_otoa
  9638 ;;		i1_utoa
  9639 ;;		i1_xtoa
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643     136A                     i1_pad:	
  9644                           ;psect for function i1_pad
  9645                           
  9646                           
  9647                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  9648                           
  9649                           ;incstack = 0
  9650 ;; hardware stack exceeded
  9651                           ; Regs used in i1_pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9652     136A  1683               	bsf	3,5	;RP0=1, select bank1
  9653     136B  1303               	bcf	3,6	;RP1=0, select bank1
  9654     136C  1C5D               	btfss	_flags^(0+128),0
  9655     136D  2B7B               	goto	i1l2701
  9656                           
  9657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9658     136E  1283               	bcf	3,5	;RP0=0, select bank0
  9659     136F  1303               	bcf	3,6	;RP1=0, select bank0
  9660     1370  082A               	movf	i1pad@buf,w
  9661     1371  00A0               	movwf	i1fputs@s
  9662     1372  0828               	movf	i1pad@fp,w
  9663     1373  00A1               	movwf	i1fputs@fp
  9664     1374  0829               	movf	i1pad@fp+1,w
  9665     1375  00A2               	movwf	i1fputs@fp+1
  9666     1376  160A  158A  2784  160A  118A  	fcall	i1_fputs
  9667     137B                     i1l2701:
  9668                           
  9669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9670     137B  1283               	bcf	3,5	;RP0=0, select bank0
  9671     137C  1303               	bcf	3,6	;RP1=0, select bank0
  9672     137D  1FAC               	btfss	i1pad@p+1,7
  9673     137E  2B81               	goto	i1l649
  9674                           
  9675                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9676     137F  01AB               	clrf	i1pad@p
  9677     1380  01AC               	clrf	i1pad@p+1
  9678     1381                     i1l649:	
  9679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  9680                           
  9681                           
  9682                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9683     1381  01AD               	clrf	i1pad@i
  9684     1382  01AE               	clrf	i1pad@i+1
  9685     1383                     i1l2709:	
  9686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9687                           
  9688                           
  9689                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9690     1383  082E               	movf	i1pad@i+1,w
  9691     1384  3A80               	xorlw	128
  9692     1385  00FD               	movwf	??i1_pad
  9693     1386  082C               	movf	i1pad@p+1,w
  9694     1387  3A80               	xorlw	128
  9695     1388  027D               	subwf	??i1_pad,w
  9696     1389  1D03               	skipz
  9697     138A  2B8D               	goto	u343_25
  9698     138B  082B               	movf	i1pad@p,w
  9699     138C  022D               	subwf	i1pad@i,w
  9700     138D                     u343_25:
  9701     138D  1803               	btfsc	3,0
  9702     138E  2BA7               	goto	i1l652
  9703                           
  9704                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9705     138F  3020               	movlw	32
  9706     1390  00F0               	movwf	i1fputc@c
  9707     1391  3000               	movlw	0
  9708     1392  00F1               	movwf	i1fputc@c+1
  9709     1393  1283               	bcf	3,5	;RP0=0, select bank0
  9710     1394  1303               	bcf	3,6	;RP1=0, select bank0
  9711     1395  0828               	movf	i1pad@fp,w
  9712     1396  00F2               	movwf	i1fputc@fp
  9713     1397  0829               	movf	i1pad@fp+1,w
  9714     1398  00F3               	movwf	i1fputc@fp+1
  9715     1399  160A  118A  260E  160A  118A  	fcall	i1_fputc
  9716                           
  9717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9718     139E  3001               	movlw	1
  9719     139F  1283               	bcf	3,5	;RP0=0, select bank0
  9720     13A0  1303               	bcf	3,6	;RP1=0, select bank0
  9721     13A1  07AD               	addwf	i1pad@i,f
  9722     13A2  1803               	skipnc
  9723     13A3  0AAE               	incf	i1pad@i+1,f
  9724     13A4  3000               	movlw	0
  9725     13A5  07AE               	addwf	i1pad@i+1,f
  9726     13A6  2B83               	goto	i1l2709
  9727     13A7                     i1l652:
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9730     13A7  1683               	bsf	3,5	;RP0=1, select bank1
  9731     13A8  1303               	bcf	3,6	;RP1=0, select bank1
  9732     13A9  185D               	btfsc	_flags^(0+128),0
  9733     13AA  2BB8               	goto	i1l653
  9734                           
  9735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9736     13AB  1283               	bcf	3,5	;RP0=0, select bank0
  9737     13AC  1303               	bcf	3,6	;RP1=0, select bank0
  9738     13AD  082A               	movf	i1pad@buf,w
  9739     13AE  00A0               	movwf	i1fputs@s
  9740     13AF  0828               	movf	i1pad@fp,w
  9741     13B0  00A1               	movwf	i1fputs@fp
  9742     13B1  0829               	movf	i1pad@fp+1,w
  9743     13B2  00A2               	movwf	i1fputs@fp+1
  9744     13B3  160A  158A  2784  160A  118A  	fcall	i1_fputs
  9745     13B8                     i1l653:	
  9746                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 220:     }
  9747                           
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  9750     13B8  1283               	bcf	3,5	;RP0=0, select bank0
  9751     13B9  1303               	bcf	3,6	;RP1=0, select bank0
  9752     13BA  082A               	movf	i1pad@buf,w
  9753     13BB  00F0               	movwf	i1strlen@s
  9754     13BC  160A  158A  26F8   	fcall	i1_strlen
  9755     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  9756     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  9757     13C1  082B               	movf	i1pad@p,w
  9758     13C2  0770               	addwf	?i1_strlen,w
  9759     13C3  00A8               	movwf	?i1_pad
  9760     13C4  082C               	movf	i1pad@p+1,w
  9761     13C5  1803               	skipnc
  9762     13C6  0A2C               	incf	i1pad@p+1,w
  9763     13C7  0771               	addwf	?i1_strlen+1,w
  9764     13C8  00A9               	movwf	?i1_pad+1
  9765     13C9  0008               	return
  9766     13CA                     __end_ofi1_pad:
  9767                           
  9768                           	psect	text35
  9769     1EF8                     __ptext35:	
  9770 ;; *************** function i1_strlen *****************
  9771 ;; Defined at:
  9772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  s               1    0[COMMON] PTR const unsigned char 
  9775 ;;		 -> dbuf(32), 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  a               1    2[COMMON] PTR const unsigned char 
  9778 ;;		 -> dbuf(32), 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2    0[COMMON] unsigned int 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9788 ;;      Params:         2       0       0       0       0
  9789 ;;      Locals:         1       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0
  9791 ;;      Totals:         3       0       0       0       0
  9792 ;;Total ram usage:        3 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		i1_pad
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801     1EF8                     i1_strlen:	
  9802                           ;psect for function i1_strlen
  9803                           
  9804                           
  9805                           ;incstack = 0
  9806 ;; hardware stack exceeded
  9807                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  9808     1EF8  0870               	movf	i1strlen@s,w
  9809     1EF9  00F2               	movwf	i1strlen@a
  9810     1EFA                     i1l2377:
  9811     1EFA  0870               	movf	i1strlen@s,w
  9812     1EFB  0084               	movwf	4
  9813     1EFC  1783               	bsf	3,7	;select IRP bank2
  9814     1EFD  0800               	movf	0,w
  9815     1EFE  1903               	btfsc	3,2
  9816     1EFF  2F03               	goto	i1l2379
  9817     1F00  3001               	movlw	1
  9818     1F01  07F0               	addwf	i1strlen@s,f
  9819     1F02  2EFA               	goto	i1l2377
  9820     1F03                     i1l2379:
  9821     1F03  0872               	movf	i1strlen@a,w
  9822     1F04  0270               	subwf	i1strlen@s,w
  9823     1F05  00F0               	movwf	?i1_strlen
  9824     1F06  01F1               	clrf	?i1_strlen+1
  9825     1F07  1BF0               	btfsc	?i1_strlen,7
  9826     1F08  03F1               	decf	?i1_strlen+1,f
  9827     1F09  0008               	return
  9828     1F0A                     __end_ofi1_strlen:
  9829                           
  9830                           	psect	text36
  9831     1F84                     __ptext36:	
  9832 ;; *************** function i1_fputs *****************
  9833 ;; Defined at:
  9834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  9837 ;;		 -> dbuf(32), 
  9838 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  9839 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  i               2    6[BANK0 ] int 
  9842 ;;  c               1    5[BANK0 ] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  2    0[BANK0 ] int 
  9845 ;; Registers used:
  9846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9852 ;;      Params:         0       3       0       0       0
  9853 ;;      Locals:         0       3       0       0       0
  9854 ;;      Temps:          0       2       0       0       0
  9855 ;;      Totals:         0       8       0       0       0
  9856 ;;Total ram usage:        8 bytes
  9857 ;; Hardware stack levels used: 1
  9858 ;; Hardware stack levels required when called: 2
  9859 ;; This function calls:
  9860 ;;		i1_fputc
  9861 ;; This function is called by:
  9862 ;;		i1_pad
  9863 ;; This function uses a non-reentrant model
  9864 ;;
  9865                           
  9866     1F84                     i1_fputs:	
  9867                           ;psect for function i1_fputs
  9868                           
  9869                           
  9870                           ;incstack = 0
  9871 ;; hardware stack exceeded
  9872                           ; Regs used in i1_fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9873     1F84  1283               	bcf	3,5	;RP0=0, select bank0
  9874     1F85  1303               	bcf	3,6	;RP1=0, select bank0
  9875     1F86  01A6               	clrf	i1fputs@i
  9876     1F87  01A7               	clrf	i1fputs@i+1
  9877     1F88                     i1l2371:
  9878     1F88  0826               	movf	i1fputs@i,w
  9879     1F89  0720               	addwf	i1fputs@s,w
  9880     1F8A  00A3               	movwf	??i1_fputs
  9881     1F8B  0823               	movf	??i1_fputs,w
  9882     1F8C  0084               	movwf	4
  9883     1F8D  1783               	bsf	3,7	;select IRP bank2
  9884     1F8E  0800               	movf	0,w
  9885     1F8F  00A5               	movwf	i1fputs@c
  9886     1F90  0825               	movf	i1fputs@c,w
  9887     1F91  1903               	btfsc	3,2
  9888     1F92  0008               	return
  9889     1F93  0825               	movf	i1fputs@c,w
  9890     1F94  00A3               	movwf	??i1_fputs
  9891     1F95  01A4               	clrf	??i1_fputs+1
  9892     1F96  0823               	movf	??i1_fputs,w
  9893     1F97  00F0               	movwf	i1fputc@c
  9894     1F98  0824               	movf	??i1_fputs+1,w
  9895     1F99  00F1               	movwf	i1fputc@c+1
  9896     1F9A  0821               	movf	i1fputs@fp,w
  9897     1F9B  00F2               	movwf	i1fputc@fp
  9898     1F9C  0822               	movf	i1fputs@fp+1,w
  9899     1F9D  00F3               	movwf	i1fputc@fp+1
  9900     1F9E  160A  118A  260E  160A  158A  	fcall	i1_fputc
  9901     1FA3  3001               	movlw	1
  9902     1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  9903     1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  9904     1FA6  07A6               	addwf	i1fputs@i,f
  9905     1FA7  1803               	skipnc
  9906     1FA8  0AA7               	incf	i1fputs@i+1,f
  9907     1FA9  3000               	movlw	0
  9908     1FAA  07A7               	addwf	i1fputs@i+1,f
  9909     1FAB  2F88               	goto	i1l2371
  9910     1FAC                     __end_ofi1_fputs:
  9911                           
  9912                           	psect	text37
  9913     1EDA                     __ptext37:	
  9914 ;; *************** function i1_abs *****************
  9915 ;; Defined at:
  9916 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  a               2    6[COMMON] int 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  2    6[COMMON] int 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9930 ;;      Params:         2       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0
  9932 ;;      Temps:          2       0       0       0       0
  9933 ;;      Totals:         4       0       0       0       0
  9934 ;;Total ram usage:        4 bytes
  9935 ;; Hardware stack levels used: 1
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		i1_dtoa
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943     1EDA                     i1_abs:	
  9944                           ;psect for function i1_abs
  9945                           
  9946                           
  9947                           ;incstack = 0
  9948 ;; hardware stack exceeded
  9949                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  9950     1EDA  1FF7               	btfss	i1abs@a+1,7
  9951     1EDB  0008               	return
  9952     1EDC  0976               	comf	i1abs@a,w
  9953     1EDD  00F8               	movwf	??i1_abs
  9954     1EDE  0977               	comf	i1abs@a+1,w
  9955     1EDF  00F9               	movwf	??i1_abs+1
  9956     1EE0  0AF8               	incf	??i1_abs,f
  9957     1EE1  1903               	skipnz
  9958     1EE2  0AF9               	incf	??i1_abs+1,f
  9959     1EE3  0878               	movf	??i1_abs,w
  9960     1EE4  00F6               	movwf	?i1_abs
  9961     1EE5  0879               	movf	??i1_abs+1,w
  9962     1EE6  00F7               	movwf	?i1_abs+1
  9963     1EE7  0008               	return
  9964     1EE8                     __end_ofi1_abs:
  9965                           
  9966                           	psect	text38
  9967     11CE                     __ptext38:	
  9968 ;; *************** function i1___awmod *****************
  9969 ;; Defined at:
  9970 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  divisor         2    0[COMMON] int 
  9973 ;;  dividend        2    2[COMMON] int 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  sign            1    5[COMMON] unsigned char 
  9976 ;;  counter         1    4[COMMON] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  2    0[COMMON] int 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9986 ;;      Params:         4       0       0       0       0
  9987 ;;      Locals:         2       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0
  9989 ;;      Totals:         6       0       0       0       0
  9990 ;;Total ram usage:        6 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		i1_dtoa
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999     11CE                     i1___awmod:	
 10000                           ;psect for function i1___awmod
 10001                           
 10002                           
 10003                           ;incstack = 0
 10004 ;; hardware stack exceeded
 10005                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 10006     11CE  01F5               	clrf	i1___awmod@sign
 10007     11CF  1FF3               	btfss	i1___awmod@dividend+1,7
 10008     11D0  29D8               	goto	i1l2619
 10009     11D1  09F2               	comf	i1___awmod@dividend,f
 10010     11D2  09F3               	comf	i1___awmod@dividend+1,f
 10011     11D3  0AF2               	incf	i1___awmod@dividend,f
 10012     11D4  1903               	skipnz
 10013     11D5  0AF3               	incf	i1___awmod@dividend+1,f
 10014     11D6  3001               	movlw	1
 10015     11D7  00F5               	movwf	i1___awmod@sign
 10016     11D8                     i1l2619:
 10017     11D8  1FF1               	btfss	i1___awmod@divisor+1,7
 10018     11D9  29DF               	goto	i1l2623
 10019     11DA  09F0               	comf	i1___awmod@divisor,f
 10020     11DB  09F1               	comf	i1___awmod@divisor+1,f
 10021     11DC  0AF0               	incf	i1___awmod@divisor,f
 10022     11DD  1903               	skipnz
 10023     11DE  0AF1               	incf	i1___awmod@divisor+1,f
 10024     11DF                     i1l2623:
 10025     11DF  0870               	movf	i1___awmod@divisor,w
 10026     11E0  0471               	iorwf	i1___awmod@divisor+1,w
 10027     11E1  1903               	btfsc	3,2
 10028     11E2  2A0A               	goto	i1l2641
 10029     11E3  3001               	movlw	1
 10030     11E4  00F4               	movwf	i1___awmod@counter
 10031     11E5                     i1l2631:
 10032     11E5  1BF1               	btfsc	i1___awmod@divisor+1,7
 10033     11E6  29F1               	goto	i1l2633
 10034     11E7  3001               	movlw	1
 10035     11E8                     u322_25:
 10036     11E8  1003               	clrc
 10037     11E9  0DF0               	rlf	i1___awmod@divisor,f
 10038     11EA  0DF1               	rlf	i1___awmod@divisor+1,f
 10039     11EB  3EFF               	addlw	-1
 10040     11EC  1D03               	skipz
 10041     11ED  29E8               	goto	u322_25
 10042     11EE  3001               	movlw	1
 10043     11EF  07F4               	addwf	i1___awmod@counter,f
 10044     11F0  29E5               	goto	i1l2631
 10045     11F1                     i1l2633:
 10046     11F1  0871               	movf	i1___awmod@divisor+1,w
 10047     11F2  0273               	subwf	i1___awmod@dividend+1,w
 10048     11F3  1D03               	skipz
 10049     11F4  29F7               	goto	u324_25
 10050     11F5  0870               	movf	i1___awmod@divisor,w
 10051     11F6  0272               	subwf	i1___awmod@dividend,w
 10052     11F7                     u324_25:
 10053     11F7  1C03               	skipc
 10054     11F8  29FF               	goto	i1l2637
 10055     11F9  0870               	movf	i1___awmod@divisor,w
 10056     11FA  02F2               	subwf	i1___awmod@dividend,f
 10057     11FB  0871               	movf	i1___awmod@divisor+1,w
 10058     11FC  1C03               	skipc
 10059     11FD  03F3               	decf	i1___awmod@dividend+1,f
 10060     11FE  02F3               	subwf	i1___awmod@dividend+1,f
 10061     11FF                     i1l2637:
 10062     11FF  3001               	movlw	1
 10063     1200                     u325_25:
 10064     1200  1003               	clrc
 10065     1201  0CF1               	rrf	i1___awmod@divisor+1,f
 10066     1202  0CF0               	rrf	i1___awmod@divisor,f
 10067     1203  3EFF               	addlw	-1
 10068     1204  1D03               	skipz
 10069     1205  2A00               	goto	u325_25
 10070     1206  3001               	movlw	1
 10071     1207  02F4               	subwf	i1___awmod@counter,f
 10072     1208  1D03               	btfss	3,2
 10073     1209  29F1               	goto	i1l2633
 10074     120A                     i1l2641:
 10075     120A  0875               	movf	i1___awmod@sign,w
 10076     120B  1903               	btfsc	3,2
 10077     120C  2A12               	goto	i1l2645
 10078     120D  09F2               	comf	i1___awmod@dividend,f
 10079     120E  09F3               	comf	i1___awmod@dividend+1,f
 10080     120F  0AF2               	incf	i1___awmod@dividend,f
 10081     1210  1903               	skipnz
 10082     1211  0AF3               	incf	i1___awmod@dividend+1,f
 10083     1212                     i1l2645:
 10084     1212  0873               	movf	i1___awmod@dividend+1,w
 10085     1213  00F1               	movwf	?i1___awmod+1
 10086     1214  0872               	movf	i1___awmod@dividend,w
 10087     1215  00F0               	movwf	?i1___awmod
 10088     1216  0008               	return
 10089     1217                     __end_ofi1___awmod:
 10090                           
 10091                           	psect	text39
 10092     1262                     __ptext39:	
 10093 ;; *************** function i1___awdiv *****************
 10094 ;; Defined at:
 10095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  divisor         2    0[COMMON] int 
 10098 ;;  dividend        2    2[COMMON] int 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  quotient        2    6[COMMON] int 
 10101 ;;  sign            1    5[COMMON] unsigned char 
 10102 ;;  counter         1    4[COMMON] unsigned char 
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  2    0[COMMON] int 
 10105 ;; Registers used:
 10106 ;;		wreg, status,2, status,0
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10112 ;;      Params:         4       0       0       0       0
 10113 ;;      Locals:         4       0       0       0       0
 10114 ;;      Temps:          0       0       0       0       0
 10115 ;;      Totals:         8       0       0       0       0
 10116 ;;Total ram usage:        8 bytes
 10117 ;; Hardware stack levels used: 1
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		i1_dtoa
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125     1262                     i1___awdiv:	
 10126                           ;psect for function i1___awdiv
 10127                           
 10128                           
 10129                           ;incstack = 0
 10130 ;; hardware stack exceeded
 10131                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 10132     1262  01F5               	clrf	i1___awdiv@sign
 10133     1263  1FF1               	btfss	i1___awdiv@divisor+1,7
 10134     1264  2A6C               	goto	i1l2575
 10135     1265  09F0               	comf	i1___awdiv@divisor,f
 10136     1266  09F1               	comf	i1___awdiv@divisor+1,f
 10137     1267  0AF0               	incf	i1___awdiv@divisor,f
 10138     1268  1903               	skipnz
 10139     1269  0AF1               	incf	i1___awdiv@divisor+1,f
 10140     126A  3001               	movlw	1
 10141     126B  00F5               	movwf	i1___awdiv@sign
 10142     126C                     i1l2575:
 10143     126C  1FF3               	btfss	i1___awdiv@dividend+1,7
 10144     126D  2A75               	goto	i1l2581
 10145     126E  09F2               	comf	i1___awdiv@dividend,f
 10146     126F  09F3               	comf	i1___awdiv@dividend+1,f
 10147     1270  0AF2               	incf	i1___awdiv@dividend,f
 10148     1271  1903               	skipnz
 10149     1272  0AF3               	incf	i1___awdiv@dividend+1,f
 10150     1273  3001               	movlw	1
 10151     1274  06F5               	xorwf	i1___awdiv@sign,f
 10152     1275                     i1l2581:
 10153     1275  01F6               	clrf	i1___awdiv@quotient
 10154     1276  01F7               	clrf	i1___awdiv@quotient+1
 10155     1277  0870               	movf	i1___awdiv@divisor,w
 10156     1278  0471               	iorwf	i1___awdiv@divisor+1,w
 10157     1279  1903               	btfsc	3,2
 10158     127A  2AAA               	goto	i1l2603
 10159     127B  3001               	movlw	1
 10160     127C  00F4               	movwf	i1___awdiv@counter
 10161     127D                     i1l2591:
 10162     127D  1BF1               	btfsc	i1___awdiv@divisor+1,7
 10163     127E  2A89               	goto	i1l2593
 10164     127F  3001               	movlw	1
 10165     1280                     u312_25:
 10166     1280  1003               	clrc
 10167     1281  0DF0               	rlf	i1___awdiv@divisor,f
 10168     1282  0DF1               	rlf	i1___awdiv@divisor+1,f
 10169     1283  3EFF               	addlw	-1
 10170     1284  1D03               	skipz
 10171     1285  2A80               	goto	u312_25
 10172     1286  3001               	movlw	1
 10173     1287  07F4               	addwf	i1___awdiv@counter,f
 10174     1288  2A7D               	goto	i1l2591
 10175     1289                     i1l2593:
 10176     1289  3001               	movlw	1
 10177     128A                     u314_25:
 10178     128A  1003               	clrc
 10179     128B  0DF6               	rlf	i1___awdiv@quotient,f
 10180     128C  0DF7               	rlf	i1___awdiv@quotient+1,f
 10181     128D  3EFF               	addlw	-1
 10182     128E  1D03               	skipz
 10183     128F  2A8A               	goto	u314_25
 10184     1290  0871               	movf	i1___awdiv@divisor+1,w
 10185     1291  0273               	subwf	i1___awdiv@dividend+1,w
 10186     1292  1D03               	skipz
 10187     1293  2A96               	goto	u315_25
 10188     1294  0870               	movf	i1___awdiv@divisor,w
 10189     1295  0272               	subwf	i1___awdiv@dividend,w
 10190     1296                     u315_25:
 10191     1296  1C03               	skipc
 10192     1297  2A9F               	goto	i1l2599
 10193     1298  0870               	movf	i1___awdiv@divisor,w
 10194     1299  02F2               	subwf	i1___awdiv@dividend,f
 10195     129A  0871               	movf	i1___awdiv@divisor+1,w
 10196     129B  1C03               	skipc
 10197     129C  03F3               	decf	i1___awdiv@dividend+1,f
 10198     129D  02F3               	subwf	i1___awdiv@dividend+1,f
 10199     129E  1476               	bsf	i1___awdiv@quotient,0
 10200     129F                     i1l2599:
 10201     129F  3001               	movlw	1
 10202     12A0                     u316_25:
 10203     12A0  1003               	clrc
 10204     12A1  0CF1               	rrf	i1___awdiv@divisor+1,f
 10205     12A2  0CF0               	rrf	i1___awdiv@divisor,f
 10206     12A3  3EFF               	addlw	-1
 10207     12A4  1D03               	skipz
 10208     12A5  2AA0               	goto	u316_25
 10209     12A6  3001               	movlw	1
 10210     12A7  02F4               	subwf	i1___awdiv@counter,f
 10211     12A8  1D03               	btfss	3,2
 10212     12A9  2A89               	goto	i1l2593
 10213     12AA                     i1l2603:
 10214     12AA  0875               	movf	i1___awdiv@sign,w
 10215     12AB  1903               	btfsc	3,2
 10216     12AC  2AB2               	goto	i1l2607
 10217     12AD  09F6               	comf	i1___awdiv@quotient,f
 10218     12AE  09F7               	comf	i1___awdiv@quotient+1,f
 10219     12AF  0AF6               	incf	i1___awdiv@quotient,f
 10220     12B0  1903               	skipnz
 10221     12B1  0AF7               	incf	i1___awdiv@quotient+1,f
 10222     12B2                     i1l2607:
 10223     12B2  0877               	movf	i1___awdiv@quotient+1,w
 10224     12B3  00F1               	movwf	?i1___awdiv+1
 10225     12B4  0876               	movf	i1___awdiv@quotient,w
 10226     12B5  00F0               	movwf	?i1___awdiv
 10227     12B6  0008               	return
 10228     12B7                     __end_ofi1___awdiv:
 10229                           
 10230                           	psect	text40
 10231     158E                     __ptext40:	
 10232 ;; *************** function i1_ctoa *****************
 10233 ;; Defined at:
 10234 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 10237 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
 10238 ;;  c               1    2[BANK0 ] unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  w               2    7[BANK0 ] int 
 10241 ;;  l               2    5[BANK0 ] int 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  2    0[BANK0 ] int 
 10244 ;; Registers used:
 10245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10251 ;;      Params:         0       3       0       0       0
 10252 ;;      Locals:         0       4       0       0       0
 10253 ;;      Temps:          0       2       0       0       0
 10254 ;;      Totals:         0       9       0       0       0
 10255 ;;Total ram usage:        9 bytes
 10256 ;; Hardware stack levels used: 1
 10257 ;; Hardware stack levels required when called: 2
 10258 ;; This function calls:
 10259 ;;		i1_fputc
 10260 ;; This function is called by:
 10261 ;;		i1_vfpfcnvrt
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265     158E                     i1_ctoa:	
 10266                           ;psect for function i1_ctoa
 10267                           
 10268                           
 10269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
 10270                           
 10271                           ;incstack = 0
 10272 ;; hardware stack exceeded
 10273                           ; Regs used in i1_ctoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10274     158E  1683               	bsf	3,5	;RP0=1, select bank1
 10275     158F  1303               	bcf	3,6	;RP1=0, select bank1
 10276     1590  0857               	movf	_width^(0+128),w
 10277     1591  0458               	iorwf	(_width+1)^(0+128),w
 10278     1592  1D03               	btfss	3,2
 10279     1593  2D9F               	goto	i1l2989
 10280     1594  0858               	movf	(_width+1)^(0+128),w
 10281     1595  1283               	bcf	3,5	;RP0=0, select bank0
 10282     1596  1303               	bcf	3,6	;RP1=0, select bank0
 10283     1597  00A8               	movwf	i1ctoa@w+1
 10284     1598  1683               	bsf	3,5	;RP0=1, select bank1
 10285     1599  1303               	bcf	3,6	;RP1=0, select bank1
 10286     159A  0857               	movf	_width^(0+128),w
 10287     159B  1283               	bcf	3,5	;RP0=0, select bank0
 10288     159C  1303               	bcf	3,6	;RP1=0, select bank0
 10289     159D  00A7               	movwf	i1ctoa@w
 10290     159E  2DAD               	goto	i1l2991
 10291     159F                     i1l2989:
 10292     159F  0857               	movf	_width^(0+128),w
 10293     15A0  3EFF               	addlw	255
 10294     15A1  1283               	bcf	3,5	;RP0=0, select bank0
 10295     15A2  1303               	bcf	3,6	;RP1=0, select bank0
 10296     15A3  00A7               	movwf	i1ctoa@w
 10297     15A4  1683               	bsf	3,5	;RP0=1, select bank1
 10298     15A5  1303               	bcf	3,6	;RP1=0, select bank1
 10299     15A6  0858               	movf	(_width+1)^(0+128),w
 10300     15A7  1803               	skipnc
 10301     15A8  3E01               	addlw	1
 10302     15A9  3EFF               	addlw	255
 10303     15AA  1283               	bcf	3,5	;RP0=0, select bank0
 10304     15AB  1303               	bcf	3,6	;RP1=0, select bank0
 10305     15AC  00A8               	movwf	i1ctoa@w+1
 10306     15AD                     i1l2991:
 10307                           
 10308                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
 10309     15AD  1683               	bsf	3,5	;RP0=1, select bank1
 10310     15AE  1303               	bcf	3,6	;RP1=0, select bank1
 10311     15AF  1C5D               	btfss	_flags^(0+128),0
 10312     15B0  2DC3               	goto	i1l2995
 10313                           
 10314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
 10315     15B1  1283               	bcf	3,5	;RP0=0, select bank0
 10316     15B2  1303               	bcf	3,6	;RP1=0, select bank0
 10317     15B3  0822               	movf	i1ctoa@c,w
 10318     15B4  00A3               	movwf	??i1_ctoa
 10319     15B5  01A4               	clrf	??i1_ctoa+1
 10320     15B6  0823               	movf	??i1_ctoa,w
 10321     15B7  00F0               	movwf	i1fputc@c
 10322     15B8  0824               	movf	??i1_ctoa+1,w
 10323     15B9  00F1               	movwf	i1fputc@c+1
 10324     15BA  0820               	movf	i1ctoa@fp,w
 10325     15BB  00F2               	movwf	i1fputc@fp
 10326     15BC  0821               	movf	i1ctoa@fp+1,w
 10327     15BD  00F3               	movwf	i1fputc@fp+1
 10328     15BE  160A  118A  260E  160A  118A  	fcall	i1_fputc
 10329     15C3                     i1l2995:
 10330                           
 10331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
 10332     15C3  1283               	bcf	3,5	;RP0=0, select bank0
 10333     15C4  1303               	bcf	3,6	;RP1=0, select bank0
 10334     15C5  1FA8               	btfss	i1ctoa@w+1,7
 10335     15C6  2DC9               	goto	i1l665
 10336     15C7  01A7               	clrf	i1ctoa@w
 10337     15C8  01A8               	clrf	i1ctoa@w+1
 10338     15C9                     i1l665:
 10339                           
 10340                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 492:     l = 0;
 10341     15C9  01A5               	clrf	i1ctoa@l
 10342     15CA  01A6               	clrf	i1ctoa@l+1
 10343     15CB                     i1l3005:	
 10344                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 10345                           
 10346                           
 10347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 10348     15CB  0826               	movf	i1ctoa@l+1,w
 10349     15CC  3A80               	xorlw	128
 10350     15CD  00A3               	movwf	??i1_ctoa
 10351     15CE  0828               	movf	i1ctoa@w+1,w
 10352     15CF  3A80               	xorlw	128
 10353     15D0  0223               	subwf	??i1_ctoa,w
 10354     15D1  1D03               	skipz
 10355     15D2  2DD5               	goto	u403_25
 10356     15D3  0827               	movf	i1ctoa@w,w
 10357     15D4  0225               	subwf	i1ctoa@l,w
 10358     15D5                     u403_25:
 10359     15D5  1803               	btfsc	3,0
 10360     15D6  2DEF               	goto	i1l668
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
 10363     15D7  3020               	movlw	32
 10364     15D8  00F0               	movwf	i1fputc@c
 10365     15D9  3000               	movlw	0
 10366     15DA  00F1               	movwf	i1fputc@c+1
 10367     15DB  1283               	bcf	3,5	;RP0=0, select bank0
 10368     15DC  1303               	bcf	3,6	;RP1=0, select bank0
 10369     15DD  0820               	movf	i1ctoa@fp,w
 10370     15DE  00F2               	movwf	i1fputc@fp
 10371     15DF  0821               	movf	i1ctoa@fp+1,w
 10372     15E0  00F3               	movwf	i1fputc@fp+1
 10373     15E1  160A  118A  260E  160A  118A  	fcall	i1_fputc
 10374                           
 10375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 495:         ++l;
 10376     15E6  3001               	movlw	1
 10377     15E7  1283               	bcf	3,5	;RP0=0, select bank0
 10378     15E8  1303               	bcf	3,6	;RP1=0, select bank0
 10379     15E9  07A5               	addwf	i1ctoa@l,f
 10380     15EA  1803               	skipnc
 10381     15EB  0AA6               	incf	i1ctoa@l+1,f
 10382     15EC  3000               	movlw	0
 10383     15ED  07A6               	addwf	i1ctoa@l+1,f
 10384     15EE  2DCB               	goto	i1l3005
 10385     15EF                     i1l668:
 10386                           
 10387                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
 10388     15EF  1683               	bsf	3,5	;RP0=1, select bank1
 10389     15F0  1303               	bcf	3,6	;RP1=0, select bank1
 10390     15F1  185D               	btfsc	_flags^(0+128),0
 10391     15F2  2E03               	goto	i1l3009
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 10394     15F3  1283               	bcf	3,5	;RP0=0, select bank0
 10395     15F4  1303               	bcf	3,6	;RP1=0, select bank0
 10396     15F5  0822               	movf	i1ctoa@c,w
 10397     15F6  00A3               	movwf	??i1_ctoa
 10398     15F7  01A4               	clrf	??i1_ctoa+1
 10399     15F8  0823               	movf	??i1_ctoa,w
 10400     15F9  00F0               	movwf	i1fputc@c
 10401     15FA  0824               	movf	??i1_ctoa+1,w
 10402     15FB  00F1               	movwf	i1fputc@c+1
 10403     15FC  0820               	movf	i1ctoa@fp,w
 10404     15FD  00F2               	movwf	i1fputc@fp
 10405     15FE  0821               	movf	i1ctoa@fp+1,w
 10406     15FF  00F3               	movwf	i1fputc@fp+1
 10407     1600  160A  118A  260E   	fcall	i1_fputc
 10408     1603                     i1l3009:
 10409                           
 10410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
 10411     1603  1283               	bcf	3,5	;RP0=0, select bank0
 10412     1604  1303               	bcf	3,6	;RP1=0, select bank0
 10413     1605  0825               	movf	i1ctoa@l,w
 10414     1606  3E01               	addlw	1
 10415     1607  00A0               	movwf	?i1_ctoa
 10416     1608  0826               	movf	i1ctoa@l+1,w
 10417     1609  1803               	skipnc
 10418     160A  3E01               	addlw	1
 10419     160B  3E00               	addlw	0
 10420     160C  00A1               	movwf	?i1_ctoa+1
 10421     160D  0008               	return
 10422     160E                     __end_ofi1_ctoa:
 10423                           
 10424                           	psect	text41
 10425     160E                     __ptext41:	
 10426 ;; *************** function i1_fputc *****************
 10427 ;; Defined at:
 10428 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  c               2    0[COMMON] int 
 10431 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
 10432 ;;		 -> i1sprintf@f(11), sprintf@f(11), 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  2    0[COMMON] int 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10444 ;;      Params:         4       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0
 10446 ;;      Temps:          9       0       0       0       0
 10447 ;;      Totals:        13       0       0       0       0
 10448 ;;Total ram usage:       13 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 1
 10451 ;; This function calls:
 10452 ;;		i1_putch
 10453 ;; This function is called by:
 10454 ;;		i1_pad
 10455 ;;		i1_ctoa
 10456 ;;		i1_vfpfcnvrt
 10457 ;;		i1_fputs
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461     160E                     i1_fputc:	
 10462                           ;psect for function i1_fputc
 10463                           
 10464                           
 10465                           ;incstack = 0
 10466 ;; hardware stack exceeded
 10467                           ; Regs used in i1_fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10468     160E  0872               	movf	i1fputc@fp,w
 10469     160F  0473               	iorwf	i1fputc@fp+1,w
 10470     1610  1903               	btfsc	3,2
 10471     1611  2E16               	goto	i1l2337
 10472     1612  0872               	movf	i1fputc@fp,w
 10473     1613  0473               	iorwf	i1fputc@fp+1,w
 10474     1614  1D03               	btfss	3,2
 10475     1615  2E1B               	goto	i1l2339
 10476     1616                     i1l2337:
 10477     1616  0870               	movf	i1fputc@c,w
 10478     1617  120A  118A  27FC   	fcall	i1_putch
 10479     161A  0008               	return
 10480     161B                     i1l2339:
 10481     161B  0872               	movf	i1fputc@fp,w
 10482     161C  3E09               	addlw	9
 10483     161D  00F4               	movwf	??i1_fputc
 10484     161E  0873               	movf	i1fputc@fp+1,w
 10485     161F  1803               	skipnc
 10486     1620  3E01               	addlw	1
 10487     1621  3E00               	addlw	0
 10488     1622  00F5               	movwf	??i1_fputc+1
 10489     1623  0874               	movf	??i1_fputc,w
 10490     1624  0084               	movwf	4
 10491     1625  1783               	bsf	3,7
 10492     1626  1C75               	btfss	??i1_fputc+1,0
 10493     1627  1383               	bcf	3,7
 10494     1628  0800               	movf	0,w
 10495     1629  00F6               	movwf	??i1_fputc+2
 10496     162A  0A84               	incf	4,f
 10497     162B  0800               	movf	0,w
 10498     162C  00F7               	movwf	??i1_fputc+3
 10499     162D  0876               	movf	??i1_fputc+2,w
 10500     162E  0477               	iorwf	??i1_fputc+3,w
 10501     162F  1903               	btfsc	3,2
 10502     1630  2E61               	goto	i1l2343
 10503     1631  0872               	movf	i1fputc@fp,w
 10504     1632  3E09               	addlw	9
 10505     1633  00F4               	movwf	??i1_fputc
 10506     1634  0873               	movf	i1fputc@fp+1,w
 10507     1635  1803               	skipnc
 10508     1636  3E01               	addlw	1
 10509     1637  3E00               	addlw	0
 10510     1638  00F5               	movwf	??i1_fputc+1
 10511     1639  0874               	movf	??i1_fputc,w
 10512     163A  0084               	movwf	4
 10513     163B  1783               	bsf	3,7
 10514     163C  1C75               	btfss	??i1_fputc+1,0
 10515     163D  1383               	bcf	3,7
 10516     163E  0800               	movf	0,w
 10517     163F  00F6               	movwf	??i1_fputc+2
 10518     1640  0A84               	incf	4,f
 10519     1641  0800               	movf	0,w
 10520     1642  00F7               	movwf	??i1_fputc+3
 10521     1643  0872               	movf	i1fputc@fp,w
 10522     1644  3E02               	addlw	2
 10523     1645  00F8               	movwf	??i1_fputc+4
 10524     1646  0873               	movf	i1fputc@fp+1,w
 10525     1647  1803               	skipnc
 10526     1648  3E01               	addlw	1
 10527     1649  3E00               	addlw	0
 10528     164A  00F9               	movwf	??i1_fputc+5
 10529     164B  0878               	movf	??i1_fputc+4,w
 10530     164C  0084               	movwf	4
 10531     164D  1783               	bsf	3,7
 10532     164E  1C79               	btfss	??i1_fputc+5,0
 10533     164F  1383               	bcf	3,7
 10534     1650  0800               	movf	0,w
 10535     1651  00FA               	movwf	??i1_fputc+6
 10536     1652  0A84               	incf	4,f
 10537     1653  0800               	movf	0,w
 10538     1654  00FB               	movwf	??i1_fputc+7
 10539     1655  087B               	movf	??i1_fputc+7,w
 10540     1656  3A80               	xorlw	128
 10541     1657  00FC               	movwf	??i1_fputc+8
 10542     1658  0877               	movf	??i1_fputc+3,w
 10543     1659  3A80               	xorlw	128
 10544     165A  027C               	subwf	??i1_fputc+8,w
 10545     165B  1D03               	skipz
 10546     165C  2E5F               	goto	u258_25
 10547     165D  0876               	movf	??i1_fputc+2,w
 10548     165E  027A               	subwf	??i1_fputc+6,w
 10549     165F                     u258_25:
 10550     165F  1803               	skipnc
 10551     1660  0008               	return
 10552     1661                     i1l2343:
 10553     1661  0872               	movf	i1fputc@fp,w
 10554     1662  0084               	movwf	4
 10555     1663  1783               	bsf	3,7
 10556     1664  1C73               	btfss	i1fputc@fp+1,0
 10557     1665  1383               	bcf	3,7
 10558     1666  0800               	movf	0,w
 10559     1667  00F4               	movwf	??i1_fputc
 10560     1668  0A84               	incf	4,f
 10561     1669  0800               	movf	0,w
 10562     166A  00F5               	movwf	??i1_fputc+1
 10563     166B  0872               	movf	i1fputc@fp,w
 10564     166C  3E02               	addlw	2
 10565     166D  00F6               	movwf	??i1_fputc+2
 10566     166E  0873               	movf	i1fputc@fp+1,w
 10567     166F  1803               	skipnc
 10568     1670  3E01               	addlw	1
 10569     1671  3E00               	addlw	0
 10570     1672  00F7               	movwf	??i1_fputc+3
 10571     1673  0876               	movf	??i1_fputc+2,w
 10572     1674  0084               	movwf	4
 10573     1675  1783               	bsf	3,7
 10574     1676  1C77               	btfss	??i1_fputc+3,0
 10575     1677  1383               	bcf	3,7
 10576     1678  0800               	movf	0,w
 10577     1679  0774               	addwf	??i1_fputc,w
 10578     167A  00F9               	movwf	??i1_fputc+5
 10579     167B  0875               	movf	??i1_fputc+1,w
 10580     167C  00F8               	movwf	??i1_fputc+4
 10581     167D  1803               	skipnc
 10582     167E  0AF8               	incf	??i1_fputc+4,f
 10583     167F  1B80               	btfsc	0,7
 10584     1680  03F8               	decf	??i1_fputc+4,f
 10585     1681  0878               	movf	??i1_fputc+4,w
 10586     1682  00FA               	movwf	??i1_fputc+6
 10587     1683  0879               	movf	??i1_fputc+5,w
 10588     1684  0084               	movwf	4
 10589     1685  1783               	bsf	3,7
 10590     1686  1C7A               	btfss	??i1_fputc+6,0
 10591     1687  1383               	bcf	3,7
 10592     1688  0870               	movf	i1fputc@c,w
 10593     1689  0080               	movwf	0
 10594     168A  0872               	movf	i1fputc@fp,w
 10595     168B  3E02               	addlw	2
 10596     168C  00F4               	movwf	??i1_fputc
 10597     168D  0873               	movf	i1fputc@fp+1,w
 10598     168E  1803               	skipnc
 10599     168F  3E01               	addlw	1
 10600     1690  3E00               	addlw	0
 10601     1691  00F5               	movwf	??i1_fputc+1
 10602     1692  0874               	movf	??i1_fputc,w
 10603     1693  0084               	movwf	4
 10604     1694  1783               	bsf	3,7
 10605     1695  1C75               	btfss	??i1_fputc+1,0
 10606     1696  1383               	bcf	3,7
 10607     1697  3001               	movlw	1
 10608     1698  0780               	addwf	0,f
 10609     1699  0A84               	incf	4,f
 10610     169A  1803               	skipnc
 10611     169B  0A80               	incf	0,f
 10612     169C  0008               	return
 10613     169D                     __end_ofi1_fputc:
 10614                           
 10615                           	psect	text42
 10616     07FC                     __ptext42:	
 10617 ;; *************** function i1_putch *****************
 10618 ;; Defined at:
 10619 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;  c               1    wreg     unsigned char 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  c               1  (no storage) unsigned char 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		wreg
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10633 ;;      Params:         0       0       0       0       0
 10634 ;;      Locals:         0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0
 10636 ;;      Totals:         0       0       0       0       0
 10637 ;;Total ram usage:        0 bytes
 10638 ;; Hardware stack levels used: 1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		i1_fputc
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646     07FC                     i1_putch:	
 10647                           ;psect for function i1_putch
 10648                           
 10649                           
 10650                           ;incstack = 0
 10651 ;; hardware stack exceeded
 10652                           ; Regs used in i1_putch: [wreg]
 10653     07FC  0008               	return
 10654     07FD                     __end_ofi1_putch:
 10655                           
 10656                           	psect	text43
 10657     1F3F                     __ptext43:	
 10658 ;; *************** function i1_display *****************
 10659 ;; Defined at:
 10660 ;;		line 106 in file "newmain.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  RS              2    0[COMMON] int 
 10663 ;;  DC              2    2[COMMON] int 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10675 ;;      Params:         4       0       0       0       0
 10676 ;;      Locals:         0       0       0       0       0
 10677 ;;      Temps:          2       0       0       0       0
 10678 ;;      Totals:         6       0       0       0       0
 10679 ;;Total ram usage:        6 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; This function calls:
 10682 ;;		Nothing
 10683 ;; This function is called by:
 10684 ;;		_ISR
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688     1F3F                     i1_display:	
 10689                           ;psect for function i1_display
 10690                           
 10691                           
 10692                           ;newmain.c: 106: void display(int RS, int DC);newmain.c: 107: {;newmain.c: 108:     RD0=
      +                          RS;
 10693                           
 10694                           ;incstack = 0
 10695 ;; hardware stack exceeded
 10696                           ; Regs used in i1_display: [wreg]
 10697     1F3F  1C70               	btfss	i1display@RS,0
 10698     1F40  2F45               	goto	u489_20
 10699     1F41  1283               	bcf	3,5	;RP0=0, select bank0
 10700     1F42  1303               	bcf	3,6	;RP1=0, select bank0
 10701     1F43  1408               	bsf	8,0	;volatile
 10702     1F44  2F48               	goto	i1l3661
 10703     1F45                     u489_20:
 10704     1F45  1283               	bcf	3,5	;RP0=0, select bank0
 10705     1F46  1303               	bcf	3,6	;RP1=0, select bank0
 10706     1F47  1008               	bcf	8,0	;volatile
 10707     1F48                     i1l3661:
 10708                           
 10709                           ;newmain.c: 109:     PORTC=DC;
 10710     1F48  0872               	movf	i1display@DC,w
 10711     1F49  0087               	movwf	7	;volatile
 10712                           
 10713                           ;newmain.c: 110:     RD1=1;
 10714     1F4A  1488               	bsf	8,1	;volatile
 10715                           
 10716                           ;newmain.c: 111:     _delay((unsigned long)((10)*(10000000/4000.0)));
 10717     1F4B  3021               	movlw	33
 10718     1F4C  00F5               	movwf	??i1_display+1
 10719     1F4D  3076               	movlw	118
 10720     1F4E  00F4               	movwf	??i1_display
 10721     1F4F                     u624_27:
 10722     1F4F  0BF4               	decfsz	??i1_display,f
 10723     1F50  2F4F               	goto	u624_27
 10724     1F51  0BF5               	decfsz	??i1_display+1,f
 10725     1F52  2F4F               	goto	u624_27
 10726     1F53  0000               	nop
 10727                           
 10728                           ;newmain.c: 112:     RD1=0;
 10729     1F54  1283               	bcf	3,5	;RP0=0, select bank0
 10730     1F55  1303               	bcf	3,6	;RP1=0, select bank0
 10731     1F56  1088               	bcf	8,1	;volatile
 10732                           
 10733                           ;newmain.c: 113:     _delay((unsigned long)((10)*(10000000/4000.0)));
 10734     1F57  3021               	movlw	33
 10735     1F58  00F5               	movwf	??i1_display+1
 10736     1F59  3076               	movlw	118
 10737     1F5A  00F4               	movwf	??i1_display
 10738     1F5B                     u625_27:
 10739     1F5B  0BF4               	decfsz	??i1_display,f
 10740     1F5C  2F5B               	goto	u625_27
 10741     1F5D  0BF5               	decfsz	??i1_display+1,f
 10742     1F5E  2F5B               	goto	u625_27
 10743     1F5F  0000               	nop
 10744     1F60  0008               	return
 10745     1F61                     __end_ofi1_display:
 10746     0002                     ___latbits      equ	2
 10747     007E                     btemp           set	126	;btemp
 10748     007E                     wtemp0          set	126
 10749                           
 10750                           	psect	config
 10751                           
 10752                           ;Config register CONFIG @ 0x2007
 10753                           ;	Oscillator Selection bits
 10754                           ;	FOSC = HS, HS oscillator
 10755                           ;	Watchdog Timer Enable bit
 10756                           ;	WDTE = OFF, WDT disabled
 10757                           ;	Power-up Timer Enable bit
 10758                           ;	PWRTE = OFF, PWRT disabled
 10759                           ;	Brown-out Reset Enable bit
 10760                           ;	BOREN = OFF, BOR disabled
 10761                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10762                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10763                           ;	Data EEPROM Memory Code Protection bit
 10764                           ;	CPD = OFF, Data EEPROM code protection off
 10765                           ;	Flash Program Memory Write Enable bits
 10766                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10767                           ;	In-Circuit Debugger Mode bit
 10768                           ;	DEBUG = 0x1, unprogrammed default
 10769                           ;	Flash Program Memory Code Protection bit
 10770                           ;	CP = OFF, Code protection off
 10771     2007                     	org	8199
 10772     2007  3F3A               	dw	16186

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     55      62
    BANK3            96     87      89
    BANK2            96      0      32

Pointer List with Targets:

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    i1sprintf@f$.$source	PTR const unsigned char  size(1) Largest target is 0

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S526$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    S526$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> ISR@c(BANK1[10]), main@a(BANK3[10]), main@b(BANK3[10]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[5]), STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_vfpfcnvrt->i1_read_prec_or_width
    i1_xtoa->i1_pad
    i1_utoa->i1_pad
    i1_read_prec_or_width->i1___wmul
    i1_otoa->i1_pad
    i1_dtoa->i1_pad
    i1_pad->i1_fputc
    i1_fputs->i1_fputc
    i1_abs->i1___awmod
    i1_ctoa->i1_fputc

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_xtoa
    i1_xtoa->i1_pad
    i1_utoa->i1_pad
    i1_otoa->i1_pad
    i1_dtoa->i1_pad
    i1_pad->i1_fputs

Critical Paths under _main in BANK1

    _sprintf->_vfprintf
    _vfpfcnvrt->_otoa
    _xtoa->_pad
    _utoa->_pad
    _read_prec_or_width->___wmul
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ctoa->_fputc

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   14317
                                             54 BANK3     33    33      0
                            _display
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6   13673
                                             33 BANK3     21    15      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5   13129
                                             53 BANK1      2     2      0
                                             28 BANK3      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           17    12      5   12716
                                             11 BANK3     17    12      5
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                16    11      5    2109
                                             47 BANK1      5     0      5
                                              0 BANK3     11    11      0
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     6      4    2214
                                             47 BANK1      4     0      4
                                              0 BANK3      6     6      0
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     238
                                             18 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     247
                                             18 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     278
                                             24 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _otoa                                                13     9      4    1837
                                             47 BANK1      6     2      4
                                              0 BANK3      7     7      0
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    2956
                                             47 BANK1      4     0      4
                                              0 BANK3      9     9      0
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1358
                                             39 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2     133
                                             18 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     511
                                             31 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                             24 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                             18 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 9     6      3     659
                                             31 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                               13     9      4     359
                                             18 BANK1     13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4      58
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 18    18      0    9318
                                              0 BANK1     18    18      0
                          i1_display
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (10) i1_sprintf                                          24    18      6    9079
                                             56 BANK0     22    16      6
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (11) i1_vfprintf                                          8     2      6    8842
                                             48 BANK0      8     2      6
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i1_vfpfcnvrt                                        17    12      5    8687
                                             31 BANK0     17    12      5
                             i1_ctoa
                             i1_dtoa
                            i1_fputc
                             i1_otoa
               i1_read_prec_or_width
                             i1_utoa
                             i1_xtoa
 ---------------------------------------------------------------------------------
 (13) i1_xtoa                                             16    11      5    1414
                                             15 BANK0     16    11      5
                              i1_pad
 ---------------------------------------------------------------------------------
 (13) i1_utoa                                             10     6      4    1484
                                             15 BANK0     10     6      4
                          i1___lwdiv
                          i1___lwmod
                              i1_pad
 ---------------------------------------------------------------------------------
 (14) i1___lwmod                                           5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (14) i1___lwdiv                                           7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (13) i1_read_prec_or_width                                8     5      3     278
                                              6 COMMON     8     5      3
                           i1___wmul
 ---------------------------------------------------------------------------------
 (14) i1___wmul                                            6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) i1_otoa                                             13     9      4    1230
                                             15 BANK0     13     9      4
                              i1_pad
 ---------------------------------------------------------------------------------
 (13) i1_dtoa                                             13     9      4    1988
                                             15 BANK0     13     9      4
                          i1___awdiv
                          i1___awmod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (14) i1_pad                                               8     3      5     907
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                            i1_fputc
                            i1_fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (15) i1_strlen                                            3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (15) i1_fputs                                             8     5      3     341
                                              0 BANK0      8     5      3
                            i1_fputc
 ---------------------------------------------------------------------------------
 (14) i1_abs                                               4     2      2      67
                                              6 COMMON     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___awmod                                           6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (13) i1_ctoa                                              9     6      3     445
                                              0 BANK0      9     6      3
                            i1_fputc
 ---------------------------------------------------------------------------------
 (16) i1_fputc                                            13     9      4     240
                                              0 COMMON    13     9      4
                            i1_putch
 ---------------------------------------------------------------------------------
 (17) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (10) i1_display                                           6     2      4      48
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
         _otoa
           _pad
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
         _xtoa
           _pad

 _ISR (ROOT)
   i1_display
   i1_sprintf
     i1_vfprintf
       i1_vfpfcnvrt
         i1_ctoa
           i1_fputc
             i1_putch
         i1_dtoa
           i1___awdiv
           i1___awmod
           i1_abs
             i1___awmod (ARG)
           i1_pad
             i1_fputc
             i1_fputs
               i1_fputc
             i1_strlen
         i1_fputc
         i1_otoa
           i1_pad
         i1_read_prec_or_width
           i1___wmul
         i1_utoa
           i1___lwdiv
           i1___lwmod
           i1_pad
         i1_xtoa
           i1_pad

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     78      78     97.5%
BANK1               80     55      62     77.5%
BANK3               96     87      89     92.7%
BANK2               96      0      32     33.3%
STACK                0      0       0      0.0%
DATA                 0      0     269      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Dec 21 20:58:04 2024

                           pc 0002                            l50 058A                            l44 04F5  
                ___awdiv@sign 00B7                            fsr 0004           __end_ofi1_vfpfcnvrt 1000  
         ___wmul@multiplicand 00B4              i1___wmul@product 0074  __end_ofi1_read_prec_or_width 1512  
                         l162 1F6D                           l702 0739                           l712 07C2  
                         l720 175C                           l652 1349                           l653 1358  
                         l735 0B5E                           l665 1459                           l649 1323  
                         l770 0077                           l771 007B                           l668 147F  
                         l772 007F                           l685 0663                           l677 0631  
                         l749 0C03                           l773 00AE                           l678 0657  
                         l766 0061                           l791 01A3                           l768 006F  
                         l769 0073                           l788 01A3                           _GIE 005F  
                         _RD0 0040                           _RD1 0041                           _ISR 13CA  
                  i1_dtoa$616 0033                           _abs 1EE8                           _pad 130E  
                         fsr0 0004                           indf 0000                  ___awmod@sign 00B7  
                main@Low_bits 01DD                          ?_ISR 0070                          ISR@c 00A6  
                        ISR@i 00B0                          ?_abs 00B8                          l4001 0651  
                        l4021 066D                          l4101 1794                          l4111 17D7  
                        l4009 0691                          l4113 1770                          l4121 17DD  
                        l4035 06FD                          l4019 06DF                          l4043 0726  
                        l4131 0B4B                          l4029 06EC                          l4053 0774  
                        l4301 02B6                          l4205 0064                          l4047 072F  
                        l4135 0B54                          l4303 02B7                          l4311 02DC  
                        l4231 00D3                          l4223 00B4                          l4065 07AA  
                        l2385 1F65                          l4161 0BB2                          l4153 0B9C  
                        l4145 0B85                          l4305 02CA                          l4313 02EF  
                        l4067 0750                          l4075 07B7                          l4171 0BD2  
                        l4323 0356                          l4315 0306                          l4307 02CA  
                        l4331 03AE                          l4251 0180                          l4219 0083  
                        l4085 07D9                          l4093 1749                          l4149 0B8C  
                        l4341 03DC                          l4261 01A6                          l4237 010E  
                        l4191 0C2F                          l4351 0421                          l4343 03DC  
                        l4335 03C3                          l4319 032E                          l4271 01F1  
                        l4247 0162                          l4097 1752                          l4361 045F  
                        l4337 03C3                          l4329 0392                          l4273 01F1  
                        l4257 019C                          l4265 01A8                          l4441 056A  
                        l3803 12C3                          l4339 03C4                          l4347 03F8  
                        l4355 0424                          l4275 01F2                          l4291 0265  
                        l4283 0216                          l4267 01C8                          l4371 0471  
                        l4419 04E3                          l3821 12E0                          l4365 0466  
                        l4349 040B                          l4277 0204                          l4285 0229  
                        l4461 05D2                          ?_pad 00C7                          l3639 1FDF  
                        l3831 1301                          l3911 107F                          l4279 0204  
                        l4463 05FF                          l4439 053D                          l3809 12CC  
                        l3913 108B                          l3921 10A4                          l4385 119B  
                        l3835 1309                          l3827 12F6                          l3819 12D4  
                        l3851 122A                          l4299 02B6                          l4387 11C9  
                        l3773 085D                          l3861 123C                          l2981 1589  
                        l3917 1099                          l3767 0812                          l3847 1223  
                        l3783 1FB0                          l3791 1F17                          l2975 1549  
                        l3769 0817                          l3961 1453                          l3873 125D  
                        l3865 124A                          l3937 1325                          l3929 131D  
                        l3971 145B                          l3955 1439                          l3859 1230  
                        l2979 1568                          l3957 1441                          l3869 1255  
                        l3789 1F0E                          l3975 1491                          l3895 117B  
                        l3887 1159                          l3985 061E                          l3889 1165  
                        l3995 0644                          l3899 1186                          l3989 0627  
                        STR_1 1010                          STR_2 1010                          u5025 085B  
                        u5115 12E1                          u5125 12ED                          u5135 12F7  
                        u5215 1242                          u2655 1F6E                          u5225 124B  
                        u2665 1F75                          u5305 117C                          u5405 132F  
                        _INTE 005C                          _INTF 0059                          u5095 12D7  
                        u5335 1082                          u6207 0582                          u5265 115C  
                        u6217 0607                          u6227 1FEC                          u5195 1233  
                        u5355 1091                          u6237 1FFA                          u5285 1166  
                        u5365 109A                          u5295 1172                          u5480 0614  
                        u5465 1465                          u5490 0615                          u5810 0B72  
                        i1l75 1422                          u6187 04ED                          i1l76 1423  
                        u4860 1FDC                          u5820 0B73                          u5565 06EA  
                        u5645 07B5                          u6197 0572                          u5585 067E  
                        u5665 0761                          u5905 0BFD                          u5595 068B  
                        u5675 076E                          u5765 1781                          u5775 178E  
                        u5875 0BDD                          u5895 0BF0                          abs@a 00B8  
                        _dbuf 0110               i1xtoa@d_nonzero 003B                          _ctoa 142E  
                        _main 04B4                          _dtoa 060E                          _prec 00D9  
                        _otoa 0720                          _nout 01E7                          pad@i 00CD  
                        pad@p 00CA                          btemp 007E                          _utoa 1743  
                        _xtoa 0B45                          start 0012               __end_ofi1_fputc 169D  
             __end_ofi1_fputs 1FAC               __end_ofi1_putch 07FD                    i1_xtoa$641 0034  
                  i1_vfprintf 10DC                         ??_ISR 00A0                         ??_abs 00BA  
                       ??_pad 00CC                 i1vfpfcnvrt@ap 0042                 i1vfpfcnvrt@cp 004E  
               i1vfpfcnvrt@fp 003F                         ?_ctoa 00BF                         ?_main 0070  
                       ?_dtoa 00CF                i1___awdiv@sign 0075               __end_of___awdiv 130E  
             __end_of___awmod 1262                         ?_otoa 00CF                         ?_utoa 00CF  
             ___awdiv@divisor 00B2                         ?_xtoa 00CF               __end_of___lwdiv 118B  
                       i1l162 1F28               __end_of___lwmod 10A9                         i1l702 08B6  
                       i1l712 0935                         i1l720 16B6                         i1l652 13A7  
                       i1l653 13B8                         i1l735 097C                         i1l665 15C9  
                       i1l649 1381                         i1l770 0C93                         i1l771 0C97  
                       i1l668 15EF                         i1l772 0C9B                         i1l685 0AA2  
                       i1l677 0A71                         i1l749 0A12                         i1l773 0CC2  
                       i1l678 0A96                         i1l766 0C7D                         i1l791 0D85  
                       i1l768 0C8B                         i1l769 0C8F                         i1l788 0D85  
             ___awdiv@counter 00B6                  vfpfcnvrt@fmt 019D                         _PORTC 0007  
                       _PORTD 0008                         _TRISC 0087                         _TRISD 0088  
                       i1_abs 1EDA                         i1_pad 136A            i1___lwmod@dividend 0072  
             __end_of_display 2000                i1___awmod@sign 0075                         _flags 00DD  
                       _count 00DB           read_prec_or_width@c 00BC           read_prec_or_width@n 00BD  
                       _fputc 0808                         _fputs 1FAC                         pad@fp 00C7  
                       _width 00D7                         ctoa@c 00C1                         _putch 07FB  
                       ctoa@l 00C4                         main@a 01C9                         main@b 01D3  
                       ctoa@w 00C6                         main@i 01E3                         dtoa@d 00D1  
                       dtoa@i 0197                         dtoa@p 0192                         dtoa@s 0196  
                       dtoa@w 0194                         pclath 000A              __end_ofi1___wmul 1F3F  
                       otoa@d 00D1                         otoa@i 0195                         otoa@p 0190  
                       otoa@t 0194                         otoa@w 0192                         utoa@d 00D1  
                       utoa@i 0194                         utoa@p 0190                         utoa@w 0192  
                       status 0003           i1___wmul@multiplier 0070                         wtemp0 007E  
             __end_of_sprintf 1047                         xtoa@a 0190                         xtoa@c 0198  
                       xtoa@d 00D1                         xtoa@i 0199                         xtoa@p 0193  
                       xtoa@w 0196                         xtoa@x 00D3              __end_ofi1_strlen 1F0A  
                 i1_vfpfcnvrt 0C51               __initialization 0015                  __end_of_ctoa 149C  
                __end_of_main 060E                  __end_of_dtoa 0720                 i1vfprintf@fmt 0052  
                __end_of_otoa 07FB                  __end_of_utoa 1800                  __end_of_xtoa 0C51  
      i1read_prec_or_width@ap 0077                   i1display@DC 0072                   i1display@RS 0070  
                  i1sprintf@f 0061                    i1sprintf@s 0058                        ??_ctoa 00C2  
                      ??_main 01C6                        ??_dtoa 00D3                        ??_otoa 00D3  
                      ??_utoa 00D3                        ??_xtoa 00D4                        ?i1_abs 0076  
                      ?i1_pad 0028    __end_of_read_prec_or_width 158E                 main@high_bits 01DF  
              i1vfpfcnvrt@fmt 0041                        _ADCON0 001F                        _ADCON1 009F  
                      ?_fputc 00B2                        ?_fputs 00BF                        _ADRESH 001E  
                      _ADRESL 009E              ___awdiv@dividend 00B4                        ?_putch 0070  
                      i1l3005 15CB                        i1l3101 08CD                        i1l3023 0A67  
                      i1l3009 1603                        i1l3043 0ACD                        i1l3035 0A90  
                      i1l3019 0A5E                        i1l3131 16AC                        i1l3053 0B13  
                      i1l3029 0A84                        i1l3109 092A                        i1l3205 09E4  
                      i1l2343 1661                        i1l3055 0AAB                        i1l3063 0B1F  
                      i1l3119 094D                        i1l3135 16EA                        i1l3127 16A3  
                      i1l2337 1616                        i1l3081 08AC                        i1l3241 150D  
                      i1l3145 1727                        i1l3225 0A3A                        i1l2339 161B  
                      i1l2603 12AA                        i1l2371 1F88                        i1l3235 14D7  
                      i1l3147 16CA                        i1l3155 172C                        i1l2701 137B  
                      i1l3069 0B30                        i1l3077 08A3                        i1l3165 0969  
                      i1l3501 0DAA                        i1l2607 12B2                        i1l2631 11E5  
                      i1l2623 11DF                        i1l3087 08EF                        i1l3239 14F4  
                      i1l3183 09A6                        i1l3511 0DDF                        i1l2633 11F1  
                      i1l2641 120A                        i1l2377 1EFA                        i1l3169 0972  
                      i1l3513 0DDF                        i1l3505 0DC3                        i1l2619 11D8  
                      i1l2379 1F03                        i1l3099 091F                        i1l2555 1F20  
                      i1l3195 09C6                        i1l3187 09B4                        i1l3179 099F  
                      i1l3507 0DC3                        i1l2581 1275                        i1l2645 1212  
                      i1l2637 11FF                        i1l2709 1383                        i1l2661 1129  
                      i1l3541 0E81                        i1l3533 0E64                        i1l3509 0DC4  
                      i1l3525 0E33                        i1l3517 0DFA                        i1l3453 0C9D  
                      i1l3605 0FD5                        i1l2591 127D                        i1l2575 126C  
                      i1l2671 114A                        i1l3535 0E64                        i1l3519 0E0B  
                      i1l3471 0D12                        i1l3439 0C80                        i1l3631 10E6  
                      i1l2593 1289                        i1l3553 0ED6                        i1l3537 0E65  
                      i1l3545 0E9C                        i1l3481 0D56                        i1l3465 0CE3  
                      i1l3457 0CC8                        i1l3633 1112                        i1l2667 113F  
                      i1l2659 111D                        i1l2683 104D                        i1l3571 0F27  
                      i1l3563 0F04                        i1l3539 0E81                        i1l3547 0EAD  
                      i1l3491 0D7E                        i1l3661 1F48                        i1l2685 1059  
                      i1l2693 1072                        i1l3573 0F28                        i1l3581 0F72  
                      i1l3557 0EE8                        i1l3549 0EC4                        i1l3565 0F1A  
                      i1l3485 0D6A                        i1l2599 129F                        i1l3575 0F4B  
                      i1l3583 0F83                        i1l3495 0D88                        i1l2689 1067  
                      i1l3585 0F9B                        i1l3577 0F4B                        i1l3569 0F27  
                      i1l3595 0FC5                        i1l3499 0D8A                        i1l3589 0F9E  
                      i1l2991 15AD                        i1l3599 0FCC                        i1l4479 13FF  
                      i1l2995 15C3                        i1l2989 159F                     ??i1_fputc 0074  
                      u312_25 1280                     ??i1_fputs 0023                        u314_25 128A  
                      u322_25 11E8                        u306_25 1F29                        u403_25 15D5  
                      u315_25 1296                        u307_25 1F30                        u331_25 112A  
                      u316_25 12A0                        u324_25 11F7                        u332_25 1136  
                      u405_20 0A56                        u325_25 1200                        u413_25 0B1D  
                      u421_25 0928                        u333_25 1140                        u406_20 0A57  
                      u343_25 138D                        u415_25 0ABA                        u423_25 08DC  
                      u416_25 0AC7                        u424_25 08E9                        u336_25 1050  
                      u329_25 1120                        u433_25 16D7                        u258_25 165F  
                      u338_25 105F                        u434_25 16E4                        u339_25 1068  
                      u444_25 09EE                        u438_20 098E                        u446_25 09FF  
                      u439_20 098F                        u447_25 0A0C                        u624_27 1F4F  
                      u625_27 1F5B                     ??i1_putch 0070                 vfpfcnvrt@done 01A4  
                      u489_20 1F45          i1_read_prec_or_width 149C                        i1abs@a 0076  
                      i1_ctoa 158E                        i1_dtoa 0A50                        i1_otoa 089D  
                      i1pad@i 002D                        i1pad@p 002B                        i1_utoa 169D  
                      i1_xtoa 0963                  vfprintf@cfmt 00D5                   ?i1_vfprintf 0050  
                      ___wmul 1F61                     ??___awdiv 00B6                     ??___awmod 00B6  
                   ??___lwdiv 00B6                     ??___lwmod 00B6          read_prec_or_width@ap 00B9  
            ___awdiv@quotient 00B8               ___awmod@divisor 00B2               ___awmod@counter 00B6  
                      pad@buf 00C9                        ctoa@fp 00BF                        dtoa@fp 00CF  
                      _strlen 1F0A                     ??_display 00B6             __end_ofi1___awdiv 12B7  
           __end_ofi1___awmod 1217                        fputc@c 00B2             __end_ofi1___lwdiv 114F  
                      fputs@c 00C4                        fputs@i 00C5                        fputs@s 00BF  
           __end_ofi1___lwmod 1077                        saved_w 007E                        otoa@fp 00CF  
                      putch@c 0070              __end_of_vfprintf 11CE             __end_ofi1_display 1F61  
                      utoa@fp 00CF                     ??_sprintf 01B7                        xtoa@fp 00CF  
     __end_of__initialization 0029         ?i1_read_prec_or_width 0076             __end_ofi1_sprintf 10DC  
               __end_ofi1_abs 1EE8                 __end_ofi1_pad 13CA                __pcstackCOMMON 0070  
              i1vfprintf@cfmt 0056                 __end_of_fputc 089D                 __end_of_fputs 1FD4  
               __end_of_putch 07FC       i1read_prec_or_width@fmt 0076                     ?i1___wmul 0070  
                     ??i1_abs 0078                       ??i1_pad 007D                   i1sprintf@ap 006C  
                   ?i1_strlen 0070                       ??_fputc 00B6                       ??_fputs 00C2  
                     ??_putch 00B2                    __pbssBANK1 00D7                    __pbssBANK2 0110  
                  __pbssBANK3 01E7                       ?i1_ctoa 0020                       ?i1_dtoa 002F  
                     ?i1_otoa 002F                       ?i1_utoa 002F                       ?i1_xtoa 002F  
             i1vfpfcnvrt@done 0048                    __pmaintext 04B4                       ?___wmul 00B2  
                  __pintentry 0004                    ??i1___wmul 0074                       ?_strlen 00B2  
          i1___awdiv@dividend 0072                    ??i1_strlen 0072                    __stringtab 1000  
      ??i1_read_prec_or_width 0079                       i1_fputc 160E                       i1_fputs 1F84  
                     i1pad@fp 0028                       i1ctoa@c 0022                       i1_putch 07FC  
                     i1ctoa@l 0025                       i1ctoa@w 0027                       i1dtoa@d 0031  
                     i1dtoa@i 003A                       i1dtoa@p 0035                       i1dtoa@s 0039  
                     i1dtoa@w 0037                       i1otoa@d 0031                       i1otoa@i 003A  
                     i1otoa@p 0035                       i1otoa@t 0039                       i1otoa@w 0037  
                     i1utoa@d 0031                       i1utoa@i 0037                       i1utoa@p 0033  
                     i1utoa@w 0035                       i1xtoa@a 0036                       i1xtoa@c 003C  
                     i1xtoa@d 0031                       i1xtoa@i 003D                       i1xtoa@p 0037  
                     i1xtoa@w 0039                       i1xtoa@x 0033                  ?i1_vfpfcnvrt 003F  
          i1___awdiv@quotient 0076                       ___awdiv 12B7                       ___awmod 1217  
                     ___lwdiv 114F                       ___lwmod 1077                     ?_vfprintf 01AC  
                     __ptext1 1018                       __ptext2 118B                       __ptext3 002D  
                     __ptext4 0B45                       __ptext5 1743                       __ptext6 1077  
                     __ptext7 114F                       __ptext8 1512                       __ptext9 1F61  
                     _display 1FD4             i1___lwdiv@divisor 0070         read_prec_or_width@fmt 00B8  
           i1___lwdiv@counter 0076              ___awmod@dividend 00B4                       _sprintf 1018  
                     clrloop0 0801          end_of_initialization 0029                       fputc@fp 00B4  
                     fputs@fp 00C0            _read_prec_or_width 1512                  ??i1_vfprintf 007E  
           __end_of_vfpfcnvrt 04B4           ?_read_prec_or_width 00B8              vfpfcnvrt@convarg 01A6  
                  ??_vfprintf 00D5         i1___wmul@multiplicand 0072                       strlen@a 00B4  
                     strlen@s 00B2                     i1___awdiv 1262                     i1___awmod 11CE  
        ??_read_prec_or_width 00BA                     i1___lwdiv 1115                     i1___lwmod 1047  
          __end_ofi1_vfprintf 1115                     i1_display 1F3F                __end_ofi1_ctoa 160E  
              __end_ofi1_dtoa 0B45                __end_ofi1_otoa 0963                __end_ofi1_utoa 1743  
              __end_ofi1_xtoa 0A50                     i1_sprintf 10A9                  i1vfpfcnvrt@c 004D  
                 vfpfcnvrt@ap 019E                   vfpfcnvrt@cp 01AA                   vfpfcnvrt@fp 019B  
              __end_of___wmul 1F84                     i1fputc@fp 0072                     i1fputs@fp 0021  
           i1___lwmod@divisor 0070             i1___lwmod@counter 0074                __end_of_strlen 1F1E  
         start_initialization 0015                   __end_of_ISR 142E                   __end_of_abs 1EF8  
                i1vfprintf@ap 0054                   __end_of_pad 136A                  i1vfprintf@fp 0050  
                  ?i1___awdiv 0070                    ?i1___awmod 0070         i1read_prec_or_width@c 007B  
       i1read_prec_or_width@n 007C                    ?i1___lwdiv 0070                    ?i1___lwmod 0070  
                   i1strlen@a 0072                     i1strlen@s 0070                    ?i1_display 0070  
                    ??i1_ctoa 0023                      ??i1_dtoa 007E                      ??i1_otoa 0033  
                    ??i1_utoa 007E                      ??i1_xtoa 007E                  i1sprintf@fmt 005A  
                 vfprintf@fmt 01AE                    ?i1_sprintf 0058                      ??___wmul 00B6  
          i1___awmod@dividend 0072                      ??_strlen 00B4                     ___latbits 0002  
               __pcstackBANK0 0020                 __pcstackBANK1 00A0                 __pcstackBANK3 0190  
                    ?i1_fputc 0070                      ?i1_fputs 0020                      ?i1_putch 0070  
          i1vfpfcnvrt@convarg 0049              ___lwdiv@dividend 00B4                      ?___awdiv 00B2  
                    ?___awmod 00B2                      ?___lwdiv 00B2                      ?___lwmod 00B2  
           i1___awdiv@divisor 0070             i1___awdiv@counter 0074                     __pstrings 1000  
                    ?_display 00B2                   ??i1___awdiv 0074                   ??i1___awmod 0074  
            ___lwdiv@quotient 00B7                   ??i1___lwdiv 0074                   ??i1___lwmod 0074  
                    ?_sprintf 01B1                   ??i1_display 0074             interrupt_function 0004  
              ___wmul@product 00B6                     clear_ram0 0800                      _GO_nDONE 00FA  
                 ??i1_sprintf 005E                     _vfpfcnvrt 002D                   __stringbase 100F  
           ___wmul@multiplier 00B2                      i1___wmul 1F1E                     display@DC 00B4  
                   display@RS 00B2                      i1pad@buf 002A                      i1ctoa@fp 0020  
                    i1dtoa@fp 002F                      i1_strlen 1EF8                    vfpfcnvrt@c 01A5  
                    i1fputc@c 0070                      i1fputs@c 0025                      i1fputs@i 0026  
                    i1fputs@s 0020                      i1otoa@fp 002F                      i1utoa@fp 002F  
                    i1xtoa@fp 002F                    vfprintf@ap 01B0                    vfprintf@fp 01AC  
           i1___awmod@divisor 0070             i1___awmod@counter 0074                    ?_vfpfcnvrt 019B  
          __end_of__stringtab 1010                    sprintf@fmt 01B3                      _dtoa$616 0190  
             ___lwdiv@divisor 00B2               ___lwdiv@counter 00B6                      __ptext10 0720  
                    __ptext11 060E                      __ptext20 07FB                      __ptext12 130E  
                    __ptext21 1FD4                      __ptext13 1F0A                      __ptext30 149C  
                    __ptext22 13CA                      __ptext14 1FAC                      __ptext31 1F1E  
                    __ptext23 10A9                      __ptext15 1EE8                      __ptext40 158E  
                    __ptext32 089D                      __ptext24 10DC                      __ptext16 1217  
                    __ptext41 160E                      __ptext33 0A50                      __ptext25 0C51  
                    __ptext17 12B7                      __ptext42 07FC                      __ptext34 136A  
                    __ptext26 0963                      __ptext18 142E                      __ptext43 1F3F  
                    __ptext35 1EF8                      __ptext27 169D                      __ptext19 0808  
                    __ptext36 1F84                      __ptext28 1047                      __ptext37 1EDA  
                    __ptext29 1115                      __ptext38 11CE                      __ptext39 1262  
          i1___lwdiv@dividend 0072                      _xtoa$641 0191                      main@i_70 01E5  
                    _vfprintf 118B                      main@bits 01E1            i1___lwdiv@quotient 0074  
               xtoa@d_nonzero 0195                      intlevel1 0000                     sprintf@ap 01C5  
            ___lwmod@dividend 00B4                     stringcode 100A                 ??i1_vfpfcnvrt 0044  
                 ??_vfpfcnvrt 01A0                    _OPTION_REG 0081                      sprintf@f 01BA  
                    sprintf@s 01B1               ___lwmod@divisor 00B2               ___lwmod@counter 00B6  
                    stringdir 100A                      stringtab 1000  
