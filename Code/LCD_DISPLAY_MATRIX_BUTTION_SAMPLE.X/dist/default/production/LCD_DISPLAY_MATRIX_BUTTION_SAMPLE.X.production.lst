

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 12 17:39:25 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177                           
   178                           	psect	idataBANK0
   179     0757                     __pidataBANK0:
   180                           
   181                           ;initializer for main@F1331
   182     0757  3420               	retlw	32
   183     0758  3420               	retlw	32
   184     0759  3420               	retlw	32
   185     075A  3441               	retlw	65
   186     075B  344D               	retlw	77
   187     075C  344D               	retlw	77
   188     075D  3455               	retlw	85
   189     075E  3420               	retlw	32
   190     075F  3420               	retlw	32
   191     0760  3420               	retlw	32
   192     0761  3400               	retlw	0
   193     0008                     _PORTD          set	8
   194     0007                     _PORTC          set	7
   195     0039                     _RC1            set	57
   196     0038                     _RC0            set	56
   197     0088                     _TRISD          set	136
   198     0087                     _TRISC          set	135
   199                           
   200                           	psect	cinit
   201     07EE                     start_initialization:	
   202                           ; #config settings
   203                           
   204     07EE                     __initialization:
   205                           
   206                           ; Initialize objects allocated to BANK0
   207     07EE  1383               	bcf	3,7	;select IRP bank0
   208     07EF  3038               	movlw	low (__pdataBANK0+11)
   209     07F0  00FD               	movwf	btemp+-1
   210     07F1  3007               	movlw	high __pidataBANK0
   211     07F2  00FE               	movwf	btemp
   212     07F3  3057               	movlw	low __pidataBANK0
   213     07F4  00FF               	movwf	btemp+1
   214     07F5  302D               	movlw	low __pdataBANK0
   215     07F6  0084               	movwf	4
   216     07F7  120A  118A  2766  120A  118A  	fcall	init_ram0
   217     07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FC                     __end_of__initialization:
   221     07FC  0183               	clrf	3
   222     07FD  120A  118A  2F98   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	dataBANK0
   225     002D                     __pdataBANK0:
   226     002D                     main@F1331:
   227     002D                     	ds	11
   228                           
   229                           	psect	inittext
   230     0762                     init_fetch0:	
   231                           ;	Called with low address in FSR and high address in W
   232                           
   233     0762  087E               	movf	btemp,w
   234     0763  008A               	movwf	10
   235     0764  087F               	movf	btemp+1,w
   236     0765  0082               	movwf	2
   237     0766                     init_ram0:	
   238                           ;Called with:
   239                           ;	high address of idata address in btemp 
   240                           ;	low address of idata address in btemp+1 
   241                           ;	low address of data in FSR
   242                           ;	high address + 1 of data in btemp-1
   243                           
   244     0766  120A  118A  2762  120A  118A  	fcall	init_fetch0
   245     076B  0080               	movwf	0
   246     076C  0A84               	incf	4,f
   247     076D  0804               	movf	4,w
   248     076E  067D               	xorwf	btemp+-1,w
   249     076F  1903               	btfsc	3,2
   250     0770  3400               	retlw	0
   251     0771  0AFF               	incf	btemp+1,f
   252     0772  1903               	btfsc	3,2
   253     0773  0AFE               	incf	btemp,f
   254     0774  2F66               	goto	init_ram0
   255                           
   256                           	psect	cstackCOMMON
   257     0070                     __pcstackCOMMON:
   258     0070                     ?_display:
   259     0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     display@RS:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 2 bytes @ 0x0
   267     0070                     	ds	2
   268     0072                     display@DC:
   269                           
   270                           ; 2 bytes @ 0x2
   271     0072                     	ds	2
   272     0074                     ??_display:
   273                           
   274                           ; 1 bytes @ 0x4
   275     0074                     	ds	2
   276     0076                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x6
   279     0076                     	ds	4
   280                           
   281                           	psect	cstackBANK0
   282     0020                     __pcstackBANK0:
   283     0020                     main@name:
   284                           
   285                           ; 11 bytes @ 0x0
   286     0020                     	ds	11
   287     002B                     main@i:
   288                           
   289                           ; 2 bytes @ 0xB
   290     002B                     	ds	2
   291                           
   292                           	psect	maintext
   293     0798                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 21 in file "newmain.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  name           11    0[BANK0 ] unsigned char [11]
   304 ;;  i               2   11[BANK0 ] int 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0      13       0       0       0
   316 ;;      Temps:          4       0       0       0       0
   317 ;;      Totals:         4      13       0       0       0
   318 ;;Total ram usage:       17 bytes
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		_display
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327     0798                     _main:	
   328                           ;psect for function _main
   329                           
   330     0798                     l606:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   333                           
   334                           
   335                           ;newmain.c: 23:     TRISC=TRISD=0;
   336     0798  1683               	bsf	3,5	;RP0=1, select bank1
   337     0799  1303               	bcf	3,6	;RP1=0, select bank1
   338     079A  0188               	clrf	8	;volatile
   339     079B  0187               	clrf	7	;volatile
   340                           
   341                           ;newmain.c: 24:     PORTC=PORTD=0;
   342     079C  1283               	bcf	3,5	;RP0=0, select bank0
   343     079D  1303               	bcf	3,6	;RP1=0, select bank0
   344     079E  0188               	clrf	8	;volatile
   345     079F  0187               	clrf	7	;volatile
   346     07A0                     l608:
   347                           
   348                           ;newmain.c: 25:     char name[]={"   AMMU   "};
   349     07A0  302D               	movlw	main@F1331& (0+255)
   350     07A1  0084               	movwf	4
   351     07A2  3020               	movlw	low main@name
   352     07A3  00F6               	movwf	??_main
   353     07A4  300B               	movlw	11
   354     07A5  00F7               	movwf	??_main+1
   355     07A6                     u70:
   356     07A6  1383               	bcf	3,7	;select IRP bank0
   357     07A7  0800               	movf	0,w
   358     07A8  00F8               	movwf	??_main+2
   359     07A9  0A04               	incf	4,w
   360     07AA  00F9               	movwf	??_main+3
   361     07AB  0876               	movf	??_main,w
   362     07AC  0084               	movwf	4
   363     07AD  0878               	movf	??_main+2,w
   364     07AE  0080               	movwf	0
   365     07AF  0A04               	incf	4,w
   366     07B0  00F6               	movwf	??_main
   367     07B1  0879               	movf	??_main+3,w
   368     07B2  0084               	movwf	4
   369     07B3  0BF7               	decfsz	??_main+1,f
   370     07B4  2FA6               	goto	u70
   371     07B5                     l610:
   372                           
   373                           ;newmain.c: 26:     int i;;newmain.c: 27:     display(0,0x0e);
   374     07B5  3000               	movlw	0
   375     07B6  00F0               	movwf	display@RS
   376     07B7  00F1               	movwf	display@RS+1
   377     07B8  300E               	movlw	14
   378     07B9  00F2               	movwf	display@DC
   379     07BA  3000               	movlw	0
   380     07BB  00F3               	movwf	display@DC+1
   381     07BC  120A  118A  2775  120A  118A  	fcall	_display
   382     07C1                     l612:
   383                           
   384                           ;newmain.c: 28:     for(i=0;name[i]!='\0';i++)
   385     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   386     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   387     07C3  01AB               	clrf	main@i
   388     07C4  01AC               	clrf	main@i+1
   389     07C5  2FE1               	goto	l618
   390     07C6                     l614:
   391                           
   392                           ;newmain.c: 29:         display(1, name[i]);
   393     07C6  3001               	movlw	1
   394     07C7  00F0               	movwf	display@RS
   395     07C8  3000               	movlw	0
   396     07C9  00F1               	movwf	display@RS+1
   397     07CA  082B               	movf	main@i,w
   398     07CB  3E20               	addlw	(low (main@name| 0))& (0+255)
   399     07CC  0084               	movwf	4
   400     07CD  0800               	movf	0,w
   401     07CE  00F6               	movwf	??_main
   402     07CF  01F7               	clrf	??_main+1
   403     07D0  0876               	movf	??_main,w
   404     07D1  00F2               	movwf	display@DC
   405     07D2  0877               	movf	??_main+1,w
   406     07D3  00F3               	movwf	display@DC+1
   407     07D4  120A  118A  2775  120A  118A  	fcall	_display
   408     07D9                     l616:
   409     07D9  3001               	movlw	1
   410     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   411     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   412     07DC  07AB               	addwf	main@i,f
   413     07DD  1803               	skipnc
   414     07DE  0AAC               	incf	main@i+1,f
   415     07DF  3000               	movlw	0
   416     07E0  07AC               	addwf	main@i+1,f
   417     07E1                     l618:
   418     07E1  082B               	movf	main@i,w
   419     07E2  3E20               	addlw	(low (main@name| 0))& (0+255)
   420     07E3  0084               	movwf	4
   421     07E4  1383               	bcf	3,7	;select IRP bank0
   422     07E5  0800               	movf	0,w
   423     07E6  1D03               	btfss	3,2
   424     07E7  2FE9               	goto	u81
   425     07E8  2FEA               	goto	u80
   426     07E9                     u81:
   427     07E9  2FC6               	goto	l614
   428     07EA                     u80:
   429     07EA                     l26:	
   430                           ;newmain.c: 30:     while(1){}
   431                           
   432     07EA  2FEA               	goto	l26
   433     07EB  120A  118A  2800   	ljmp	start
   434     07EE                     __end_of_main:
   435                           
   436                           	psect	text1
   437     0775                     __ptext1:	
   438 ;; *************** function _display *****************
   439 ;; Defined at:
   440 ;;		line 33 in file "newmain.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;  RS              2    0[COMMON] int 
   443 ;;  DC              2    2[COMMON] int 
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         4       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          2       0       0       0       0
   458 ;;      Totals:         6       0       0       0       0
   459 ;;Total ram usage:        6 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     0775                     _display:	
   469                           ;psect for function _display
   470                           
   471     0775                     l598:	
   472                           ;incstack = 0
   473                           ; Regs used in _display: [wreg]
   474                           
   475                           
   476                           ;newmain.c: 33: void display(int RS, int DC);newmain.c: 34: {;newmain.c: 35:     RC0=RS;
   477     0775  1870               	btfsc	display@RS,0
   478     0776  2F78               	goto	u51
   479     0777  2F7C               	goto	u50
   480     0778                     u51:
   481     0778  1283               	bcf	3,5	;RP0=0, select bank0
   482     0779  1303               	bcf	3,6	;RP1=0, select bank0
   483     077A  1407               	bsf	7,0	;volatile
   484     077B  2F7F               	goto	u64
   485     077C                     u50:
   486     077C  1283               	bcf	3,5	;RP0=0, select bank0
   487     077D  1303               	bcf	3,6	;RP1=0, select bank0
   488     077E  1007               	bcf	7,0	;volatile
   489     077F                     u64:
   490     077F                     l600:
   491                           
   492                           ;newmain.c: 36:     PORTD=DC;
   493     077F  0872               	movf	display@DC,w
   494     0780  0088               	movwf	8	;volatile
   495     0781                     l602:
   496                           
   497                           ;newmain.c: 37:     RC1=1;
   498     0781  1487               	bsf	7,1	;volatile
   499                           
   500                           ;newmain.c: 38:     _delay((unsigned long)((10)*(10000000/4000.0)));
   501     0782  3021               	movlw	33
   502     0783  00F5               	movwf	??_display+1
   503     0784  3076               	movlw	118
   504     0785  00F4               	movwf	??_display
   505     0786                     u97:
   506     0786  0BF4               	decfsz	??_display,f
   507     0787  2F86               	goto	u97
   508     0788  0BF5               	decfsz	??_display+1,f
   509     0789  2F86               	goto	u97
   510     078A  0000               	nop
   511     078B                     l604:
   512                           
   513                           ;newmain.c: 39:     RC1=0;
   514     078B  1283               	bcf	3,5	;RP0=0, select bank0
   515     078C  1303               	bcf	3,6	;RP1=0, select bank0
   516     078D  1087               	bcf	7,1	;volatile
   517                           
   518                           ;newmain.c: 40:     _delay((unsigned long)((10)*(10000000/4000.0)));
   519     078E  3021               	movlw	33
   520     078F  00F5               	movwf	??_display+1
   521     0790  3076               	movlw	118
   522     0791  00F4               	movwf	??_display
   523     0792                     u107:
   524     0792  0BF4               	decfsz	??_display,f
   525     0793  2F92               	goto	u107
   526     0794  0BF5               	decfsz	??_display+1,f
   527     0795  2F92               	goto	u107
   528     0796  0000               	nop
   529     0797                     l32:
   530     0797  0008               	return
   531     0798                     __end_of_display:
   532     0002                     ___latbits      equ	2
   533     007E                     btemp           set	126	;btemp
   534     007E                     wtemp0          set	126
   535                           
   536                           	psect	config
   537                           
   538                           ;Config register CONFIG @ 0x2007
   539                           ;	Oscillator Selection bits
   540                           ;	FOSC = HS, HS oscillator
   541                           ;	Watchdog Timer Enable bit
   542                           ;	WDTE = OFF, WDT disabled
   543                           ;	Power-up Timer Enable bit
   544                           ;	PWRTE = OFF, PWRT disabled
   545                           ;	Brown-out Reset Enable bit
   546                           ;	BOREN = OFF, BOR disabled
   547                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   548                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   549                           ;	Data EEPROM Memory Code Protection bit
   550                           ;	CPD = OFF, Data EEPROM code protection off
   551                           ;	Flash Program Memory Write Enable bits
   552                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   553                           ;	In-Circuit Debugger Mode bit
   554                           ;	DEBUG = 0x1, unprogrammed default
   555                           ;	Flash Program Memory Code Protection bit
   556                           ;	CP = OFF, Code protection off
   557     2007                     	org	8199
   558     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     13      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0     141
                                              6 COMMON     4     4      0
                                              0 BANK0     13    13      0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              6     2      4      48
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     13      24     30.0%
BITBANK0            80      0       0      0.0%
COMMON              14     10      10     71.4%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      34      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 12 17:39:25 2024

                      pc 0002                       l32 0797                       l26 07EA  
                     u50 077C                       u51 0778                       u70 07A6  
                     u64 077F                       u80 07EA                       u81 07E9  
                     u97 0786                       fsr 0004                      l600 077F  
                    l602 0781                      l610 07B5                      l604 078B  
                    l612 07C1                      l614 07C6                      l606 0798  
                    l616 07D9                      l608 07A0                      l618 07E1  
                    l598 0775                      _RC0 0038                      _RC1 0039  
                    u107 0792                      fsr0 0004                      indf 0000  
                   _main 0798                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088          __end_of_display 0798  
                  main@i 002B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0076                ??_display 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0757               __pmaintext 0798  
                __ptext1 0775                  _display 0775     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 0762              __pdataBANK0 002D  
              ___latbits 0002            __pcstackBANK0 0020                 ?_display 0070  
              main@F1331 002D                display@DC 0072                display@RS 0070  
               main@name 0020                 init_ram0 0766  
